/*

Créditos a Astro por criar o GameMode The GodFather
Créditos a Thiago_Street por criar o Brasil MegaLife (base PlayHappy)
créditos a dimmy_scarface pela edição geral do GameMode
créditos a jadson_ por posicionar os veiculos policiais
créditos ao GM VilaOnline por alguns comandos


------------------------ FAÇA UM BOM PROVEITO ----------------------------


========================NÃO RETIRE OS CRÉDITOS, NÃO SEJA MALVADO, RUM!!======================


contato: dimmy_cn@hotmail.com         
*/

#include                <  a_samp  >
#include                <  a_http  >
#include                <  core  >
#include                <  float  >
#include                <  time  >
#include                <  file  >
#include                <  a_objects  >
#include                <  DOF2  >
#include                <  Servermoneygm  >
#include                <  streamer  >
#include                <  seif_walk  >


//#pragma tabsize 0

#define MPNOME "mapname Brasil Los Santos RPG"
#define SVVERSAO "PlayHappy Brasil"
#define NOMESERVER "hostname [0.3e] Brasil PlayHappy [RPG v1.0]"
#define NOMESITE "weburl www.s-bph.forumeiros.com"
#define RCONPASS "rcon_password PlayHappyS2"//rcon password

//###########################################
//### nomes que podem logar como admin Rcon #
//###########################################
#define NOME1 "ninguem"//############
#define NOME2 "jadson_scarface"//############
#define NOME3 "ninguem2"//############
#define NOME4 "ninguem3"//###########
#define NOME5 "ninguem4"//#############
//###########################################
//###########################################


//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-<
#if defined MAX_PLAYERS
    #undef MAX_PLAYERS
    #define MAX_PLAYERS (100)
#endif

#if defined MAX_VEHICLES
    #undef MAX_VEHICLES
    #define MAX_VEHICLES (1111)
#endif
#define totalveiculos 395 // Aqui termina os Veículos normais e das ORGS do server.
#define totalveiculosh 396 // aqui começa os veiculos das casas
#define totalveiculosc 704 // aqui termina os carros das casas e começa os veiculos VIPS
#define CAR_AMOUNT 754 // aqui termina os veiculos VIPS e os carros do server

#define ANTI_TELEPORT/AIBREAK_HACK  1
//Configuration :
#define TEMPOAFK 510000

#define F_MAX_OBJECTS		750	//maximum amount of objects the streamer will create; PLEASE change this to the amount of objects you are using.
#define UpdateTime			300		//update time in ms (milliseconds).
#define ObjectsToStream		400		//maximum number of objects that will be streamed for one player (maximum = 400 objects).
#define StreamRange			400.0

#define MAX_VEHICLE_DISTANCE_PER_SECOND     180
#define MAX_PED_DISTANCE_PER_SECOND         120
#define SPRINT_SPEED                        30.0
#define TIRE_RATE                           2000
#define TIMER_CHEAT_RATE                    1300
#define TIME_GRANULITY                      50
#define DELAY_LOAD_AFTER_SPAWN              5000
#define MAX_DELAY_SEND_STATS                2000
#define PICKTR                              2061
#define BIP                                 •

#define OBJCAPACETE 0//9//1
#define MODE_DELAY_SEND_STATS //uncomment if the sending of stats is a bit slow(RECOMMANDED)
#define HaveCap(%0) pObject[%0][omodel] ? pObject[%0][omodel] : -1
//================ anti xiters =======================
#define XMAX_VEHICLE_DISTANCE_PER_SECOND MAX_VEHICLE_DISTANCE_PER_SECOND*(TIMER_CHEAT_RATE/1000)
#define XMAX_PED_DISTANCE_PER_SECOND MAX_PED_DISTANCE_PER_SECOND*(TIMER_CHEAT_RATE/1000)
#define SaveTime(%0,%1) %0=%1
#define IsPassTime(%0,%1) ((MAX_DELAY_SEND_STATS+%0)<%1)//Time Action ,Time Now
#define IsPlayerCheatPos(%0) (!IsPlayerInRangeOfPoint(%0,XMAX_VEHICLE_DISTANCE_PER_SECOND,CheatPlayerInfo[%0][aX],CheatPlayerInfo[%0][aY],CheatPlayerInfo[%0][aZ]))||((GetPlayerSurfingVehicleID(%0)==INVALID_VEHICLE_ID && !IsPlayerInAnyVehicle(%0)) && !IsPlayerInRangeOfPoint(%0,XMAX_PED_DISTANCE_PER_SECOND,CheatPlayerInfo[%0][aX],CheatPlayerInfo[%0][aY],CheatPlayerInfo[%0][aZ]))
/*----------------------------------------------------------------------------*/
enum inf
{
	omodel,
	oslot,
	bool: slotreserved,
};
//==================[carros]===============
/*new CarrosPM[24];
new CarrosRotam[20];
new CarrosGN[20];
new CarrosMedicos[7];
new CarrosAztecas[10];
new CarrosGIA[13];
new CarrosSSP[10];
new CarrosPrefeitura[9];
new CarrosHitman[11];
new CarrosReporter[11];
new CarrosTaxistas[13];
new CarrosPF[22];
new CarrosGroove[11];
new CarrosFARC[16];
new CarrosBallas[11];
new CarrosVagos[11];
new CarrosCV[11];
new CarrosPCC[11];
new CarrosTriad[11];
new CarrosGI[17];
new CarrosPR[22];
new CarrosMecanicos[5];
new CarrosOnibus[7];*/
//================================================
new ObjetoCarro[MAX_VEHICLES];
new VeiculoValido[MAX_VEHICLES];
new NovaCamera[MAX_PLAYERS];
//================================================
new TempoDeDar[MAX_PLAYERS];
new LogadoSV[MAX_PLAYERS];
new MensagemDesligou = 0;
new NaoMostra[MAX_PLAYERS];
new BatePapoInicio[MAX_PLAYERS] = 0;
new XiterArma[MAX_PLAYERS];
new PlayerBrilhando[MAX_PLAYERS];
new VidaArara[MAX_PLAYERS];
//===========================
new VelocidadeBalao;
new VelocidadeBalao2;
new VelocidadeBalao3;
new VelocidadeBalao4;
new VelocidadeBalao5;
new VelocidadeBalao6;
new VelocidadeBalao7;

new TempoBalao1;
new TempoBalao2;
new TempoBalao3;
new TempoBalao4;
new TempoBalao5;
new TempoBalao6;
new TempoBalao7;

new Text3D:TextBalao1;
new Text3D:TextBalao2;
new Text3D:TextBalao3;
new Text3D:TextBalao4;
new Text3D:TextBalao5;
new Text3D:TextBalao6;
new Text3D:TextBalao7;

new NoBalao[MAX_PLAYERS];
new Balao;
new Balao2;
new Balao3;
new Balao4;
new Balao5;
new Balao6;
new Balao7;

new Balao1Laser;
new Balao2Laser;
new Balao3Laser;
new Balao4Laser;
new Balao5Laser;
new Balao6Laser;
new Balao7Laser;

new BalaoOcupado1;
new BalaoOcupado2;
new BalaoOcupado3;
new BalaoOcupado4;
new BalaoOcupado5;
new BalaoOcupado6;
new BalaoOcupado7;

new DonoBalao[MAX_PLAYERS];

//=============================
new TipoTR[MAX_PLAYERS];
new PrecoMorro;
new PrecoPG;
new PrecoUnity;
new PrecoCasarao;
new PrecoMaddDogg;
new Float:PosXGZ;
new Float:PosYGZ;
new Float:PosX2GZ;
new Float:PosY2GZ;
new temporoubo[MAX_PLAYERS];
new TemGenteRoubandoLS = 0;
new TemGenteRoubandoSF = 0;
new TemGenteRoubandoLS2 = 0;
new TemGenteRoubandoSF2 = 0;
new JaEstaRoubando[MAX_PLAYERS];
new NaoPodeLogar[MAX_PLAYERS];
new TempoGZLocalizar[MAX_PLAYERS];
new FoiDesban[MAX_PLAYERS];
new TempoMostrarLife[MAX_PLAYERS];
new MostrandoVida[MAX_PLAYERS];
new novosom[MAX_PLAYERS];
//===================
new TimerX[MAX_PLAYERS];
new Text:BombCount;
new Text:xiterD;
new Text:textlife[MAX_PLAYERS], Text:textcolete[MAX_PLAYERS];
new Text:TextKick[MAX_PLAYERS];
new Text:TextBan[MAX_PLAYERS];
new Text:MostrarVida[MAX_PLAYERS];
new Text:gpss[MAX_PLAYERS];
new AXITERCOLETE[MAX_PLAYERS];
new SenhaSeguranca[500];
new SOMANDO[MAX_PLAYERS];
new VEZES[MAX_PLAYERS];
new MENOS[MAX_PLAYERS];
new PICKUPTESTE;
new xacalaca[MAX_PLAYERS];
new cVIPc[MAX_PLAYERS];
new EstaNoEvento[MAX_PLAYERS];
new JaDeslogado[MAX_PLAYERS];
new Suspect2[MAX_PLAYERS];
new TerFome = 0;//comando para definir /terfome
new SistemaHospital = 0;//comando para definir /hospital
new VidaDoCara[MAX_PLAYERS];
new LFicha;
new GranaEvento[MAX_PLAYERS];
new TempoTimerEvento[MAX_PLAYERS];
new NaoPode[MAX_PLAYERS];
new CheCks[MAX_PLAYERS];
new PediuPraEntrar[MAX_PLAYERS];
new TempoPediu[MAX_PLAYERS];
new Sliding[MAX_PLAYERS];
new TipoOrg[MAX_PLAYERS];
new TempoFome[MAX_PLAYERS];
new pObject[MAX_PLAYERS][inf];
new Natal[MAX_PLAYERS];
new ComecouConversao[MAX_PLAYERS];
new ComecouConversao2[MAX_PLAYERS];
new SkinDoCara[MAX_PLAYERS];


//==== SEM NADA PRA FAZERR :@ =================
//========= top kills ^^ ===========
new NomeTopKills1 = 999;
new KillsTop1 = 0;
//================================
//========= top crimes ^^ ===========
new NomeTopCrimes = 999;
new CrimesTop = 0;
//================================
//========= top Noob ^^ ===========
new NomeTopNoob = 999;
new NoobTop = 0;
//================================
//========= top Grana ^^ ===========
new NomeTopGrana = 999;
new GranaTop = 0;
//================================
//========= top Nivel ^^ ===========
new NomeTopNivel = 999;
new NivelTop = 0;
//================================
//========= top horas jogadas ^^ ===========
new NomeTopHoras = 999;
new HorasTop = 0;
//================================
//========= top respeito ^^ ===========
new NomeTopRespeito = 999;
new RespeitoTop = 0;
//================================
//================================
// =- =- =- = - =- =- = -= -= -= - -= -= -= -= -= -= -= -= -= -=-= -
static Float: SkinOffSet2[299][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 4
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 17
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin -120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};

new Float:SkinOffSet[300][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 4
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 5
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 }  // - 299
};

enum fInfo
{
	FamilyTaken,
	FamilyName[20],
	FamilyMOTD[128],
	FamilyColor[20],
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
};

new FamilyInfo[10][fInfo];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];
enum zInfo
{
	zOwner[64],
	zColor[20],
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY,
};
new TurfInfo[6][zInfo];

enum {
CommonRed = 19006,
CommonOrange,
CommonGreen,
CommonBlue,
CommonPurple,
CommonEspiral,
CommonBlack,
CommonEyes,
CommonXadrex,
CommonTransparent,
CommonXRayVision,
SquareFormatYellow,
SquareFormatOrange,
SquareFormatRed,
SquareFormatBlue,
SquareFormatGreen,
RayBanGray,
RayBanBlue,
RayBanPurple,
RayBanPink,
RayBanRed,
RayBanOrange,
RayBanYellow,
RayBanGreen,
CircularNormal,
CircularYellow,
CircularRed,
CircularBlack,
CircularXadrex,
CircularThunders,
CopGlassesBlack = 19138,
CopGlassesRed = 19139,
CopGlassesBlue = 19140,
};

enum aELCp
{
	aTimer,
	Float:aX,
	Float:aY,
	Float:aZ,
	aAntiTeleportHack,
#if defined MODE_DELAY_SEND_STATS
#endif
	aSetPositionTime
};
new CheatPlayerInfo[MAX_PLAYERS][aELCp];
#if defined NO_TICK_COUNT
enum aELCs
{
	TickCount,
	TimerTick
};
new CheatServerInfo[aELCs];
#endif

#if defined NO_TICK_COUNT
	#define GetTickCount()                          (CheatServerInfo[TickCount])
	forward TimeUpdate();
	public TimeUpdate()
	{
		CheatServerInfo[TickCount] +=TIME_GRANULITY;
		return 1;
	}
#endif


forward Encrypt(string[]);
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-<
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define ForPlayers(%1) for(new %1 = 0; %1 < MAX_PLAYERS; %1++) if(IsPlayerConnected(%1) && !IsPlayerNPC(%1))
#define SalvarNumeroRegistrados();        	DOF2_SetInt("Registrados.ini","TotalRegistro",TotalRegistro);DOF2_SaveFile();
#define CarregarNumeroRegistrados();        	TotalRegistro = DOF2_GetInt("Registrados.ini","TotalRegistro");
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
forward SalvarSenhaSeguranca();
public SalvarSenhaSeguranca()
{
	DOF2_SetString("SenhaSeguranca.ini","Senha",SenhaSeguranca);
	DOF2_SaveFile();
	return true;
}

forward CarregarSenhaSeguranca();
public CarregarSenhaSeguranca()
{
	strmid(SenhaSeguranca,DOF2_GetString("SenhaSeguranca.ini","Senha"),0,strlen(DOF2_GetString("SenhaSeguranca.ini","Senha")),255);
	return true;
}

#define MAX_CONNECTIONS_FROM_IP     5

#define OUTRO_MUNDO 			 128
#define Tempo                    450 //Normal 450
#define SERVIDOR                 0xCECECEFF
#define AMARELO                  0xFFFF00FF
#define AZUL_CLARO               0x00C2ECFF
#define SUB_MODERADOR            1
#define MODERADOR                2
#define AUXILIAR                 3
#define SUB_MASTER               4
#define MASTER                   1337
#define SUB_GERENTE              1338
#define GERENTE                  1339
#define SUB_DONO                 1340
#define DONO                     3001
#define COR_PM                   0x9999FFF6
#define COR_BOPE                 1819081110//0x666699FF
#define COR_EXE                  0x00660CF6
#define COR_Medicos              0xFF8282FF//0xCC6666F6
#define COR_AZULZAO              0x005FFFFF
#define ROXO                     0xC2A2DAAA
#define COR_CINZA1 		         0xB4B5B7FF
#define COR_AZTECAS 	         0x2641FEFF//0x109FFFAA
#define COR_GIA 	             0xC599C8FF//0x009999F6
#define COR_PRE 	             0x6699FFFF
#define COR_HITMAN 	             0xB4B5B7FF//0xFFFFFFFF
#define COR_REPORTER             0xFF9900FF
#define COR_TAXI 	             33357768//0x66FFFFFF
#define COR_PF 			         -1854512490//0x999966FF
#define COR_PRp 		         0x996600FF
#define COR_YAK 		         0x660066FF
#define COR_GRO 		         0x33FF00FF
#define COR_FARC 		         808464534//0x434242FF//0x00ECF6AA//0xFFCC99F6
#define COR_PC 		             0x666699FF//0x93833EF6
#define COR_BALLAS 		         0x9900CCFF
#define COR_VAGOS 		         0xFFFF33FF
#define COR_CVSF 		         -1439485014//0xD52322FF
#define COR_PR 		             0x996600FF
#define COR_HELPER	             0x55F6ACFF// 0x50FF7BFF
#define CORGZ_COPS               0x5B88ACAA
//#define COR_TRIADS 		         0xFFFFFFFF
#define COR_TRIADS               0xBCD2EEFF
#define COR_GI 			         869072810//0x00ECF6FF//0x5F5B5DFF
#define COR_GIC 		         0xFE005DFF
#define COR_WHITE 		         0xFFF8F8AA
#define VERDE2 			         0x33FF00FF
#define	COLOR_VERDE2 	    	 0x33FF00FF
#define COLOR_DEPTH 	         0x993333FF
#define COR_ADMIN 		         -10043754//0xF64CCAFF//0xFF34B3F6
#define COLOR_ADMIN 		     0xF64CCAFF
#define COR_PCC 		         0xB9C35AAA//0x18C5FFAA
#define COLOR_WHITE              0xFFFFFFAA
#define COLOR_CHAT_PCC           0xB9C35AFF//0xFFFFFFAA
#define LARANJA 		         0xFF6600AA
#define VERDECLARO 		         0x00FF0CAA
#define COLOR_ALIANCA 			 0xA9A9A9FF
#define VERDEFRACO               0x80cf80AA
#define COLOR_AMARELOR           0xFFFF00AA
#define VERDEFRACOR              0x80cf80AA
#define COR_3DLABEL              0x0FFFC8FF//0x00FF7FFF//0xAA0000FF//0xFF0000FF//0xF6F677AA//0xF68E00F6
#define COLOR_AZULBB             0xE6D4D1FF//0xE8D6D6FF//0xCCCCFFFF
#define TEAM_CYAN_COLOR          0xA92BF6F6
#define GCOP_COLOR 		         0x6666FFC8
#define COLOR_LIGHTRED 	         0xFF6347AA
#define COLORGZ_YAKUZA           0x006699C8
#define COLORGZ_PF               0x000000C8
#define COLOR_GREEN              0x33AA33AA
#define COLOR_PURPLE             0xC2A2DAAA
#define TEAM_GROVE_COLOR         0x00D900C8
#define TEAM_BALLAS_COLOR        0x9900FFC8
#define TEAM_AZTECAS_COLOR       0x2641FEC8
#define COLOR_GRAD1              0xB4B5B7FF
#define COLOR_GRAD2              0xBFC0C2FF
#define COLOR_GRAD3 	         0xBFC0C2FF
#define COLOR_GRAD4              0xD8D8D8FF
#define COLOR_GRAD5              0xF0F0F0FF
#define COLOR_GRAD6              0xF0F0F0FF
#define COLOR_LIGHTBLUE          0x33CCFFAA
#define COLOR_DBLUE              0x2641FEAA
#define COLOR_YELLOW             0xFFFF00AA
#define COLOR_GREY               0xAFAFAFAA
#define COLOR_RED                0xAA3333AA
#define COLOR_LIGHTGREEN         0x9ACD32AA
#define TEAM_VAGOS_COLOR         0xFFC801C8
#define CINZA                    0xAFAFAFAA
#define PRETO                    0x000000FF
#define COLOR_FADE4              0x8C8C8C8C
#define COLOR_FADE5              0x6E6E6E6E
#define COLOR_FADE3              0xAAAAAAAA
#define COLOR_RCARRO             0x80FF8096
#define TEAM_HIT_COLOR           0xFFFFFF00
#define CINZA2                   0xBFC0C2FF
#define COLOR_FADE2 	         0xC8C8C8C8
#define COLOR_NEWS 		         0xFFA500AA
#define COLOR_NEWS               0xFFA500AA
#define COLOR_ALLDEPT            0xFF8282AA
#define COLOR_FADE1              0xE6E6E6E6
#define COLOR_R                  0x6666CCFF
#define COLORGZ_ALCAIDA          0x10100FAA//0x685000C8
#define COLOR_MSG                0x934FF6F6
#define COLORGZ_GIA              0xC599C8AA//0x009999F6
#define COLORGZ_GI               0x00ECF6AA//0x000000F5//0x185000A0 //0x5F5B5DFF
#define AZUL3                    0x33CCFFAA
#define CINZA1                   0xB4B5B7FF
#define AN_COLOR                 0x00E7C6F6
#define COLOR_YELLOW2 			 0xF5DEB3FF
#define COLOR_TAXISTA            0xF68E00F6
#define TEAM_BLUE_COLOR          0x8D8DFF00
#define COLORGZ_LH               0x00E7C6C8
#define COLORGZ_EXE              0x33AA33C8
#define COLOR_EXE                0x33AA33C8
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FIM CORES =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
#define RADIOMP3                         4723
#define NONE_CAR 						 9999
#define EVENTOC                          3423
#define TELEPORTE                        4324
#define cVotacao                         3235
#define cPergunta                        3234
#define TEAM_CYAN 					     1
#define DIALOG_CAIXA_ELETRONICO          172
#define DIALOG_CAIXA_ELETRONICO_INPUT    173
#define DIALOG_TRANSFERIR 				 176
#define DIALOG_RANGE 					 1264
#define DialogCasaGPS 					 1982
#define DialogEmpresaGPS 				 1983
#define PegandoEmpresaTH 				 1984
#define PegandoMiniEmpresaTH 			 1985
#define SPAM_MAX_MSGS 					 6
#define SPAM_TIMELIMIT 				     3
#define MAX_INTEGRANTE_NOMES      		 35
#define DIALOG_INFO 				     167
#define DIALOG_ALUGAR 				     1212
#define DIALOG_ALUGAR2 				     1213
#define DIALOGID 						 1338
#define PEGARMAFIA 				         1741
#define Controle 						 TogglePlayerControllable
#define CameraPos 					     SetPlayerCameraPos
#define EmpresasE                        "Exit"
#define EmpresaS                         "Open"
#define TextCasaVenda               	 "Esta casa esta a venda\nDescricao: %s\nPreço: R$%d\nNivel: %d\nPara compra-la use /comprarcasa"
#define TextCasa                         "O dono desta casa e %s\nNivel: %d\nAperte a letra F para entrar"
#define TextCasaAl                       "O dono desta casa e %s\nAluguel: R$%d\nNivel: %d\nUSE /alugarquarto para aluga-la\nAperte a letra F para entrar"
#define TextEmpresaVenda               	 "Esta empresa esta a venda\n%s\nPreço da Empresa: R$%d\nNivel: %d\nFundos: R$%d\nPara comprar digite /comprarempresa"
#define TextEmpresa                      "%s\nDono da Empresa: %s\nExtorção: %s\nEntrada: R$%d\nNivel: %d\nAperte a letra 'F' para entrar\nFundos: $%d"
#define TextMEmpresaVenda                "Esta empresa esta a venda\n%s\nPreço da mini empresa: R$%d\nNivel: %d\nPara comprar digite /comprarempresa"
#define Donodecasa                       "02dp"
#define TextMEmpresa                      "%s\nDono da empresa: %s\nExtorção: %s\nEntrada: R$%d\nNivel: %d"
#define dhitman 						 2424
#define CAIXINHA_VG 				     1276//1276
#define char 						     255
#define SlotAKM4 				         1
#define MAX_MACONHAS 			         5000
#define DIALOG_ANUNCIO 					 168
#define MAX_SPIKESTRIPS 				 200
#define MAX_ORGS                         35// NUNCA MECHA
#define AFK_TIME 					     10
#define PICKUP_TYPE_NONE 				 0
#define PICKUP_TYPE_WEAPON 			     1
#define DIALOGID2 				         1389
#define SPECIAL_ACTION_PISSING2          68
#define KEY_HORN 						 2
#define CHECKPOINT_Nenhum                0
#define CHECKPOINT_HOME                  12
#define MAX_HOUSES                       309
#define MAX_BIZZES                    	 12
#define MAX_SBIZZES 					 25
#define granacarro 						 200
#define precomorte 						 100
#define GranadaMorro 				     800
#define GranadaEstacao 					 1200
#define GranadoPark 					 800
#define GranadoCasarao 					 1200
#define GranadoAero 					 800
#define MAX_TRUNK_SLOTS					 (5)
#define GasMax               			 100
#define RefuelWait 						 5000
#define MAX_STRING 						 255
#define MAX_ZONE_NAME 					 28

#define PodeNaoMulek 					SendClientMessage(playerid, COLOR_GRAD1, "	Você não está autorizado a criar um admin maior que 1337!")
#define QQIssoNovinha 					SendClientMessage(playerid, COLOR_GRAD1, "	Você não pode usar este comando!")
#define QQIssoNovinhaa 					SendClientMessage(playerid, COLOR_GRAD1, "	Você não está controlando nenhum balão!")
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FIM DEFINES =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-<|
forward Fixhour(hora);
forward Reloginho();

new TempoHospitalizado[MAX_PLAYERS];
new TempoSKick[MAX_PLAYERS];
new TempoTextDrawRegras[MAX_PLAYERS];
new Text:Rules1;
new Text:Rules2;
new Text:Rules3;
new Text:Rules4;
new Text:Rules5;
new Text:Rules6;
new Text:Rules7;
new Text:Rules8;
new Text:Rules9;
new Text:Rules10;
new Text:Rules11;
new Text:Rules12;
new Text:Rules13;
new Text:Rules14;
new NaoPodeDigitar[MAX_PLAYERS];
new Float:GuerraMinX;
new Float:GuerraMinY;
new Float:GuerraMaxX;
new Float:GuerraMaxY;
new PoetaGay[MAX_PLAYERS];
new TempoPoema[MAX_PLAYERS];
new senha = 1;
new EventoAdmin = 0;
new XXAirBreak[MAX_PLAYERS];
new antifakekill[MAX_PLAYERS];
new gCarLock[MAX_VEHICLES];
new PlayerLogado[MAX_PLAYERS];
new Text:TextRec[MAX_PLAYERS];
//========= velocimetro ==============
new Text:Speed[MAX_PLAYERS];
new Text:nomeveiculo[MAX_PLAYERS];
//=====================================

new pfdoor, pfdoor2;
new VozDePrisao[MAX_PLAYERS];
new animationplayed;
new motor[MAX_PLAYERS];
new Comandos[MAX_PLAYERS][20];
new FloodComandos[MAX_PLAYERS] = {-1, ...};
new psinc;
new GZMorro;
new GZTeste;
new GZLocalizar[MAX_PLAYERS];
new GZMaddDogg;
new GZPark;
new donoaero;
new picVida;
new donopark;
new pcorrida;
new tempoGranaTR;
new GuerranoMorro;
new GuerranoAero;
new GuerranoPark;
new TempoGuerraMorro;
new TempoGuerraAero;
new TempoGuerraPark;
new donomorro;
new TempoAnReporter;
new TempoGuerraCasarao;
new psequestrar;
new pamarrar;
new pcorridaoni;
new GZGuerra;
new weaponhacktimer;
new TempoGuerraEstacao;
new GuerranoCasarao;
new GZEstacao;
new GZHelpers;
new donoestacao;
new GZCasarao;
new donocasarao;
new GuerranaEstacao;
new TempoSinc;
new TempoSincronizar;
new TempoAdministrador;
new TempoGuerra;
new shifthour;
new year;
new month;
new day;
new hour;
new minute;
new second;
new pickups;
new PickInterior;
new Text:Hidealto,Text:Hidebaixo;
new Text:Hidealto2[MAX_PLAYERS],Text:Hidebaixo2[MAX_PLAYERS];
new NaCamera[MAX_PLAYERS];
new TempoLogin;
new TempoAn[MAX_PLAYERS];
new TempoCorrida;
new AssalteiAlguem[MAX_PLAYERS];
new EstupreiAlguem[MAX_PLAYERS];
new TempoSequestrar;
new TempoAmarrar;
new TempoServicoTaxi;
new TempoServicoOnibus;
new TempoServicoPolicia;
new TempoServicoMedico;
new TempoServicoMecanico;
new TempoMecanico;
new TempoMedico;
new TempoCorridaOni;
new TempoAnGov;
new Tempocbomba;
new Tempohbomba;
new Text3D:TextoCarros[MAX_VEHICLES];

new TotalRegistro;
new v[6];
new TimerSS[500];
new PedirAvaliar[MAX_PLAYERS];
new CreatedCar = 0;
new TendoGuerra = 0;
new UsouComando[MAX_PLAYERS] = 0;
new Text:FilaAtendimentoText[MAX_PLAYERS];
new Text:TempoAtendimento2Text[MAX_PLAYERS];
new FilaAtendimento[MAX_PLAYERS];
new TempoAtendimento2[MAX_PLAYERS];
new Text:entrada;
new Text:entrada2;
new Text:forum;
new Text:forum2;
//===================== kkk =====================
new PortaoTaxi;
enum OldSpeedoPos{Float:sX,Float:sY,Float:sZ}
new Float:sVehicle_X[MAX_VEHICLES], Float:sVehicle_Y[MAX_VEHICLES], Float:sVehicle_Z[MAX_VEHICLES];
new TruckMission[MAX_PLAYERS];
new var1[MAX_PLAYERS];
new pban[MAX_PLAYERS];
new mudandonick[MAX_PLAYERS];
new gPlayerTerminal[MAX_PLAYERS];
new gmsg[MAX_PLAYERS];
new gSpamCount[MAX_PLAYERS][2];
new Equipamentos[MAX_PLAYERS];
new Dia, Mes, Ano, Hora, Minuto, Segundo;
new CaixaEletronico_Ok[MAX_PLAYERS];
new TransferenciaID[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new Avaliado[MAX_PLAYERS];
new Buceta[MAX_PLAYERS];
new TempoTutorial[MAX_PLAYERS];
new TempoAvaliar[MAX_PLAYERS];
new TempoCheckTudo[MAX_PLAYERS];
new TempoCheckAmmo[MAX_PLAYERS];
new Bucetuda[MAX_PLAYERS];
new PutaGorda[MAX_PLAYERS];
new AdmHelperComido[MAX_PLAYERS];
new Putaria[MAX_PLAYERS];
new Sequestrado[MAX_PLAYERS];
new Multa[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new CapacetePlayer[MAX_PLAYERS];
new gpTimes[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteJob[MAX_PLAYERS];
new away[MAX_PLAYERS];
new storeexit[MAX_PLAYERS];
new barexit[MAX_PLAYERS];
new lotericaexit[MAX_PLAYERS];
new EmDialog[MAX_PLAYERS];
new tempotd[MAX_PLAYERS];
new Reduzido[MAX_PLAYERS];
new ReduzidoBot[MAX_PLAYERS];
new bool:TextShow[MAX_PLAYERS];
new DestroyPickupVidaTimer[MAX_PICKUPS];
new SemBombas[MAX_PLAYERS];
new OfAssalto[MAX_PLAYERS];
new precoassalto[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new ProvocoEstacao[MAX_PLAYERS];
new ProvocoCasarao[MAX_PLAYERS];
new spawnado[MAX_PLAYERS];
new admtrampando[MAX_PLAYERS];
new helpertrampando[MAX_PLAYERS];
new logouagora[MAX_PLAYERS];
new Float:FaceAngle[MAX_PLAYERS];
new Float:PlayerHPP[MAX_PLAYERS];
new VehicleIDD[MAX_PLAYERS];
new ammoo[13][MAX_PLAYERS];
new Float:APP[MAX_PLAYERS];
new vehicledd[MAX_PLAYERS];
new interior[MAX_PLAYERS];
new Float:xx[MAX_PLAYERS];
new TempoCheckOuros[MAX_PLAYERS];
new TempoCheckOuros2[MAX_PLAYERS];
new IniciouOuros[MAX_PLAYERS];
new TerminouOuros[MAX_PLAYERS];
new IniciouOuros2[MAX_PLAYERS];
new TerminouOuros2[MAX_PLAYERS];
new Float:yy[MAX_PLAYERS];
new Float:zz[MAX_PLAYERS];
new skinneg[MAX_PLAYERS];
new gunsinc[13][MAX_PLAYERS];
new virt[MAX_PLAYERS];
new sincronizando[MAX_PLAYERS];
new OnEquipado[MAX_PLAYERS];
new JaEquipado[MAX_PLAYERS];
new OnMafiaEquipado[MAX_PLAYERS];
new Dominando[MAX_PLAYERS];
new ProvocoMorro[MAX_PLAYERS];
new ProvocoPark[MAX_PLAYERS];
new ProvocoAero[MAX_PLAYERS];
new PolicialInRonda[MAX_PLAYERS];
new Text3D:HouseLabel[MAX_HOUSES];
new Text3D:BizzLabel[MAX_BIZZES];
new Text3D:SBizzLabel[MAX_SBIZZES];
new HouseEntered[MAX_PLAYERS];
new VTrancado[MAX_VEHICLES] = 0;
new LigadoDesligado2[MAX_VEHICLES] = 0;
new CreatedCars[200];
new gstring[128];
enum TrInfo{
Float:MinX,
Float:MinY,
Float:MaxX,
Float:MaxY,
exemortos,
talmortos,
almortos,
GImortos,};

new Territorio[TrInfo];
enum BlInfo{
pMotivo[126],
pAdmBan[MAX_PLAYER_NAME],
pData[20],
pHora[20],
BanDia[20],
BanMes[20],
BanAno[20],
BanSegundo[20],
BanHora[20],
BanMinuto[20],
pNick[64]};

new BanInfo[MAX_PLAYERS][BlInfo];
enum sInfo{
sCreated,
Float:sX,
Float:sY,
Float:sZ,
sObject,};

new SpikeInfo[MAX_SPIKESTRIPS][sInfo];
static gTeam[MAX_PLAYERS];

static invalidskins[] = {0,1,2,3,4,5,7,14,15,17,18,21,22,26,27,32,33,34,40,41,50,51,60,64,73,76,292,300};


static EmGuerra[MAX_PLAYERS];

enum sequestroinfo{QuantidadeSequestro,};
new GuSequestro[MAX_ORGS][sequestroinfo];
enum CofreInfo{Dinheiro,Materiais,Maconha,Cocaina,Crack,dMaconha,dEaglec1,dEaglec2,dEaglec3,dEaglec4,dEaglec5,
dShotc1,dShotc2,dShotc3,dShotc4,dShotc5,dMP5c1,dMP5c2,dMP5c3,dMP5c4,dMP5c5,dAKc1,dAKc2,dAKc3,dAKc4,dAKc5,dM4c1,
dM4c2,dM4c3,dM4c4,dM4c5,dRiflec1,dRiflec2,dRiflec3,dRiflec4,dRiflec5,cMaconha,cMateriais,mMateriais,mMaconha,
salarioc1,salarioc2,salarioc3,salarioc4,salarioc5,salariolider,};

new CofreOrg[MAX_ORGS][CofreInfo];
new pCofreOrg[MAX_PLAYERS];
enum Oinfo{Lider[MAX_PLAYER_NAME],SubLider[MAX_PLAYER_NAME],SubLider2[MAX_PLAYER_NAME],Membro1[MAX_PLAYER_NAME],
Membro2[MAX_PLAYER_NAME],Membro3[MAX_PLAYER_NAME],Membro4[MAX_PLAYER_NAME],Membro5[MAX_PLAYER_NAME],Membro6[MAX_PLAYER_NAME],
Membro7[MAX_PLAYER_NAME],Membro8[MAX_PLAYER_NAME],Membro9[MAX_PLAYER_NAME],Membro10[MAX_PLAYER_NAME],Membro11[MAX_PLAYER_NAME],
Membro12[MAX_PLAYER_NAME],Membro13[MAX_PLAYER_NAME],Membro14[MAX_PLAYER_NAME],Membro15[MAX_PLAYER_NAME],Membro16[MAX_PLAYER_NAME],
Membro17[MAX_PLAYER_NAME],Membro18[MAX_PLAYER_NAME],Membro19[MAX_PLAYER_NAME],Membro20[MAX_PLAYER_NAME],};


enum Oinfo2{Candidato1[MAX_PLAYER_NAME],Candidato2[MAX_PLAYER_NAME],Candidato3[MAX_PLAYER_NAME],Candidato4[MAX_PLAYER_NAME],
Candidato5[MAX_PLAYER_NAME],Candidato6[MAX_PLAYER_NAME],Candidato7[MAX_PLAYER_NAME],Candidato8[MAX_PLAYER_NAME],Candidato9[MAX_PLAYER_NAME],
Candidato10[MAX_PLAYER_NAME],Candidato11[MAX_PLAYER_NAME],Candidato12[MAX_PLAYER_NAME],Candidato13[MAX_PLAYER_NAME],Candidato14[MAX_PLAYER_NAME],
Candidato15[MAX_PLAYER_NAME],Candidato16[MAX_PLAYER_NAME],Candidato17[MAX_PLAYER_NAME],Candidato18[MAX_PLAYER_NAME],
Candidato19[MAX_PLAYER_NAME],Candidato20[MAX_PLAYER_NAME],};
new InfoOrg[35][Oinfo]; // Nunca mexa
new InfoOrg2[35][Oinfo2]; // Nunca mexa
new admhide[MAX_PLAYERS];
new helperhide[MAX_PLAYERS];
stock PlayerName(playerid)
{
	new Name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Name, MAX_PLAYER_NAME);
	return Name;
}

enum pAInfo{
cMotivoAgendou[128],
cAdminAgendou[64],};
new AgendouInfo[MAX_PLAYERS][pAInfo];

stock IsPlayerInGuerra(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= GuerraMinX && y >= GuerraMinY && x <= GuerraMaxX && y <= GuerraMaxY) return 1;
    else return 0;
}

stock IsAMoto(vehicleid) // Veiculos de 2 Rodas
{
	new result;
	new model = GetVehicleModel(vehicleid);
    switch(model)
    {
        case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471: result = model;
        default: result = 0;
    }
	return result;
}

stock IsPlayerInHospLosSantos(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 44.60 && y >= -2892.90 && x <= 2997.00 && y <= -768.00) return 1;
    else return 0;
}

stock IsPlayerInLosSantos(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 44.60 && y >= -2892.90 && x <= 2997.00 && y <= -768.00) return 1;
    else return 0;
}

stock IsPlayerInLasVenturas(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 869.40 && y >= 596.30 && x <= 2997.00 && y <= 2993.80) return 1;
    else return 0;
}

//====================
SetPlayerAttachedObjectEx(playerid, slot, model, bone, Float:X, Float:Y, Float:Z, Float:RX, Float:RY, Float:RZ)
{
	if(!pObject[playerid][slotreserved])
	{
		pObject[playerid][slotreserved] = true;
	    pObject[playerid][omodel] = model;
		pObject[playerid][oslot] = slot;
		SetPlayerAttachedObject(playerid, slot, model, bone, X, Y, Z, RX, RY, RZ);
	}
	else
	{
	    SetPlayerAttachedObject(playerid, pObject[playerid][oslot], model, bone, X, Y, Z, RX, RY, RZ);
	}
	return 1;
}

GetEmptySlot(playerid)
{
	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; ++i)
	{
		if(!IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			return i;
		}
	}
	return -1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
    new against_ip[32+1];
    new x = 0;
    new ip_count = 0;
    for(x=0; x<MAX_PLAYERS; x++)
	{
        if(IsPlayerConnected(x))
		{
            GetPlayerIp(x,against_ip,32);
            if(!strcmp(against_ip,test_ip)) ip_count++;
        }
    }
    return ip_count;
}

stock OrgPlayerCity(playerid)
{
	new txt[26];
	if(IsAGroove(playerid)||IsAVagos(playerid)||IsABallas(playerid)||IsAAzteca(playerid)||IsAComandoVermelho(playerid)||IsAPCC(playerid)||IsAMedicos(playerid)||IsAPM(playerid)||IsABOPEs(playerid)||IsATaxi(playerid)||IsAJornal(playerid))
 	{
		format(txt, sizeof(txt),"Los Santos");
	}
	else if(IsAGrooveSF(playerid)||IsAVagosSF(playerid)||IsABallasSF(playerid)||IsAAztecaSF(playerid)||IsASonsofAnarchy(playerid)||IsAPCCSF(playerid)||IsATaxiSF(playerid)||IsAMedicosSF(playerid)||IsAPoliciaCivil(playerid)||IsAPMSF(playerid)||IsAJornalSF(playerid))
 	{
        format(txt, sizeof(txt),"San Fierro");
	}
	return txt;
}

stock AbertoFechado(carid)
{
	new txt[20];
	if(VTrancado[carid] == 0)
 	{
		format(txt, sizeof(txt),"destrancado");
	}
	else if(VTrancado[carid] == 1)
 	{
        format(txt, sizeof(txt),"~r~trancado");
	}
	return txt;
}

stock LigadoDesligado(carid)//desativado
{
	new txt[20];
	if(LigadoDesligado2[carid] == 0)
 	{
		format(txt, sizeof(txt),"~r~Desligado");
	}
	else if(LigadoDesligado2[carid] == 1)
 	{
        format(txt, sizeof(txt),"Ligado");
	}
	return txt;
}

//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FORWARD'S =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-<|
forward BombTime(playerid);
forward BombPlantTime(playerid);

forward AntiSH(playerid);
//forward Checkprop();

forward PortaoTaxi2();
forward reloginho();
forward Velociimetro();
forward SendHelperMessage(COLOR, string[]);
forward @Viajar(playerid);
forward SaveCars();
forward LoadCar();
forward SendMensagens();
forward ReduzTempoBot(playerid);
forward ReduzTempo(playerid);
forward DropVida(playerid);
forward DestroyVidaPickup(pickupid);
forward DestroyWeaponPickup(pickupid);
forward DropWeapons(playerid);
forward UsarNovamente(playerid);
forward VoltarBombas(playerid);
forward PresoMulta(playerid);
forward Sincronizar(playerid);
forward CheckOwner(playerid);
forward Aroubo();
forward Aroubo2();
forward Aroubo3();
forward Aroubo4();
forward Aroubo5();
forward Aroubo6();
forward Aroubo7();
forward Aroubo8();
forward AcabarMochila(playerid);
forward RouboBanco(playerid);
forward RouboLot(playerid);
forward RouboLoja1(playerid);
forward FuckYou(playerid,give);
forward RouboLoja2(playerid);
forward RouboBinco(playerid);
forward RouboZip(playerid);
forward RouboVictim(playerid);
forward LoginAgora(playerid);
forward Corrida();
forward Sequestrar();
forward Amarrar();
forward CorridaOni();
forward Sinc();
forward Administrador(playerid);
forward CheckOwnerb(playerid);
forward CheckOwnerh(playerid);
forward GuerraTerrorista(playerid);
forward SendVIPMessage(color, string[]);
forward CheckHack();
forward GuerraMorro(playerid);
forward GuerraPark(playerid);
forward GuerraAero(playerid);
forward ColocarGang(playerid, Vaga, Nome);
forward GranaTerritorios();
forward RecriarObjeto();
forward DestruirObjeto(objid);
forward CriarExplosao(Float:X,Float:Y,Float:Z,tipo,Float:diam);
forward NRouco(playerid);
forward NFlood(playerid);
forward NSemAn(playerid);
forward OnPlayerTeamPrivmsg(playerid,text[]);
forward ScoreLevel(playerid);
forward IsAVIP(playerid);
forward IsAGOV(playerid);
forward IsAGOVCar(carid);
forward IsABOPEs(playerid);
forward IsABOPEsCar(carid);
forward IsAEx(playerid);
forward IsAExCar(carid);
forward IsAJornal(playerid);
forward IsAJornalCar(carid);
forward IsAHit(playerid);
forward IsAHitCar(carid);
forward IsABikeCar(carid);

forward IsAComandoVermelho(playerid);
forward IsAComandoVermelhoCar(carid);

forward IsAGIA(playerid);
forward IsAGIACar(carid);
forward IsASonsofAnarchy(playerid);
forward IsAComandoVermelhoSF(carid);
forward IsATriad(playerid);
forward IsATriadCar(carid);
forward IsAYa(playerid);
forward IsAOni(playerid);
forward IsAOniCar(carid);
forward IsATaxi(playerid);
forward IsATaxiCar(carid);
forward gasolina(playerid);
forward IsAVagos(playerid);
forward IsAVagosCar(carid);
forward IsABallas(playerid);
forward IsABallasCar(carid);
forward carroVIP(carid);
forward IsAPoliciaCivil(playerid);
forward IsAPoliciaCivilCar(carid);
forward GuerraEstacao(playerid);
forward GuerraConstrucao(playerid);
forward GuerraNavio(playerid);
forward GuerraPuteiro(playerid);
forward GuerraPraia(playerid);
forward GuerraAeroSF(playerid);

forward GuerraCasarao(playerid);
forward IsAAl(playerid);
forward IsAAlCar(carid);
forward IsAGI(playerid);
forward IsAGICar(carid);
forward IsAGroove(playerid);
forward IsAGrooveCar(carid);
forward IsAAzteca(playerid);
forward IsAPM(playerid);
forward IsAAztecaCar(carid);
forward AbertoFechado(carid);
forward LigadoDesligado(carid);
forward IsAPCC(playerid);
forward IsAPCCCar(carid);
forward IsAHelperCar(carid);

//=-=-=-=-=-=-=-=-=- Orgs de SF =-=-=-=-=-=-=-=-



//======Groves SF======///
forward IsAGrooveSFCar(carid);
forward IsAGrooveSF(playerid);

//======PCC SF======//
forward IsAPCCSF(playerid);
forward IsAPCCSFCar(carid);

//======Azteca SF======///
forward IsAAztecaSFCar(carid);
forward IsAAztecaSF(playerid);

//======Ballas SF======//
forward IsABallasSF(playerid);
forward IsABallasSFCar(carid);

//======Vagos SF======//
forward IsAVagosSF(playerid);
forward IsAVagosSFCar(carid);


//======Taxistas SF======//
forward IsATaxiSF(playerid);
forward IsATaxiSFCar(carid);

//====Medicos SF========//
forward IsAMedicosSF(playerid);
forward IsAMedicosSFCar(carid);


//====San Fierro News========//
forward IsAJornalSF(playerid);
forward IsAJornalSFCar(carid);


//====PMSF========//
forward IsAPMSF(playerid);
forward IsAPMSFCar(carid);

forward PDEx2();
forward PortaoRally2();
forward PortaoPC2();
forward PortaoReporter2();
forward PortaoBallas();
forward PortaoPoliciaC1();
forward PortaoPoliciaC2();
forward pd1();
forward pd2();
forward PTPMSF();
forward PTPMSF2();
forward gt3gate2();
forward gt3gate4();
forward pd3();
forward pd4();
forward pd5();
forward pd6();
forward pd7();
forward GaragemDpClosed();
forward GaragemDpClosed2();
forward pcclosed();
forward PFClosed2();
forward PFClosed3();
forward PCClosed();
forward PCClosed2();
forward PortaoPre2();
forward PortaoHit3();
forward PortaoTriad2();
forward Portao2();
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward PortaooPC2();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward fecharyakuza1();
forward ReduceTimer(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward CarroMala(vehicleid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward ABroadCast(COLOR,const string[],level);
forward ChatHelperAdmin(COLOR, const string[]);
forward HelperBroadCast(COLOR,const string[],level);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward SBan(playerid, string[], string2[]);
forward IsAnAmbulanceCar(carid);
forward IsAGOV(playerid);
forward IsAGatev(carid);
forward IsACopCar(carid);
forward IsArma(playerid);
forward IsAEnforcerCar(carid);
forward IsACaminhaozinhoCar(carid);
forward IsAMecCar(carid);
forward IsAMec(playerid);
forward IsAPFCar(carid);
forward IsAGOVCar(carid);
forward IsACosaNostra(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAMember(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(COLOR,const string[]);
forward OOCNews(COLOR,const string[]);
forward SendEmpregoMessage(Emprego, COLOR, string[]);
forward SendFamilyMessage(family, COLOR, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearMarriage(playerid);
forward ClearCrime(playerid);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(house);
forward CarRespawn(carid);
forward CheckGas();
forward Fillup();
forward CorridaTrack();
forward SyncTime();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward ini_GetKey(line[]);
forward ini_GetValue(line[]);
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
forward RemoveRoadblock(playerid);
forward RemoveRoadCones(playerid);
forward RemoveRoadPregos(playerid);
forward BackupClear(playerid, calledbytimer);
forward ClearChatbox(playerid, lines);
forward Autocruise(playerid, in);
forward AbrirSaida(playerid);
forward EndWash(playerid);
forward AguaLava(playerid, on);

new NomeServer[9][256] = {
"[BPH] Brasil PlayHappy [RPG versao: 2.6a]",
"[BPH] Server Los Santos e San Fierro",
"[BPH] Mais de 310 casas com carros",
"[BPH] Mais de 35 organizações",
"[BPH] Brasil PlayHappy [versao: 2.6a]",
"[BPH] Brasil PlayHappy [RPG versao: 2.6a]",
"[BPH] Brasil PlayHappy [RPG versao: 2.6a]",
"[BPH] Fodástico",
"[BPH] Vagas de Lider "
};

new Cores[] = {
COLOR_LIGHTBLUE,
0x95FF90AA,
TEAM_BALLAS_COLOR,
COLOR_GRAD3,
COLOR_WHITE,
TEAM_VAGOS_COLOR,
0x2641FEAA,
TEAM_BALLAS_COLOR,
0xD9DB00AA,
COLOR_YELLOW,
COLOR_YELLOW,
TEAM_BALLAS_COLOR,
COR_AZTECAS,
0x95FF90AA,
0xC36CF6AA,
COLOR_YELLOW2,};

new Mensagenscima[26][128] ={
    "•|PlayHappy|• PRECISANDO DE AJUDA? USE /relatorio OU /duvida.",
	"•|PlayHappy|• PARA VER OS MAIS TOPS ONLINE USE: /TOPS",
	"•|PlayHappy|• Achou algum BUG no servidor? Por Favor USE: /BUG!",
	"•|PlayHappy|• NUNCA COMETA DM OU DB, POIS PODERA SER PUNIDO, LEIA AS REGRAS",
	"•|PlayHappy|• PARA VER OS ANIMS DO SERVER USE /animlist OU /animlist2",
	"•|PlayHappy|• Não sabe o resultado de uma conta? USE: /ajudacalculadora",
    "•|PlayHappy|• CASO ESTIVER PERDIDO USE /GPS PARA ENCONTRAR ALGUNS PONTOS DAS CIDADES",
	"•|PlayHappy|• QUER VER OS CREDITOS DO SEVIDOR? USE: /creditos",
	"•|PlayHappy|• DIVULGUE NOSSO SERVIDOR! ALÉM DE AJUDAR O SERVIDOR A CRESCER VOCÊ GANHARÁ BENEFICIOS.",
	"•|PlayHappy|• Achou algum BUG no servidor? Por Favor USE: /BUG!",
	"•|PlayHappy|• FIQUE SABENDO SEMPRE DAS NOVIDADES EM NOSSO FORUM: USE: /forum",
	"•|PlayHappy|• Dê sugestões em nosso forum para que o servidor cresca cada vez mais!",
	"•|PlayHappy|• Entrou no server agora e gostou? Não pense que para por aí! Sua Diversão está apenas começando.",
	"•|PlayHappy|• Achou algum BUG no servidor? Por Favor USE: /BUG!",
	"•|PlayHappy|• Não sabe o resultado de uma conta? USE: /ajudacalculadora",
	"•|PlayHappy|• Pagando VIP você irá ajudar o servidor a crescer e ganhará varios Benefícios!",
	"•|PlayHappy|• Deseja mudar seu estilo de andar ? USE: /andar",
	"•|PlayHappy|• MUITO OBRIGADO POR JOGAREM AQUI! VOCÊS SEMPRE SERÃO O FUTURO DE NOSSO SERVIDOR.",
	"•|PlayHappy|• Não sabe o resultado de uma conta? USE: /ajudacalculadora",
	"•|PlayHappy|• Achou algum BUG no servidor? Por Favor USE: /BUG!",
	"•|PlayHappy|• NÃO COMETA DM OU DB, OU PODERÁ SER SEVERAMENTE PUNIDO.",
	"•|PlayHappy|• MUITO OBRIGADO POR JOGAREM AQUI! VOCÊS SEMPRE SERÃO O FUTURO DE NOSSO SERVIDOR.",
	"•|PlayHappy|• Entrou no server agora e gostou? Não pense que para por aí! Sua Diversão está apenas começando.",
	"•|PlayHappy|• É NOVATO NO SERVIDOR? USE /GPS PARA VER ALGUNS LUGARES IMPORTANTES DA CIDADE",
	"•|PlayHappy|• FIQUE SABENDO SEMPRE DAS NOVIDADES EM NOSSO FORUM: www.s-bph.forumeiros.com",
	"•|PlayHappy|• Visite Nosso Forum: www.s-bph.forumeiros.com"};

new CarOffered[MAX_PLAYERS];

enum Admin
{
	gMembro[MAX_PLAYER_NAME],AdminVaga,
};

enum floatinfo
{
	Float:posxafk,Float:posyafk,Float:poszafk,Float:angleafk,
}
new AnuncioMandado;
new PlayerUpdateInfo[MAX_PLAYERS][floatinfo];
new PlayerInactivity[MAX_PLAYERS];
enum SAZONE_MAIN {SAZONE_NAME[28],Float:SAZONE_AREA[6]};
static const gSAZones[][SAZONE_MAIN] = {
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield",     				{1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield",   				{1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield",     				{1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield",     				{1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Castelo",           			{2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint ",          			{-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Parque Gleen",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Parque Gleen",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Parque Gleen",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Morro",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Morro",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Morro",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Morro",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Morro",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Morro",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Morro",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Aeroporto Los Santos",    			{1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Aeroporto Los Santos",    			{1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Aeroporto Los Santos",    			{1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Aeroporto Los Santos",    			{1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Aeroporto Los Santos",    			{1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Aeroporto Los Santos",    			{2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery",     				{1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery",     				{1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada",         				{-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Citys Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

stock right(sorrce[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(sorrce);
	strmid(retval, sorrce, srclen - len, srclen, MAX_STRING);
	return retval;
}
stock ini_GetKey( line[] )
{
	new keyRes[128];
	keyRes[0] = 0;if ( strfind( line , "=" , true ) == -1 ) return keyRes;
	strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
	return keyRes;
}
stock ini_GetValue( line[] )
{
	new valRes[128];valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
stock IsPlayerInMorro(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= 2117.333 && y >= -1069.962 && x <= 2261.841 && y <= -959.4252) return true;
	else return 0;
}
stock IsPlayerInConstrucao(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= -2132.02 && y >= 124.611 && x <=  -1996.826 && y <= 317.9143) return true;
	else return 0;
}
stock IsPlayerInMaddDogg(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= 1213.6815 && y >= -861.0207 && x <= 1328.6815 && y <= -761.0207) return true;
	else return 0;
}
stock IsPlayerInPark(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= 1847.332 && y >= -1267.349 && x <= 2060.291 && y <= -1137.074) return true;
	else return 0;
}
stock IsPlayerInEstacao(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= 1687.613 && y >= -1958.204 && x <= 1813.106 && y <= -1859.51) return true;
	else return 0;
}
stock IsPlayerInCasarao(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= 1098.173 && y >= -2084.531 && x <= 1299.723 && y <= -2005.577) return true;
	else return 0;
}
stock IsPlayerInNavio(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= -1552.617 && y >= 100.9412 && x <= -1456.05 && y <= 183.7855) return true;
	else return 0;
}
stock IsPlayerInPraia(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= -2981.811 && y >= 400.7585 && x <= -2865.93 && y <= 534.8873) return true;
	else return 0;
}
stock IsPlayerInAeroSF(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= -1587.381 && y >= -459.2437 && x <= -1398.11 && y <= -269.8854) return true;
	else return 0;
}
stock IsPlayerInPuteiro(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(x >= -2668.933 && y >= 1292.32 && x <= -2568.503 && y <= 1450.119) return true;
	else return 0;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != sizeof(gSAZones); i++)
	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
			return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
stock ChecarveiculoBPH(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,PX,PY,PZ);
		GetVehiclePos(vehicleid, X,Y,Z);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi)
		{
			return true;
		}
	}
	return 0;
}

stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
		case 1:
			return 331;
		case 2..8:
			return weaponid+331;
		case 9:
			return 341;
		case 10..15:
			return weaponid+311;
		case 16..18:
			return weaponid+326;
		case 22..29:
			return weaponid+324;
		case 30,31:
			return weaponid+325;
		case 32:
			return 372;
		case 33..45:
			return weaponid+324;
		case 46:
			return 371;
	}
	return 0;
}


new veehName[][] ={"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Whoopee","BF Injection",
"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider","Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3-50","Walton","Regina",
"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","Chopper","Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring","Sandking","Blista","Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring","Hotring",
"Bloodring","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain","Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor",
"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car","Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer","Luggage Trailer",
"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
enum cInfo{ cModel,Float:cLocationx,Float:cLocationy,Float:cLocationz,Float:cAngle,cColorOne,cColorTwo,cOwner[MAX_PLAYER_NAME],cDescription[MAX_PLAYER_NAME],cValue,cLicense,cRegistration,cOwned,cLock,ownedvehicle,Float:lx,Float:ly,Float:lz,Float:langle,cGrana,cID,};
new CarInfo[50][cInfo];
enum StreetInfo{Tels[20],PLojaA1,pTels,PLojaA2,PpLoja247,PpLoja2472,ArmaLoja[52],InicioGuerra,PAbriuRG,};
new BPHInfo[MAX_PLAYERS][StreetInfo];
new aNames[55][] ={
"Desarmado", "Soqueira", "Taco de Golf", "Cacetete",
"Faca", "Taco de Base-Ball", "Pá de pedreiro", "Cano", "Espada", "Motoserra", "Vibrador", "Vibrador", "Vibrador", "Vibrador",
"Flores", "Pé de cabra", "Granada", "Bomba de Gás", "Coquetel-Molotov", "Desconhecido 19", "Desconhecido 20", "Jetpack", "Pistola 9mm", "Pistola 9mm com Silenciador",
"Desert Eagle", "Shotgun", "Escopeta do cano serrado", "Escopeta de combate", "Micro Uzi", "MP5", "Ak-47", "M4", "Tec9", "Rifle", "Rifle-Sniper",
"Lança Missil", "Lança Missil RPG", "Lança Chamas", "Minigun", "Explosivo Remoto", "Detonador", "Spray", "Extintor", "Camera", "Òculos de Visão noturna", "Oculos Infra Vermelho",
"Paraquedas", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido"};

new Float:ex;
new Float:ey;
new Float:ez;
new Evento;
new Text:Reloginho1;
new Text:Reloginho2;
new Text:Reloginho3;
new kickname[MAX_PLAYER_NAME];
new sendername[MAX_PLAYER_NAME];
new Rouco[MAX_PLAYERS];
new SemAn[MAX_PLAYERS];
new portaoPC1;
new portaoPC2;
new PortaooPC;
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new BusrouteWest[MAX_PLAYERS][2];
new BusrouteEast[MAX_PLAYERS][2];
new NomeCarro[128];
new pyakuza1, acn;
new portaomedicos1, portaomedicos2;
new PDEx;
new PortaoRally;
new PortaoPC;
new PortaoPC3;
new PortaoReporter;

new PDDOORa;
new PDDOORb;
new PDDOORc;
new PDPMLS;
new PDGARAGE;
new PDELEVATOR;
new gatepf3;
new gatepf2;
new gt3gate;
new gt3gate3;
new PortaoPMSF;
new PortaoPre;
new PortaoHit1;
new PortaoTriad1;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new InRing = 0;
new RorndStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new trifound = 0;
new hitid = 999;
new triid = 999;
new Copsronda = 0;
new CopsrondaCall = 999;
new CopsrondaCallTime[MAX_PLAYERS];
new CopsrondaAccepted[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new MechanicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new EmpregoDuty[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MaapIconsShown[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new FishCornt[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GotTri[MAX_PLAYERS];
new GanhouArmamento;
new FH = 0;
new FK = 0;
new Avisouc = 0;
new CHitman;
new CTriad;
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingEmprego[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedAdvogado[MAX_PLAYERS];
new CallAdvogado[MAX_PLAYERS];
new WantAdvogado[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new MendigoOffer[MAX_PLAYERS];
new MendigoPrice[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerConta[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new gLastDriver[302];
new portaodpauto;
new playerpickup[MAX_PLAYERS];
new ghour = 0;
new numplayers = 0;
new levelcost = 25000;
new callcost = 10;
new realchat = 1;
new timeshift = 0;
new othtimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new spectatetimer;
new productiontimer;
/*new TempoTerritorios2;*/
new Contastimer;
new checkgastimer;
new cartimer;
new levelexp = 4;
new cchargetime = 60;
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new pRoadblock[MAX_PLAYERS];
new pRoadblock2[MAX_PLAYERS];
new pMaxBR[MAX_PLAYERS];

new NoEvento = 0;
//===========
new pRoadCones[MAX_PLAYERS];
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new ReduceTime[MAX_PLAYERS];
new Gas[CAR_AMOUNT];
new Refueling[MAX_PLAYERS];
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
new Music[MAX_PLAYERS];
new Songs[7][1] = {{1187},{1185},{1183},{1097},{1076},{1068},{1062}};

new Float:HospitalizadoSpawns[8][4] =
{
	{367.5977,173.7776,1054.2555,272.0597},// 1
	{364.7985,174.2894,1054.2555,90.8313},// 2
	{364.8961,156.5384,1054.2555,91.9765},// 3
	{367.6027,156.2279,1054.2555,267.8217},// 4
	{360.0002,173.6618,1054.2555,270.4934},// 5
	{356.8971,173.8542,1054.2555,90.5766},// 6
	{357.0970,156.0924,1054.2555,92.2307},// 7
	{359.7027,155.9858,1054.2555,273.5864}// 8
};

new Float:RotaChecks[9][3] = {
{1346.7188,-1732.3940,13.3906},
{1486.7031,-1732.5431,13.3828},
{1498.9061,-1591.8199,13.3828},
{1789.4310,-1173.4104,23.6518},
{1465.6827,-1033.9873,23.6563},
{1018.5015,-1144.9186,23.6563},
{1061.5659,-1874.6350,13.2288},
{1242.4274,-1851.4144,13.3828},
{2081.7222,-1809.4294,13.3828}};


new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}};
new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}};
enum pBoxingStats{TitelName[32],TitelWins,TitelLoses,};
new Titel[pBoxingStats];
enum pCooking{pCook1[20],pCook2[20],pCook3[20],pCook4[20],pCook5[20],pCWeight1,pCWeight2,pCWeight3,pCWeight4,pCWeight5,pCookID1,pCookID2,pCookID3,pCookID4,pCookID5,};
new Cooking[MAX_PLAYERS][pCooking];
enum pGroceries{pChickens,pChicken,pHamburgers,pHamburger,pPizzas,pPizza,};
new Groceries[MAX_PLAYERS][pGroceries];
enum pSpec{Float:Coords[3],Float:sPx,	Float:sPy,Float:sPz,sPint,sLocal,sCam,};
new Unspec[MAX_PLAYERS][pSpec];
enum eCars{model_id,Float:pos_x,Float:pos_y,	Float:pos_z,Float:z_angle,};
enum hNews{hTaken1,hTaken2,hTaken3,hTaken4,hTaken5,hAdd1[128],hAdd2[128],hAdd3[128],hAdd4[128],hAdd5[128],hContact1[128],hContact2[128],hContact3[128],hContact4[128],hContact5[128],};
new News[hNews];
enum pInfo{pKey[128],pLevel,pAdmin,pTempoHospitalizado,pHospitalID,pAgendado,pTempoAgendado,pAdminAgendou[64],pMotivoAgendou[128],pDiaBanTemp,pMesBanTemp,pAnoBanTemp,pFome,pHelper,pAviso,pVIP,pTimeVIP,pPVIP,pOuros,pModel,pChar,pGrampo,gPupgrade,pConnectTime,pReg,pSex,pAge,pMuted,
pSequestrado,pExp,pCash,pConta,pCrimes,pKills,pDiaVIP,pMesVIP,pAnoVIP,pDeaths,pPhoneBook,pLottoNr,pEmprego,
pSalario,pHeadValue,pHeadValueT,pJailed,pPhousekey,pJailTime,pMats,pDrogas,pDrogas2,pDrogas3,pLider,pMembro,pCargo,
pSkin,pContractTime,pDetSkill,pSexSkill,pBoxSkill,pLawSkill,pMechSkill,pNewsSkill,pDrogasSkill,pCookSkill,
Float:pSHealth,Float:pSArmour,pInt,pCapacete,pLocal,pTeam,pPnumber,pPHousekey,pPbiskey,Float:pPos_x,Float:pPos_y,
Float:pPos_z,pCarLic,pFlyLic,pBoatLic,pGunLic,pPayDay,pCDPlayer,pWins,pLoses,pAlcoholPerk,pDrugPerk,
pMiserPerk,pPainPerk,pTraderPerk,pTut,pWarns,pMarried,pParedao,pRequestingBackup,pMask,pMaskuse,pBarraca,
pMarriedTo[64],pSpawn,pSafeDrogas,pSafeDrogas2,pSafeDrogas3,pVeiculo,pVeiculo2,pVeiculo3,pVeiculo4,pVeiculo5,pCarKey,pCarKey2,pCarKey3,pCarKey4,pCarKey5,
psMats,pPHouseCarkey,pLuta,pDorgado,pDorgado2,pDoenca,pCreditos,pLastLogin[20],pGun1,pGun2,pGun3,pGun4,pGun5,
pGun6,pGun7,pGun8,pGun9,pGun10,pGun11,pOrigem,pGun12,pAmmo1,pAmmo2,pAmmo3,pAmmo4,pAmmo5,pAmmo6,	pAmmo7,pAmmo8,pAmmo9,
pAmmo10,pAmmo11,pAmmo12,pCheckInfoOrg,pCaixinha,pBanTemp,pBan,};
new PlayerInfo[MAX_PLAYERS][pInfo];
enum pHaul{pCapasity,pLoad,};
new PlayerHaul[CAR_AMOUNT][pHaul];
enum hInfo{Float:hEntrancex,Float:hEntrancey,Float:hEntrancez,Float:hExitx,Float:hExity,Float:hExitz,
hHealthx,hHealthy,hHealthz,hArmorrx,hArmorry,hArmorrz,hOwner[MAX_PLAYER_NAME],hDiscription[MAX_PLAYER_NAME],
hValue,hHel,hArm,hInt,hLock,hOwned,hRooms,hRent,hRentabil,hTakings,hVec,hVcol1,hVcol2,hDate,hLevel,hWorld};
new HouseInfo[309][hInfo];

enum bInfo
{
	bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
};

enum Arara1
{
	bool:Arara,
 	bool:Racao,
    Grande,
    Timer
}
new AraraInfo[MAX_PLAYERS][Arara1];

new BizzInfo[12][bInfo];
enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbInterior,
	sbProducts,
	sbPriceProd,
	sbMaxProducts,
	sbTill,
	sbLocked,
};
new SBizzInfo[25][sbInfo];


enum pCrime{pBplayer[32],pAccusing[32],pAccusedof[32],pVictim[32],};
new PlayerCrime[MAX_PLAYERS][pCrime];
enum iInfo{iAdmin[128],iMOTD[128],iPassword[128],iNeedPass,iLock,iPlayers,};


new GunPrice[30][1] = {
{124}, //parachute
{100}, //golfclub
{75}, //nigHCtick
{50}, //knife
{175}, //baseballbat
{75}, //shovel
{25}, //poolcue
{100}, //purpledildo
{125}, //whitedildo
{125}, //longwhitedildo
{125}, //whitedildo2
{50}, //flowers
{150}, //cane
{250}, //sdpistol
{250}, //colt45
{1000}, //deagle
{500}, //Tec9
{750}, //uzi
{750}, //mp5
{750}, //shotgun
{1500}, //spas12
{1000}, //sawnoff
{800}, //ak47
{800}, //m4
{250}, //rifle
{25}, //pistolammo
{20}, //shotgunammo
{12}, //smgammo
{20}, //assaultammo
{25} //rifle
};
new Peds[223][1] = {
{6},//Skin do Civil
{265},//TEAM_ADMIN
{267},{240},{228},{114},{120},{147},{294},{227},{61},{171},{270},{123},{59},{102},{108},{117},
{26},//Civis DOWN aqui
{26},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};
new Float:HouseCarSpawns[309][8] ={
{-903.5889,2689.2488,42.0746,45.1929},//House 1 << ERRO AQUI...COMEÇA DO ID ( 0 )
{2158.7646,-1803.0978,13.3682,269.6005},//House 2
{986.3409,-1835.5338,12.3183,255.4731},//{1892.9766,-1926.0437,13.2903,271.2716},//House 3
{974.2166,-1832.5206,12.3163,256.1671},//{1914.0115,-1924.4537,13.2899,270.2092},//House 4
{963.9711,-1830.3412,12.3085,255.7094},//{1929.7886,-1926.0729,13.2902,270.7549},//House 5
{929.0866,-1823.9473,12.2976,264.4613},//{1939.3484,-1925.9573,13.2898,269.9824},//House 6
{916.5581,-1822.6689,12.2602,264.2826},//{1910.4330,-1118.2250,25.5575,181.0549},//House 7
{961.1844,-764.7245,109.6929,64.7682},//{1180.7435,-1252.5255,14.9737,182.7825},//House 8
{1934.5048,-1117.7877,26.1612,179.2393},//{1192.6936,-1273.5597,13.3416,87.6046},//House 9
{1991.4856,-1119.5781,26.4785,269.6297},//10
{2092.1938,-1141.1871,25.2912,89.4516},//11
{2095.9543,-1280.6267,25.1396,179.4858},//12
{2102.7146,-1277.2429,25.1967,178.2808},//13
{2137.5305,-1279.0439,25.0235,180.3930},//14
{1971.7798,-1711.3978,15.6737,87.5382},//15
{1980.4734,-1711.3685,15.6741,270.4855},//16
{2016.4232,-1707.7876,13.2517,89.2164},//17
{2009.9028,-1720.6913,13.2523,179.2053},//18
{2014.5658,-1737.1510,13.2575,91.0865},//19
{1982.9471,-1674.9521,15.6738,270.5941},//20
{2014.2642,-1648.6296,13.2522,88.7250},//21
{-2616.5203,-188.2007,4.1396,270.2828},//House 22
{-2616.4768,-178.4467,4.1398,269.7500},//House 23
{-2616.5454,-159.5669,4.1386,270.3671},//House 24
{-2616.4666,-143.8085,4.1398,269.9162},//House 25
{-2616.3420,-131.2102,4.1396,269.9391},//House 26
{-2616.4905,-109.9079,4.1433,269.9117},//House 27
{-2616.4377,-96.5874,4.1401,270.4308},//House 28
{-2693.8455,-92.6595,4.1406,89.1438}, //House 29<
{-2693.5713,-99.1428,4.1393,90.0741},//House 30
{-2693.7996,-109.2333,4.1403,89.3673},//House 31
{-2694.0591,-121.2042,4.1404,90.2897}, //House 32
{-2693.7466,-127.8170,4.1391,89.3046},//House 33
{-2693.6335,-143.6650,4.1403,90.4974},//House 34
{-2693.6321,-147.3629,4.1401,90.2185},//House 35
{-2693.7883,-156.3192,4.1418,89.4645},//House 36
{-2693.5181,-178.4513,4.1398,91.2672},//House 37
{-2693.7896,-190.9334,4.1428,89.9585},//House 38
{-2796.0002,-184.0397,6.9912,89.1908},//House 39
{-2796.2415,-171.3087,6.9934,90.4948},//House 40
{-2796.2900,-149.4020,6.9909,90.0117},//House 41
{-2796.0129,-140.6206,6.9958,89.1192},//House 42
{-2796.1108,-136.8223,6.9915,90.2126},//House 43
{-2795.9570,-120.9166,6.9945,90.0878},//House 44
{-2796.1589,-111.8763,6.9940,90.4284},//House 45
{-2796.1396,-102.2269,6.9957,90.5642},//House 46
{-2796.0320,-92.4919,6.9908,89.5255},//House 47
{-2796.0623,-83.0805,6.9943,89.7444},//{-2662.8369,-286.4962,7.1653,45.2360},//House 48
{-2718.4585,-55.4581,4.1455,271.0321},//House 49
{-2718.8208,-48.3882,4.1431,269.6888},//House 50
{-2719.0955,-33.6745,4.1451,270.3060},//House 51
{-2719.2134,-29.6688,4.1425,269.5740},//House 52
{-2718.5977,-19.5481,4.1459,269.7279},//House 53
{-2718.9556,6.7169,4.1405,270.7949},//House 54
{-2718.6777,10.9221,4.1404,269.7159},//House 55
{-2693.8962,68.2558,4.1399,88.8536},//House 56
{-2693.4019,72.0388,4.1402,91.2865},//House 57
{-2693.6543,98.5642,4.1392,89.8234},//House 58
{-2729.9438,910.1337,67.3980,158.9882},//House 59
{-2723.3923,977.3178,54.2647,1.0768},//House 60
{-2666.0603,988.9144,64.7064,0.6881},//House 61
{-2635.7263,932.6368,71.6429,179.7104},//House 62
{1235.4155,2591.7129,10.6243,270.5239},//House 63
{1233.6041,2610.0996,10.6250,270.3215},//House 64
{1271.5784,2603.6355,10.6317,180.5740},//House 65
{1323.0256,2600.7163,10.6228,269.2501},//House 66
{1353.7772,2600.7998,10.6244,269.2407},//House 67
{1301.9536,2536.7698,10.6178,358.6842},//House 68
{1275.0620,2529.9448,10.6249,270.5968},//House 69
{1280.8428,2547.3325,10.6245,269.8492},//House 70
{1282.0393,2571.6536,10.6245,270.5629},//House 71
{1393.8203,2537.7852,10.6159,358.2380},//House 72
{1366.5284,2520.1050,10.6246,271.2517},//House 73
{1497.7014,2540.7673,10.6240,88.8034},//House 74
{1456.3857,2519.9597,10.6247,269.9254},//House 75
{1601.0378,2655.7336,10.6240,90.4456},//House 76
{1600.9641,2672.6768,10.6313,89.9337},//House 77
{1566.1907,2667.5586,10.6197,359.9981},//House 78
{1548.0997,2665.3252,10.6339,359.8929},//House 79
{1656.1555,2578.7009,10.6242,89.9053},//House 80
{1676.0962,2601.1311,10.6250,270.2930},//House 81
{1560.9358,2601.5493,10.6244,271.2994},//House 82
{1644.7617,2601.1133,10.6243,180.4310},//House 83
{1638.8771,2576.4973,10.6308,358.8985},//House 84
{1626.5890,2603.4451,10.6315,179.8996},//House 85
{1609.8015,2578.3000,10.6301,89.8156},//House 86
{1607.1368,2602.4578,10.6311,269.0258},//House 87
{1588.9971,2577.8262,10.6244,359.0808},//House 88
{1571.7120,2576.1975,10.6240,0.3010},//House 89
{1545.8125,2579.1409,10.6273,1.9016},//House 90
{1523.0502,2576.4846,10.6257,0.8098},//House 91
{1543.0089,2602.6428,10.6332,89.4737},//House 92
{1524.7386,2601.0491,10.6261,89.5482},//House 93
{1496.9707,2578.0735,10.6245,89.7741},//House 94
{1457.0144,2576.2776,10.6238,359.2846},//House 95
{1433.9816,2577.8142,10.6234,90.2641},//House 96
{1403.7435,2578.6204,10.6320,89.9860},//House 97
{1367.1246,2576.3213,10.6235,0.6232},//House 98
{1342.8568,2578.2085,10.6259,271.1889},//House 99
{1311.4835,2578.0806,10.6295,90.2091},//House 100
{1292.5585,2601.3101,10.6250,89.5351},//House 101
{1849.5043,734.1099,11.2222,268.0795},//House 102
{1849.7095,726.6119,11.1725,271.3005},//House 103
{1849.1022,698.5536,11.2016,271.1640},//House 104
{1850.0051,654.2852,11.2058,269.2852},//House 105
{2005.3046,656.2738,11.1567,0.7469},//House 106
{2050.4182,656.4923,11.1830,359.1178},//House 107
{2057.9871,656.0627,11.1457,1.0391},//House 108
{2086.0935,654.3956,11.2304,2.3566},//{1354.3202,-629.7422,108.8383,15.4581},//House 109
{2130.1135,655.2068,11.2300,359.9948},//House 110
{2128.5500,691.9973,11.2180,181.0058},//House 111
{2084.1265,690.2852,11.1977,179.5455},//House 112
{2076.3735,689.9075,11.1184,181.5033},//House 113
{2048.9492,690.4347,11.1575,180.5540},//House 114
{2004.9851,689.5546,11.1733,180.7551},//House 115
{2005.4932,735.1160,11.1947,359.2639},//House 116
{2049.3423,735.9988,11.2003,0.4186},//House 117
{2057.2705,736.3950,11.1228,1.3228},//House 118
{2085.1321,735.0198,11.1932,0.5731},//House 119
{2129.0166,735.8433,11.2104,359.1248},//House 120
{2168.8513,694.7675,11.2087,2.4359},//House 121
{2213.1472,695.9821,11.2027,0.3540},//House 122
{2220.8086,695.6395,11.1583,0.4145},//House 123
{2249.0068,695.7738,11.1685,1.1832},//House 124
{2265.5806,730.6979,11.1788,181.7217},//House 125
{2186.4333,649.8928,11.1503,181.1632},//House 126
{2214.2529,650.4518,11.1476,180.2761},//House 127
{2221.6858,649.4215,11.1644,179.9429},//House 128
{2266.2632,651.4849,11.2039,181.1753},//House 129
{2326.3904,651.6306,11.2012,182.4686},//House 130
{2353.7925,650.6875,11.1548,181.7039},//House 131
{2361.4385,648.1259,11.0847,178.9361},//House 132
{2406.1296,649.7145,11.1248,181.1581},//House 133
{2445.7698,654.6969,11.2088,90.2711},//House 134
{2452.5576,697.4849,11.2650,89.3620},//House 135
{2444.9792,706.4747,11.1699,92.0123},//House 136
{2445.6614,734.2584,11.2014,92.3033},//House 137
{2406.7598,730.1982,11.1597,180.4700},//House 138
{2361.9397,730.6334,11.2042,181.4409},//House 139
{2354.0725,730.8096,11.1730,180.9580},//House 140
{2165.3557,779.2045,11.2269,90.1996},//House 141
//============================================================
{293.8423,-1777.5112,4.1694,179.8620}, // 142
{278.4878,-1776.7448,4.0312,178.2687}, // 143
{263.9720,-1776.3154,3.9509,178.7848}, // 144
{229.8412,-1776.4502,3.9277,180.4554}, // 145
{205.9371,-1776.1990,3.5213,179.9100}, // 146
{192.6071,-1776.2518,3.4490,179.2419}, // 147
{170.3163,-1777.5118,3.9002,179.5046}, // 148
{151.3230,-1468.5968,25.1894,51.2888}, // 149
{228.2075,-1398.4825,51.3890,56.8240}, // 150
{166.1338,-1342.1531,69.4512,179.2780}, // 151
{250.9619,-1359.3494,52.9133,304.9880}, // 152
{302.1328,-1331.1221,53.2451,120.1745}, // 153
{406.1509,-1265.1876,50.0865,23.5561}, // 154
{422.6968,-1263.7277,51.3856,21.5213}, // 155
{559.9995,-1196.0979,44.5068,293.9440}, // 156
{636.5002,-1123.4623,44.3173,45.5386}, // 157
{687.1711,-1073.7803,49.2996,60.1048}, // 158
{726.2122,-994.7899,52.4663,60.2928}, // 159
{658.3305,-1065.4736,48.6342,137.1839}, // 160
{619.4607,-1101.3331,46.5544,125.8331}, // 161
{568.5738,-1131.7054,50.4505,118.3986}, // 162
{405.6788,-1152.9807,76.9888,149.3445}, // 163
{479.9708,-1088.7538,82.2793,358.6989}, // 164
{565.3697,-1067.4646,73.2086,28.7858}, // 165
{796.3174,-841.2990,60.4453,191.3584}, // 166
{832.1023,-858.4332,69.7314,200.2695}, // 167
{831.9598,-888.7072,68.5774,234.0205}, // 168
{860.3494,-848.7550,77.0976,204.6842}, // 169
{930.4973,-856.2589,93.2845,26.5117}, // 170
{944.5325,-842.2745,93.8223,27.1976}, // 171
{977.8530,-828.0021,95.8601,28.5733}, // 172
{1029.1510,-810.7899,101.6558,21.2879}, // 173
{1024.0848,-777.1644,102.8750,180.5301}, // 174
{814.4889,-768.0352,76.6622,287.2640}, // 175
{835.8721,-755.8903,85.1132,221.0368}, // 176
{912.6259,-665.1107,116.8038,236.4252}, // 177
{942.1365,-711.5859,122.0148,28.5925}, // 178
{1011.0298,-659.6471,120.9477,34.4688}, // 179
{1039.8817,-640.0378,119.9210,11.7345}, // 180
{1089.7021,-642.2006,112.9772,269.7515}, // 181
{1354.6133,-629.6234,108.9351,17.0339}, // 182
{1517.1062,-695.0704,94.5543,90.0597}, // 183
{1515.2538,-765.4269,79.9691,138.7516}, // 184
{1530.7754,-812.9214,71.8026,88.5822}, // 185
{1536.2307,-841.6397,64.5568,89.3499}, // 186
{1463.8103,-901.8238,54.6402,0.3844}, // 187
{1110.1187,-968.6776,42.5704,1.0524}, // 188
{2498.5229,-2022.1454,13.3505,359.2486}, // 189
{2409.3413,-1719.3766,13.4856,178.5128}, // 190
{2154.2813,-1615.0314,13.8001,158.8537}, // 191
{2066.5830,-1695.2455,13.3502,269.1420}, // 192
{2014.2507,-1597.5919,13.3733,135.5721}, // 193
{1910.8086,-1117.0646,25.4762,179.6597}, // 194
{2105.0457,-1241.4894,24.7179,359.6465}, // 195
{2096.1404,-1320.4569,24.9384,357.9004}, // 196
{2130.4775,-1308.4718,23.7903,270.5436}, // 197
{2148.0754,-1307.7648,23.7954,272.3220}, // 198
{2249.3674,-1293.7720,23.7813,268.9651}, // 199
{2224.7991,-1293.4357,23.7806,269.2019}, // 200
{2188.8215,-1293.2572,23.7801,269.2628}, // 201
{2531.3708,-1066.1426,69.3712,0.4469}, // 202
{2497.4973,-1062.4326,69.9371,357.6679}, // 203
{2476.0105,-1058.9230,66.5732,343.6855}, // 204
{2452.6313,-1050.5507,59.4497,354.9566}, // 205
{2432.5532,-1051.9341,54.0549,359.2394}, // 206
{2744.6262,-1235.0604,61.7934,88.9710}, // 207
{2804.5093,-1253.2816,46.7567,137.9727}, // 208
{2804.3804,-1288.2772,42.2174,86.0860}, // 209
{2804.2878,-1310.2140,36.9414,87.8345}, // 210
{2804.5884,-1332.1478,31.7945,88.4090}, // 211
{2846.4658,-1286.9679,19.0321,279.7715}, // 212
{856.4305,-1710.6119,13.3581,359.4435}, // 213
{762.4034,-1691.1410,4.3150,0.9832}, // 214
{644.4727,-1700.6924,14.5877,353.6402}, // 215
{646.0707,-1613.9435,15.0775,2.6389}, // 216
//================== Carros das casas VIPs de SF ========================
{-2863.1211,686.5229,23.1925,294.9781}, // 216
{-2867.0378,695.8699,23.3876,294.2778}, // 217
{-2870.8596,702.2664,23.4560,293.6894}, // 218
{-2878.1929,724.3480,29.0191,277.6524}, // 219
{-2879.3181,734.2450,29.3358,274.9465}, // 220
{-2880.3904,740.5139,29.4775,275.8994}, // 221
{-2881.3296,747.9397,29.5598,275.7198}, // 222
{-2878.7649,776.7919,34.3411,262.9601}, // 223
{-2876.7195,793.3705,35.4794,263.5485}, // 224
{-2875.9934,800.8862,35.8337,264.8490}, // 225
{-2867.0791,816.8031,38.9503,240.3580}, // 226
{-2861.7917,825.0632,39.3936,240.3735}, // 227
{-2858.0288,830.7390,39.9497,240.5904}, // 228
{-2853.7192,836.7772,40.5617,239.8629}, // 229
{-2837.0032,863.6656,43.8591,269.8429}, // 230
{-2836.4211,880.8111,43.8607,268.6063}, // 231
{-2836.7070,888.1271,43.8578,268.0170}, // 232
{-2839.4529,901.4349,43.8582,273.2703}, // 233
{-2839.2725,911.7444,43.8593,273.9786}, // 234
{-2839.7144,918.1695,43.8590,273.8480}, // 235
{-2840.2803,925.6237,43.8583,272.8728}, // 236
{-2847.7424,946.5568,43.8636,295.5627}, // 237
{-2850.7168,952.9003,43.8578,294.7240}, // 238
{-2858.1160,968.9297,43.7190,297.1436}, // 239
{-2870.3887,980.7872,40.8324,299.8299}, // 240
{-2875.1792,989.5236,40.3755,301.0354}, // 241
{-2882.1904,1001.6476,39.4364,301.2272}, // 242
{-2890.1472,1015.4379,36.6219,288.5533}, // 243
{-2895.9431,1031.6864,36.0468,289.4315}, // 244
{-2898.4512,1038.5079,35.8805,289.5818}, // 245
{-2895.8604,1053.5084,32.2606,270.5436}, // 246
{-2895.8489,1063.6614,31.8774,268.6332}, // 247
{-2895.9092,1070.3226,31.6247,269.9135}, // 248
{-2896.0518,1077.7504,31.4794,270.0525}, // 249
{-2900.4285,1097.8787,27.1271,269.0643}, // 250
{-2900.2913,1114.9255,26.4348,270.8688}, // 251
{-2900.4492,1121.9596,26.1943,270.2202}, // 252
{-2900.3030,1151.3622,13.6781,269.7313}, // 253
{-2900.1379,1161.7665,13.2813,269.2109}, // 254
{-2900.6179,1168.0581,13.1100,270.3126}, // 255
{-2900.2578,1175.3905,12.7986,271.1309}, // 256
{2131.6929,769.9097,11.1277,179.9235}, // 257
{2087.0740,770.0018,11.1782,178.9851}, // 258
//=========== Casas VIPs de SF +1 =================
{-2474.1497,1340.7211,7.9370,269.5105}, // 259
{-2473.9519,1321.4088,13.1965,270.7444}, // 260
{-2473.6594,1314.3541,15.0865,269.2687}, // 261
{-2472.8281,1304.4672,17.7649,2.2656}, // 262
{-2473.8538,1284.5420,23.2148,268.8298}, // 263
{-2473.7791,1277.7135,25.0500,271.3198}, // 264
{-2472.5330,1266.2662,28.1585,359.8105}, // 265
{-2474.3044,1247.6815,33.2229,273.3919}, // 266
{-2436.9153,1247.3229,33.2806,88.5970}, // 267
{-2436.4841,1257.6514,30.3899,88.8979}, // 268
{-2437.0251,1277.5291,25.1044,87.1517}, // 269
{-2436.4365,1284.9310,23.2127,89.1808}, // 270
{-2436.4019,1303.9294,18.0050,88.7805}, // 271
{-2436.8811,1314.2100,15.1536,91.6841}, // 272
{-2436.5549,1321.2977,13.2841,91.0910}, // 273
{-2436.1611,1340.8085,8.0470,87.8148}, // 274
{-2379.9355,1341.9813,11.3661,270.8714}, // 275
{-2380.4063,1323.7468,14.8474,275.7783}, // 276
{-2379.8599,1305.5936,18.2091,273.2291}, // 277
{-2380.1387,1287.2703,21.6533,274.1245}, // 278
{-2379.7512,1268.7589,25.0805,273.7579}, // 279
{-2379.9238,1250.3228,28.5127,274.2333}, // 280
{-2380.2056,1232.0701,31.9335,271.2892}, // 281
{-2353.8105,1232.3917,31.8778,86.7880}, // 282
{-2354.3215,1250.2347,28.5201,88.2273}, // 283
{-2353.8940,1268.6464,25.1007,89.3743}, // 284
{-2354.0073,1286.8942,21.7019,87.5239}, // 285
{-2353.6956,1305.1129,18.2929,87.0419}, // 286
{-2354.1831,1323.8278,14.7891,85.8610}, // 287
{-2353.9829,1341.9622,11.3832,89.9204}, // 288
//================= Casas VIPs +2 ======================
{-2363.2434,1116.0197,55.5291,158.6586}, // 289
{-2367.0044,1117.4651,55.5326,160.6361}, // 290
{-2381.2417,1124.0481,55.5306,160.5902}, // 291
{-2390.6143,1127.8716,55.5315,162.1992}, // 292
{-2404.4639,1132.2903,55.5339,164.8923}, // 293
{-2417.3049,1135.2003,55.5302,169.2957}, // 294
{-2420.9524,1135.9573,55.5308,168.8203}, // 295
{-2434.9924,1137.7147,55.5309,175.4632}, // 296
{-2444.6267,1138.3429,55.5328,176.7773}, // 297
{-2458.5237,1138.3372,55.5302,178.8833}, // 298
{-2471.5400,1138.6643,55.5335,179.7592}, // 299
{-2475.3123,1138.5859,55.5307,180.0653}, // 300
{-2489.6953,1138.9043,55.5311,179.6331}, // 301
{-2499.3870,1138.8903,55.5307,179.6613}, // 302
{-2514.0767,1139.0179,55.5289,176.6375}, // 303
{-2527.5134,1140.1271,55.5306,172.8043}, // 304
{-2531.1560,1140.6915,55.5318,173.0048}, // 305
{-2546.2576,1142.3218,55.5305,168.1358}, // 306
{-2557.0557,1144.5436,55.5314,160.3868}, // 307
{-2571.8699,1148.6888,55.5326,155.8724} // 308
};

main()
{
	print(" _______________________________________");
	print("|                                       |");
	print("|»»       Brasil PlayHappy RPG        ««|");
	print("|---------------------------------------|••••");
	print("|»»         RPG versão 2.6a           ««|");
	print("|»»      Los Santos / San Fierro      ««|");
	print("|---------------------------------------|");
	print("|»»         by dimmy_scarface         ««|");
	print("|_______________________________________|");
	print(" ");
}

public SearchingHit(playerid)
{
    new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
    for(new i=0; i<MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
            if(searchhit == 0)
			{
                if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0)
				{
                    GetPlayerName(i, giveplayer, sizeof(giveplayer));
					searchhit = 1;
					hitfound = 1;
					hitid = i;
                    for(new k=0; k<MAX_PLAYERS; k++)
					{
                        if(IsPlayerConnected(k))
						{
                            if(GetPlayerOrg(k) == 8 && FH == 1)
							{
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~> Agencia de Hitmans <~~~~~~~~~~~~~~~~~~~~~~~");
                                SendClientMessage(k, COLOR_DBLUE, "*~*~* Mensagem: Está disponivel um novo contrato! *~*~*");
                                format(string, sizeof(string), "Contrato: %s   ID: %d   Valor: R$%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
                                SendClientMessage(k, COLOR_DBLUE, string);
                                SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para atribuir o contrato a um dos Hitmans.");
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                                FH = 0;
								return true;
                            }
                        }
                    }
                    return 0;
                }
            }
        }
    }
    if(searchhit == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "   Não há contratos disponiveis!");
    }
    return 0;
}

forward SearchingTri(playerid);
public SearchingTri(playerid)
{
    new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	new searchTri = 0;
    for(new i=0; i<MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
            if(searchTri == 0 && FK == 1)
			{
                if(PlayerInfo[i][pHeadValueT] > 0 && GotTri[i] == 0)
				{
                    GetPlayerName(i, giveplayer, sizeof(giveplayer));
					searchTri = 1;
					trifound = 1;
					triid = i;
                    for(new k=0; k<MAX_PLAYERS; k++)
					{
                        if(IsPlayerConnected(k))
                        {
                            if(GetPlayerOrg(k) == 22 && FK == 1)
							{
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~> Agencia dos Triads <~~~~~~~~~~~~~~~~~~~~~~~~~");
                                SendClientMessage(k, COLOR_DBLUE, "*~*~* Mensagem: Está disponivel um novo contrato! *~*~*");
                                format(string, sizeof(string), "Contrato: %s   ID: %d   Valor: R$%d", giveplayer, i, PlayerInfo[i][pHeadValueT]);
                                SendClientMessage(k, COLOR_DBLUE, string);
                                SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para atribuir o contrato a um dos Assassinos.");
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                                FK = 0;
								return true;
                            }
                        }
                    }
                    return 0;
                }
            }
        }
    }
    if(searchTri == 0)
	{
        SendClientMessage(playerid, COLOR_GREY, "   Não há contratos disponiveis!");
    }
    return 0;
}


public ExtortionBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Nenhum");
	if(strcmp(BizzInfo[bizid][bExtortion],gstring, true ) == 0)
	{
        return 0;
    }
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
            new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
                new value = money / 100;
				value = value * 10;
				GivePlayerMoney(i, value);
				BizzInfo[bizid][bTill] -= value;
            }
        }
    }
    return true;
}


public ExtortionSBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Ninguem");
	if(strcmp(SBizzInfo[bizid][sbExtortion],gstring, true ) == 0 )
	{
        return 0;
    }
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
            new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
            if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
				new value = money / 100;
				value = value * 10;
				GivePlayerMoney(i, value);
				SBizzInfo[bizid][sbTill] -= value;
			}
        }
    }
    return true;
}


public SendVIPMessage(color, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
            if(PlayerInfo[i][pVIP] >= 1 && cVIPc[i] == 0)
			{
                SendClientMessage(i, color, string);
            }
        }
    }
}


public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    Controle(playerid, 1);
	new string[128];
	new stringe[128];
    if(dialogid == DIALOG_CAIXA_ELETRONICO)
	{
        CaixaEletronico_Ok[playerid] = 0;
		if(response == 0)
		{
        	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			return true;
		}
  		if(response == 1)
  		{
   			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
   			if(listitem >= 0 && listitem <= 3)
	   		{
	     		if(listitem == 0)
			 	{
				 	CaixaEletronico_Ok[playerid] = 1;
				 	ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Saque","Digite a Quantia que Deseja Sacar:", "Confirma", "Sair");
		 		}
	    		if(listitem == 1)
				{
					CaixaEletronico_Ok[playerid] = 2;
					ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Depósito","Digite a Quantia que Deseja Depositar:", "Confirma", "Sair");
				}
	   			if(listitem == 2)
	   			{
				   	CaixaEletronico_Ok[playerid] = 3;
				   	format(stringe, sizeof(stringe), "Seu saldo é de: %d", PlayerInfo[playerid][pConta]);
				   	ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_MSGBOX, "Informação do Saldo:",stringe, "Confirma", "Sair");
	   			}
	      		if(listitem == 3)
		  		{
				  	CaixaEletronico_Ok[playerid] = 4;
				  	ShowPlayerDialog(playerid, DIALOG_TRANSFERIR, DIALOG_STYLE_INPUT, "   Transferência","Digite o ID de quem receberá o dinheiro transferido:", "Confirma", "Sair");
		  		}
	     	}
	   	}
	}
	
	if(dialogid == 1991)
	{
        if(response == 0) return 1;
        new giver[MAX_PLAYER_NAME],seendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
		if(PlayerInfo[playerid][pCargo] < 4)
		{
		  	SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para dar contrato!");
		  	return 1;
	 	}
	 	new giveplayerid = strval(inputtext);
	 	if(hitfound == 0)
   		{
		   	SendClientMessage(playerid, COLOR_GREY, "   Não ha contratos na agência dos Hitmans, USE contratos em seu laptop primeiro!");
		   	return true;
		}
		if(IsPlayerConnected(giveplayerid))
		{
		    if(GetPlayerOrg(giveplayerid) != GetPlayerOrg(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Esse Jogador não é um Assassino da sua agência!");
				return true;
		   	}
		    if(GoChase[giveplayerid] < 999)
		    {
		      	SendClientMessage(playerid, COLOR_GREY, "   Esse assasino ja possui um contrato!");
				return true;
		  	}
		   	if(IsPlayerConnected(hitid))
		    {
			    GetPlayerName(playerid, seendername, sizeof(seendername));
			    GetPlayerName(giveplayerid, giver, sizeof(giver));
			  	GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
		   		format(string, sizeof(string), "* Assasino %s, deu um contrato para %s matar: %s(ID:%d), por R$%d.", seendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		   		SendFamilyMessage(GetPlayerOrg(playerid), COLOR_YELLOW, string);
		   		GoChase[giveplayerid] = hitid;
		   		GetChased[hitid] = giveplayerid;
		   		GotHit[hitid] = 1;
		   		hitid = 999;
		   		hitfound = 0;
			    return true;
		   	}
		    else
		   	{
		       	SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
		     	return true;
		    }
		}
		else
		{
		   	SendClientMessage(playerid, COLOR_GREY, "   Esse não e um assasino ativo!");
		   	return true;
		}
	}
	
	if(dialogid == 1992)
	{
        if(response == 0) return 1;
		if(PlayerInfo[playerid][pCargo] < 4)
		{
		  	SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para dar contrato!");
		  	return 1;
	 	}
	 	new giveplayerid = strval(inputtext);
		if(trifound == 0)
   		{
		   	SendClientMessage(playerid, COLOR_GREY, "   Não ha contratos na agência dos Triad, USE contratos em seu laptop primeiro!");
		   	return true;
		}
		if(IsPlayerConnected(giveplayerid))
		{
		   	if(GoChase[giveplayerid] < 999)
		    {
			 	SendClientMessage(playerid, COLOR_GREY, "   Esse assasino ja possui um contrato!");
				return true;
			}
		  	if(IsPlayerConnected(triid))
		    {
		   		format(string, sizeof(string), "* Assasino %s, deu um contrato para %s matar: %s(ID:%d), por R$%d.", PlayerName(playerid), PlayerName(giveplayerid), PlayerName(triid), triid, PlayerInfo[triid][pHeadValueT]);
		   		SendFamilyMessage(22, COLOR_YELLOW, string);
		  		GoChase[giveplayerid] = triid;
		   		GetChased[triid] = giveplayerid;
		   		GotTri[triid] = 1;
		   		triid = 999;
		   		trifound = 0;
		      	return true;
		   	}
		   	else
		    {
			    SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
			    return true;
		  	}
		}
		else
		{
		   	SendClientMessage(playerid, COLOR_GREY, "   Esse não e um assasino ativo!");
		   	return true;
		}
	}
	
	if(dialogid == 8888)
	{
	   	if(response == 0)
		{
		    SendClientMessage(playerid, COLOR_DBLUE, "Você tem que escolher uma das opções abaixo!");
		    ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
			    if(NaoPode[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 1;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino a 24-7.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 1;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1346.7188,-1732.3940,13.3906, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 1)
			{
   				if(NaoPode[playerid] == 2)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 2;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino a Prefeitura.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 2;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1486.7031,-1732.5431,13.3828, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 2)
			{
			    if(NaoPode[playerid] == 3)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 3;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino ao restaurante.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 3;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1498.9061,-1591.8199,13.3828, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 3)
			{
			    if(NaoPode[playerid] == 4)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 4;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino a loja de armas 1.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 4;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1789.4310,-1173.4104,23.6518, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 4)
			{
			    if(NaoPode[playerid] == 5)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 5;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino ao banco de LS.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 5;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1465.6827,-1033.9873,23.6563, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 5)
			{
			    if(NaoPode[playerid] == 6)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 6;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino ao Cassino.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 6;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1018.5015,-1144.9186,23.6563, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 6)
			{
			    if(NaoPode[playerid] == 7)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 7;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino a loja de armas 2.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 7;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1061.5659,-1874.6350,13.2288, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 7)
			{
			    if(NaoPode[playerid] == 8)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 8;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino ao aluguel de carros.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 8;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 1242.4274,-1851.4144,13.3828, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 8)
			{
			    if(NaoPode[playerid] == 9)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 9;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino a Pizzaria.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 9;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, 2081.7222,-1809.4294,13.3828, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
			if(listitem == 9)
			{
			    if(NaoPode[playerid] == 10)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "	Você já está no local escolhido, escolha outro para continuar");
			        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
			        return true;
				}
			    NaoPode[playerid] = 10;
				format(string, sizeof(string), "* Motorista de onibus %s sairá em 15 segundos em destino ao Monte Chilliad.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 10;
        		Controle(playerid, 0);
        		SetPlayerCheckpoint(playerid, -2245.0618,-1724.4358,480.3163, 11.0);
        		SetTimerEx("busstoptimer", 15000, false, "i", playerid);
        		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você escolheu o proximo local de parada, e ganhará R$80 ao chegar. Espere 15 segundos para sair.");
				return true;
			}
  			if(listitem == 10)
			{
				format(string, sizeof(string), "* Motorista de onibus %s terminou sua rota.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		CheCks[playerid] = 0;
        		DisablePlayerCheckpoint(playerid);
        		Controle(playerid, 1);
				format(string, sizeof(string), "* Voce terminou sua rota e ganhou R$%d, para fazer outra digite /terminais.", TransportMoney[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerMoney(playerid, TransportMoney[playerid]);
				DisablePlayerCheckpoint(playerid);
				ConsumingMoney[playerid] = 1;
				TransportDuty[playerid] = 0;
				TransportValue[playerid] = 0;
				TransportMoney[playerid] = 0;
				NaoPode[playerid] = 0;
				return true;
			}
		}
	    return true;
	}

    if(dialogid == DIALOG_CAIXA_ELETRONICO_INPUT)
	{
        if(response == 0)
		{
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);CaixaEletronico_Ok[playerid] = 0;return true;
        }
        if(response >= 1)
		{
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			if(CaixaEletronico_Ok[playerid] != 3)
			{
                if(CaixaEletronico_Ok[playerid] == 1)
				{
                    format(stringe, sizeof(stringe), "/sacar %d", strval(inputtext));
					OnPlayerCommandText(playerid,stringe);
                }
                else if(CaixaEletronico_Ok[playerid] == 2)
				{
                    if (strval(inputtext) > GetPlayerMoneyEx(playerid) || strval(inputtext) < 1)
					{
                        CaixaEletronico_Ok[playerid] = 0;
						SendClientMessage(playerid, COLOR_GRAD2, "   Voce  não tem tudo isso na sua conta!");
						return true;
                    }
                    GivePlayerMoneyEx(playerid,-strval(inputtext));
					new curfunds = PlayerInfo[playerid][pConta];
					PlayerInfo[playerid][pConta]=strval(inputtext)+PlayerInfo[playerid][pConta];
                    SendClientMessage(playerid, COLOR_WHITE, "|___| BANCO  INFO |___|");
                    format(string, sizeof(string), "  Saldo: R$%d", curfunds);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    format(string, sizeof(string), "  Deposito: R$%d",strval(inputtext));
                    SendClientMessage(playerid, COLOR_GRAD4, string);
                    SendClientMessage(playerid, COLOR_GRAD6, "|_______________________|");
                    format(string, sizeof(string), "  Novo Saldo: R$%d", PlayerInfo[playerid][pConta]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                }
                else if(CaixaEletronico_Ok[playerid] == 4)
				{
                    if (IsPlayerConnected(TransferenciaID[playerid]))
					{
                        if(TransferenciaID[playerid] != INVALID_PLAYER_ID)
						{
                            if (strval(inputtext) > 0 && PlayerInfo[playerid][pConta] >= strval(inputtext))
							{
                                PlayerInfo[playerid][pConta] -= strval(inputtext);
								PlayerInfo[TransferenciaID[playerid]][pConta] += strval(inputtext);
                                format(string, sizeof(string), "   Voce transferiu R$%d para %s's ", strval(inputtext), PlayerName(TransferenciaID[playerid]),TransferenciaID[playerid]);
								PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD1, string);
                                format(string, sizeof(string), "   Voce recebeu R$%d pela sua conta de %s", strval(inputtext), PlayerName(playerid), playerid);
								SendClientMessage(TransferenciaID[playerid], COLOR_GRAD1, string);
                                format(string, sizeof(string), "%s Transferido R$%d to %s", PlayerName(playerid), strval(inputtext), PlayerName(TransferenciaID[playerid]));
                                if(strval(inputtext) >= 500000)
								{
									ABroadCast(COLOR_YELLOW,string,1);
								}
                                printf("%s", string);PayLog(string);PlayerPlaySound(TransferenciaID[playerid], 1052, 0.0, 0.0, 0.0);
                            }
                            else
							{
                                SendClientMessage(playerid, COLOR_GRAD1, "   Transferencia Invalida!.");
                            }
                        }
                    }
                    else
					{
                        format(string, sizeof(string), "   %d Não esta ativo", TransferenciaID[playerid]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
                    }
                }
            }
            CaixaEletronico_Ok[playerid] = 0;
			return true;
        }
        return true;
    }
    if(dialogid == DIALOG_TRANSFERIR)
	{
        if(response == 0)
		{
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			CaixaEletronico_Ok[playerid] = 0;
			return true;
        }
        if(response >= 1)
		{
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			if(CaixaEletronico_Ok[playerid] == 4)
			{
                PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				TransferenciaID[playerid] = strval(inputtext);
				ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Transferência","Digite a Quantia que Deseja Transferir:", "Confirma", "Sair");
            }
            return true;
        }
        return true;
    }
	if(dialogid == 5566)
	{
    	if(response == 0)
		{
        	SendClientMessage(playerid, COLOR_GRAD1, "Você cancelou o pedido para Novo Carro da sua Casa!");return true;
    	}
    	if(response >= 1)
		{
        	if(listitem == 0)
			{
            	new info[600];
				new info2[100],info3[100],info4[100],info5[100],info6[100],info7[100],info8[100],info9[100],info10[100],info11[100],info12[100],info13[100],info14[100],info15[100],info16[100],info17[100];
	            format(info2,70,"Blista Compact - Carro");
				format(info3,70,"Clover - Carro");
				format(info4,70,"Elegant - Carro");
				format(info5,70,"Emperor - Carro");
				format(info6,70,"Glendale - Carro");
	            format(info7,70,"Greenwood - Carro");
				format(info8,70,"Huntley - Carro");
				format(info9,70,"Jester - Carro");
				format(info10,70,"Landstalker - Carro");
				format(info11,70,"Merit - Carro");
	            format(info12,70,"Nebula - Carro");
				format(info13,70,"Sabre - Carro");
				format(info14,70,"Stratum - Carro");
				format(info15,70,"Sunrise - Carro");
				format(info16,70,"Tahoma - Carro");
				format(info17,70,"Uranus - Carro");
	            format(info,600,"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",info2,info3,info4,info5,info6,info7,info8,info9,info10,info11,info12,info13,info14,info15,info16,info17);
	            ShowPlayerDialog(playerid,5567,DIALOG_STYLE_LIST,"Por Favor escolha o seu Carro Free:",info,"Escolher","Sair");
				return true;
        	}
        	if(listitem == 1)
			{
	            new info[600];
				new info2[100],info3[100],info4[100],info5[100],info6[100],info7[100],info8[100],info9[100],info10[100],info11[100],info12[100],info13[100];
	            format(info2,70,"Stretch - Carro");
				format(info3,70,"Elegy - Carro");
				format(info4,70,"Phoenix - Carro");
				format(info5,70,"Hotknife - Carro");
	            format(info6,70,"Bandito - Carro");
				format(info7,70,"Sultan - Carro");
				format(info8,70,"NRG-500 - Moto");
				format(info9,70,"Bullet - Carro");
	            format(info10,70,"Cheetah - Carro");
				format(info11,70,"Infernus - Carro");
				format(info12,70,"Buffalo - Carro");
				format(info13,70,"Turismo - Carro");
	            format(info,600,"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",info2,info3,info4,info5,info6,info7,info8,info9,info10,info11,info12,info13);
	            ShowPlayerDialog(playerid,5568,DIALOG_STYLE_LIST,"Por Favor escolha o seu Carro VIP:",info,"Escolher","Sair");
				return true;
	        }
	        return true;
	    }
	}


	if(dialogid == 5567)
	{
    	if(response == 0)
		{
        	return true;
    	}
    	if(response >= 1)
		{
        	if(listitem == 0)
			{
            	OnPlayerCommandText(playerid,"/comprarcarrovsfth blistac");
				return true;
       	 	}
	        if(listitem == 1)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth clover");
				return true;
	        }
	        if(listitem == 2)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth elegant");
				return true;
	        }
	        if(listitem == 3)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth emperor");
				return true;
	        }
	        if(listitem == 4)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth glendale");
				return true;
	        }
	        if(listitem == 5)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth greenwood");
				return true;
	        }
	        if(listitem == 6)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth huntley");
				return true;
	        }
	        if(listitem == 7)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth jester");
				return true;
	        }
	        if(listitem == 8)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth landstalker");
				return true;
	        }
	        if(listitem == 9)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth merit");
				return true;
	        }
	        if(listitem == 10)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth nebula");
				return true;
	        }
	        if(listitem == 11)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth sabre");
				return true;
	        }
	        if(listitem == 12)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth stratum");
				return true;
	        }
	        if(listitem == 13)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth sunrise");
				return true;
	        }
	        if(listitem == 14)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth tahoma");
				return true;
	        }
	        if(listitem == 15)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth uranus");
				return true;
	        }
	        return true;
	    }
	}


	if(dialogid == 5568)
	{
    	if(response == 0)
		{
        	return true;
    	}
    	if(response >= 1)
		{
        	if(listitem == 0)
			{
            	OnPlayerCommandText(playerid,"/comprarcarrovsfth limozine");
				return true;
        	}
	        if(listitem == 1)
		 	{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth elegy");
				return true;
	        }
	        if(listitem == 2)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth phoenix");
				return true;
	        }
	        if(listitem == 3)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth hotknife");
				return true;
	        }
	        if(listitem == 4)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth bandito");
				return true;
	        }
	        if(listitem == 5)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth sultan");
				return true;
	        }
	        if(listitem == 6)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth nrg500");
				return true;
	        }
	        if(listitem == 7)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth bullet");
				return true;
	        }
	        if(listitem == 8)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth cheetah");
				return true;
	        }
	        if(listitem == 9)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth infernus");
				return true;
	        }
	        if(listitem == 10)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth buffalo");
				return true;
	        }
	        if(listitem == 11)
			{
	            OnPlayerCommandText(playerid,"/comprarcarrovsfth turismo");
				return true;
	        }
	        return true;
	    }
	}


	if(dialogid == 9282)
	{
    	if(IsPlayerConnected(PedirAvaliar[playerid]))
		{
        	if(response >= 1)
			{
	            SendClientMessage(playerid, COLOR_GRAD2, "Obrigado pela sua Avaliação Positiva!");
	            SendClientMessage(PedirAvaliar[playerid], COLOR_LIGHTBLUE, "Você foi avaliado positivamente!");
				PlayerInfo[PedirAvaliar[playerid]][pHelper] += 1;
				return true;
	        }
	        if(response == 0)
			{
	            SendClientMessage(playerid, COLOR_GRAD2, "Você avaliou o Helper Negativamente!");
	            SendClientMessage(PedirAvaliar[playerid], COLOR_LIGHTRED, "Você foi avaliado negativamente!");
				return true;
	        }
	    }
	    return true;
	}

	if(dialogid == 10101)
	{
	    if(PlayerToPoint(2.0,playerid,963.7944,-933.7776,41.9256))
		{
	        new Float:X;
			new Float:Y;
			new Float:Z;
			new Float:angle;
			if(GetPlayerMoneyEx(playerid) < 100) return SendClientMessage(playerid,COLOR_GREY,"{FFFFFF}[{CD96E3}D.E.T.R.A.N{FFFFFF}]: Você não tem R$100 para mudar sua placa.");
	        if(strlen(inputtext) < 1 || strlen(inputtext) > 8) return SendClientMessage(playerid, 0xAFAFAFAA, "{FFFFFF}[{CD96E3}D.E.T.R.A.N{FFFFFF}]: Texto Invalido.");
			else
			{
	            format(string, sizeof(string), "{FFFFFF}[{CD96E3}D.E.T.R.A.N{FFFFFF}]: Você alterou o nome da placa do seu veiculo para \'%s\' e pagou R$100", inputtext);
	            SendClientMessage(playerid, 0x33CCFFAA, string);
				GetPlayerPos(playerid, X, Y, Z);
	            GetPlayerFacingAngle(playerid, angle);
				GivePlayerMoneyEx(playerid,-100);
				SetVehicleNumberPlate(GetPlayerVehicleID(playerid), inputtext);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				GetPlayerPos(playerid, X, Y, Z);
	            SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
				PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
				SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z+2);
	        }
	    }
	    else
		{
	        SendClientMessage(playerid, COLOR_WHITE, "Você Não Está no D.E.T.R.A.N !");return true;
	    }
	}


	if(dialogid == 5024)
	{
	    if(response == 1)
		{
	        OnPlayerCommandText(playerid,"/desalugarcarro");
			Controle(playerid, 1);
			SendClientMessage(playerid, COLOR_GRAD1, "Veiculo desalugado");
			RemovePlayerFromVehicle(playerid);
			return 0;
	    }
	    else if(response == 0)
		{
	        RemovePlayerFromVehicle(playerid);
			Controle(playerid, 1);
			return 0;
	    }
	    return 0;
	}


	if(dialogid == 642)
	{
	    if(response == 0)
		{
	    }
	    if(response == 1)
		{
	        OnPlayerCommandText(playerid,"/aceitar convite");
			ShowPlayerDialog(playerid, 643, DIALOG_STYLE_MSGBOX, "Escolha Sua Skin", "{0FF768}Proximo: {F7D40F}Para trocar sua skin.\n{0FF768}Confirmar: {F7D40F}Para confirmar sua skin.", "Confirmar", "Próximo");
	    }
	    return true;
	}


	if(dialogid == 643)
	{
	    if(response == 0)
		{
	        OnPlayerText(playerid,"proximo ");
			ShowPlayerDialog(playerid, 643, DIALOG_STYLE_MSGBOX, "Escolha Sua Skin", "{0FF768}Proximo: {F7D40F}Para trocar sua skin.\n{0FF768}Confirmar: {F7D40F}Para confirmar sua skin.", "Confirmar", "Próximo");
	    }
	    if(response == 1)
		{
	        OnPlayerText(playerid,"Confirma");
	    }
	    return true;
	}


	if(dialogid == 510)
	{
	    if(response)
		{
	    if(listitem == 0)
		{
	            ShowPlayerDialog(playerid, 5115, DIALOG_STYLE_LIST, "Marque a resposta certa:", "a- Andar com o veículo no lado esquerdo\nb- Andar com o veículo no lado direito\nc- Atropelar todos pela frente\nd- Beber e dirigir", "Confirmar", "Cancelar");
	        }
	    }
	    return true;
	}


	if(dialogid == 5115)
	{
	    if(response)
		{
	        if(listitem == 0)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 1)
			{
	            ShowPlayerDialog(playerid, 5116, DIALOG_STYLE_LIST, "O sinal verde significa ?", "a- Pare\nb- Atencao\nc- Siga em Frente\nd- Significa nada", "Confirmar", "Cancelar");
	        }
	        if(listitem == 2)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 3)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	    }
	    return true;
	}


	if(dialogid == 5116)
	{
	    if(response)
		{
	        if(listitem == 0)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 1)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 2)
			{
	            ShowPlayerDialog(playerid, 5117, DIALOG_STYLE_LIST, "O sinal azul significa ?", "a- Atencao\nb- Pare\nc- Siga em Frente\nd- Significa nada", "Confirmar", "Cancelar");
	        }
	        if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
			}
	    }
	    return true;
	}


	if(dialogid == 5117)
	{
	    if(response)
		{
	        if(listitem == 0)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 1)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 2)
			{
	            SendClientMessage(playerid, COLOR_WHITE, " Você errou ou cancelou a Prova.");
	        }
	        if(listitem == 3)
			{
	            GivePlayerMoney(playerid,-600);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você passou na Prova e adquiriu sua carteira de motorista -R$600!");
				PlayerInfo[playerid][pCarLic] = 1;
	        }
	    }
	    return true;
	}


	if(dialogid == DIALOG_ANUNCIO)
	{
	    if(response == 0)
		{
	        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);return true;
	    }
	    if(response == 1)
		{
	        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			if(listitem >= 0 && listitem <= 10)
			{
	            if(listitem == 0)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 56");
	            }
	            if(listitem == 1)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 1");
	            }
	            if(listitem == 2)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 111");
	            }
	            if(listitem == 3)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 31");
	            }
	            if(listitem == 4)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 112");
	            }
	            if(listitem == 5)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 113");
	            }
	            if(listitem == 6)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 114");
	            }
	            if(listitem == 7)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 115");
	            }
	            if(listitem == 8)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 116");
	            }
	            if(listitem == 9)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 117");
	            }
	            if(listitem == 10)
				{
	                OnPlayerCommandText(playerid,"/an_2_input 118");
	            }
	            return true;
	        }
	        else
			{
	            OnPlayerCommandText(playerid,"/an_2_input 119");
				return true;
	        }
	    }
	}

	if(dialogid == EVENTOC)
	{
	    if(response == 0)
		{
	        SendClientMessage(playerid, COLOR_DBLUE, "Ok, você não quis ir ao Local");return true;
	    }
	    if(response >= 1)
		{
	        if(PlayerInfo[playerid][pJailed] >= 1)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Você está preso e por isso não poderá ir ao Local");
				return true;
	        }
	        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Obrigado por comparecer");
	        XXAirBreak[playerid] += 3;SetPlayerPos(playerid,ex,ey,ez);
	        return true;
	    }
	    return true;
	}

	if(dialogid == cPergunta)
	{
		if(response)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					ShowPlayerDialog(i, cVotacao, DIALOG_STYLE_MSGBOX, "{E31919}» {00FFFF}Votação: {E31919}«",inputtext,"Saim","Não");
				}
			}
		}
	}

	if(dialogid == RADIOMP3)
   	{
    	if(response)
    	{
    		switch(listitem)
    		{
   	 			case 0:
        	   	{
                   	StopAudioStreamForPlayer(playerid);
                    PlayAudioStreamForPlayer(playerid, "https://dl.dropbox.com/u/84351048/Musicas/If%20It%20Means%20A%20Lot%20To%20You%20-Michael%20Henry%20and%20Justin%20Robinett%20with%20Lyrics.mp3");//Evanescence
					//PlayAudioStreamForPlayer(playerid, "http://crowell.typepad.com/squidbag/files/11_bring_me_to_life.mp3");//Evanescence
        	    	}
        	   	case 1:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, "http://9d.media.v4.skyrock.net/music/9d2/100/9d21001e7b9593345795f71fbc4abade.mp3");//Evanescence My Immortal
        	   	}
        	   	case 2:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, "http://m.rugame.mobi/mg/2f18c485b5d3efbd4f8f3afea1422ece/Alexandra_Stan_-_Mr_Saxobeat_Original_Mix_-_rugame_mobi.mp3");//mr exazobeat
        	   	}
        	   	case 3:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, "http://blitzdosucesso.com.br/songs/luan-santana-amar-nao-e-pecado.mp3");//cobra
        	   	}
        	   	case 4:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://cdn05.cdn.justjared.com/wp-content/uploads/audio/demi-lovato-skyscraper.mp3");//lazy
        	   	}
        	   	case 5:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://gnxmusic.com/remixes/In_Da_Club_GNX_Remix.mp3");//50 cent
        	   	}
        	   	case 6:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://3e.media.v4.skyrock.net/music/3e9/64c/3e964c72ea1898edffb9fa03dcde7c0b.mp3");//little bad girld
       	    	}
       	    	case 7:
        	   	{
       	   			StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://acquiescetomusic.files.wordpress.com/2009/08/17-eminem-beautiful.mp3");//Eminem - Beautiful
       	    	}
                case 8:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	      	PlayAudioStreamForPlayer(playerid, "http://74.media.v4.skyrock.net/music/74d/a82/74da82b760f1d01c377127123a8af9af.mp3");//Gun's Roses
       	    	}
                case 9:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
        	      	PlayAudioStreamForPlayer(playerid, "http://fileden.com/files/2011/4/9/3112417/R-CB%20-Bday.mp3");//Rihanna ft chris brow
       	    	}
                case 10:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://theincitefullife.com/wp-content/uploads/2011/03/Young-Wild-And-Free-feat-snoop-dogg.mp3");//snoop dogg ft wizz califa
       	    	}
                case 11:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://tklx.net/music/Adele/21/05%20-%20Adele%20-%20Set%20Fire%20To%20The%20Rain.mp3");//Adele rain
       	    	}
                case 12:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://pmd.thebounce.ca/audio/travis/Lady%20GaGa%20-%20Marry%20The%20Night%20%5BNEW%20EXCLUSIVE%20HD%20FULL%202011%5D.mp3");//lady gaga
       	    	}
                case 13:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://muzmo.ru/music/20111202/1521640.mp3");//florida good filling
       	    	}
                case 14:
        	   	{
        	       	StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://pds2.egloos.com/pds/200611/01/05/08%20-%20ln%20the%20end.mp3");//link park
       	    	}
                case 15:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	   		PlayAudioStreamForPlayer(playerid, "http://kickkicksnare.com/wp-content/uploads/2010/05/Like-a-G6-Ft.-The-Cataracs-Dev.mp3");//like a g6
       	    	}
                case 16:
        	   	{
        	   		StopAudioStreamForPlayer(playerid);
        	     	PlayAudioStreamForPlayer(playerid, "http://medicinefilms.com/videos/193725.mp3");//beyonce - diva
       	    	}
				case 17:
   				{
        	   		StopAudioStreamForPlayer(playerid);
				}
        	}
     	}
	}

//==========================================================================================
 	if(dialogid == DIALOGID)
	{
		if(response)
		{
			if(listitem == 0) //Cores
			{
				ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 1) //Rodas
			{
				ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 2) //Volume do rádio
			{
				ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Selecione o Volume do Rádio", "Alto\nSuper Alto\nUltra Alto\nKing Alto\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 3) //Tunar meenu do carro
			{
				ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Tunar carro", "Suspenção\nNitro x10\nArrumar o Carro\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 4) //Rodas 2
			{
				ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
			}
       }
	}

	if(dialogid == DIALOGID+1) //Cores
    {
		if(response)
		{
			if(listitem == 0)
			{
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,0,0);//Preto
		            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_YELLOW,"•|SERVER|•: Você Pintou seu carro de Preto.");
		            ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 1)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,1,1);//Branco
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Branco.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 2)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,3,3);//Vermelho
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Vermelho.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 3)
			{
			        new car = GetPlayerVehicleID(playerid);
		 	        ChangeVehicleColor(car,79,79); //Azul
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Azul.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 4)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,86,86);//Verde
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Verde.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 5)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,6,6);//Amarelo
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Amarelo.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");

			}
			if(listitem == 6)
           {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);//Rosa
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Rosa.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 7)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,66,66);//Marrom
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,COLOR_YELLOW,"Server: Você Pintou seu carro de Marrom.");
			        ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Selecione a Cor", "Preto\nBranco\nVermelho\nAzul\nVerde\nAmarelo\nRosa\nMarrom\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 8)
			{
        		    ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, "Tunar carro","Cores\nRodas\nVolume do Carro\nTunar Carro", "Selecionar", "Sair");
            }
		}
    }

    if(dialogid == DIALOGID+2)//Rodas
    {
		if(response)
		{
			if(listitem == 0)//Offroad
			{
                 new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1025);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                 SendClientMessage(playerid,COLOR_YELLOW,"Server Você adicionou Offroad Rodas.");
	             ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
	        }
            if(listitem == 1)//Mega
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1074);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Rodas Mega.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
            if(listitem == 2)//Wires
			{
                 new car = GetPlayerVehicleID(playerid);
	             AddVehicleComponent(car,1076);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Wires Rodas.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
	        if(listitem == 3)//Twist
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1078);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Twist Rodas.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 4)//Groove
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1081);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Groove Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 5)//Import
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1082);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			     SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Import Rodas.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 6)//Atomic
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1085);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Atomic Rodas.");
                 ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 7)//Ahab
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1096);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          	 SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Ahab Rodas.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 8)//Virtual
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1097);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	           	 SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Virtual Rodas");
                 ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 9)//Access
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1098);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	         	 SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Access Rodas.");
			     ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 10)//Proxima página (meenu de rodas 2)
			{
                 ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 11)//Voltar
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, "Tunar carro","Cores\nRodas\nVolume do Carro\nTunar Carro", "Selecionar", "Sair");
            }

		}
    }
    if(dialogid == DIALOGID+3)//Volume do rádio
    {
		if(response)
		{
			if(listitem == 0)//Alto
			{
                 new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Volume Alto sistema.");
		         ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Selecione o Volume do Rádio", "Alto\nSuper Alto\nUltra Alto\nKing Alto\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 1)//Super Alto
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Volume Super Alto sistema.");
		         ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Selecione o Volume do Rádio", "Alto\nSuper Alto\nUltra Alto\nKing Alto\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 2)//Ultra Alto
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Volume Ultra Alto sistema.");
		         ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Selecione o Volume do Rádio", "Alto\nSuper Alto\nUltra Alto\nKing Alto\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 3)//King Alto
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Volume King Alto sistema.");
		         ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Selecione o Volume do Rádio", "Alto\nSuper Alto\nUltra Alto\nKing Alto\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 4)//Voltar
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, "Tunar carro","Cores\nRodas\nVolume do Carro\nTunar Carro", "Selecionar", "Sair");
            }
		}
    }
    if(dialogid == DIALOGID+4)//Tunar carro 2
    {
		if(response)
		{
			if(listitem == 0)//Suspenção
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1087);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server:Você adicionou Suspenção para o carro.");
		         ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Tunar carro", "Suspenção\nNitro x10\nArrumar o Carro\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 1)//Nitro x10
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1010);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Nitro 10x de carro.");
		         ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Tunar carro", "Suspenção\nNitro x10\nArrumar o Carro\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 2)//Reparar carro
			{
		         new car = GetPlayerVehicleID(playerid);
		         RepairVehicle(car);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você tem reparado com êxito carro.");
		         ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Tunar carro", "Suspenção\nNitro x10\nArrumar o Carro\nVoltar", "Selecionar", "Sair");
			}
			if(listitem == 3)//Voltar
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, "Tunar carro","Cores\nRodas\nVolume do Carro\nTunar Carro", "Selecionar", "Sair");
            }
		}
 	}
    if(dialogid == DIALOGID+5)
    {
		if(response)
		{
			if(listitem == 0)//Trance
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1084);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Trance Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 1)//Shadow
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1073);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Shadow Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 2)//Rimshine
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1075);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Rimshine Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 3)//Classic
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1077);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Classic Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 4)//Cutter
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1079);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Cutter Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 5)//Switch
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1080);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Switch Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 6)//Dollar
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1083);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,"Server: Você adicionou Dollar Rodas.");
		         ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Selecione o tipo da Roda", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\nVoltar", "Selecionar", "Sair");
            }
            if(listitem == 7)//Voltar
            {
		         ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Selecione o Tipo da Roda", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\nProxima Página\nVoltar", "Selecionar", "Sair");
            }
		}
	}

    if(dialogid == 5025)
    {
		if(response == 1)
		{
              OnPlayerCommandText(playerid,"/desalugarheli");
              Controle(playerid, 1);
              SendClientMessage(playerid, COLOR_GRAD1, "Helicoptero desalugado");
              RemovePlayerFromVehicle(playerid);
	          return 0;
	    }
		else if(response == 0)
		{
              RemovePlayerFromVehicle(playerid);
			  Controle(playerid, 1);
	          return 0;
        }
        return 0;
    }
    if(dialogid == DIALOG_ALUGAR)
    {
		if(response == 1)
		{
              OnPlayerCommandText(playerid,"/alugarcarro");
              Controle(playerid, 1);
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_GRAD1, "Você optou por não alugar");
			  Controle(playerid, 1);
			  RemovePlayerFromVehicle(playerid);
	          return 0;
        }
        return 0;
	}
	
    if(dialogid == DIALOG_ALUGAR2)
	{
		if(response == 1)
		{
              OnPlayerCommandText(playerid,"/alugarheli");
              Controle(playerid, 1);
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_GRAD1, "Você optou por não alugar");
			  Controle(playerid, 1);
			  RemovePlayerFromVehicle(playerid);
	          return 0;
        }
        return 0;
	}
 	if(dialogid == 2624)
	{
		if(response == 1)
		{
              OnPlayerCommandText(playerid,"/veiculo comprar");
              Controle(playerid, 1);
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_GREY, "Você optou por não comprar o veiculo");
			  Controle(playerid, 1);
			  RemovePlayerFromVehicle(playerid);
	          return 0;
        }
        return 0;
	}
    if(dialogid == 1)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você optou por não logar e foi kickado, volte sempre!");
            Kick(playerid);
            return true;
        }
        if(response >= 1)
		{
	  		if(strlen(inputtext) == 0)
			{
				SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
				SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
				SetPlayerInterior(playerid, 0);
				format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
		        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
				TextDrawShowForPlayer(playerid, entrada);
		    	TextDrawShowForPlayer(playerid, entrada2);
				return true;
	        }
	        format(gstring,sizeof(gstring),"/logar %s",inputtext);
	        OnPlayerCommandText(playerid,gstring);
	        return true;
        }
        return true;
    }

    if(dialogid == DIALOGID2)
	{
        if(response)
		{
            if(listitem == 0)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                PlayerInfo[playerid][pLuta] = 1;
            }
            if(listitem == 1)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                PlayerInfo[playerid][pLuta] = 2;
            }
            if(listitem == 2)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                PlayerInfo[playerid][pLuta] = 3;
            }
            if(listitem == 3)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                PlayerInfo[playerid][pLuta] = 4;
            }
            if(listitem == 4)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                PlayerInfo[playerid][pLuta] = 5;
            }
            if(listitem == 5)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                PlayerInfo[playerid][pLuta] = 6;
            }
        }
        return true;
    }
    if(dialogid == 2)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você optou por não logar e foi kickado, volte sempre!");
			Kick(playerid);
			return true;
        }
        if(response >= 1)
		{
            if(strlen(inputtext) == 0)
			{
				//PlayerPlaySoundd(playerid, 1185, 0.0, 0.0, 0.0);
				SetPlayerCameraPos( playerid, 1425.6246, -912.0739, 84.8901 );
				SetPlayerCameraLookAt( playerid, 1424.7957, -902.5995, 81.8000 );
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1446.6510,-807.7561,84.2902);
				SetPlayerInterior(playerid, 0);
				format(gstring,128,"*** Bem vindo %s ***\n*** Você não esta registrado no servidor ***\n*** Digite uma senha para registrar-se ***",PlayerName(playerid));
	            ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Registrando...",gstring, "Registrar", "Sair");
    			TextDrawShowForPlayer(playerid, entrada);
    			TextDrawShowForPlayer(playerid, entrada2);
				return true;
            }
            format(gstring,sizeof(gstring),"/registrar %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
            return true;
        }
        return true;
    }


    if(dialogid == 900)
	{
		if(response == 1)
		{
  			GameTextForPlayer(playerid, "~y~regras basicas", 8000, 6);
  			ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Regras Basicas", "Nunca desrespeite um adminnistrador ou helper.\n\n\nNão abuse da boa vontade de nossos admins e helpers.\n\n\nNão peça admin ou helper.\n\n\nNão cometa DM, DB, não abuse de BUG's, e nunca use xiter.", "Avançar", "Cancelar");
     		return 0;
	    }
		else if(response == 0)
		{
  			Kick(playerid);
     		return 0;
	    }
	    return 0;
	}

    if(dialogid == 904)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
		    PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	XXAirBreak[playerid] += 3;
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
	    	GameTextForPlayer(playerid, "~y~Inicio", 8000, 6);
			format(string,sizeof(string),"Oii %s, Seja muito bem vindo ao Brasil PlayHappy [RPG v1.0a]\n",PlayerName(playerid));
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPreste muita atenção neste tutorial para que não tome futuras punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que esta será a ultima vez que você verá este tutorial no jogo\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIntão preste o maximo de atenção pois é muito importante ler todo o tutorial\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEste tutorial tambem te ajudará a a entender melhor a jogabilidade do servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE não pule o tutorial rapidamente por favor, e seja atento em tudo que ler neste tutorial\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "Inicio:", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
	    	Kick(playerid);
		    return 0;
	    }
	    return 0;
	}

    if(dialogid == 905)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "~y~Contas VIP e VIP-POWER", 8000, 6);
			format(string,sizeof(string),"Neste servidor você poderá ser jogador VIP ou VIP-POWER\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPagando mensalmente você poderá adquirir VIP/VIP-POWER com varios benefícios\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê poderá ser jogador VIP pagando apenas R$10.00 (10 reais) por mes\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê poderá ser jogador VIP-POWER pagando apenas R$20.00 (20 reais) por mes\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que VIP e VIP-POWER tem suas diferenças, ou seja VIP-POWER terá mais beneficios que VIP\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE qualquer atraso mensal terá um praso de 5 dias para colocar seu VIP/VIP-POWER em dia\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\ncaso contrario terá todos seus beneficios retirados por um admin MASTER+\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara saber mais informações sobre conta VIP/VIP-POWER entre em contato com nossos admins\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOu visite nosso forum para mais informações: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "Contas VIPs:", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
		else if(response == 0)
		{
	    	Kick(playerid);
	    	return 0;
	    }
	    return 0;
	}

 	if(dialogid == 906)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
	        PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "~p~Admins e Helpers", 8000, 6);
			format(string,sizeof(string),"Neste servidor terá admins e helpers para te ajudar sempre que for necessário\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOs admins e Helper são aqueles que vão te ajudar na hora em que você estiver com duvidas\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQualquer tipo de duvidas não deixe de perguntar a eles, sempre estarão dispostos a ajudar com maior disposição\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQuando tiver duvidas em relação ao servidor, fale com um Helper usando /helpers\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQuando for relatar algo,EX: DM(Matar sem motivo) fale com os administradores online usando /relatorio\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe você ver xiter, DM, DB, etc. Tambem relate aos administradores online\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca xingue um admin/Helper, eles estão fazendo o melhor para que seu futuro no servidor seja bom\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca peça admin ou Helper, isso se conquista e nada se ganha de mão beijada, Lute que um dia você será\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que todo mes terá recrutamento de Helpers em nosso Forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 907,DIALOG_STYLE_MSGBOX,"Admins/Helpers", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2670.9389, 2247.6401, 58.4891 );
			SetPlayerCameraLookAt( playerid, -2662.2788, 2252.6401, 53.7944 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2671.5085,2242.1946,57.8891);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
		    PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	XXAirBreak[playerid] += 3;
	    	GameTextForPlayer(playerid, "~y~Inicio", 8000, 6);
			//PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			format(string,sizeof(string),"Oii %s, Seja muito bem vindo ao Brasil PlayHappy [RPG v1.0a]\n",PlayerName(playerid));
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPreste muita atenção neste tutorial para que não tome futuras punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que esta será a ultima vez que você verá este tutorial no jogo\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIntão preste o maximo de atenção pois é muito importante ler todo o tutorial\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEste tutorial tambem te ajudará a a entender melhor a jogabilidade do servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE não pule o tutorial rapidamente por favor, e seja atento em tudo que ler neste tutorial\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "Inicio:", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
	   	return 0;
	}

    if(dialogid == 907)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "Organizacoes", 8000, 6);
			format(string,sizeof(string),"No Brasil PlayHappy terá varias organizações/gangs que você poderá entrar\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nTerá orgs/gangs com Lideres e Sub-Lideres que você poderá fazer o teste\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nterá organizações do governo, terroristas, gangs e muito mais..\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara você entrar em uma delas, você terá que fazer um teste com um Lider/Sub-Lider online\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara ver os Lideres/Sub-Lideres online, USE: /lideres e /sublideres\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê terá que saber o manual de cada organizaççao feito pelo Lider da org\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOs manuais das orgs se encontra em nosso forum, em uma área propria para organizações\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nO Lider tem a função de convidar, demitir, promover, rebaixar membros de sua org\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nO Sub-Lider tem quase os mesmos direitos que o Lider, pode convidar e demitir membros\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSempre lembrando que cada organização terá direito a 5 cargos 5, e 2 sub-lideres\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nFique sempre atento a atualizações de regras em nosso forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "Organizações", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2870.0090,272.1401,5.6831);
		    SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
		    PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~Contas VIP e VIP-POWER", 8000, 6);
			format(string,sizeof(string),"Neste servidor você poderá ser jogador VIP ou VIP-POWER\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPagando mensalmente você poderá adquirir VIP/VIP-POWER com varios benefícios\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê poderá ser jogador VIP pagando apenas R$10.00 (10 reais) por mes\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê poderá ser jogador VIP-POWER pagando apenas R$20.00 (20 reais) por mes\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que VIP e VIP-POWER tem suas diferenças, ou seja VIP-POWER terá mais beneficios que VIP\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE qualquer atraso mensal terá um praso de 5 dias para colocar seu VIP/VIP-POWER em dia\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\ncaso contrario terá todos seus beneficios retirados por um admin MASTER+\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara saber mais informações sobre conta VIP/VIP-POWER entre em contato com nossos admins\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOu visite nosso forum para mais informações: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "Contas VIPs:", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
	    return 0;
	}

 	if(dialogid == 908)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "~y~Sobre RPG", 8000, 6);
			format(string,sizeof(string),"Neste servidor somos rigorosos em relação a RPG, intão seja o mais RPG possível\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nAah..Mais o que é RPG?\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nRPG é a simulação da vida real, intão não faça oque você não faia na vida real\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE para cada ato Anti-RPG, terá suas devidas punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPunições como: aviso, kick, cadeia e Ban, sempre que não souber se um ato é ant-RPG ou não\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPergunte a um admin ou Helper online, se não tiver nenhum, pergunte a um policial.\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNão saia matando qualquer um que ver pela rua, isso não é nada RPG\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCada Player que for pego cometendo atos Ant-RPG irá ser avisado, se persistir\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nserá kickado, e se continuar poderá levar cadeia ou dependendo do caso poderá ser banido\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que nossos admins estão atento a atos ant-RPG, por isso seja o mais RPG possível\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nFique sempre atento a atualizações de regras em nosso forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Sobre o RPG", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~p~Admins e Helpers", 8000, 6);
			format(string,sizeof(string),"Neste servidor terá admins e helpers para te ajudar sempre que for necessário\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOs admins e Helper são aqueles que vão te ajudar na hora em que você estiver com duvidas\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQualquer tipo de duvidas não deixe de perguntar a eles, sempre estarão dispostos a ajudar com maior disposição\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQuando tiver duvidas em relação ao servidor, fale com um Helper usando /helpers\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQuando for relatar algo,EX: DM(Matar sem motivo) fale com os administradores online usando /relatorio\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe você ver xiter, DM, DB, etc. Tambem relate aos administradores online\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca xingue um admin/Helper, eles estão fazendo o melhor para que seu futuro no servidor seja bom\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca peça admin ou Helper, isso se conquista e nada se ganha de mão beijada, Lute que um dia você será\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que todo mes terá recrutamento de Helpers em nosso Forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 907,DIALOG_STYLE_MSGBOX,"Admins/Helpers", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2670.9389, 2247.6401, 58.4891 );
			SetPlayerCameraLookAt( playerid, -2662.2788, 2252.6401, 53.7944 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2671.5085,2242.1946,57.8891);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
	    return 0;
	}

	if(dialogid == 909)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "~y~Empregos", 8000, 6);
			format(string,sizeof(string),"Neste servidor você poderá ter empregos secundários\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIsso deve ser umas das primeiras coisas que você tem que fazer no servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê deve encaminhar-se até a prefeitura de sua cidade e adquirir seu emprego\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara saber onde fica as prefeituras de cada cidade existe um comando que o guiará: /GPS\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nChegando lá, você verá um ícone de maleta, você aperte a letra F e verá o menu de empregos\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCada emprego uma vez adquirido terá um praso de 5 horas para poder pegar outro novamente\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara sair de seu emprego atual você USE: /sairdoemprego (cumprida as 5 horas de contrato)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPlayers VIP/VIP-POWER teram 2 horas de contratos com empregos, isso é mais um beneficio VIP\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCaso você pegar um emprego errado acidentalmente, fale com um admin nivel 4+ para resolver seu caso\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "Empregos secundarios:", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "Organizacoes", 8000, 6);
			format(string,sizeof(string),"No Brasil PlayHappy terá varias organizações/gangs que você poderá entrar\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nTerá orgs/gangs com Lideres e Sub-Lideres que você poderá fazer o teste\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nterá organizações do governo, terroristas, gangs e muito mais..\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara você entrar em uma delas, você terá que fazer um teste com um Lider/Sub-Lider online\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara ver os Lideres/Sub-Lideres online, USE: /lideres e /sublideres\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê terá que saber o manual de cada organizaççao feito pelo Lider da org\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nOs manuais das orgs se encontra em nosso forum, em uma área propria para organizações\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nO Lider tem a função de convidar, demitir, promover, rebaixar membros de sua org\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nO Sub-Lider tem quase os mesmos direitos que o Lider, pode convidar e demitir membros\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSempre lembrando que cada organização terá direito a 5 cargos 5, e 2 sub-lideres\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nFique sempre atento a atualizações de regras em nosso forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "Organizações", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2870.0090,272.1401,5.6831);
		    SetPlayerInterior(playerid, 0);
			return 0;
	    }
	    return 0;
	}

    if(dialogid == 910)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
			GameTextForPlayer(playerid, "~y~Lugares neutros", 8000, 6);
			format(string,sizeof(string),"Neste servidor terá varios lugares neutros onde não poderão ocorrer nenhum tipo de confronto\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe for pego um confronto entre gangs/orgs nestes locais neutros terá punição para cada player\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCaso alguem que estiver fugindo, e correr para um destes locais, tire uma SS comprovando\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE termine o confronto normalmente, caso ele denunciar, você terá cntra-provas, e o denunciante\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nterá uma pena de 180 minutos de cadeia pelo motivo de forjar denuncia, por isso sempre tire SS\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE estes são os locais neutros das cidades Los Santos e San Fierro\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\n\nLoja de Armas: (Apenas no interior da Loja)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPrefeitura: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nDelegacia de policia: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nLoja 24/7: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nBanco: (Apenas no Interior do banco)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nCadeia de administrador\n");
			strcat(DialogInfoorg,string);
	  		format(string,sizeof(string),"\nRespawn Civil: (onde novatos e civis nascem)\n");
			strcat(DialogInfoorg,string);
	  		format(string,sizeof(string),"\nEventos de administradores\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 914, DIALOG_STYLE_MSGBOX, "Lugares neutros", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2670.9389, 2247.6401, 58.4891 );
			SetPlayerCameraLookAt( playerid, -2662.2788, 2252.6401, 53.7944 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2671.5085,2242.1946,57.8891);
			SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~Sobre RPG", 8000, 6);
			format(string,sizeof(string),"Neste servidor somos rigorosos em relação a RPG, intão seja o mais RPG possível\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nAah..Mais o que é RPG?\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nRPG é a simulação da vida real, intão não faça oque você não faia na vida real\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE para cada ato Anti-RPG, terá suas devidas punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPunições como: aviso, kick, cadeia e Ban, sempre que não souber se um ato é ant-RPG ou não\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPergunte a um admin ou Helper online, se não tiver nenhum, pergunte a um policial.\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNão saia matando qualquer um que ver pela rua, isso não é nada RPG\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCada Player que for pego cometendo atos Ant-RPG irá ser avisado, se persistir\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nserá kickado, e se continuar poderá levar cadeia ou dependendo do caso poderá ser banido\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que nossos admins estão atento a atos ant-RPG, por isso seja o mais RPG possível\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nFique sempre atento a atualizações de regras em nosso forum: www.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Sobre o RPG", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
	    return 0;
	}

    if(dialogid == 914)
	{
		if(response == 1)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~Fim do tutorial", 8000, 6);
			format(string,sizeof(string),"Seja muito bem vindo(a) %s ao nosso servidor: Brasil PlayHappy [RPG v1.0a]\n",PlayerName(playerid));
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nQue seu futuro aqui seja muito feliz, e o mais importante, com muita diversão\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEstaremos sempre dispostos a te ajudar sempre que for preciso com maior disposição\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEste tutorial foi muito importante para facilitar seu começo no servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe você se achar meio perdido dentro do servidor, não deixe de perguntar por favor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca se esqueça que estamos fazendo o melhor por você no servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe você quer voltar este tutorial clique em Reiniciar para voltar ao inicio do tutorial\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nNunca deixe de atualizar-se em nosso forum para ficar por dentro de todas as atualizações\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nwww.s-bph.forumeiros.com\n");
			strcat(DialogInfoorg,string);
	        ShowPlayerDialog(playerid, 915, DIALOG_STYLE_MSGBOX, "Fim do Tutorial", DialogInfoorg, "OK", "Voltar");
			SetPlayerCameraPos( playerid, 1425.6246, -912.0739, 84.8901 );
			SetPlayerCameraLookAt( playerid, 1424.7957, -902.5995, 81.8000 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1446.6510,-807.7561,84.2902);
			SetPlayerInterior(playerid, 0);
			return 0;
		}
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~Empregos", 8000, 6);
			format(string,sizeof(string),"Neste servidor você poderá ter empregos secundários\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIsso deve ser umas das primeiras coisas que você tem que fazer no servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nVocê deve encaminhar-se até a prefeitura de sua cidade e adquirir seu emprego\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara saber onde fica as prefeituras de cada cidade existe um comando que o guiará: /GPS\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nChegando lá, você verá um ícone de maleta, você aperte a letra F e verá o menu de empregos\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCada emprego uma vez adquirido terá um praso de 5 horas para poder pegar outro novamente\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPara sair de seu emprego atual você USE: /sairdoemprego (cumprida as 5 horas de contrato)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPlayers VIP/VIP-POWER teram 2 Horas de contratos com empregos, isso é mais um beneficio VIP\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCaso você pegar um emprego errado acidentalmente, fale com um admin nivel 4+ para resolver seu caso\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "Empregos secundarios:", DialogInfoorg, "Avançar", "Voltar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			return 0;
	    }
	    return 0;
	}


	if(dialogid == 915 )
 	{
		if(response == 1)
		{
			new tmp2[256];
			SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
			SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
	        Controle(playerid, 1);
		    ClearChatbox(playerid, 100);
			PlayerInfo[playerid][pTut] = 1;
			gNews[playerid] = 0; gFam[playerid] = 0;
			Controle(playerid, 1);
			SetPlayerVirtualWorld(playerid,0);
			MedicBill[playerid] = 0;
			SetPlayerSpawn(playerid);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pConta] = 100000;
			PlayerInfo[playerid][pCreditos] += 20;
	        PlayerPlayMusic(playerid);
	        RegistrationStep[playerid] = 4;
		    ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, 5000);
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "{FFD700}Caso tenha uma duvida, USE /relatorio ou /duvida que algum admin ou Helper irá ajuda-lo!");
			if(PlayerInfo[playerid][pSex] == 2)
			{
				format(tmp2, sizeof(tmp2), "~p~~h~Bem vinda ~n~~y~~h~   %s", PlayerName(playerid));
				GameTextForPlayer(playerid, tmp2, 5000, 1);
			}
			if(PlayerInfo[playerid][pSex] == 1)
			{
				format(tmp2, sizeof(tmp2), "~w~Bem vindo ~n~~b~   %s", PlayerName(playerid));
				GameTextForPlayer(playerid, tmp2, 5000, 1);
			}
	        return 0;
	    }
		else if(response == 0)
		{
		    new DialogInfoorg[1500];
			PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~y~Lugares neutros", 8000, 6);
			format(string,sizeof(string),"Neste servidor terá varios lugares neutros onde não poderão ocorrer nenhum tipo de confronto\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nSe for pego um confronto entre gangs/orgs nestes locais neutros terá punição para cada player\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nCaso alguem que estiver fugindo, e correr para um destes locais, tire uma SS comprovando\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE termine o confronto normalmente, caso ele denunciar, você terá cntra-provas, e o denunciante\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nterá uma pena de 180 minutos de cadeia pelo motivo de forjar denuncia, por isso sempre tire SS\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE estes são os locais neutros das cidades Los Santos e San Fierro\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\n\nLoja de Armas: (Apenas no interior da Loja)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPrefeitura: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nDelegacia de policia: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nLoja 24/7: (é um local neutro, Interior e exterior)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nBanco: (Apenas no Interior do banco)\n");
			strcat(DialogInfoorg,string);
	 		format(string,sizeof(string),"\nCadeia de administrador\n");
			strcat(DialogInfoorg,string);
	  		format(string,sizeof(string),"\nRespawn Civil: (onde novatos e civis nascem)\n");
			strcat(DialogInfoorg,string);
	  		format(string,sizeof(string),"\nEventos de administradores\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 914, DIALOG_STYLE_MSGBOX, "Lugares neutros", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2670.9389, 2247.6401, 58.4891 );
			SetPlayerCameraLookAt( playerid, -2662.2788, 2252.6401, 53.7944 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2671.5085,2242.1946,57.8891);
			SetPlayerInterior(playerid, 0);
			return 0;
  		}
    	return 0;
    }

	if(dialogid == 3)
 	{
		if(response == 0)
	    {
	    	BPHInfo[playerid][Tels] = 0;
	    	SendClientMessage(playerid, COLOR_DBLUE, "Você cancelou a lista de opções!");
	        return 1;
      	}
		if(response >= 1)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pPhoneBook] == 1)
				{
			       	format(string,sizeof(string),"/ligar %d",BPHInfo[playerid][Tels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			    }
			    else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não têm uma Lista Telefonica!");
					return 1;
					}
			}
			if(listitem == 1)
			{
				if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
			       	ShowPlayerDialog(playerid, 9958, DIALOG_STYLE_INPUT, "Enviar SMS", "Digite a sua mensagem abaixo:", "Enviar", "Cancelar");
			       	return 1;
			    }
			    else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem lista telefônica !");
					return 1;
					}
			}
			if(listitem == 2)
			{
			       	ShowPlayerDialog(playerid, 9959, DIALOG_STYLE_INPUT, "Mandar Particular", "Digite a sua mensagem abaixo:", "Enviar", "Cancelar");
			       	return 1;
			}
			if(listitem == 3)
			{
			       	format(string,sizeof(string),"/vercarteira %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;

			}
			if(listitem == 4)
			{
			       	format(string,sizeof(string),"/explodir %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
			if(listitem == 5)
			{
			       	format(string,sizeof(string),"/tapa %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
			if(listitem == 6)
			{
			       	ShowPlayerDialog(playerid, 9960, DIALOG_STYLE_INPUT, "Kickar o Jogador", "Digite o Motivo do Kick Abaixo:", "Kickar", "Cancelar");
			       	return 1;
			}
			if(listitem == 7)
			{
			       	ShowPlayerDialog(playerid, 9961, DIALOG_STYLE_INPUT, "Banir o Jogador", "Digite o Motivo do Ban Abaixo:", "Banir", "Cancelar");
			       	return 1;
               }
			if(listitem == 8)
			{
			       	format(string,sizeof(string),"/cascudo %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
			if(listitem == 9)
			{
			       	format(string,sizeof(string),"/TV %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
			if(listitem == 10)
			{
			       	format(string,sizeof(string),"/trazer %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
			if(listitem == 11)
			{
			       	format(string,sizeof(string),"/ir %d",BPHInfo[playerid][pTels]);
			       	OnPlayerCommandText(playerid,string);
			       	return 1;
			}
   			return 1;
 	    }
	 }
	           	    
  	if(dialogid == 9958)
   	{
    	if(response == 0)
    	{
    		BPHInfo[playerid][Tels] = 0;
    		return 1;
    	}
    	if(response >= 1)
    	{
    		format(string,sizeof(string),"/sms %d %s",BPHInfo[playerid][Tels],inputtext);
   			OnPlayerCommandText(playerid,string);
    		return 1;
    	}
    	return 1;
    }
   	if(dialogid == 9960)
	    {
	        if(response == 0)
	        {
	            BPHInfo[playerid][Tels] = 0;
	            return 1;
	        }
	        if(response >= 1)
	        {
	            format(string,sizeof(string),"/kick %d %s",BPHInfo[playerid][pTels],inputtext);
	        	OnPlayerCommandText(playerid,string);
	            return 1;
	        }
	        return 1;
	    }
	    

	if(dialogid == 9959)
	    {
	        if(response == 0)
	        {
	            BPHInfo[playerid][Tels] = 0;
	            return 1;
	        }
	        if(response >= 1)
	        {
	            format(string,sizeof(string),"/par22 %d %s",BPHInfo[playerid][pTels],inputtext);
	        	OnPlayerCommandText(playerid,string);
	            return 1;
	        }
	        return 1;
	    }
	if(dialogid == 9961)
	    {
	        if(response == 0)
	        {
	            BPHInfo[playerid][Tels] = 0;
	            return 1;
	        }
	        if(response >= 1)
	        {
	            format(string,sizeof(string),"/ban %d %s",BPHInfo[playerid][pTels],inputtext);
	        	OnPlayerCommandText(playerid,string);
	            return 1;
	        }
	        return 1;
     	}

//==============================================================
	if(dialogid == 9998)
	{
		if(response)
		{
           	if(listitem == 0)
			{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 1;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local Country Club para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
            	return true;
	    	}
	    	if(listitem == 1)
     		{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 2;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local Verona Beach para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
				return true;
	    	}
	    	if(listitem == 2)
     		{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 3;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local East Beach para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
				return true;
	    	}
	    	if(listitem == 3)
     		{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 4;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local City Hall para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
				return true;
	    	}
	    	if(listitem == 4)
     		{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 5;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local East Los Santos para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
				return true;
	    	}
	    	if(listitem == 5)
     		{
        		ClearChatbox(playerid, 100);
            	PlayerInfo[playerid][pOrigem] = 6;
            	SetPlayerInterior(playerid, 0);
            	ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "Seu Local", "Você escolheu o Local Downtown para começar\n\nVocê poderá trocar sua origem indo até uma prefeitura\nAgora preste o máximo de atenção no tutorial ", "Avançar", "Cancelar");
				return true;
	    	}
	    	Kick(playerid);
        	return true;
		}
    }
	if(dialogid == 9)
	{
	   	if(response == 0)
     	{
     	    new DialogInfoorg[1500];
			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
            PlayerInfo[playerid][pSex] = 2;
            SetPlayerSkin(playerid, 150);
            PlayerInfo[playerid][pSkin] = 150;
            SendClientMessage(playerid, COLOR_WHITE, "Siga o Tutorial atentamente");
            RegistrationStep[playerid] = 0;
            SetPlayerInterior(playerid, 0);
            
            //====
		    PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	XXAirBreak[playerid] += 3;
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
	    	GameTextForPlayer(playerid, "~y~Inicio", 8000, 6);
			format(string,sizeof(string),"Oii %s, Seja muito bem vindo ao Brasil PlayHappy [RPG v1.0a]\n",PlayerName(playerid));
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPreste muita atenção neste tutorial para que não tome futuras punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que esta será a ultima vez que você verá este tutorial no jogo\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIntão preste o maximo de atenção pois é muito importante ler todo o tutorial\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEste tutorial tambem te ajudará a a entender melhor a jogabilidade do servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE não pule o tutorial rapidamente por favor, e seja atento em tudo que ler neste tutorial\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "Inicio:", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
            //ShowPlayerDialog(playerid, 9998, DIALOG_STYLE_LIST, "Escolha o seu Local", "Country Club - SF\nVerona Beach - LS", "Escolher", "Cancelar");
            return true;
	   	}
	   	if(response == 1)
     	{
     	    new DialogInfoorg[1500];
  			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
            PlayerInfo[playerid][pSex] = 1;
            SetPlayerSkin(playerid, 23);
            PlayerInfo[playerid][pSkin] = 23;
            SendClientMessage(playerid, COLOR_WHITE, "Siga o Tutorial atentamente");
            RegistrationStep[playerid] = 0;
            SetPlayerInterior(playerid, 0);
            //====
		    PlayerPlaySound(playerid, 1039,  0.0, 0.0, 0.0);
	    	XXAirBreak[playerid] += 3;
	    	TempoTutorial[playerid] = SetTimerEx("Putaria2", 8000, 0, "i", playerid);
	    	GameTextForPlayer(playerid, "~y~Inicio", 8000, 6);
			format(string,sizeof(string),"Oii %s, Seja muito bem vindo ao Brasil PlayHappy [RPG v1.0a]\n",PlayerName(playerid));
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nPreste muita atenção neste tutorial para que não tome futuras punições\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nLembrando que esta será a ultima vez que você verá este tutorial no jogo\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nIntão preste o maximo de atenção pois é muito importante ler todo o tutorial\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nEste tutorial tambem te ajudará a a entender melhor a jogabilidade do servidor\n");
			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"\nE não pule o tutorial rapidamente por favor, e seja atento em tudo que ler neste tutorial\n");
			strcat(DialogInfoorg,string);
			ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "Inicio:", DialogInfoorg, "Avançar", "Cancelar");
			SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
			//ShowPlayerDialog(playerid, 9998, DIALOG_STYLE_LIST, "Escolha o seu Local", "Country Club - SF\nVerona Beach - LS", "Escolher", "Cancelar");
			return true;
	   	}
       	return true;
    }

	if(dialogid == 10)
	{
	  	if(response)
		{
			if(listitem == 0)
			{
				ShowRules(playerid);
 				TempoTextDrawRegras[playerid] = SetTimerEx("TextDrawRegras", 12000, 0, "i", playerid);
			}
			if(listitem == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Player ]______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, 0xACFF48AA,"/logar /rg /regras /forum /pegarticket /comprarnivel /profs (/orgs) /mostrarrg");
				SendClientMessage(playerid, 0xACFF48AA,"/meuskin  /horas /gps /mostrarlicencas /loteria /setint /empregos /animes");
				SendClientMessage(playerid, 0xACFF48AA,"/trancar /mudarlocal /minhaslicencas /comprararma /beber /caridade");
				SendClientMessage(playerid, 0xACFF48AA,"/abastecer /contrato /aceitar /cancelar /ejetar /servico /alugarcarro");
	  			SendClientMessage(playerid, 0xACFF48AA,"(/g)ritar (/s)usurro (/an)uncio /eu /alugarheli /alugarquarto /desalugar");
				SendClientMessage(playerid, 0xACFF48AA,"/saldo /sacar /depositar /transferir");
				SendClientMessage(playerid, 0xACFF48AA,"/laseron /laseroff /lasercor /cveiculo /capacete /tirarcapacete");
				SendClientMessage(playerid, 0x6F60FFAA,"______________________________________________________________________________________________");
			}
			if(listitem == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Empresa ]______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, 0xACFF48AA,"/ajudaempresa (/entradaemp)resa (/nomeemp)resa /extorcao /infoempresa");
				SendClientMessage(playerid, 0xACFF48AA,"/entrar /sair /chave /venderemp (/depositaremp)resa /sacarempresa");
				SendClientMessage(playerid, 0x6F60FFAA,"______________________________________________________________________________");
			}
			if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Casa ]______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, 0xACFF48AA,"/entrar /sair /chave /vida /moveis(/mv) /mapacasa(Mostra No Mapa)");
				SendClientMessage(playerid, 0xACFF48AA,"/comprarcarro /pintarcarro /despejartodos /mudarcasa(1 a 10)");
				SendClientMessage(playerid, 0xACFF48AA,"/aluguel /despejar /cofrecasa /trancar(carro da casa) /alugada");
				SendClientMessage(playerid, 0x6F60FFAA,"______________________________________________________________________");
			}
			if(listitem == 4)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Aluguel ]______________|");
				SendClientMessage(playerid, 0xACFF48AA,"Aluguel > /desalugar /entrar /sair /trancar /mapacasa");
				SendClientMessage(playerid, 0x6F60FFAA,"______________________________________________________");
		    }
			if(listitem == 5)
			{
				if (PlayerInfo[playerid][pPnumber] > 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Celular ]______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
					SendClientMessage(playerid, 0xACFF48AA,"/ligar /sms (/at)ender (/des)ligar /agenda /desativar celular");
					SendClientMessage(playerid, COLOR_WHITE,"Não se esqueça de comprar créditos na 24-7!");
					SendClientMessage(playerid, 0x6F60FFAA,"______________________________________________________________________");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"Você não tem um telefone, compre um na 24-7, USE: /gps");
				}
			}
			if(listitem == 6)
			{
			    if (PlayerInfo[playerid][pLider] >= 1)
			    {
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Lider ]______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
					SendClientMessage(playerid, 0xACFF48AA,"/convidar /demitir /limparvaga /promover /contaslider( Pedir Contas )");
					SendClientMessage(playerid, 0x6F60FFAA,"____________________________________________________________________________");
					if(PlayerInfo[playerid][pLider] == 7)
					{
						SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > (/pre)feito /setartaxa /dartaxa (Dá algum dinheiro para os Policiais)");
					}
					SendClientMessage(playerid, COLOR_DBLUE,"____________________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Líder!");
				}
			}
			if(listitem == 7)
			{
	   			SendClientMessage(playerid,COLOR_WHITE, "|______________[ Ajuda Emprego ]______________|");
      			if(PlayerInfo[playerid][pEmprego] == 1)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Detetive < /procurar");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 2)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Advogado < /soltar (Solta um Preso) /pp(Portão Presos - DP) /autorizacao(Icone Na DP)");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 3)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Prof. do Sexo < /transar");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 4)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," Vendedor de Drogas < /sistemadedrogas");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 5)
				{
		    			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Mecânicos <  /guinchar /reparar /abastecercarro /bcmec");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 6)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Segurança < /proteger");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 7)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Vendedor de Armas < '/materiais pegar [1 - 10]'  '/materiais trocar'  '/venderarma'");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 8)
				{
		    		SendClientMessage(playerid,COLOR_GREEN,"Lutador de Boxe < /lutar /statusluta");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 9)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"Motorista de Ônibus < /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /terminais");
				}
				else if(PlayerInfo[playerid][pEmprego] == 10)
				{
					SendClientMessage(playerid,COLOR_YELLOW,"Mendigo < /esmola /pbarraca(por barraca) /rbarraca(retirar barraca)");
				}
				else if(PlayerInfo[playerid][pEmprego] == 11)
				{
					SendClientMessage(playerid,COLOR_YELLOW,"Caminhoneiro < /mercadorials /mercadoriasf /mercadorialv");
				}
				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /reforco");
					SendClientMessage(playerid, 0xE8FFEAAA, "Comandos > /revistar /retirar /prender (/gov)erno /arrombar (/tr) /desalgemar /arrombar /bafometro /multar /infoorg /ronda");
					SendClientMessage(playerid, 0xE8FFEAAA, "Portões  > /pe - P Estacionamento | /pg - P Garagem | /pr - P Recepção | /pp - P Presos | /pv - P Vestiário");
					SendClientMessage(playerid, 0xE8FFEAAA, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, 0xE8FFEAAA, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
					SendClientMessage(playerid, 0xE8FFEAAA, "Para ajustar o tempo de um preso -> USE: /ajustar (no local de ajuste) | /grampear (celular de alguém)");
				}
				if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Governo: /equipargov (/r)adio - (/d)epartamento - (/m)egafone - /algemar - /imo - /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "Governo: /revistar - /retirar - /pp - /pgov - Portão dos Carros - /ppre - Porta Prefeitura");
					SendClientMessage(playerid, 0xE8FFEAAA, "Prefeito: (/pre)feito /dartaxa(Para os Policias) /setartaxa(Taxa Por Pessoa)");
				}
				if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
				{
    				SendClientMessage(playerid, 0xE8FFEAAA, "Taxistas: /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /antaxi");
                    SendClientMessage(playerid, 0xE8FFEAAA, "Taxistas: /ptaxi - Para abrir o portao");
				}
				if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/tr) /desalgemar /arrombar /bafometro /multar");
					SendClientMessage(playerid, 0xE8FFEAAA, "Portões  > /pro - Garagens");
					SendClientMessage(playerid, 0xE8FFEAAA, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, 0xE8FFEAAA, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
					SendClientMessage(playerid, 0xE8FFEAAA, "Para ajustar o tempo de um preso -> USE: /ajustar (no local de ajuste) | /grampear (celular de alguém)");
				}
				if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Exército > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "Exército > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /br /rb /multar /procurados");
					SendClientMessage(playerid, 0xE8FFEAAA, "Exército > /abrirgn - Portão Principal /equipar /algemar /desalgemar /reforco /bafometro");
					SendClientMessage(playerid, 0xE8FFEAAA, "Exército > /guerra /pontos(ver pontuação da guerra) /tirarbombas - Bloqueia os Homens Bombas");
					SendClientMessage(playerid, 0xE8FFEAAA, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, 0xE8FFEAAA, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
					SendClientMessage(playerid, 0xE8FFEAAA, "Para ajustar o tempo de um preso -> USE: /ajustar (no local de ajuste) | /grampear (celular de alguém)");
 		   		}
				if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Medicos > | (/r)adio | (/d)epartamento | /vida | /bcMedicos | /infoorg | (/gov)erno");
				}
				if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Groove Street >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | /ang(anuncio)");
				}
				if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "GIA <  /equipar /homembomba /carrobomba /tal");
					SendClientMessage(playerid, 0xE8FFEAAA, "GIA <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "GIA <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "GI <  /equipar /homembomba /carrobomba /alq");
					SendClientMessage(playerid, 0xE8FFEAAA, "GI <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "GI <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
    			if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Guerrilheiros Israelitas <  /equipar /homembomba /carrobomba /Guerrilheiros Israelitas");
					SendClientMessage(playerid, 0xE8FFEAAA, "Guerrilheiros Israelitas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA, "Guerrilheiros Israelitas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Cosa Nostra <  /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm /infoorg /anmafia /abastecerhq");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Cosa Nostra <  Portão = /acn ");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Cosa Nostra <  Para saber como pegar seus materiais = /ajudamateriais");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Cosa Nostra <  Para pegar ou esconder materiais va a HQ ou um territorio");
				}
				if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
				{
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Yakuza <  /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm /infoorg /anmafia /abastecerhq");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Yakuza <  Portão = /portaoest ");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Yakuza <  /ajudamateriais = Para saber como pegar seus materiais.");
					SendClientMessage(playerid, 0xE8FFEAAA, "Máfia Yakuza <  Para pegar ou esconder materiais va a HQ ou um territorio");
				}
				if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Los Aztecas >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | /ang(anuncio) ");
				}
				if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Hitmans > /laptop - Computador Hitman | /arrombar(Porta das Casas) | /anhitmans");
					SendClientMessage(playerid, 0xE8FFEAAA,"Comandos > /ga - Chat Hitmans | /infoorg | /infocontratos");
					SendClientMessage(playerid, 0xE8FFEAAA,"Portão > /phit - Portão Hitmans");
				}
				if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
           		{
					SendClientMessage(playerid, 0xE8FFEAAA,"Ballas >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | (/ang)ang ");
				}
				if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Los Vagos >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | /ang(anuncio) ");
				}
				if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Repórter >  | /noticias | /aovivo | (/preporter = Portão)");
					SendClientMessage(playerid, 0xE8FFEAAA,"Comandos >  | (/ga)ngue) | /live | /noticias [texto] | /infoorg");
				}
				if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Policia Federal > (/m)egafone /equipar /batercartao /procurados /presos /reforco /multar /infoorg");
					SendClientMessage(playerid, 0xE8FFEAAA,"Comandos > (/su)spect /limpar /revistar /r(adio) /d(epartamento) (/tr) /arrombar /bafometro");
					SendClientMessage(playerid, 0xE8FFEAAA,"Portões  >  /ppf - Portão HQ | Portôes DP LS(/pr /pp /pv /pe /pg)");
					SendClientMessage(playerid, 0xE8FFEAAA,"Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, 0xE8FFEAAA,"Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
					SendClientMessage(playerid, 0xE8FFEAAA, "Para ajustar o tempo de um preso -> USE: /ajustar (no local de ajuste) | /grampear (celular de alguém)");
				}
				if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Comando Vermelho >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | /ang(anuncio) ");
				}
				if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Comando Vermelho-SF >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | (/ang)ang ");
				}
				if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"PCC >  | (/ga)ng | /sequestrar & /desamarrar | (/tr) | /assaltar | /infoorg | /roubar | /ang(anuncio)");
                    SendClientMessage(playerid, 0xE8FFEAAA,"PCC >  | /tunar - Para tunar o carro");
				}
				if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
				{
					SendClientMessage(playerid, 0xE8FFEAAA,"Triad > /laptop - Computador Triad | /arrombar(Porta das Casas) | /antriad");
					SendClientMessage(playerid, 0xE8FFEAAA,"Comandos > /ga - Chat Triad | /infoorg | /infocontratos");
					SendClientMessage(playerid, 0xE8FFEAAA,"Portão > /ptriad - Portão Triads");
				}
			}
			if(listitem == 8)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Pesca ]______________|");
				SendClientMessage(playerid, 0xACFF48AA,"Pescaria > /pescar (Tente pegar um peixe)   /peixes (Mostrar os peixes que você pegou)");
				SendClientMessage(playerid, 0xACFF48AA,"Pescaria > /soltarultimo(Jogue o último peixe Você pegou de volta) /soltartodos(jogue todos seus peixes de volta)");
				SendClientMessage(playerid, 0xACFF48AA,"Pescaria > /soltarpeixe (Liberação de uma de suas barbatanas) /vender(+ de 20 LBs | 24-7) /comer( Casas de Comida )");
				SendClientMessage(playerid, 0x6F60FFAA,"_______________________________________________________________________________________________________________________");
			}
			if(listitem == 9)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Cozinha ]______________|");
				SendClientMessage(playerid, 0xACFF48AA,"Cozinha > /cozinhar (Mostra as opcoes disponiveis) /cozido (Mostra o que ja foi cozinhado)");
				SendClientMessage(playerid, 0xACFF48AA,"Cozinha > /comer ( Come o que ja foi cozinhado )");
				SendClientMessage(playerid, 0x6F60FFAA,"____________________________________________________________________________________________");
			}
			if(listitem == 10)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Casamento ]______________|");
				SendClientMessage(playerid, 0xACFF48AA,"/padrinho (cada 1 tem que ter 1 padrinho!)");
				SendClientMessage(playerid, 0xACFF48AA,"/casar (quem pedir tem que ter 1 casa!)");
				SendClientMessage(playerid, COLOR_WHITE,"Não sabe o local? digite /gps - Igreja");
				SendClientMessage(playerid, 0xACFF48AA,"Separação(Digite: /separacao)");
				SendClientMessage(playerid, 0x6F60FFAA,"____________________________________________________");
			}
			if(listitem == 11)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Forum ]______________|");
		   		SendClientMessage(playerid, 0xACFF48AA,"www.s-bph.forumeiros.com");
		   		SendClientMessage(playerid, 0xACFF48AA,"Cadastre-se em nosso forum e veja as contas VIPs e Socios.");
				SendClientMessage(playerid, 0x6F60FFAA,"__________________________________________________________________________");
			}
			if(listitem == 12)
			{
				if (PlayerInfo[playerid][pVIP] >= 1)
				{
		    		SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda VIPs e Premiuns ]______________|");
					SendClientMessage(playerid, 0xCDB38BAA, "-> /kitvip /mala /desativar celular /v(chat) /pegarticket( cor destacada )");
					SendClientMessage(playerid, 0xACFF48AA, "-> Carros VIPS: /veiculo ajuda ");
					SendClientMessage(playerid, 0xACFF48AA, "-> Localizar Carro: /meucarro");
					SendClientMessage(playerid, 0xACFF48AA, "-> Casas VIPS: /ajudacasa");
					SendClientMessage(playerid, 0x6F60FFAA,"___________________________________________________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "Você não é um jogador VIP/VIP Premium");
				}
			}
			if(listitem == 13)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Seja VIP ]______________|");
		   		SendClientMessage(playerid, 0xACFF48AA,"Preços Vips:");
			    SendClientMessage(playerid, 0xACFF48AA,"VVIP: {6AB4E6}R$5,00");
			    SendClientMessage(playerid, 0xACFF48AA,"SUPE-RVIP: {6AB4E6}R$12,00");
		   		SendClientMessage(playerid, COLOR_LIGHTRED,"Acesse: {6AB4E6}www.s-bph.forumeiros.com");
			    SendClientMessage(playerid, 0x6F60FFAA,"____________________________________________________");
			}
			if(listitem == 14)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Seja Socio ]______________|");
		   		SendClientMessage(playerid, 0xACFF48AA,"Sócio a partir de: {6AB4E6}R$20,00");
		   		SendClientMessage(playerid, COLOR_LIGHTRED,"Dúvidas,acesse {6AB4E6}www.s-bph.forumeiros.com");
			}
            if(listitem == 15)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Socio ]______________|");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Sócio > /neon | /kitsocio(equipamento) | /jetpack (mochila ajato) | /so(chat dos sócios)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgpm(Policia Militar) | /orgbope(Rotam) | /orggn(Exercito) | /orgpc(Rotam-SF)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgaztecas(Los Aztecas) | /orgGIA(GIA) | /orghitman(Hitman) | /orgreporter(Reportagem)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgtaxista(Taxistas) | /orgcosa(Cosa Nostra) | /orgyakuza(Yakuza) | /orgpf(Policia Federal)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orggroove(Groove Street) | /orgalqaeda(GI) | /orgballas(Ballas) | /orgvagos(Los Vagos)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgComando Vermelho(Comando Vermelho) | /orgspunks(Comando Vermelho-SF)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgdrift(PCC) | /orgtriad(Triads) /orgGuerrilheiros Israelitas (Guerrilheiros Israelitas)");
			}
		}
		return true;
	}

	if(dialogid == 5)
	{
		if(response == 0)
	    {
	    	BPHInfo[playerid][PpLoja2472] = 0;
	        return true;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/comprar 1");
      			BPHInfo[playerid][PpLoja2472] = 0;
     			return true;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 2");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 2)
		    {
			   	OnPlayerCommandText(playerid,"/comprar 3");
			   	BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 4");
		    	BPHInfo[playerid][PpLoja2472] = 0;
       			return true;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 5");
	    		BPHInfo[playerid][PpLoja2472] = 0;
      			return true;
		    }
		    if(listitem == 5)
		    {
			    OnPlayerCommandText(playerid,"/comprar 6");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 6)
		    {
			    OnPlayerCommandText(playerid,"/comprar 7");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 7)
		    {
			    OnPlayerCommandText(playerid,"/comprar 8");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 8)
		    {
			    OnPlayerCommandText(playerid,"/comprar 9");
		    	BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 9)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 10");
	    		BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 10)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 11");
	    		BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 11)
		    {
			    OnPlayerCommandText(playerid,"/comprar 12");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 12)
		    {
			    OnPlayerCommandText(playerid,"/comprar 13");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 13)
		    {
			    OnPlayerCommandText(playerid,"/comprar 14");
			    BPHInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    BPHInfo[playerid][PpLoja2472] = 0;
      		return true;
      	}
	}
	if(dialogid == 6)
	{
		if(response == 0)
		{
    	    BPHInfo[playerid][PLojaA1] = 0;
		    BPHInfo[playerid][PLojaA2] = 0;
		    return true;
		}
		if(response == 1)
		{
			if(listitem == 0)
		    {
   				OnPlayerCommandText(playerid,"/kitvip");
            	BPHInfo[playerid][PLojaA1] = 0;
		    	BPHInfo[playerid][PLojaA2] = 0;
		    	BPHInfo[playerid][ArmaLoja] = 0;
		        return true;
		    }
		    if(listitem == 1)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "eagle", 0, strlen("eagle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 2)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "mp5", 0, strlen("mp5"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 3)
		    {
		    	strmid(BPHInfo[playerid][ArmaLoja], "shotgun", 0, strlen("shotgun"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 4)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "ak47", 0, strlen("ak47"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 5)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "m4", 0, strlen("m4"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 6)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "rifle", 0, strlen("rifle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 7)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "parachute", 0, strlen("parachute"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 8)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "golfclub", 0, strlen("golfclub"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 9)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "nightstick", 0, strlen("nightstick"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 10)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "baseballbat", 0, strlen("baseballbat"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 11)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "shovel", 0, strlen("shovel"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 12)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "poolcue", 0, strlen("poolcue"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 13)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "purpledildo", 0, strlen("purpledildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 14)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "whitedildo", 0, strlen("whitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 15)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "longwhitedildo", 0, strlen("longwhitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 16)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "whitedildo2", 0, strlen("whitedildo2"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 17)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "flowers", 0, strlen("flowers"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 18)
		    {
		        strmid(BPHInfo[playerid][ArmaLoja], "cane", 0, strlen("cane"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 19)
		    {
				SetPlayerArmour(playerid, 100);
				GivePlayerMoney(playerid,-3000);
				SendClientMessage(playerid, COLOR_WHITE,"Você comprou um colete por R$3.000");

		        return true;
		    }
		    BPHInfo[playerid][PLojaA1] = 0;
		    BPHInfo[playerid][PLojaA2] = 0;
		    return true;
		}
        return true;
    }
    if(dialogid == 7)
    {
        if(response == 0)
        {
            BPHInfo[playerid][PLojaA1] = 0;
		    BPHInfo[playerid][PLojaA2] = 0;
		    BPHInfo[playerid][ArmaLoja] = 0;
            return true;
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/comprararma %s %d",BPHInfo[playerid][ArmaLoja],strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            BPHInfo[playerid][PLojaA1] = 0;
		    BPHInfo[playerid][PLojaA2] = 0;
		    BPHInfo[playerid][ArmaLoja] = 0;
            return true;
        }
        BPHInfo[playerid][PLojaA1] = 0;
    	BPHInfo[playerid][PLojaA2] = 0;
    	BPHInfo[playerid][ArmaLoja] = 0;
        return true;
    }
    if(dialogid == 8)
    {
        if(response == 0)
        {
            BPHInfo[playerid][PLojaA1] = 0;
		    BPHInfo[playerid][PLojaA2] = 0;
            return true;
        }
        if(response == 1)
        {
            if(listitem == 0)
		    {
            	OnPlayerCommandText(playerid,"/kitvip");
            	BPHInfo[playerid][PLojaA1] = 0;
		    	BPHInfo[playerid][PLojaA2] = 0;
		    	BPHInfo[playerid][ArmaLoja] = 0;
            	return true;
			}
   			if(listitem == 1)
		    {
            	OnPlayerCommandText(playerid,"/kitvip");
            	BPHInfo[playerid][PLojaA1] = 0;
		    	BPHInfo[playerid][PLojaA2] = 0;
		    	BPHInfo[playerid][ArmaLoja] = 0;
            	return true;
			}
			if(listitem == 2)
		    {
            	OnPlayerCommandText(playerid,"/kitsocio");
            	BPHInfo[playerid][PLojaA1] = 0;
		    	BPHInfo[playerid][PLojaA2] = 0;
		    	BPHInfo[playerid][ArmaLoja] = 0;
            	return true;
			}
			return true;
        }
        BPHInfo[playerid][PLojaA1] = 0;
    	BPHInfo[playerid][PLojaA2] = 0;
    	BPHInfo[playerid][ArmaLoja] = 0;
        return true;
    }

	if(dialogid == TELEPORTE)
 	{
		Controle(playerid, 1);
 		if(!response)
  		{
   			return true;
		}
		switch(listitem)
		{
			case 0:
			{
				ShowPlayerDialog(playerid,TELEPORTE+1,DIALOG_STYLE_LIST,"Head Quarters","Policia Militar\nRotam\nExército\nMedicos\nLos Aztecas\nGIA\nPrefeitura\nHitmans\nReporter\nTaxistas\nPolicia Federal\nMafia Cosa Nostra\nMafia Yakuza\nGroove Street\nGI\nRotam-SF\nBallas\nLos Vagos\nComando Vermelho\nComando Vermelho-SF\nPCC\nTriads\nGuerrilheiros Israelitas\nMecanicos","Selecionar","Cancelar");
			}
			case 1:
			{
				ShowPlayerDialog(playerid,TELEPORTE+2,DIALOG_STYLE_LIST,"Territorios","Morro\nPista de Skate\nMansão do Madd Dogg\nParque Gleen\nEstacao Unity\nCasarao","Selecionar","Cancelar");
			}
	 		case 2:
	 		{
		 		ShowPlayerDialog(playerid,TELEPORTE+3,DIALOG_STYLE_LIST,"Locais em Geral","Prefeitura\nDepartamento de Policia\nMercado de Commerce\nLoja de Armas\nAmmu Nation\nBinco (Loja de Roupas)\nAluguel de Carros\nCentro de Licencas\nHospital\nPosto de Idlewood\nBanco\nLoterica\nConcessionaria\nZIP (Loja de Roupas)\nVICTIM (Loja de Roupas)\nMateriais (Pegar)\nMateriais (Trocar)","Selecionar","Cancelar");
	 		}
	    	case 3:
			{
				ShowPlayerDialog(playerid,TELEPORTE+4,DIALOG_STYLE_LIST,"Eventos","Aeroporto de Los Santos\nAeroporto de San Fierro\nAeroporto de Las Venturas\nEvento Rally\nEvento Kart\nArena x1\nEvento Bate-Bate\nMonte de San Andreas\nPredio","Selecionar","Cancelar");
			}
 		}
	}
   	if(dialogid == TELEPORTE+1)
	{
		Controle(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0)
		{
	 		return SendClientMessage(playerid,COLOR_WHITE,"Você cancelou o menu de teleportes.");
	 	}
		switch(listitem)
		{
 			case 0:
	 		{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1538.2189,-1681.6970,5.8906);
			}
 			case 1:
	 		{
		 		SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,298.4533,-1518.8646,24.5938);
			}
 			case 2:
		 	{
		 		SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1347.0657,498.5268,11.1953);}
    		case 3:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2003.4354,-1444.1321,13.5621);}
 			case 4:
		 	{
		 		SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1691.0067,-2112.9229,13.3828);}
    		case 5:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2748.6006,-2453.4863,13.8623);}
 			case 6:
		 	{
			 	SetPlayerInterior(playerid,3);
    			SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,355.4489,162.4052,1025.7964);}
    		case 7:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,954.4877,-1533.4193,13.5780);}
 			case 8:
		 	{
			 	SetPlayerInterior(playerid,0);
    			SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,740.3707,-1348.3239,13.5100);}
 			case 9:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1001.5851,-1447.9072,13.5469);}
 			case 10:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-49.8735,-274.2333,5.4297);}
 			case 11:
		 	{
		 		SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,309.4009,-1161.1469,80.9141);}
 			case 12:
		 	{
		 		SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,681.2902,-1274.3928,13.5805);}
 			case 13:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2511.3423,-1671.1489,13.4475);}
 			case 14:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,404.9639,2535.7507,16.5460);}
 			case 15:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,939.5961,-1224.0160,16.2889);}
 			case 16:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1145.1360,-1179.8810,32.0275);}
			case 17:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2814.3884,-1182.9852,25.2631);}
 			case 18:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2185.1260,-1765.0551,13.3761);}
 			case 19:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,681.3267,-481.9659,16.1875);}
 			case 20:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2794.2378,-1604.6234,10.9283);}
 			case 21:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1620.6208,-1868.0526,13.3828);}
 			case 22:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-395.0352,1746.6198,42.4297);}
			case 23:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1385.9492,-1648.4480,13.3787);
			}
		}
	}

	if(dialogid == TELEPORTE+2)
	{
		Controle(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0)
		{
			return SendClientMessage(playerid,COLOR_WHITE,"Você cancelou o menu de teleportes.");
		}
		switch(listitem)
		{
			case 0:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2155.7847,-1010.8846,62.9648);}
			case 1:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1919.1139,-1411.3921,13.5703);}
			case 2:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,369.8432,-2030.6160,7.6719);}
			case 3:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1869.9398,-1182.6571,23.8281);}
			case 4:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1741.1454,-1945.1676,13.5640);}
			case 5:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1242.5569,-2036.5902,60.0824);
			}
		}
	}

	if(dialogid == TELEPORTE+3)
	{
		Controle(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0)
		{
	 		return SendClientMessage(playerid,COLOR_WHITE,"Você cancelou o menu de teleportes.");
	 	}
		switch(listitem)
		{
			case 0:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1481.1926,-1764.2736,18.7958);}
		 	case 1:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1546.2761,-1675.5995,13.5620);}
		 	case 2:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1350.4865,-1753.2505,13.3582);}
		 	case 3:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1790.5725,-1167.3705,23.8281);}
		 	case 4:
 			{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1362.2240,-1279.7227,13.3828);}
			case 5:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2244.7954,-1663.5021,15.4766);}
		 	case 6:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2155.4363,-1171.3413,23.8206);}
		 	case 7:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1411.5593,-1699.5270,13.5395);}
		 	case 8:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2003.4354,-1444.1321,13.5621);}
		 	case 9:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1928.826904,-1776.405517,13.546895);}
			case 10:
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1462.395751,-1012.391174,26.843799);}
		 	case 11:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1631.8547,-1172.5637,24.0843);}
		 	case 12:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1637.6385,-1148.0294,23.90636);}
		 	case 13:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1460.6941,-1142.9766,24.3906);}
		 	case 14:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,454.1039,-1501.5459,30.8761);}
		 	case 15:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,661.0214,-573.4525,16.3359);}
		 	case 16:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1003.0009,-941.7861,41.6509);}
		 	case 17:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2420.6565,-1738.9923,13.5469);}
		 	case 18:
		 	{
			 	SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,961.7795,-944.9980,40.3419);
			}
		}
	}

   	if(dialogid == TELEPORTE+4)
	{
		Controle(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0)
		{
	 		return SendClientMessage(playerid,COLOR_WHITE,"Você cancelou o menu de teleportes.");
 		}
		switch(listitem)
		{
		case 0:
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2038.5096,-2628.2659,13.5469);
		}
 		case 1:
 		{
		 	SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1417.0,-295.8,14.1);
		}
 		case 2:
 		{
		 	SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1699.2,1435.1, 10.7);
		}
 		case 3:
 		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2390.8176,-2203.0850,33.2891);
		}
	 	case 4:
	 	{
		 	SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
		}
		case 5:
		{
			SetPlayerInterior(playerid,1);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1416.107000,0.268620,1000.926000);
		}
		case 6:
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2739.1577,-1745.2816,43.7656);
		}
 		case 7:
 		{
 			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2233.7336,-1736.8186,480.8216);
		}
 		case 8:
 		{
	 		SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1547.6465,-1355.1556,329.4779);
		}
  		}
	}

 	if(dialogid == 2568)
	{
	    Controle(playerid, 1);
	    if(!response)
		{
			return true;
		}
		switch(listitem)
        {
            case 0:
			{
			    ShowPlayerDialog(playerid,2587,DIALOG_STYLE_LIST,"Locais de Los Santos","Prefeitura\nDepartamento de Policia\n24-7\nLoja de Armas 1\nLoja de Armas 2\nBinco\nBanco\nMateriais Pegar\nMateriais Trocar\nRestaurante\nCassino","Selecionar","Voltar");
			}
			case 1:
			{
			    ShowPlayerDialog(playerid,2588,DIALOG_STYLE_LIST,"Locais de San Fierro","Prefeitura\nDepartamento de Policia\n24-7\nLoja de Armas 1\nLoja de Armas 2\nBinco\nBanco\nDP Rotam-SF","Selecionar","Voltar");
			}
		}
	}
	
   	if(dialogid == 2587)
    {
    	if(response == 0)
	    {
	    	return true;
      	}
       	if(response >= 1)
        {
	    	if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid, 1481.1622,-1744.3596,13.5469, 8.0);//pref
				SendClientMessage(playerid, COLOR_LIGHTRED, "A prefeitura foi marcado de vermelho no seu mapa");
       			return true;
   			}
		    if(listitem == 1)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "O Departamento de Policia foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, 1547.7819,-1675.5996,14.2347, 8.0);//dp
      			return true;
		    }
 	    	if(listitem == 2)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja 24-7 foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, 1352.2942,-1754.3951,13.3514, 8.0);//24-7
       			return true;
   			}
		    if(listitem == 3)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de armas 1 foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, 1790.2756,-1167.7000,23.8281, 8.0);//loja de armas 1
      			return true;
		    }
	    	if(listitem == 4)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de armas 2 foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, 1067.3152,-1873.4441,13.5469, 8.0);//loja de armas 2
       			return true;
   			}
		    if(listitem == 5)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de roupas BINCO foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, 2244.7954,-1663.5021,15.4766, 8.0);//binco
      			return true;
		    }
	    	if(listitem == 6)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "o Banco foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, 1462.4166,-1024.1844,23.8281, 8.0);//banco
       			return true;
   			}
		    if(listitem == 7)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "Materiais Pegar foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, 1836.8010,-1885.9580,13.4223, 8.0);// mat (pegar)
      			return true;
		    }
	    	if(listitem == 8)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Materiais trocar foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, 1953.4108,-1998.1029,13.5469, 8.0);//mat (trocar)
       			return true;
   			}
		    if(listitem == 9)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "O Restaurante foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, 1498.4607,-1585.2988,13.5469, 8.0);// restaurant
      			return true;
		    }
	    	if(listitem == 10)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "O Cassino foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, 1022.3507,-1126.6884,23.8700, 8.0);//cassino
       			return true;
   			}

   			return true;
      	}
       	return true;
   	}
   	if(dialogid == 2588)
    {
    	if(response == 0)
	    {
	    	return true;
      	}
       	if(response >= 1)
        {
	    	if(listitem == 0)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "A prefeitura foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, -2724.0400,-314.6145,7.1855, 8.0);//pref
       			return true;
   			}
		    if(listitem == 1)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "O Departamento de policia foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, -1605.5349,717.8321,11.9804, 8.0);//dp
      			return true;
		    }
 	    	if(listitem == 2)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja 24-7 foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, -2443.0581,750.8382,35.1786, 8.0);//24-7
       			return true;
   			}
		    if(listitem == 3)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de armas 1 foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, -2152.7910,484.6540,35.1719, 8.0);//loja de armas 1
      			return true;
		    }
	    	if(listitem == 4)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de armas 2 foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, -1991.4061,1042.1298,55.7266, 8.0);//loja de armas 2
       			return true;
   			}
		    if(listitem == 5)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "A Loja de roupas BINCO foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, -1700.1868,945.2588,24.8906, 8.0);//binco
      			return true;
		    }
	    	if(listitem == 6)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "O Banco foi marcado de vermelho no seu mapa");
				SetPlayerCheckpoint(playerid, -2758.8037,375.4605,4.3352, 8.0);//banco
       			return true;
   			}
		    if(listitem == 7)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "A Delegacia da ROTAM-SF foi marcado de vermelho no seu mapa");
		        SetPlayerCheckpoint(playerid, -1754.1541,957.5561,24.8828, 8.0);// mat (pegar)
      			return true;
		    }

   			return true;
      	}
       	return true;
   	}
	if(dialogid == DialogCasaGPS)
 	{
		if(response == 0)
	    {
	         return true;
	    }
	    if(response == 1)
	    {
	        new CasaThiago = strval(inputtext);
    		if(CasaThiago < 0 || CasaThiago > 202)
			{
				SendClientMessage(playerid, COR_CINZA1, "Casas de 0 à 202.");
				return true;
			}

            format(string, sizeof(string), "A casa %d foi marcada de vermelho no mapa!",strval(inputtext));
            SendClientMessage(playerid, VERDE2, string);
		    SetPlayerCheckpoint(playerid, HouseInfo[strval(inputtext)][hEntrancex], HouseInfo[strval(inputtext)][hEntrancey], HouseInfo[strval(inputtext)][hEntrancez], 3.0);
			return true;
   		}
	    return true;
   	}
   	if(dialogid == DialogEmpresaGPS)
    {
    	if(response == 0)
	    {
	    	return true;
      	}
       	if(response >= 1)
        {
	    	if(listitem == 0)
			{
   				ShowPlayerDialog(playerid, PegandoEmpresaTH, DIALOG_STYLE_INPUT, "GPS", "Digite o numero da Empresa !", "Confirmar", "Cancelar");
       			return true;
   			}
		    if(listitem == 1)
		    {
      			ShowPlayerDialog(playerid, PegandoMiniEmpresaTH, DIALOG_STYLE_INPUT, "GPS", "Digite o numero da Mini Empresa !", "Confirmar", "Cancelar");
      			return true;
		    }
   			return true;
      	}
       	return true;
   	}
    if(dialogid == PegandoEmpresaTH)
    {
   		if(response == 0)
     	{
      		return true;
        }
        if(response == 1)
        {
			new EmpresaThiago = strval(inputtext);
        	if(EmpresaThiago < 0 || EmpresaThiago > 5)
			{
				SendClientMessage(playerid, COR_CINZA1, "Empresas de 0 à 5.");
				return true;
			}

            format(string, sizeof(string), "A Empresa %d foi marcada de vermelho no radar!",strval(inputtext));
            SendClientMessage(playerid, VERDE2, string);
		    SetPlayerCheckpoint(playerid,BizzInfo[strval(inputtext)][bEntranceX],BizzInfo[strval(inputtext)][bEntranceY],BizzInfo[strval(inputtext)][bEntranceZ], 3.0);
			return true;
   		}
  		return true;
	}
	if(dialogid == PegandoMiniEmpresaTH)
	{
		if(response == 0)
	    {
	    	return true;
      	}
       	if(response == 1)
        {
            new MEmpresaThiago = strval(inputtext);
        	if(MEmpresaThiago < 0 || MEmpresaThiago > 23)
			{
				SendClientMessage(playerid, COR_CINZA1, "Mini Empresas de 0 à 23.");
				return true;
			}
           	format(string, sizeof(string), "A Mini Empresa %d foi marcada de vermelho no radar!",strval(inputtext));
            SendClientMessage(playerid, VERDE2, string);
		    SetPlayerCheckpoint(playerid,SBizzInfo[strval(inputtext)][sbEntranceX],SBizzInfo[strval(inputtext)][sbEntranceY],SBizzInfo[strval(inputtext)][sbEntranceZ], 3.0);
			return true;
   		}
     	return true;
	}
//FIM SISTEMA DE BANCO

	if(dialogid == 2569)
	{
	    Controle(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return true; }
		switch(listitem)
        {
            case 0:
			{
		    	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Detetive, terá que cumprir 5 Horas de contrato.\nPara se tornar Detetive, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 1;
		    	Controle(playerid, 1);
            }
            case 1:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Advogado, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Advogado, clique em aceitar.","Aceitar","Sair");
   				GettingEmprego[playerid] = 2;
   				Controle(playerid, 1);
            }
            case 2:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Profissional do sexo, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Profissional do sexo, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 3;
				Controle(playerid, 1);
            }
            case 3:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Vendedor De Drogas, terá que cumprir 5 Horas de contrato.\nPara aceitar o emprego, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 4;
				Controle(playerid, 1);
            }
            case 4:
			{
  				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","*Você está prestes a se tornar um(a) Mecânico, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Mecânico, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 5;
		    	Controle(playerid, 1);
            }
            case 5:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Segurança, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Segurança, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 6;
				Controle(playerid, 1);
            }
            case 6:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Vendedor De Armas, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Vendedor De Armas, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 7;
				Controle(playerid, 1);
            }
            case 7:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Boxeador, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Boxeador, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 8;
				Controle(playerid, 1);
            }
            case 8:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Motorista de Onibus, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Motorista de Onibus, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 9;
				Controle(playerid, 1);
            }
            case 9:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Emprego bloqueado no momento, escolha outro!");
				return 2;
            }
            case 10:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Caminhoneiro, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Caminhoneiro, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 11;
		    	Controle(playerid, 1);
            }
            case 11:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Happy","* Você está prestes a se tornar um(a) Poeta, terá que cumprir 5 Horas de contrato.\nPara se tornar um(a) Poeta, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 12;
		    	Controle(playerid, 1);
            }
	     }
	}


   	if(dialogid == 2586)
	{
	    if(!response)
		{
			GettingEmprego[playerid] = 0;
			return SendClientMessage(playerid, COLOR_GREY, "Você cancelou o emprego.");
		}
		else
		{
			PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
		    SendClientMessage(playerid, -1, "{FF0000}Play{00FF00}Happy: {FFFFFF}Você acabou de adquirir um novo emprego, digite /ajuda para ver os comandos!");
		}
	}
	if(dialogid == 2570)
	{
	    Controle(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
        	case 0:
			{
            	SetPlayerCheckpoint(playerid, 2155.7847,-1010.8846,62.9648,8.0);//Morro
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1919.1139,-1411.3921,13.5703,8.0);//Pista de Skate
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 369.8432,-2030.6160,7.6719,8.0);//Roda
            }
            case 3:
			{
				SetPlayerCheckpoint(playerid, 1869.9398,-1182.6571,23.8281,8.0);//Parque Gleen
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, 1741.1454,-1945.1676,13.5640,8.0);//Estacao Unity
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 1242.5569,-2036.5902,60.0824,8.0);//Casarao
            }
        }
	}
	if(dialogid == 2571)
	{
	    Controle(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return true; }
        switch(listitem)
        {
            case 0:
			{
                //Voo
                if(GetPlayerMoneyEx(playerid) < 800) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$800 para comprar");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-800);
                BizzInfo[5][bTill] += 800;
			    ExtortionBiz(5, 800);
                PlayerInfo[playerid][pFlyLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Comprou a Licença De Voo!");
            }
            case 1:
			{
                //Navegacao
                if(GetPlayerMoneyEx(playerid) < 800) return SendClientMessage(playerid,COLOR_GREY,"Você não R$800 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-800);
                BizzInfo[5][bTill] += 800;
			    ExtortionBiz(5, 800);
                PlayerInfo[playerid][pBoatLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Comprou a Licença De Navegação!");
            }
            case 2:
			{
                //Pesca
                if(GetPlayerMoneyEx(playerid) < 400) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$400 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-400);
                BizzInfo[5][bTill] += 400;
			    ExtortionBiz(5, 400);
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Comprou a Licença De Pesca!");
            }
            case 3:
			{
                //Armas
                if(GetPlayerMoneyEx(playerid) < 1200) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$1200 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-1200);
                BizzInfo[5][bTill] += 1200;
			    ExtortionBiz(5, 1200);
                PlayerInfo[playerid][pGunLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Comprou a Licença De Armas!");
            }
            case 4:
			{
                //Armas
                if(GetPlayerMoneyEx(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2000 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-2000);
                //BizzInfo[5][bTill] += 1200;
			    //ExtortionBiz(5, 1200);
                PlayerInfo[playerid][pCarLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Comprou a Licença de Motorista!");
            }
        }
	}
	if(dialogid == 2572)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
	    switch(listitem)
    	{
	       	case 0:
		    {
	            ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 1:
	        {
		    	ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 2:
    		{
	        	ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
	 		case 3:
		    {
	            ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 4:
	        {
		    	ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 5:
    		{
	        	ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
 			case 6:
		    {
	            ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de safe maconha em gramas","Pegar","Voltar");
 			}
 			case 7:
	        {
		    	ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de safe cocaina em gramas","Pegar","Voltar");
 			}
 			case 8:
    		{
	        	ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de safe crack em gramas","Pegar","Voltar");
 			}
		}
	}
	if(dialogid == 2573)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return true; } }
		if(PlayerInfo[playerid][pDrogas] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de maconha, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return true;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por R$%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[17][sbTill] += price;
		    ExtortionSBiz(17, price);
			PlayerInfo[playerid][pDrogas] = strval(inputtext)+PlayerInfo[playerid][pDrogas];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2574)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return true; } }
		if(PlayerInfo[playerid][pDrogas2] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de cocaina, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas2]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return true;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por R$%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[14][sbTill] += price;
		    ExtortionSBiz(14, price);
			PlayerInfo[playerid][pDrogas2] = strval(inputtext)+PlayerInfo[playerid][pDrogas2];
   		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2575)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return true; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return true; } }
		if(PlayerInfo[playerid][pDrogas3] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de crack, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas3]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return true;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por R$%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[15][sbTill] += price;
		    ExtortionSBiz(15, price);
			PlayerInfo[playerid][pDrogas3] = strval(inputtext)+PlayerInfo[playerid][pDrogas3];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2576)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return true;
		}
        if(PlayerInfo[playerid][pDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]-ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2577)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return true;
		}
        if(PlayerInfo[playerid][pDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]-ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2578)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return true;
		}
        if(PlayerInfo[playerid][pDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]-ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2579)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][pSafeDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]+ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de maconha no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2580)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][pSafeDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]+ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de cocaína no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2581)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][pSafeDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]+ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de crack no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2582)
	{
	    if(!response) { return true; }
		switch(listitem)
    	{
	       	case 0:
		    {
	            OnPlayerCommandText(playerid, "/equiparm");
 			}
 			case 1:
	        {
		    	ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
 			}
 			case 2:
    		{
	        	ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
 			}
		}
	}
	if(dialogid == 2583)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][psMats] >= quantidade)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantidade;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantidade;
			format(gstring, sizeof(gstring), "* Você pegou %d materiais no esconderijo!",quantidade);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2584)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][pMats] >= ammount)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-ammount;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d materiais!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return true;
		}
	}
	if(dialogid == 2585)
	{
		if(!response) { return true; }
		switch(listitem)
    	{
	       	case 0:
		    {
		        SetPlayerInterior(playerid, 0);
	            XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
	            storeexit[playerid] = 0;
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 6);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 246.2975,87.4735,1003.6406);
		    	storeexit[playerid] = 66;
 			}
 			case 2:
    		{
                SetPlayerInterior(playerid, 0);
	        	XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1565.1235,-1666.9944,28.3956);
	        	storeexit[playerid] = 0;
 			}
		}
	}
	
//Sistema de Cofre ORG
	if(dialogid == 9925)
	{
		if(response >= 1)
		{

			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 9926, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 150 balas\nShotgun - municão: 100 balas\nMp5- municão: 200 balas\nAK47 - municão: 200 balas\n1 Taco de Baseball\n1 Soqueira\n20 de maconha", "Equipar","Sair");
				//OnPlayerCommandText(playerid,"/equiipargc1");
				return true;
		 	}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 9927, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 180 balas\nShotgun - municão: 120 balas\nMp5- municão: 250 balas\nAK47 - municão: 250 balas\n1 Taco de Baseball\n1 Soqueira\n30 de maconha", "Equipar","Sair");
				return true;
		 	}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 9928, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 220 balas\nShotgun - municão: 150 balas\nMp5- municão: 300 balas\nAK47 - municão: 300 balas\n1 Taco de Baseball\n1 Soqueira\n50 de maconha", "Equipar","Sair");
				//OnPlayerCommandText(playerid,"/equipargc3");
				return true;
		 	}
   			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, 9929, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 250 balas\nShotgun - municão: 200 balas\nMp5- municão: 350 balas\nAK47 - municão: 350 balas\n1 Taco de Baseball\n1 Soqueira\n70 de maconha", "Equipar","Sair");
				//OnPlayerCommandText(playerid,"/equipargc4");
				return true;
		 	}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, 9930, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 320 balas\nShotgun - municão: 220 balas\nMp5- municão: 500 balas\nM4 - municão: 500 balas\nRifle - municão: 100 balas\n1 Taco de Baseball\n1 Soqueira\n80 de maconha", "Equipar","Sair");
				//OnPlayerCommandText(playerid,"/equipargc5");
				return true;
		 	}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 9931, DIALOG_STYLE_MSGBOX, "Equipamentos", "Eagle - municão: 500 balas\nShotgun - municão: 300 balas\nMp5- municão: 550 balas\nM4 - municão: 550 balas\nRifle - municão: 200 balas\n1 Taco de Baseball\n1 Soqueira\n100 de maconha", "Equipar","Sair");
				//OnPlayerCommandText(playerid,"/equipargc6");
				return true;
		 	}
		}
		return true;
	}
	if(dialogid == 9856)
	{
		if(response >= 1)
		{
			if(listitem == 0)
			{
				if(DonoBalao[playerid] == 1)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao = 1;
					return true;
				}
  				if(DonoBalao[playerid] == 2)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao2 = 1;
					return true;
				}
 				if(DonoBalao[playerid] == 3)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao3 = 1;
					return true;
				}
 				if(DonoBalao[playerid] == 4)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao4 = 1;
					return true;
				}
 				if(DonoBalao[playerid] == 5)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao5 = 1;
					return true;
				}
 				if(DonoBalao[playerid] == 6)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao6 = 1;
					return true;
				}
 				if(DonoBalao[playerid] == 7)
				{
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Lenta.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao7 = 1;
					return true;
				}
		 	}
			if(listitem == 1)
			{
			    if(DonoBalao[playerid] == 1)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 2)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao2 = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 3)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao3 = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 4)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao4 = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 5)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao5 = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 6)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao6 = 2;
					return true;
				}
 			    if(DonoBalao[playerid] == 7)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Normal.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao7 = 2;
					return true;
				}
		 	}
			if(listitem == 2)
			{
			    if(DonoBalao[playerid] == 1)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao = 3;
					return true;
				}
  			    if(DonoBalao[playerid] == 2)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao2 = 3;
					return true;
				}
 			    if(DonoBalao[playerid] == 3)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao3 = 3;
					return true;
				}
 			    if(DonoBalao[playerid] == 4)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao4 = 3;
					return true;
				}
 			    if(DonoBalao[playerid] == 5)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao5 = 3;
					return true;
				}
 			    if(DonoBalao[playerid] == 6)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao6 = 3;
					return true;
				}
 			    if(DonoBalao[playerid] == 7)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Rápida.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao7 = 3;
					return true;
				}
		 	}
   			if(listitem == 3)
			{
			    if(DonoBalao[playerid] == 1)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao = 4;
					return true;
				}
  			    if(DonoBalao[playerid] == 2)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao2 = 4;
					return true;
				}
  			    if(DonoBalao[playerid] == 3)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao3 = 4;
					return true;
				}
  			    if(DonoBalao[playerid] == 4)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao4 = 4;
					return true;
				}
  			    if(DonoBalao[playerid] == 5)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao5 = 4;
					return true;
				}
 			    if(DonoBalao[playerid] == 6)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao6 = 4;
					return true;
				}
  			    if(DonoBalao[playerid] == 7)
			    {
					format(string, sizeof(string), "* %s ajustou a velocidade do balão para: Máxima.",PlayerName(playerid));
		         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    VelocidadeBalao7 = 4;
					return true;
				}
		 	}
		}
		return true;
	}
    if(dialogid == 11)
	{
		if(response == 1)
		{
		    SendClientMessage(playerid, 0xFF8282AA,"Você pagou R$3500 para sair completamente recuperado do Hospital, tome mais cuidado.");
		    GivePlayerMoney(playerid, -3500);
		    KillTimer(TempoHospitalizado[playerid]);
		    KillTimer(TempoHospitalizado[playerid]);
		    Hospitalizadao(playerid);
      		for(new i = 0; i < MAX_PLAYERS; i++)
			{
        		if(IsPlayerConnected(i))
				{
            		if(GetPlayerOrg(i) == 4 || GetPlayerOrg(i) == 31)
					{
                		SendClientMessage(i, COLOR_LIGHTBLUE, "Uma pessoa comprou o remedio para sair do Hospital, você ganhou R$1000.");
                		GivePlayerMoney(i, 1000);
            		}
        		}
    		}
			return true;
		}
		else if(response == 0)
		{
		    Controle(playerid, 0);
            SendClientMessage(playerid, COLOR_LIGHTRED,"Você optou por continuar no hospital até se recuperar completamente dos ferimentos");
			return true;
    	}
    	return true;
	}

	if(dialogid == 8903)
	{
		if(response >= 1)
		{
		    if(listitem == 0)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa vermelho");
				return true;
			}
 		    if(listitem == 1)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa azul");
				return true;
			}
	  		if(listitem == 2)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa branco");
				return true;
			}
  	  		if(listitem == 3)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa preto");
				return true;
			}
			if(listitem == 4)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa rosa");
				return true;
			}
			if(listitem == 5)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa cinza");
				return true;
			}
			
  			if(listitem == 6)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa vinho");
				return true;
			}
  			if(listitem == 7)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa amarelo");
				return true;
			}
  			if(listitem == 8)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa verde");
				return true;
			}
  			if(listitem == 9)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa zzclaro");
				return true;
			}
  			if(listitem == 10)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa roxo");
				return true;
			}
			if(listitem == 11)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa prata");
				return true;
			}
    		if(listitem == 12)
		    {
				OnPlayerCommandText(playerid,"/ccarrocasa marrom");
				return true;
			}
		}
		return 0;
	}
	
	
	if(dialogid == 8906)
	{
	    new DialogBPH[1500];
		if(response >= 1)
		{
		    if(listitem == 0)//
		    {
				format(string, 128, "24-7\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura (Commerce)\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura (East Beach)\n");
				strcat(DialogBPH,string);
				format(string, 128, "Loja de armas\n");
				strcat(DialogBPH,string);
				format(string, 128, "Delegacia da PM\n");
				strcat(DialogBPH,string);
				format(string, 128, "Delegacia da PM - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "ROTAM - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura(Commerce) - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura(East Beach) - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Casarão\n");
				strcat(DialogBPH,string);
 				format(string, 128, "Territorio Unity\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Parque Gleen\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Morro\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Mansão do Madd Dogg\n");
				strcat(DialogBPH,string);
				ShowPlayerDialog(playerid, 8907, DIALOG_STYLE_LIST, "Cameras Segurança Los Santos",DialogBPH,"Acessar","Cancelar");
				return true;
			}
	  		if(listitem == 1)// 
		    {
		       	format(string, 128, "24-7\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura (Country Club)\n");
				strcat(DialogBPH,string);
 				format(string, 128, "Prefeitura (Downtown)\n");
				strcat(DialogBPH,string);
				format(string, 128, "Loja de armas\n");
				strcat(DialogBPH,string);
				format(string, 128, "Delegacia da PM\n");
				strcat(DialogBPH,string);
				format(string, 128, "Delegacia da PM - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "ROTAM - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "Prefeitura(Country Club) - Interior\n");
				strcat(DialogBPH,string);
 				format(string, 128, "Prefeitura(Downtown) - Interior\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Puteiro\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Construção\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Praia\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Navio\n");
				strcat(DialogBPH,string);
				format(string, 128, "Territorio Aeroporto\n");
				strcat(DialogBPH,string);
		        ShowPlayerDialog(playerid, 8908, DIALOG_STYLE_LIST, "Cameras Segurança San Fierro",DialogBPH,"Acessar","Cancelar");
				return true;
			}
  	  		if(listitem == 2)//
		    {
		       	format(string, 128, "Entrada LV\n");
				strcat(DialogBPH,string);
			  	format(string, 128, "Emerald: Entrada\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: Térreo\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 2º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 3º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 4º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 5º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 6º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 7º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 8º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 9º andar\n");
				strcat(DialogBPH,string);
				format(string, 128, "Emerald: 10º andar\n");
				strcat(DialogBPH,string);
   				format(string, 128, "Emerald: 1º Terraço\n");
				strcat(DialogBPH,string);
			   	format(string, 128, "Emerald: 2º Terraço\n");
				strcat(DialogBPH,string);
		        ShowPlayerDialog(playerid, 8909, DIALOG_STYLE_LIST, "Cameras Segurança Las Venturas",DialogBPH,"Acessar","Cancelar");
				return true;
			}
   	  		if(listitem == 3)//
		    {
				if(GetPlayerOrg(playerid) == 34 && PlayerInfo[playerid][pCargo] > 5)
				{
				    ShowPlayerDialog(playerid,8910, DIALOG_STYLE_INPUT, "Defina a senha","Defina a nova senha de acesso ao painel\nNumeros de 1 a 9","Definir","Cancelar");
				    return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode mudar a senha de acesso!");
				    return true;
				}
			}
 	  		if(listitem == 4)//
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 360.9077,205.1414,1008.3828);
		        SetPlayerInterior(playerid, 3);
		        SetCameraBehindPlayer(playerid);
				NaCamera[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 0);
				TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
				TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
				TextDrawHideForPlayer(playerid, TextRec[playerid]);
				return true;
			}
		}
		return 0;
	}
	
	if(dialogid == 8910)
	{
		if(response >= 1)
		{
      		format(gstring,sizeof(gstring),"/definirsenha %s",inputtext);
        	OnPlayerCommandText(playerid,gstring);
   		}
		return true;
	}
	if(dialogid == 8911)
	{
		if(response >= 1)
		{
      		format(gstring,sizeof(gstring),"/acessarcamerass %s",inputtext);
        	OnPlayerCommandText(playerid,gstring);
   		}
		return true;
	}

   	if(dialogid == 8912)
    {
        new rstring[256];
    	if(response == 0)
     	{
      		return 1;
        }
        if(response >= 1)
        {
        	format(rstring,sizeof(rstring),"/rBUG %s",inputtext);
        	OnPlayerCommandText(playerid,rstring);
         	return 1;
        }
        return 1;
    }
	
	if(dialogid == 8907)
	{
		if(response >= 1)
		{
		    if(listitem == 0)//24 - 7 LS
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1334.6313, -1743.1552, 29.8977, 1334.6313, -1743.1552, 29.8977 ,5000, CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1370.9540,-1754.0128,13.5521);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
	  		if(listitem == 1)// Pref - LS (Commerce)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1483.3023, -1729.0262, 22.2732 ,1483.3023, -1729.0262, 22.2732, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 1482.0903, -1738.8973, 21.2280,1482.0903, -1738.8973, 21.2280,5000 ,CAMERA_MOVE);
   				SetPlayerInterior(playerid, 0);
   				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1482.6171,-1769.5009,13.5469);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
 	  		if(listitem == 2)// Pref - LS (East Beach)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2810.1687, -1081.9837, 39.6626 ,2810.1687, -1081.9837, 39.6626, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 1482.0903, -1738.8973, 21.2280,1482.0903, -1738.8973, 21.2280,5000 ,CAMERA_MOVE);
   				SetPlayerInterior(playerid, 0);
   				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2785.8916,-1088.0073,30.7188);
				SetPlayerFacingAngle(playerid, 90.6171);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 3)// Loja de armas LS
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1058.1326, -1872.9680, 24.4793,1058.1326, -1872.9680, 24.4793 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 1064.9484, -1873.2060, 17.1658, 1064.9484, -1873.2060, 17.1658,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1026.2922,-1930.1968,12.7886);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}

  			if(listitem == 4)// DP - LS
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1526.0451, -1668.8969, 22.2694 ,1526.0451, -1668.8969, 22.2694, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 1535.6578, -1671.6533, 18.8492 ,1535.6578, -1671.6533, 18.8492 ,5000,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1577.6180,-1673.2339,19.8792);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 5)// Int DP - LS
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 269.7922, 75.9835, 1003.0452 ,269.7922, 75.9835, 1003.0452, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 262.1318, 82.4114, 999.2991 , 262.1318, 82.4114, 999.2991,5000,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 6);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 264.4978,82.3155,1004.6830);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 6)// Int Rotam - LS
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 203.8481, 180.7021, 1004.9763 ,203.8481, 180.7021, 1004.9763,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 1);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 193.9738,175.0059,1007.2417);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 7)// Int Pref LS (commerce)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 8)// Int Pref LS (east beach)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 2);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 9)// casarao
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1281.3691, -2008.3316, 71.9299 ,1281.3691, -2008.3316, 71.9299,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1236.6776,-2070.7102,59.8886);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 10)// unity
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1684.3660, -1945.9124, 28.2897 ,1684.3660, -1945.9124, 28.2897,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1683.2881,-1963.3058,14.1172);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 11)// PG
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1990.0914, -1249.6408, 36.0001,1990.0914, -1249.6408, 36.0001,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1972.9620,-1287.1128,28.4919);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 12)// Morro
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2177.7143, -1018.5062, 72.4801, 2177.7143, -1018.5062, 72.4801,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2186.4172,-997.5766,62.8565);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 13)// Mansão do Madd Dogg
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 385.8288, -2029.9749, 22.8205, 385.8288, -2029.9749, 22.8205,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 354.0010,-2068.3403,7.8359);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
		}
		return 0;
	}
	
	if(dialogid == 8723)
	{
		if(response >= 1)
		{
 		    Kick(playerid);
		}
		else
		{
		    Kick(playerid);
		}
	}

	if(dialogid == 8908)
	{
		if(response >= 1)
		{
 		    if(listitem == 0)//24-7 SF
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2434.0585, 720.8944, 40.7977, -2434.0585, 720.8944, 40.7977 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2408.4370,722.5980,35.1719);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  	  		if(listitem == 1)// Pref - SF (Country Club)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2731.1198, -300.7951, 17.5377 ,-2731.1198, -300.7951, 17.5377, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2726.5800, -309.7051, 14.1175, -2726.5800, -309.7051, 14.1175,5000 ,CAMERA_MOVE);
   				SetPlayerInterior(playerid, 0);
   				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2717.6074,-320.6719,14.5174);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   	  		if(listitem == 2)// Pref - SF (Downtown)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -1908.6489, 828.8952, 42.8886 ,-1908.6489, 828.8952, 42.8886, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2726.5800, -309.7051, 14.1175, -2726.5800, -309.7051, 14.1175,5000 ,CAMERA_MOVE);
   				SetPlayerInterior(playerid, 0);
   				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1855.3246,863.7321,87.1946);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 3)// Loja de armas - SF
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2009.5368, 1037.4631, 64.2462 , -2009.5368, 1037.4631, 64.2462, 5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -1999.6341, 1038.8548, 60.5001, -1999.6341, 1038.8548, 60.5001,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1969.8776,992.5302,58.8125);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}

  			if(listitem == 4)// DP - SF
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -1607.5292, 735.9051, 20.9471, -1607.5292, 735.9051, 20.9471,5000 , CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -1607.1802, 725.9112, 17.5269, -1607.1802, 725.9112, 17.5269,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1610.9825,713.7554,48.9375);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  			if(listitem == 5)// Int DP - SF
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 269.7922, 75.9835, 1003.0452 ,269.7922, 75.9835, 1003.0452 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 262.1318, 82.4114, 999.2991, 262.1318, 82.4114, 999.2991,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 6);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 1);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 264.4978,82.3155,1004.6830);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 6)// Int Rotam - SF
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 203.8481, 180.7021, 1004.9763 , 203.8481, 180.7021, 1004.9763,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 193.9738,175.0059,1007.2417);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 7)// Int Pref SF(country club)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 1);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 8)// Int Pref SF(Downtown)
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 3);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 3);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 9)// puteiro
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2648.5639, 1360.6842, 21.8779 ,-2648.5639, 1360.6842, 21.8779,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2660.2417,1418.8271,23.8592);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 10)// construcao
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2113.3452, 169.9012, 48.2802 ,-2113.3452, 169.9012, 48.2802,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2055.3149,259.5490,28.6399);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 11)// praia
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -2997.1215, 457.9920, 11.1850 ,-2997.1215, 457.9920, 11.1850,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2978.0056,463.0225,1.4561);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 12)// navio
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -1504.6976, 144.9815, 32.2321 ,-1504.6976, 144.9815, 32.2321,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1544.5105,123.8271,32.9672);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
			if(listitem == 13)// aero
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, -1512.6502, -434.3499, 18.2579 ,-1512.6502, -434.3499, 18.2579,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
      			SetPlayerInterior(playerid, 0);
      			XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1516.2347,-505.0099,28.1568);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
   				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
		}
		return 0;
	}
	
	if(dialogid == 9859)
	{
	    Controle(playerid, 1);
		if(response >= 1)
		{
  			OnPlayerCommandText(playerid,"/balaotop");
			return true;
		}
		return true;
	}

	if(dialogid == 8919)
	{
	    Controle(playerid, 1);
		if(response >= 1)
		{
 		    if(listitem == 0)
		    {
		        OnPlayerCommandText(playerid,"/equipTR");
				return true;
			}
 		    if(listitem == 1)
		    {
		        new string2[128];
			   	new DialogBPH[1500];
 				format(string2, 128, "{00CCFF}*********[PREÇO]*********\n\n");
				strcat(DialogBPH,string2);
				if(TipoTR[playerid] == 1)
				{
  					format(string2, 128, "{00FF00}Preço dos equipamentos: R$%d\n\n",PrecoMorro);
					strcat(DialogBPH,string2);
				}
  				if(TipoTR[playerid] == 2)
				{
  					format(string2, 128, "{00FF00}Preço dos equipamentos: R$%d\n\n",PrecoPG);
					strcat(DialogBPH,string2);
				}
  				if(TipoTR[playerid] == 3)
				{
  					format(string2, 128, "{00FF00}Preço dos equipamentos: R$%d\n\n",PrecoUnity);
					strcat(DialogBPH,string2);
				}
				if(TipoTR[playerid] == 4)
				{
  					format(string2, 128, "{00FF00}Preço dos equipamentos: R$%d\n\n",PrecoCasarao);
					strcat(DialogBPH,string2);
				}
    			if(TipoTR[playerid] == 5)
				{
  					format(string2, 128, "{00FF00}Preço dos equipamentos: R$%d\n\n",PrecoMaddDogg);
					strcat(DialogBPH,string2);
				}
				ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "{FFFFFF}Preco do Territorio", DialogBPH, "OK", "SAIR");
				return true;
			}
   		    if(listitem == 2)
		    {
		        if(GetPlayerOrg(playerid) < 1)
		        {
		            SendClientMessage(playerid, COLOR_GRAD2, "Você não pode definir o preço!");
		            return true;
				}
		        if(PlayerInfo[playerid][pCargo] > 3)
		        {
		            if(TipoTR[playerid] == 1)
		            {
						if(donomorro == GetPlayerOrg(playerid))
		            	{
							ShowPlayerDialog(playerid, 8922, DIALOG_STYLE_INPUT, "Preço dos equipamentos","Defina o preço dos equipamentos deste territorio","Definir","Sair");
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2,"Sua organização não é dona deste territorio!");
							return true;
						}
					}
		            if(TipoTR[playerid] == 2)
		            {
						if(donopark == GetPlayerOrg(playerid))
		            	{
							ShowPlayerDialog(playerid, 8922, DIALOG_STYLE_INPUT, "Preço dos equipamentos","Defina o preço dos equipamentos deste territorio","Definir","Sair");
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2,"Sua organização não é dona deste territorio!");
							return true;
						}
					}
   		            if(TipoTR[playerid] == 3)
		            {
						if(donoestacao == GetPlayerOrg(playerid))
		            	{
							ShowPlayerDialog(playerid, 8922, DIALOG_STYLE_INPUT, "Preço dos equipamentos","Defina o preço dos equipamentos deste territorio","Definir","Sair");
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2,"Sua organização não é dona deste territorio!");
							return true;
						}
					}
      		        if(TipoTR[playerid] == 4)
		            {
						if(donocasarao == GetPlayerOrg(playerid))
		            	{
							ShowPlayerDialog(playerid, 8922, DIALOG_STYLE_INPUT, "Preço dos equipamentos","Defina o preço dos equipamentos deste territorio","Definir","Sair");
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2,"Sua organização não é dona deste territorio!");
							return true;
						}
					}
      		        if(TipoTR[playerid] == 5)
		            {
						if(donoaero == GetPlayerOrg(playerid))
		            	{
							ShowPlayerDialog(playerid, 8922, DIALOG_STYLE_INPUT, "Preço dos equipamentos","Defina o preço dos equipamentos deste territorio","Definir","Sair");
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2,"Sua organização não é dona deste territorio!");
							return true;
						}
					}
				}
   				else
				{
				    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem cargo suficiente para definir!");
				    return 1;
				}
			}
		}
		return false;
	}

	if(dialogid == 8922)
	{
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao < 1 || definicao > 500000)
			{
		   	    SendClientMessage(playerid,COLOR_GRAD1,"[ERRO] Você definiu um preço invalido");
				return 1;
	  		}
	  		if(TipoTR[playerid] == 1)
	  		{
		   		format(string,sizeof(string),"Você definiu o preço dos equipamentos do morro para: R$%d.",definicao);
		   		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   		PrecoMorro = definicao;
		   		return true;
			}
  	  		if(TipoTR[playerid] == 2)
	  		{
		   		format(string,sizeof(string),"Você definiu o preço dos equipamentos do Parque Gleen para: R$%d.",definicao);
		   		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   		PrecoPG = definicao;
		   		return true;
			}
  	  		if(TipoTR[playerid] == 3)
	  		{
		   		format(string,sizeof(string),"Você definiu o preço dos equipamentos da Unity para: R$%d.",definicao);
		   		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   		PrecoUnity = definicao;
		   		return true;
			}
  	  		if(TipoTR[playerid] == 4)
	  		{
		   		format(string,sizeof(string),"Você definiu o preço dos equipamentos do Casarão para: R$%d.",definicao);
		   		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   		PrecoCasarao = definicao;
		   		return true;
			}
    	  	if(TipoTR[playerid] == 5)
	  		{
		   		format(string,sizeof(string),"Você definiu o preço dos equipamentos do Madd Dogg para: R$%d.",definicao);
		   		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   		PrecoMaddDogg = definicao;
		   		return true;
			}
   		}
		return true;
	}

	if(dialogid == 8909)
	{
		if(response >= 1)
		{
 		    if(listitem == 0)//entrada LV
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 1661.4241, -824.4493, 65.4594, 1661.4241, -824.4493, 65.4594 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1632.5416,-843.3266,75.4453);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
 		    if(listitem == 1)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2071.3466, 2455.6970, 18.4713, 2071.3466, 2455.6970, 18.4713 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2076.8347,2490.1584,10.8203);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 2)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2086.5546, 2413.6904, 12.9756, 2086.5546, 2413.6904, 12.9756 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 3)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2091.0100, 2399.5551, 17.9183, 2091.0100, 2399.5551, 17.9183 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
  		    if(listitem == 4)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2099.9316, 2404.8378, 22.2888, 2099.9316, 2404.8378, 22.2888 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 5)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2099.9316, 2404.8378, 25.9510, 2099.9316, 2404.8378, 25.9510 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 6)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2098.6154, 2409.8491, 30.1823, 2098.6154, 2409.8491, 30.1823 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 7)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2098.6154, 2409.8491, 34.5943, 2098.6154, 2409.8491, 34.5943 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 8)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2089.5283, 2411.3017, 39.4323, 2089.5283, 2411.3017, 39.4323 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 9)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2090.7421, 2397.6442, 43.6785, 2090.7421, 2397.6442, 43.6785 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 10)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2098.8125, 2410.4707, 47.9796, 2098.8125, 2410.4707, 47.9796 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 11)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2101.7131, 2422.4331, 51.1960,2101.7131, 2422.4331, 51.1960 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 12)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2108.8217, 2430.7543, 70.9799, 2108.8217, 2430.7543, 70.9799 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
   		    if(listitem == 13)//emerald
		    {
		        ClearChatbox(playerid, 100);
				InterpolateCameraPos( playerid, 2076.4880, 2424.4487, 87.2528, 2076.4880, 2424.4487, 87.2528 ,5000, CAMERA_MOVE);
				//InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
				SetPlayerInterior(playerid, 0);
				XXAirBreak[playerid] += 3;
				SetPlayerVirtualWorld(playerid, 0);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
				SendClientMessage(playerid, COLOR_VERDE2, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
				ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
  				TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
				TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
				NaCamera[playerid] = 5;
				return true;
			}
		}
		return 0;
	}

	if(dialogid == 9926)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc1");
				return true;
		}
		return 0;
	}
	if(dialogid == 9927)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc2");
				return true;
		}
		return 0;
	}
	if(dialogid == 9928)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc3");
				return true;
		}
		return 0;
	}
	if(dialogid == 9929)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc4");
				return true;
		}
		return 0;
	}
	if(dialogid == 9930)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc5");
				return true;
		}
		return 0;
	}
	if(dialogid == 9931)
	{
		if(response >= 1)
		{
				OnPlayerCommandText(playerid,"/equipargc6");
				return true;
		}
		return 0;
	}

	if(dialogid == 12)
	{
	    new DialogInfoorg[1500];
		if(!response) return true;
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
			if(listitem == 0)
			{
				format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d",CofreOrg[org][Dinheiro]);
			    ShowPlayerDialog(playerid, 13, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Depositar","Sair");
			    return true;
			}
			if(listitem == 1)
			{
   				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
				   || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
				 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    	    	{
    	    	    SendClientMessage(playerid, COLOR_WHITE," Sua organização não trabalha com Materiais!");
    	    	    return 1;
	    	    }
				format(string,sizeof(string),"A Sua Organização tem %d de Materiais",CofreOrg[org][Materiais]);
			    ShowPlayerDialog(playerid, 14, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Depositar","Sair");
			    return true;
			}
			if(listitem == 2)
			{
  				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
				   || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
				 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    	    	{
    	    	    SendClientMessage(playerid, COLOR_WHITE," Sua organização não trabalha com Drogas!");
    	    	    return 1;
	    	    }

				format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nO que você deseja fazer ?",CofreOrg[org][Maconha]);
			    ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return true;
			}
			if(listitem == 3)
			{
  				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
				   || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
				 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    	    	{
    	    	    SendClientMessage(playerid, COLOR_WHITE," Sua organização não trabalha com Drogas!");
    	    	    return 1;
	    	    }
				format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nO que você deseja fazer ?",CofreOrg[org][Cocaina]);
			    ShowPlayerDialog(playerid, 16, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return true;
			}
			if(listitem == 4)
			{
  				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
				   || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
				 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    	    	{
    	    	    SendClientMessage(playerid, COLOR_WHITE," Sua organização não trabalha com Materiais!");
    	    	    return 1;
	    	    }
				format(string,sizeof(string),"A Sua Organização tem %d de Crack\nO que você deseja fazer ?",CofreOrg[org][Crack]);
			    ShowPlayerDialog(playerid, 17, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return true;
			}
            if(listitem == 5)
			{
				ShowPlayerDialog(playerid, 9925, DIALOG_STYLE_LIST, "Equipamentos", "Cargo 1\nCargo 2\nCargo 3\nCargo 4\nCargo 5\nCargo 6", "Selecionar", "Sair");
				//OnPlayerCommandText(playerid,"/equiiparg");
			    //OnPlayerCommandText(playerid,"/equiparterrorista");
			    return true;
            }
            if(listitem == 6)
			{
			format(string,sizeof(string),"Lider:  %s\n",InfoOrg[org][Lider]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Sub-Lider:  %s\n\n",InfoOrg[org][SubLider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider2:  %s\n\n",InfoOrg[org][SubLider2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"membro 1:  %s\n",InfoOrg[org][Membro1]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 2:  %s\n",InfoOrg[org][Membro2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 3:  %s\n",InfoOrg[org][Membro3]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 4:  %s\n",InfoOrg[org][Membro4]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 5:  %s\n",InfoOrg[org][Membro5]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 6:  %s\n",InfoOrg[org][Membro6]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 7:  %s\n",InfoOrg[org][Membro7]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 8:  %s\n",InfoOrg[org][Membro8]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 9:  %s\n",InfoOrg[org][Membro9]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 10:  %s\n",InfoOrg[org][Membro10]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"membro 11:  %s\n",InfoOrg[org][Membro11]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 12:  %s\n",InfoOrg[org][Membro12]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 13:  %s\n",InfoOrg[org][Membro13]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 14:  %s\n",InfoOrg[org][Membro14]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 15:  %s\n",InfoOrg[org][Membro15]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 16:  %s\n",InfoOrg[org][Membro16]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 17:  %s\n",InfoOrg[org][Membro17]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 18:  %s\n",InfoOrg[org][Membro18]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 19:  %s\n",InfoOrg[org][Membro19]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 20:  %s\n",InfoOrg[org][Membro20]);
   			strcat(DialogInfoorg,string);
   			ShowPlayerDialog(playerid, 9919, DIALOG_STYLE_LIST, "Membros da Organização", DialogInfoorg, "OK", "SAIR");
			return true;
	       }
      		if(listitem == 7)
			{
			format(string,sizeof(string),"{33FF00}»|-----[ Lideres ]-----|«\n");
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Lider:  %s\n",InfoOrg[org][Lider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider:  %s\n",InfoOrg[org][SubLider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider2:  %s\n",InfoOrg[org][SubLider2]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"{33FF00}»|-----[ Cofre ]-----|«\n");
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Dinheiro: R$%d\n",CofreOrg[org][Dinheiro]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Maconha: %d\n",CofreOrg[org][Maconha]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Crack: %d\n",CofreOrg[org][Crack]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Cocaina: %d\n",CofreOrg[org][Cocaina]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Materiais: %d\n",CofreOrg[org][Materiais]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"{33FF00}»|-----[ Pedidos ]-----|«\n");
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Pedindo %d de Materiais e Paga R$%d\n",CofreOrg[org][cMateriais], CofreOrg[org][mMateriais]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Pedindo %d de Maconha e Paga R$%d\n",CofreOrg[org][cMaconha], CofreOrg[org][mMaconha]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"{33FF00}»|-----[ Salarios ]-----|«\n");
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 1: R$%d\n",CofreOrg[org][salarioc1]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 2: R$%d\n",CofreOrg[org][salarioc2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 3: R$%d\n",CofreOrg[org][salarioc3]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 4: R$%d\n",CofreOrg[org][salarioc4]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 5: R$%d\n",CofreOrg[org][salarioc5]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"SubLideres: R$%d\n",CofreOrg[org][salarioc5]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"LIDER: R$%d\n",CofreOrg[org][salariolider]);
   			strcat(DialogInfoorg,string);
		   	ShowPlayerDialog(playerid, 9919, DIALOG_STYLE_LIST, "Informações da HQ", DialogInfoorg, "OK", "SAIR");
            }
      		if(listitem == 8)
			{
				ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Organização", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
            }
            if(listitem == 9)
			{
			if(IsPlayerOnline(InfoOrg2[org][Candidato1]))
			{
   				format(string,sizeof(string),"Candidato 1:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato1]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 1:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato1]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato2]))
			{
   				format(string,sizeof(string),"Candidato 2:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato2]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 2:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato2]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato3]))
			{
   				format(string,sizeof(string),"Candidato 3:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato3]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 3:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato3]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato4]))
			{
   				format(string,sizeof(string),"Candidato 4:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato4]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 4:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato4]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato5]))
			{
   				format(string,sizeof(string),"Candidato 5:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato5]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 5:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato5]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato6]))
			{
   				format(string,sizeof(string),"Candidato 6:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato6]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 6:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato6]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato7]))
			{
   				format(string,sizeof(string),"Candidato 7:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato7]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 7:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato7]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato8]))
			{
   				format(string,sizeof(string),"Candidato 8:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato8]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 8:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato8]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato9]))
			{
   				format(string,sizeof(string),"Candidato 9:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato9]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 9:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato9]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato10]))
			{
   				format(string,sizeof(string),"Candidato 10:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato10]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 10:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato10]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato11]))
			{
   				format(string,sizeof(string),"Candidato 11:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato11]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 11:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato11]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato12]))
			{
   				format(string,sizeof(string),"Candidato 12:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato12]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 12:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato12]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato13]))
			{
   				format(string,sizeof(string),"Candidato 13:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato13]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 13:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato13]);
   				strcat(DialogInfoorg,string);
   			}
   			if(IsPlayerOnline(InfoOrg2[org][Candidato14]))
			{
   				format(string,sizeof(string),"Candidato 14:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato14]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 14:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato14]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato15]))
			{
   				format(string,sizeof(string),"Candidato 15:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato15]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 15:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato15]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato16]))
			{
   				format(string,sizeof(string),"Candidato 16:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato16]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 16:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato16]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato17]))
			{
   				format(string,sizeof(string),"Candidato 17:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato17]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 17:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato17]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato18]))
			{
   				format(string,sizeof(string),"Candidato 18:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato18]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 18:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato18]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato19]))
			{
   				format(string,sizeof(string),"Candidato 19:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato19]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 19:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato19]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato20]))
			{
   				format(string,sizeof(string),"Candidato 20:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato20]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 20:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato20]);
   				strcat(DialogInfoorg,string);
   			}
   			ShowPlayerDialog(playerid, 9919, DIALOG_STYLE_LIST, "Candidatos para a Organização", DialogInfoorg, "OK", "SAIR");
			return true;
			}
            if(listitem == 10)
			{
			if(PlayerInfo[playerid][pCargo] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Somente cargo 4+ podem acessar esta Area");
				return true;
			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato1]))
			{
   				format(string,sizeof(string),"Candidato 1:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato1]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 1:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato1]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato2]))
			{
   				format(string,sizeof(string),"Candidato 2:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato2]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 2:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato2]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato3]))
			{
   				format(string,sizeof(string),"Candidato 3:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato3]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 3:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato3]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato4]))
			{
   				format(string,sizeof(string),"Candidato 4:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato4]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 4:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato4]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato5]))
			{
   				format(string,sizeof(string),"Candidato 5:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato5]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 5:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato5]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato6]))
			{
   				format(string,sizeof(string),"Candidato 6:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato6]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 6:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato6]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato7]))
			{
   				format(string,sizeof(string),"Candidato 7:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato7]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 7:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato7]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato8]))
			{
   				format(string,sizeof(string),"Candidato 8:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato8]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 8:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato8]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato9]))
			{
   				format(string,sizeof(string),"Candidato 9:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato9]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 9:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato9]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato10]))
			{
   				format(string,sizeof(string),"Candidato 10:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato10]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 10:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato10]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato11]))
			{
   				format(string,sizeof(string),"Candidato 11:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato11]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 11:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato11]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato12]))
			{
   				format(string,sizeof(string),"Candidato 12:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato12]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 12:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato12]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato13]))
			{
   				format(string,sizeof(string),"Candidato 13:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato13]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 13:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato13]);
   				strcat(DialogInfoorg,string);
   			}
   			if(IsPlayerOnline(InfoOrg2[org][Candidato14]))
			{
   				format(string,sizeof(string),"Candidato 14:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato14]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 14:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato14]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato15]))
			{
   				format(string,sizeof(string),"Candidato 15:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato15]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 15:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato15]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato16]))
			{
   				format(string,sizeof(string),"Candidato 16:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato16]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 16:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato16]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato17]))
			{
   				format(string,sizeof(string),"Candidato 17:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato17]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 17:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato17]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato18]))
			{
   				format(string,sizeof(string),"Candidato 18:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato18]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 18:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato18]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato19]))
			{
   				format(string,sizeof(string),"Candidato 19:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato19]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 19:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato19]);
   				strcat(DialogInfoorg,string);
   			}
			if(IsPlayerOnline(InfoOrg2[org][Candidato20]))
			{
   				format(string,sizeof(string),"Candidato 20:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato20]);
   				strcat(DialogInfoorg,string);
   			}
   			else
   			{
   				format(string,sizeof(string),"Candidato 20:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato20]);
   				strcat(DialogInfoorg,string);
   			}
   			ShowPlayerDialog(playerid, 8991, DIALOG_STYLE_LIST, "Clique no Nome para Limpar", DialogInfoorg, "Limpar", "Sair");
			return true;
			}
		}
	    return true;
	}
	if(dialogid == 8991)
	{
		if(response >= 1)
		{
		    if(listitem == 0)
			{
				OnPlayerCommandText(playerid,"/lcandidato 1");
				MostrarCandidatos(playerid);
				return true;
			}
   			if(listitem == 1)
			{
				OnPlayerCommandText(playerid,"/lcandidato 2");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 2)
			{
				OnPlayerCommandText(playerid,"/lcandidato 3");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 3)
			{
				OnPlayerCommandText(playerid,"/lcandidato 4");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 4)
			{
				OnPlayerCommandText(playerid,"/lcandidato 5");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 5)
			{
				OnPlayerCommandText(playerid,"/lcandidato 6");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 6)
			{
				OnPlayerCommandText(playerid,"/lcandidato 7");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 7)
			{
				OnPlayerCommandText(playerid,"/lcandidato 8");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 8)
			{
				OnPlayerCommandText(playerid,"/lcandidato 9");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 9)
			{
				OnPlayerCommandText(playerid,"/lcandidato 10");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 10)
			{
				OnPlayerCommandText(playerid,"/lcandidato 11");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 11)
			{
				OnPlayerCommandText(playerid,"/lcandidato 12");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 12)
			{
				OnPlayerCommandText(playerid,"/lcandidato 13");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 13)
			{
				OnPlayerCommandText(playerid,"/lcandidato 14");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 14)
			{
				OnPlayerCommandText(playerid,"/lcandidato 15");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 15)
			{
				OnPlayerCommandText(playerid,"/lcandidato 16");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 16)
			{
				OnPlayerCommandText(playerid,"/lcandidato 17");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 17)
			{
				OnPlayerCommandText(playerid,"/lcandidato 18");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 18)
			{
				OnPlayerCommandText(playerid,"/lcandidato 19");
				MostrarCandidatos(playerid);
				return true;
			}
			if(listitem == 19)
			{
				OnPlayerCommandText(playerid,"/lcandidato 20");
				MostrarCandidatos(playerid);
				return true;
			}
		}
		return 0;
	}
	if(dialogid == 8901)
	{
		new CheckNumero = TipoOrg[playerid];
		new DialogInfoorg[1500];
		Controle(playerid, 1);
		if(!response) return true;
		if(response >= 1)
		{
            if(listitem == 0)
			{
			format(string,sizeof(string),"Lider:  %s\n",InfoOrg[CheckNumero][Lider]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Sub-Lider:  %s\n\n",InfoOrg[CheckNumero][SubLider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider2:  %s\n\n",InfoOrg[CheckNumero][SubLider2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"membro 1:  %s\n",InfoOrg[CheckNumero][Membro1]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 2:  %s\n",InfoOrg[CheckNumero][Membro2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 3:  %s\n",InfoOrg[CheckNumero][Membro3]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 4:  %s\n",InfoOrg[CheckNumero][Membro4]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 5:  %s\n",InfoOrg[CheckNumero][Membro5]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 6:  %s\n",InfoOrg[CheckNumero][Membro6]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 7:  %s\n",InfoOrg[CheckNumero][Membro7]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 8:  %s\n",InfoOrg[CheckNumero][Membro8]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 9:  %s\n",InfoOrg[CheckNumero][Membro9]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 10:  %s\n",InfoOrg[CheckNumero][Membro10]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"membro 11:  %s\n",InfoOrg[CheckNumero][Membro11]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 12:  %s\n",InfoOrg[CheckNumero][Membro12]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 13:  %s\n",InfoOrg[CheckNumero][Membro13]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 14:  %s\n",InfoOrg[CheckNumero][Membro14]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 15:  %s\n",InfoOrg[CheckNumero][Membro15]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 16:  %s\n",InfoOrg[CheckNumero][Membro16]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 17:  %s\n",InfoOrg[CheckNumero][Membro17]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 18:  %s\n",InfoOrg[CheckNumero][Membro18]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 19:  %s\n",InfoOrg[CheckNumero][Membro19]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Membro 20:  %s\n",InfoOrg[CheckNumero][Membro20]);
   			strcat(DialogInfoorg,string);
   			ShowPlayerDialog(playerid, 9919, DIALOG_STYLE_LIST, "Membros da Organização", DialogInfoorg, "OK", "SAIR");
			return true;
	       }
      		if(listitem == 1)
			{
  			format(string,sizeof(string),"{33FF00}»|-----[ Lideres ]-----|«\n");
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Lider:  %s\n",InfoOrg[CheckNumero][Lider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider:  %s\n",InfoOrg[CheckNumero][SubLider]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Sub-Lider2:  %s\n",InfoOrg[CheckNumero][SubLider2]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"{33FF00}»|-----[ Cofre ]-----|«\n");
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Dinheiro: R$%d\n",CofreOrg[CheckNumero][Dinheiro]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Maconha: %d\n",CofreOrg[CheckNumero][Maconha]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Crack: %d\n",CofreOrg[CheckNumero][Crack]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Cocaina: %d\n",CofreOrg[CheckNumero][Cocaina]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Materiais: %d\n",CofreOrg[CheckNumero][Materiais]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"{33FF00}»|-----[ Pedidos ]-----|«\n");
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Pedindo %d de Materiais e Paga R$%d\n",CofreOrg[CheckNumero][cMateriais], CofreOrg[CheckNumero][mMateriais]);
   			strcat(DialogInfoorg,string);
			format(string,sizeof(string),"Pedindo %d de Maconha e Paga R$%d\n",CofreOrg[CheckNumero][cMaconha], CofreOrg[CheckNumero][mMaconha]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"{33FF00}»|-----[ Salarios ]-----|«\n");
   			strcat(DialogInfoorg,string);
 			format(string,sizeof(string),"Cargo 1: R$%d\n",CofreOrg[CheckNumero][salarioc1]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 2: R$%d\n",CofreOrg[CheckNumero][salarioc2]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 3: R$%d\n",CofreOrg[CheckNumero][salarioc3]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 4: R$%d\n",CofreOrg[CheckNumero][salarioc4]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"Cargo 5: R$%d\n",CofreOrg[CheckNumero][salarioc5]);
   			strcat(DialogInfoorg,string);
       		format(string,sizeof(string),"SubLideres: R$%d\n",CofreOrg[CheckNumero][salarioc5]);
   			strcat(DialogInfoorg,string);
   			format(string,sizeof(string),"LIDER: R$%d\n",CofreOrg[CheckNumero][salariolider]);
   			strcat(DialogInfoorg,string);
		   	ShowPlayerDialog(playerid, 9919, DIALOG_STYLE_LIST, "Informações da HQ", DialogInfoorg, "OK", "SAIR");
            }
      		if(listitem == 2)
			{
   				if(TipoOrg[playerid] == 1 || TipoOrg[playerid] == 2 || TipoOrg[playerid] == 3 || TipoOrg[playerid] == 4|| TipoOrg[playerid] == 7
   					|| TipoOrg[playerid] == 9|| TipoOrg[playerid] == 10|| TipoOrg[playerid] == 11|| TipoOrg[playerid] == 16|| TipoOrg[playerid] == 27|| TipoOrg[playerid] == 30
				   	|| TipoOrg[playerid] == 31|| TipoOrg[playerid] == 32)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] Esta HQ não trabalha com materiais");
			        return 1;
				}
			    if(PlayerInfo[playerid][pEmprego] != 7)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] Area somente para vendedores de armas");
			        return 1;
				}
			    if(CofreOrg[CheckNumero][cMateriais] < 2)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] A organização não está precisando de materiais no momento");
			        return 1;
				}
				format(string,sizeof(string),"A HQ paga R$%d por %d Materiais\nDeseja vender?",CofreOrg[CheckNumero][mMateriais], CofreOrg[CheckNumero][cMateriais]);
		    	ShowPlayerDialog(playerid, 8920, DIALOG_STYLE_MSGBOX, "Definição de Materiais", string, "Vender", "Cancelar");
				return true;
            }
      		if(listitem == 3)
			{
				if(TipoOrg[playerid] == 1 || TipoOrg[playerid] == 2 || TipoOrg[playerid] == 3 || TipoOrg[playerid] == 4|| TipoOrg[playerid] == 7
   					|| TipoOrg[playerid] == 9|| TipoOrg[playerid] == 10|| TipoOrg[playerid] == 11|| TipoOrg[playerid] == 16|| TipoOrg[playerid] == 27|| TipoOrg[playerid] == 30
				   	|| TipoOrg[playerid] == 31|| TipoOrg[playerid] == 32)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] Esta HQ não trabalha com Drogas");
			        return 1;
				}
			    if(PlayerInfo[playerid][pEmprego] != 4)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] Area somente para vendedores de drogas");
			        return 1;
				}
			    if(CofreOrg[CheckNumero][cMaconha] < 2)
			    {
			        SendClientMessage(playerid, COLOR_GRAD2, "[ERRO] A organização não está precisando de Maconha no momento");
			        return 1;
				}
				format(string,sizeof(string),"A HQ paga R$%d por %d Maconhas\nDeseja vender?",CofreOrg[CheckNumero][mMaconha], CofreOrg[CheckNumero][cMaconha]);
		    	ShowPlayerDialog(playerid, 8921, DIALOG_STYLE_MSGBOX, "Definição de Maconha", string, "Vender", "Cancelar");
				return true;
            }
      		if(listitem == 4)
			{
				if(PediuPraEntrar[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ERRO] Espere um pouco para pedir pra entrar em uma organização novamente");
			        return 1;
				}
				DCandidatoInfoOrg(PlayerName(playerid), CheckNumero);
			    TempoPediu[playerid] = SetTimerEx("PediuAgora", 100000, 0, "i", playerid);
			    PediuPraEntrar[playerid] = 1;
				format(string,sizeof(string),"ATENÇÃO: %s está pedindo para entrar na organização",PlayerName(playerid));
				SendFamilyMessage(CheckNumero, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string),"Info: Nivel:[%d] Horas Jogadas:[%d] Celular:[%d] ID:[%d]",PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pConnectTime], PlayerInfo[playerid][pPnumber], playerid);
				SendFamilyMessage(CheckNumero, COLOR_LIGHTBLUE, string);
				SendClientMessage(playerid, COLOR_WHITE, "Você pediu para entrar na organização, aguarde uma resposta dos lideres");
				CandidatoInfoOrg(PlayerName(playerid), CheckNumero, 1);
            }
		}
	    return true;
	}

	if(dialogid == 8920)
	{
	    new CheckNumero = TipoOrg[playerid];
	   	if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
			if(PlayerInfo[playerid][pMats] < CofreOrg[CheckNumero][cMateriais])
			{
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ERRO] Você não tem os materiais que a HQ precisa em mãos");
				return 1;
			}
			if(CofreOrg[CheckNumero][Dinheiro] < CofreOrg[CheckNumero][mMateriais])
			{
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ERRO] A Organização não pode pagar pelos materiais");
				return 1;
			}
			PlayerInfo[playerid][pMats] -= CofreOrg[CheckNumero][cMateriais];
			GivePlayerMoney(playerid, CofreOrg[CheckNumero][mMateriais]);
			SacarGranaOrg(CheckNumero,CofreOrg[CheckNumero][mMateriais]);
			CofreOrg[CheckNumero][Materiais] += CofreOrg[CheckNumero][cMateriais];
			CofreOrg[CheckNumero][Dinheiro] -= CofreOrg[CheckNumero][mMateriais];
		   	format(string,sizeof(string),"Você vendeu %d materiais por R$%d para a HQ %d", CofreOrg[CheckNumero][cMateriais], CofreOrg[CheckNumero][mMateriais], CheckNumero);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		   	DepositarMaterialOrg(CheckNumero,CofreOrg[CheckNumero][cMateriais]);
		   	CofreOrg[CheckNumero][cMateriais] = 0;
		   	CofreOrg[CheckNumero][mMateriais] = 0;
		   	SalvarmMateriais(CheckNumero,0);
		   	SalvarcMateriais(CheckNumero,0);
			return true;
		}
	}
	
	if(dialogid == 8921)
	{
	    new CheckNumero = TipoOrg[playerid];
	   	if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
			if(PlayerInfo[playerid][pDrogas] < CofreOrg[CheckNumero][cMaconha])
			{
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ERRO] Você não tem a quantidade de drogas que a HQ precisa em mãos");
				return 1;
			}
			if(CofreOrg[CheckNumero][Dinheiro] < CofreOrg[CheckNumero][mMaconha])
			{
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ERRO] A Organização não pode pagar pela Maconha");
				return 1;
			}
			PlayerInfo[playerid][pDrogas] -= CofreOrg[CheckNumero][cMaconha];
			DepositarMaconhaOrg(CheckNumero,CofreOrg[CheckNumero][cMaconha]);
			GivePlayerMoney(playerid, CofreOrg[CheckNumero][mMaconha]);
			SacarGranaOrg(CheckNumero,CofreOrg[CheckNumero][mMaconha]);
			CofreOrg[CheckNumero][Maconha] += CofreOrg[CheckNumero][cMaconha];
		   	format(string,sizeof(string),"Você vendeu %d Maconha por R$%d para a HQ %d", CofreOrg[CheckNumero][cMaconha], CofreOrg[CheckNumero][mMaconha], CheckNumero);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		   	CofreOrg[CheckNumero][cMateriais] = 0;
		   	CofreOrg[CheckNumero][mMateriais] = 0;
		   	SalvarmMaconha(CheckNumero,0);
		   	SalvarcMaconha(CheckNumero,0);
			return true;
		}
	}
	if(dialogid == 8547)
	{
	    new org = GetPlayerOrg(playerid);
		if(response == 0)
		{
		    ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre da ORG", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			return true;
		}
		if(PlayerInfo[playerid][pCargo] < 5)
		{
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Você deve ter cargo 5+ para poder acessar esta área");
			return 1;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Maconha ao Equipar\nAtualmente está definido em: %d Maconha",CofreOrg[org][dMaconha]);
		    	ShowPlayerDialog(playerid, 8549, DIALOG_STYLE_INPUT, "Definição de Maconha", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Voltar");
				return true;
			}
			if(listitem == 2)
			{
		    	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Voltar");
				return true;
			}
			if(listitem == 3)
			{
		    	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Voltar");
				return true;
			}
			if(listitem == 4)
			{
		    	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Voltar");
				return true;
			}
			if(listitem == 5)
			{
		    	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Voltar");
				return true;
			}
  			if(listitem == 6)
			{
		    	format(string,sizeof(string),"Defina o Pedido de Materiais\nAtualmente está definido em: %d Materiais",CofreOrg[org][cMateriais]);
		   		ShowPlayerDialog(playerid, 8850, DIALOG_STYLE_INPUT, "Pedido de Materiais", string, "Salvar", "Cancelar");
				return true;
			}
 			if(listitem == 7)
			{
		    	format(string,sizeof(string),"Defina o Pedido de Maconha\nAtualmente está definido em: %d Maconha",CofreOrg[org][cMaconha]);
		   		ShowPlayerDialog(playerid, 8851, DIALOG_STYLE_INPUT, "Pedido de Maconha", string, "Salvar", "Cancelar");
				return true;
			}
 			if(listitem == 8)
			{
		    	format(string,sizeof(string),"Salario Cargo  1\nSalario Cargo 2\nSalario Cargo 3\nSalario Cargo 4\nSalario Cargo 5 e SubLideres\nSalario Lider");
		   		ShowPlayerDialog(playerid, 8877, DIALOG_STYLE_LIST, "Salarios", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}
	

	if(dialogid == 8877)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina o Salario do Cargo 1\nAtualmente esta definido em %d",CofreOrg[org][salarioc1]);
		    	ShowPlayerDialog(playerid, 8878, DIALOG_STYLE_INPUT, "Salario Cargo 1", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina o Salario do Cargo 2\nAtualmente esta definido em %d",CofreOrg[org][salarioc2]);
		    	ShowPlayerDialog(playerid, 8879, DIALOG_STYLE_INPUT, "Salario Cargo 2", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina o Salario do Cargo 3\nAtualmente esta definido em %d",CofreOrg[org][salarioc3]);
		    	ShowPlayerDialog(playerid, 8880, DIALOG_STYLE_INPUT, "Salario Cargo 3", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina o Salario do Cargo 4\nAtualmente esta definido em %d",CofreOrg[org][salarioc4]);
		    	ShowPlayerDialog(playerid, 8881, DIALOG_STYLE_INPUT, "Salario Cargo 4", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina o Salario do Cargo 5 e SUBs\nAtualmente esta definido em %d",CofreOrg[org][salarioc5]);
		    	ShowPlayerDialog(playerid, 8882, DIALOG_STYLE_INPUT, "Salario Cargo 5 e SUBs", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 5)
			{
		    	format(string,sizeof(string),"Defina o Salario do Lider\nAtualmente esta definido em %d",CofreOrg[org][salariolider]);
		    	ShowPlayerDialog(playerid, 8883, DIALOG_STYLE_INPUT, "Salario Lider", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}
	
	if(dialogid == 8878)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salarioc1] = definicao;
		   	DefinirSalarioc1(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do cargo 1 para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8879)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salarioc2] = definicao;
		   	DefinirSalarioc2(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do cargo 2 para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8880)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salarioc3] = definicao;
		   	DefinirSalarioc3(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do cargo 3 para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8881)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salarioc4] = definicao;
		   	DefinirSalarioc4(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do cargo 4 para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8882)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salarioc5] = definicao;
		   	DefinirSalarioc5(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do cargo 5 e SUBs para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}

	if(dialogid == 8883)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		    if(definicao > 6000000)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você definiu um Salario muito alto");
				return true;
			}
		   	CofreOrg[org][salariolider] = definicao;
		   	DefinirSalarioc6(org,definicao);
		   	format(string,sizeof(string),"	Você ajustou o Salario do LIDER para: %d.",definicao);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8850)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		   	CofreOrg[org][cMateriais] = definicao;
		   	SalvarcMateriais(org,definicao);
		   	format(string,sizeof(string),"Defina a quantidade que paga por %d Materiais",CofreOrg[org][cMateriais]);
		   	ShowPlayerDialog(playerid, 8855, DIALOG_STYLE_INPUT, "Definição", string, "Salvar", "Cancelar");
			return true;
		}
	}
	
	if(dialogid == 8851)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		   	CofreOrg[org][cMaconha] = definicao;
		   	SalvarcMaconha(org,definicao);
		   	format(string,sizeof(string),"Defina a quantidade que paga por %d Maconhas",CofreOrg[org][cMaconha]);
		   	ShowPlayerDialog(playerid, 8860, DIALOG_STYLE_INPUT, "Definição", string, "Salvar", "Cancelar");
			return true;
		}
	}
	if(dialogid == 8860)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		   	CofreOrg[org][mMaconha] = definicao;
		   	SalvarmMaconha(org,definicao);
		   	format(string,sizeof(string),"•|SERVER|• Você paga R$%d por %d Maconhas.",CofreOrg[org][mMaconha], CofreOrg[org][cMaconha]);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}

	if(dialogid == 8855)
	{
	    new definicao = strval(inputtext);
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
		   	CofreOrg[org][mMateriais] = definicao;
		   	SalvarmMateriais(org,definicao);
		   	format(string,sizeof(string),"•|SERVER|• Você paga R$%d por %d materiais.",CofreOrg[org][mMateriais], CofreOrg[org][cMateriais]);
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
	}
	if(dialogid == 8553)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha\nSalarios", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Eagle\nAtualmente está definido em: %d Balas",CofreOrg[org][dEaglec4]);
		    	ShowPlayerDialog(playerid, 8675, DIALOG_STYLE_INPUT, "Definição de Eagle", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de ShotGun\nAtualmente está definido em: %d Balas",CofreOrg[org][dShotc4]);
		    	ShowPlayerDialog(playerid, 8676, DIALOG_STYLE_INPUT, "Definição de ShotGun", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de MP5\nAtualmente está definido em: %d Balas",CofreOrg[org][dMP5c4]);
		    	ShowPlayerDialog(playerid, 8677, DIALOG_STYLE_INPUT, "Definição de MP5", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de AK47\nAtualmente está definido em: %d Balas",CofreOrg[org][dAKc4]);
		    	ShowPlayerDialog(playerid, 8678, DIALOG_STYLE_INPUT, "Definição de AK47", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Rifle\nAtualmente está definido em: %d Balas",CofreOrg[org][dRiflec4]);
		    	ShowPlayerDialog(playerid, 8679, DIALOG_STYLE_INPUT, "Definição de Rifle", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}

	if(dialogid == 8675)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec4] = definicao;
		   	dSalvarEaglec4(org,definicao);
		   	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8676)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc4] = definicao;
		   	dSalvarShotc4(org,definicao);
		   	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8677)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c4] = definicao;
		   	dSalvarMP5c4(org,definicao);
		   	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8678)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc4] = definicao;
		   	dSalvarAKc4(org,definicao);
		   	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8679)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec4] = definicao;
		   	dSalvarRiflec4(org,definicao);
		   	ShowPlayerDialog(playerid, 8553, DIALOG_STYLE_LIST, "Deinições para Cargo 4", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8549)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 500)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu o total de maconha para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMaconha] = definicao;
		   	dSalvarMaconha(org,definicao);
   		}
		return true;
	}

	if(dialogid == 8555)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec1] = definicao;
   		}
		return true;
	}
	if(dialogid == 8556)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc1] = definicao;
   		}
		return true;
	}
	if(dialogid == 8557)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c1] = definicao;
   		}
		return true;
	}
	if(dialogid == 8558)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc1] = definicao;
   		}
		return true;
	}
	if(dialogid == 8559)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec1] = definicao;
   		}
		return true;
	}
	if(dialogid == 8550)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Eagle\nAtualmente está definido em: %d Balas",CofreOrg[org][dEaglec1]);
		    	ShowPlayerDialog(playerid, 8560, DIALOG_STYLE_INPUT, "Definição de Eagle", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de ShotGun\nAtualmente está definido em: %d Balas",CofreOrg[org][dShotc1]);
		    	ShowPlayerDialog(playerid, 8561, DIALOG_STYLE_INPUT, "Definição de ShotGun", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de MP5\nAtualmente está definido em: %d Balas",CofreOrg[org][dMP5c1]);
		    	ShowPlayerDialog(playerid, 8562, DIALOG_STYLE_INPUT, "Definição de MP5", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de AK47\nAtualmente está definido em: %d Balas",CofreOrg[org][dAKc1]);
		    	ShowPlayerDialog(playerid, 8563, DIALOG_STYLE_INPUT, "Definição de AK47", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Rifle\nAtualmente está definido em: %d Balas",CofreOrg[org][dRiflec1]);
		    	ShowPlayerDialog(playerid, 8564, DIALOG_STYLE_INPUT, "Definição de Rifle", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}

	if(dialogid == 8890)
	{
	    new grana = GetPlayerMoney(playerid);
	   	if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
		    if(grana < 2000)
		    {
				SendClientMessage(playerid, COLOR_GREY, "Você não tem R$2000!");
				return 1;
		    }
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_ADMIN, "Você comprou um Dildo (-R$2000)");
				GivePlayerWeaponBPH(playerid, 10, 1);
				GivePlayerMoney(playerid, - 2000);
				return true;
			}
			if(listitem == 1)
			{
				SendClientMessage(playerid, COLOR_ADMIN, "Você comprou um Dildo2 (-R$2000)");
				GivePlayerWeaponBPH(playerid, 11, 1);
				GivePlayerMoney(playerid, - 2000);
				return true;
			}
			if(listitem == 2)
			{
				SendClientMessage(playerid, COLOR_ADMIN, "Você comprou um Vibrador (-R$2000)");
				GivePlayerWeaponBPH(playerid, 12, 1);
				GivePlayerMoney(playerid, - 2000);
				return true;
			}
			if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_ADMIN, "Você comprou um Vibrador2 (-R$2000)");
				GivePlayerWeaponBPH(playerid, 13, 1);
				GivePlayerMoney(playerid, - 2000);
				return true;
			}
			if(listitem == 4)
			{
				SendClientMessage(playerid, COLOR_ADMIN, "Você comprou uma Flor (-R$2000)");
				GivePlayerWeaponBPH(playerid, 14, 1);
				GivePlayerMoney(playerid, - 2000);
				return true;
			}
		}
	    return true;
	}
	
	if(dialogid == 8560)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec1] = definicao;
		   	dSalvarEaglec1(org,definicao);
		   	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	
	if(dialogid == 8560)
	{
	   	if(response == 0)
		{
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,"OK, você decidiu administrar com a skin que você está!");
   		}
		if(response >= 1)
		{
		   	format(string,sizeof(string),"Você deciciu administrar com a skin da STAFF, ao entrar em modo jogo setará a skin anterior id: %d.",SkinDoCara[playerid]);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			SetPlayerSkin(playerid, 270);
   		}
		return true;
	}
	if(dialogid == 8561)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc1] = definicao;
		   	dSalvarShotc1(org,definicao);
		   	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8562)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c1] = definicao;
		   	dSalvarMP5c1(org,definicao);
		   	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8563)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc1] = definicao;
		   	dSalvarAKc1(org,definicao);
		   	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8564)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec1] = definicao;
		   	dSalvarRiflec1(org,definicao);
		   	ShowPlayerDialog(playerid, 8550, DIALOG_STYLE_LIST, "Deinições para Cargo 1", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	
	if(dialogid == 8551)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Eagle\nAtualmente está definido em: %d Balas",CofreOrg[org][dEaglec1]);
		    	ShowPlayerDialog(playerid, 8565, DIALOG_STYLE_INPUT, "Definição de Eagle", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de ShotGun\nAtualmente está definido em: %d Balas",CofreOrg[org][dShotc1]);
		    	ShowPlayerDialog(playerid, 8566, DIALOG_STYLE_INPUT, "Definição de ShotGun", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de MP5\nAtualmente está definido em: %d Balas",CofreOrg[org][dMP5c1]);
		    	ShowPlayerDialog(playerid, 8567, DIALOG_STYLE_INPUT, "Definição de MP5", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de AK47\nAtualmente está definido em: %d Balas",CofreOrg[org][dAKc1]);
		    	ShowPlayerDialog(playerid, 8568, DIALOG_STYLE_INPUT, "Definição de AK47", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Rifle\nAtualmente está definido em: %d Balas",CofreOrg[org][dRiflec1]);
		    	ShowPlayerDialog(playerid, 8569, DIALOG_STYLE_INPUT, "Definição de Rifle", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}

	if(dialogid == 8565)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec2] = definicao;
		   	dSalvarEaglec2(org,definicao);
		   	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8566)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc2] = definicao;
		   	dSalvarShotc2(org,definicao);
		   	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8567)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c2] = definicao;
		   	dSalvarMP5c2(org,definicao);
		   	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8568)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc2] = definicao;
		   	dSalvarAKc2(org,definicao);
		   	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8569)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec2] = definicao;
		   	dSalvarRiflec2(org,definicao);
		   	ShowPlayerDialog(playerid, 8551, DIALOG_STYLE_LIST, "Deinições para Cargo 2", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8552)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Eagle\nAtualmente está definido em: %d Balas",CofreOrg[org][dEaglec1]);
		    	ShowPlayerDialog(playerid, 8570, DIALOG_STYLE_INPUT, "Definição de Eagle", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de ShotGun\nAtualmente está definido em: %d Balas",CofreOrg[org][dShotc1]);
		    	ShowPlayerDialog(playerid, 8571, DIALOG_STYLE_INPUT, "Definição de ShotGun", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de MP5\nAtualmente está definido em: %d Balas",CofreOrg[org][dMP5c1]);
		    	ShowPlayerDialog(playerid, 8572, DIALOG_STYLE_INPUT, "Definição de MP5", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de AK47\nAtualmente está definido em: %d Balas",CofreOrg[org][dAKc1]);
		    	ShowPlayerDialog(playerid, 8573, DIALOG_STYLE_INPUT, "Definição de AK47", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Rifle\nAtualmente está definido em: %d Balas",CofreOrg[org][dRiflec1]);
		    	ShowPlayerDialog(playerid, 8574, DIALOG_STYLE_INPUT, "Definição de Rifle", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}


	if(dialogid == 8570)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec3] = definicao;
		   	dSalvarEaglec3(org,definicao);
		   	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8571)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc3] = definicao;
		   	dSalvarShotc3(org,definicao);
		   	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8572)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c3] = definicao;
		   	dSalvarMP5c3(org,definicao);
		   	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8573)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc3] = definicao;
		   	dSalvarAKc3(org,definicao);
		   	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8574)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec3] = definicao;
		   	dSalvarRiflec3(org,definicao);
		   	ShowPlayerDialog(playerid, 8552, DIALOG_STYLE_LIST, "Deinições para Cargo 3", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8554)
	{
	    new org = GetPlayerOrg(playerid);
	   	if(response == 0)
		{
		    ShowPlayerDialog(playerid, 8547, DIALOG_STYLE_LIST, "Deinições da Org", "Limite de Maconha\nCargo 1 Limites\nCargo 2 Limites\nCargo 3 Limites\nCargo 4 Limites\nCargo 5 e Lideres\nPedido Materiais\nPedido Maconha", "Selecionar", "Voltar");
			return true;
		}
		if(response >= 1)
		{
			if(listitem == 0)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Eagle\nAtualmente está definido em: %d Balas",CofreOrg[org][dEaglec1]);
		    	ShowPlayerDialog(playerid, 8575, DIALOG_STYLE_INPUT, "Definição de Eagle", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 1)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de ShotGun\nAtualmente está definido em: %d Balas",CofreOrg[org][dShotc1]);
		    	ShowPlayerDialog(playerid, 8576, DIALOG_STYLE_INPUT, "Definição de ShotGun", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 2)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de MP5\nAtualmente está definido em: %d Balas",CofreOrg[org][dMP5c1]);
		    	ShowPlayerDialog(playerid, 8577, DIALOG_STYLE_INPUT, "Definição de MP5", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 3)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de AK47\nAtualmente está definido em: %d Balas",CofreOrg[org][dAKc1]);
		    	ShowPlayerDialog(playerid, 8578, DIALOG_STYLE_INPUT, "Definição de AK47", string, "Salvar", "Cancelar");
				return true;
			}
			if(listitem == 4)
			{
		    	format(string,sizeof(string),"Defina a quantidade de Balas de Rifle\nAtualmente está definido em: %d Balas",CofreOrg[org][dRiflec1]);
		    	ShowPlayerDialog(playerid, 8579, DIALOG_STYLE_INPUT, "Definição de Rifle", string, "Salvar", "Cancelar");
				return true;
			}
		}
	    return true;
	}

	if(dialogid == 8575)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Eagle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dEaglec5] = definicao;
		   	dSalvarEaglec5(org,definicao);
		   	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8576)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de ShotGun para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dShotc5] = definicao;
		   	dSalvarShotc5(org,definicao);
		   	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8577)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de MP5 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dMP5c5] = definicao;
		   	dSalvarMP5c5(org,definicao);
		   	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8578)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de AK47 para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dAKc5] = definicao;
		   	dSalvarAKc5(org,definicao);
		   	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}
	if(dialogid == 8579)
	{
	    new org = GetPlayerOrg(playerid);
	    new definicao = strval(inputtext);
		if(response >= 1)
		{
 			if(definicao > 800)
			{
		   	    SendClientMessage(playerid,COLOR_LIGHTRED,"[ERRO] Você definiu um Valor muito alto");
				return 1;
	  		}
		   	format(string,sizeof(string),"Você definiu balas de Rifle para: %d.",definicao);
		   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	CofreOrg[org][dRiflec5] = definicao;
		   	dSalvarRiflec5(org,definicao);
		   	ShowPlayerDialog(playerid, 8554, DIALOG_STYLE_LIST, "Deinições para Cargo 5 e Lideres", "Balas de Eagle\nBalas de ShotGun\nBalas de MP5\nBalas de AK47\nBalas de Rifle", "Selecionar", "Sair");
   		}
		return true;
	}

	if(dialogid == 13)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nQuantos você deseja depositar ?",CofreOrg[org][Dinheiro]);
		    ShowPlayerDialog(playerid, 19, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return true;
		}
	    return true;
	}
	if(dialogid == 14)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nQuantos você deseja depositar ?",CofreOrg[org][Materiais]);
		    ShowPlayerDialog(playerid, 21, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return true;
		}
	    return true;
	}
	if(dialogid == 15)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Depositar ?",CofreOrg[org][Maconha]);
		    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Sacar ?",CofreOrg[org][Maconha]);
		    ShowPlayerDialog(playerid, 23, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return true;
		}
	    return true;
	}

	if(dialogid == 16)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Depositar ?",CofreOrg[org][Cocaina]);
		    ShowPlayerDialog(playerid, 24, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Sacar ?",CofreOrg[org][Cocaina]);
		    ShowPlayerDialog(playerid, 25, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return true;
		}
	    return true;
	}
	if(dialogid == 17)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Depositar ?",CofreOrg[org][Crack]);
		    ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Sacar ?",CofreOrg[org][Crack]);
		    ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return true;
		}
	    return true;
	}
	if(dialogid == 19)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depgrana = strval(inputtext);
			if(GetPlayerMoneyEx(playerid) < depgrana)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return true;
			}
			if(depgrana > 0)
			{
			    if(GetPlayerMoneyEx(playerid) >= depgrana)
			    {
			        GivePlayerMoneyEx(playerid, -depgrana);
		    		DepositarGranaOrg(org,depgrana);
		    		format(string,sizeof(string),"Você Depositou R$%d, o Novo Saldo é de R$%d",depgrana,CofreOrg[org][Dinheiro]);
		    		SendClientMessage(playerid,COLOR_YELLOW,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 18)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacgrana = strval(inputtext);
			if(sacgrana > CofreOrg[org][Dinheiro])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Dinheiro");
			    return true;
			}
			if(sacgrana > 0)
			{
			    if(sacgrana <= CofreOrg[org][Dinheiro])
			    {

		    		format(string,sizeof(string),"Mesmo sendo SUB ou LIDER,não é autorizado sacar dinheiro da HQ!",sacgrana,CofreOrg[org][Dinheiro]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 21)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depmat = strval(inputtext);
		    new pMateriais = PlayerInfo[playerid][pMats];
			if(pMateriais < depmat)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return true;
			}
			if(depmat > 0)
			{
			    if(pMateriais >= depmat)
			    {
			        PlayerInfo[playerid][pMats] = pMateriais-depmat;
		    		DepositarMaterialOrg(org,depmat);
		    		format(string,sizeof(string),"Você Depositou %d de Materiais, o Novo Saldo de Materiais é de %d",depmat,CofreOrg[org][Materiais]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 20)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacmat = strval(inputtext);
			if(sacmat > CofreOrg[org][Materiais])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Materiais");
			    return true;
			}
			if(sacmat > 0)
			{
			    if(sacmat <= CofreOrg[org][Materiais])
			    {
		    		format(string,sizeof(string),"Mesmo sendo SUB ou LIDER,não é autorizado sacar materiais da HQ!",sacmat,CofreOrg[org][Materiais]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 22)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depmac = strval(inputtext);
		    new pMaconha = PlayerInfo[playerid][pDrogas];
			if(pMaconha < depmac)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return true;
			}
			if(depmac > 0)
			{
			    if(pMaconha >= depmac)
			    {
			        PlayerInfo[playerid][pDrogas] = pMaconha-depmac;
		    		DepositarMaconhaOrg(org,depmac);
		    		format(string,sizeof(string),"Você Depositou %d de Maconha, o Novo Saldo de Maconha é de %d",depmac,CofreOrg[org][Maconha]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 23)
	{
	    if(response == 0)
		{
			return true;
		}
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacmac = strval(inputtext);
		    new pMaconha = PlayerInfo[playerid][pDrogas];
			if(sacmac > CofreOrg[org][Maconha])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 5)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Lider e Sub-Lider Podem Sacar Maconha");
			    return true;
			}
			if(sacmac > 0)
			{
			    if(sacmac <= CofreOrg[org][Maconha])
			    {
			        PlayerInfo[playerid][pDrogas] = pMaconha+sacmac;
		    		SacarMaconhaOrg(org,sacmac);
		    		format(string,sizeof(string),"Você Sacou %d de Maconha, o Novo Saldo de Maconha é de %d",sacmac,CofreOrg[org][Maconha]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 24)
	{
		if(response >= 1)
		{
      		new org = GetPlayerOrg(playerid);
		    new depcoca = strval(inputtext);
		    new pCocaina = PlayerInfo[playerid][pDrogas2];
			if(pCocaina < depcoca)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return true;
			}
			if(depcoca > 0)
			{
			    if(pCocaina >= depcoca)
			    {
			        PlayerInfo[playerid][pDrogas2] = pCocaina-depcoca;
		    		DepositarCocainaOrg(org,depcoca);
		    		format(string,sizeof(string),"Você Depositou %d de Cocaina, o Novo Saldo de Cocaina é de %d",depcoca,CofreOrg[org][Cocaina]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 25)
	{
		if(response >= 1)
		{
      		new org = GetPlayerOrg(playerid);
		    new saccoca = strval(inputtext);
		    new pCocaina = PlayerInfo[playerid][pDrogas2];
			if(saccoca > CofreOrg[org][Cocaina])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Cocaína");
			    return true;
			}
			if(saccoca > 0)
			{
			    if(saccoca <= CofreOrg[org][Cocaina])
			    {
			        PlayerInfo[playerid][pDrogas2] = pCocaina+saccoca;
		    		SacarCocainaOrg(org,saccoca);
		    		format(string,sizeof(string),"Você Sacou %d de Cocaína, o Novo Saldo de Cocaína é de %d",saccoca,CofreOrg[org][Cocaina]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 26)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depcrac = strval(inputtext);
		    new pCrack = PlayerInfo[playerid][pDrogas3];
			if(pCrack < depcrac)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return true;
			}
			if(depcrac > 0)
			{
			    if(pCrack >= depcrac)
			    {
			        PlayerInfo[playerid][pDrogas3] = pCrack-depcrac;
		    		DepositarCrackOrg(org,depcrac);
		    		format(string,sizeof(string),"Você Depositou %d de Crack, o Novo Saldo de Crack é de %d",depcrac,CofreOrg[org][Crack]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 27)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new saccrac = strval(inputtext);
		    new pCrack = PlayerInfo[playerid][pDrogas3];
			if(saccrac > CofreOrg[org][Crack])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Crack");
			    return true;
			}
			if(saccrac > 0)
			{
			    if(saccrac <= CofreOrg[org][Crack])
			    {
			        PlayerInfo[playerid][pDrogas3] = pCrack+saccrac;
		    		SacarCrackOrg(org,saccrac);
		    		format(string,sizeof(string),"Você Sacou %d de Crack, o Novo Saldo de Crack é de %d",saccrac,CofreOrg[org][Crack]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
	if(dialogid == 28)
	{
	    if(PlayerInfo[playerid][pFome] >= 35)
	    {
	        SendClientMessage(playerid, COLOR_GRAD1, "Você ja está totalmente sem fome, e não pode comer mais nada!");
	    	return 1;
	    }
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um espetinho de coração.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
				PlayerInfo[playerid][pFome] += 4;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um churrasco de carne de vaca.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
				PlayerInfo[playerid][pFome] += 6;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um churrasco de picanha.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
				PlayerInfo[playerid][pFome] += 5;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um churrasco de frango.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return true;
	}
	if(dialogid == 29)
	{
 		if(PlayerInfo[playerid][pFome] >= 35)
	    {
	        SendClientMessage(playerid, COLOR_GRAD1, "Você ja está totalmente sem fome, e não pode comer mais nada!");
	    	return 1;
	    }
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um X-BAYCON.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
				PlayerInfo[playerid][pFome] += 2;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um X-TUDO.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
				PlayerInfo[playerid][pFome] += 3;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um X-ESPECIAL.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
				PlayerInfo[playerid][pFome] += 5;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um X-FRANGO.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
				PlayerInfo[playerid][pFome] += 2;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	if(dialogid == 30)
	{
	    if(PlayerInfo[playerid][pFome] >= 35)
	    {
	        SendClientMessage(playerid, COLOR_GRAD1, "Você ja está totalmente sem fome, e não pode comer mais nada!");
	    	return 1;
	    }
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma pizza pequena de presunto e mussarela.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 10);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma pizza grande de presunto e mussarela.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 20);
				PlayerInfo[playerid][pFome] += 2;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma pizza extra grande.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 30);
				PlayerInfo[playerid][pFome] += 4;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma pizza de Bacon e Chocolate.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 15);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 5);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 5);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
    if(dialogid == 31)
	{
	    if(PlayerInfo[playerid][pFome] >= 35)
	    {
	        SendClientMessage(playerid, COLOR_GRAD1, "Você ja está totalmente sem fome, e não pode comer mais nada!");
	    	return 1;
	    }
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma rosquinha pequena.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 5);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma rosquinha normal.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 10);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma rosquinha de chefe.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 25);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma super rosquinha.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 28);
				PlayerInfo[playerid][pFome] += 1;
				if(PlayerInfo[playerid][pFome] == 0)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
   				if(PlayerInfo[playerid][pFome] >= 1 && PlayerInfo[playerid][pFome] <= 5)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ainda está com muita fome, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 6 && PlayerInfo[playerid][pFome] <= 7)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Sua fome ja está passando, continue comendo!");
				}
				if(PlayerInfo[playerid][pFome] >= 8 && PlayerInfo[playerid][pFome] <= 9)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você está quase sem fome, continue comendo até passar totalmente a fome!");
				}
				if(PlayerInfo[playerid][pFome] >= 10 && PlayerInfo[playerid][pFome] <= 34)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você ja está sem fome, você pode continuar comendo para previnir a fome!");
				}
   				if(PlayerInfo[playerid][pFome] >= 35)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Você agora ja está totalmente alimentado e não pode comer mais nada!");
				}
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
//FIM ONDIALOGRESPONSE
	return true;
}

public Spectator()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerToTeamColor(i);
                new str5[256];
                new armatext[30];
                new arma;
           	    new plrIP[16];
                new municao;
                new plrping;
                new smunicao;
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
				        new Float:plrarmour;
					    GetPlayerHealth(targetid, health);
					    GetPlayerArmour(targetid, plrarmour);
					    arma = GetPlayerWeapon(targetid);
					    plrping = GetPlayerPing(targetid);
					    municao = GetPlayerAmmo(targetid);
					    GetPlayerIp(targetid, plrIP, sizeof(plrIP));
					    new cash =  GetPlayerMoney(Spectate[i]);

   						if(arma == 38) { armatext = "Minigun"; }
						else if(arma == 40) { armatext = "Detonador"; }
						else if(arma == 36) { armatext = "Lança missil RPG"; }
						else if(arma == 35) { armatext = "Lança missil"; }
						else if(arma == 16) { armatext = "Granada"; }
						else if(arma == 18) { armatext = "Coctel Molotov"; }
						else if(arma == 22) { armatext = "Pistola de Duas mãos 9mm"; }
						else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
						else if(arma == 27) { armatext = "Escopeta de Combate"; }
						else if(arma == 28) { armatext = "Micro Uzi"; }
						else if(arma == 32) { armatext = "Tec9"; }
						else if(arma == 37) { armatext = "Lança Chamas"; }
						else if(arma == 0) { armatext = "Desarmado"; }
                    	else if(arma == 4) { armatext = "Faca"; }
                    	else if(arma == 5) { armatext = "Bastão de Base Ball"; }
                    	else if(arma == 9) { armatext = "Motoserra"; }
                    	else if(arma == 14) { armatext = "Flores"; }
                    	else if(arma == 17) { armatext = "Granada de Gas"; }
                    	else if(arma == 23) { armatext = "Pistola com silênciador"; }
                    	else if(arma == 16) { armatext = "Granada"; }
                    	else if(arma == 24) { armatext = "Desert Eagle"; }
                    	else if(arma == 25) { armatext = "ShotGun"; }
                    	else if(arma == 29) { armatext = "MP5"; }
                    	else if(arma == 30) { armatext = "AK-47"; }
                    	else if(arma == 31) { armatext = "M4"; }
                    	else if(arma == 33) { armatext = "Rifle"; }
                    	else if(arma ==  34) { armatext = "Rifle Sniper"; }
                    	else if(arma == 41) { armatext = "Spray"; }
                    	else if(arma == 42) { armatext = "Extintor"; }
                    	else if(arma == 46) { armatext = "Paraquedas"; }
                    	else { armatext = "Desconhecido"; }
                    	if(municao == 65535)
						{
							smunicao = 0;
						}
						else
						{
							smunicao = municao;
						}
						format(str5,sizeof(str5),"~y~IP:~w~ %s~n~~y~ID:~w~ %d~n~~y~Nick:~w~ %s~n~~y~Vida:~w~ %.1f~n~~y~Colete:~w~ %.1f~n~~y~Dinheiro:~w~ R$%d~n~~y~Velocidade:~w~ %d~n~~y~Arma:~w~ %s~n~~y~Municao:~w~ %d~n~~y~Ping:~w~ %d",
						plrIP,
						targetid,
						PlayerName(targetid),
						health,
						plrarmour,
						cash,
						GetPlayerSpeed(targetid, true),
						armatext,
						smunicao,
						plrping);
						TextDrawSetString(gpss[i], str5);
						TextDrawShowForPlayer(i, gpss[i]);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				Controle(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if(PlayerInfo[i][pVIP] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				Controle(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				XXAirBreak[i] += 3;SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	motor[playerid] = 0;
	NovaCamera[playerid] = 0;
	for(new i = 0; i < sizeof(CarInfo); i++)
   	{
     	new string[128];
     	if(vehicleid == CarInfo[i][ownedvehicle])
     	{
   			if(CarInfo[i][cOwned]==0)
		    {
      			CarOffered[playerid]=1;
               	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pagou R$1000 para entrar no veiculo de: Concessionária");
			    format(string,sizeof(string),"~w~Carro: %s~n~Preco: ~g~%d~n~~w~use:/comprarcarro",CarInfo[i][cDescription],CarInfo[i][cValue]);
				GameTextForPlayer(playerid,string, 5000, 5);
				CarInfo[i][cGrana] += 1000;
               	GivePlayerMoney(playerid, -1000);
   			}
		  	if(CarInfo[i][cOwned]==1)
		   	{
		    	new playername[MAX_PLAYER_NAME];
		    	GetPlayerName(playerid, playername, sizeof(playername));
			   	if(strcmp(playername,CarInfo[i][cOwner],true)==0)
			    {
					format(string,sizeof(string),"Você entrou no seu Veiculo PREMIUM, e nele contem R$%d em seu interior",CarInfo[i][cGrana]);
					SendClientMessage(playerid, COLORGZ_EXE, string);
				}
				else
				{
					format(string,sizeof(string),"Este veículo pertence a %s",CarInfo[i][cOwner]);
                    SendClientMessage(playerid, COLORGZ_EXE, string);
   					format(string,sizeof(string),"Você pagou R$1000 para entrar no veiculo de: %s",CarInfo[i][cOwner]);
   					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					CarInfo[i][cGrana] += 1000;
                    GivePlayerMoney(playerid, -1000);
				}
    		}
		}
	}
	return true;
}
public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==8 || member==14 || member==15 || member==17 || member==18 || member==19 || member==20 || member==21 || member==22 || member==23 || member==24 || member==25 || member==26 || member==28 || member==29)
		{
		    return true;
		}
		else if(lider==5 || lider==6 || lider==8 || lider==14 || lider==15 || lider==17 || lider==18 || lider==19 || lider==20 || lider==21 || lider==22 || lider==23 || lider==24 || lider==25 || lider==26 || lider==28 || lider==29)
		{
		    return true;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==2 || member==27 || member==3 || member==16 || member==11 || member==33)
		{
		    return true;
		}
		else if(lider==1 || lider==2 || lider==3 || lider==27 || lider==16 || lider==11 || lider==33)
		{
		    return true;
		}
	}
	return 0;
}

forward IsAMedicos(playerid);
public IsAMedicos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==4 || member==31)
		{
		    return true;
		}
		else if(lider==4 || lider==31)
		{
		    return true;
		}
	}
	return 0;
}

forward IsALideresCop(playerid);
public IsALideresCop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
		if(lider==1 || lider==2 || lider==3 || lider==27 || lider==16 || lider==11 || lider==33)
		{
		    return true;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return true;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
		{//Zip & Victim
		    return true;
		}
		else if(PlayerToPoint(30.0,playerid,210.7969,-7.6347,1001.2109))
		{//Victim
		    return true;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(15.0,playerid,1941.9850,-1774.6639,19.7006))
	    {
	        if(IsAPlane(GetPlayerVehicleID(playerid)))
	        {
	            return true;
	        }
		}
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906) || PlayerToPoint(6.0,playerid,1400.6882,-1680.5344,42.4339) || PlayerToPoint(6.0,playerid,1496.5316,-1544.0677,23.5481) || PlayerToPoint(6.0,playerid,2737.3364,-1774.2123,43.7973))
		{//LS
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,1380.4712,462.7467,20.1107) || PlayerToPoint(8.0,playerid,1385.0475,460.5417,20.1068))
		{//ppc
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,1383.5532,457.1286,19.9561) || PlayerToPoint(8.0,playerid,1379.1952,459.1295,19.9587))
		{//ppc
		    return true;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return true;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return true;
		}
		else if(PlayerToPoint(8.0,playerid,677.1299,-2866.3892,13.0944) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return true;
		}
	}
	return 0;
}


public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) ||
		PlayerToPoint(4.0,playerid,1254.0154,-792.7376,1084.2344) || PlayerToPoint(10.0,playerid,2191.7827,1603.1427,1005.0625) ||
		PlayerToPoint(15.0,playerid,942.4760,4.9500,1000.9297) || PlayerToPoint(4.0,playerid,1479.1809,-1685.3807,14.0469))
		{//In grove street bar (with girlfriend), and in Havanna
		    return true;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734) ||
		PlayerToPoint(10.0,playerid,378.5476,-189.0421,1000.6328) || PlayerToPoint(10.0,playerid,968.8497,-46.3663,1001.1172) ||
		PlayerToPoint(6.0,playerid,2372.4138,-1133.9048,1050.8750))
		{//PIG Pen
		    return true;
		}
	}
	return 0;
}

public IsABoat(carid)
{
    new oo = GetVehicleModel(carid);
 	if((oo >= 445) && (oo <= 447))
	{
		return true;
	}
	return 0;
}

public IsAPlane(carid)
{
	new oo = GetVehicleModel(carid);
	if((oo >= 503) && (oo <= 510))
	{
		return true;
	}
	return 0;
}

public IsACopCar(carid)//copcarroo
{
	if((carid >= 1) && (carid <= 24))
	{
		return true;
	}
	return 0;
}

public IsAEnforcerCar(carid) // Enforcers
{
	if((carid == 7) || (carid == 8) || (carid == 31) || (carid == 32) || (carid == 51) || (carid == 52) || (carid == 53) || (carid == 151) || (carid == 152) || (carid == 228) || (carid == 229))
	{
		return true;
	}
	return 0;
}
public IsACaminhaozinhoCar(carid) // Trocar e Pegar Materiais
{
	if((carid == 175) || (carid == 176) || (carid == 181) || (carid == 182))
	{
		return true;
	}
	return 0;
}

public IsAnAmbulanceCar(carid)
{
	if((carid >= 69) && (carid <= 75))
	{
		return true;
	}
	return 0;
}

public IsAGatev(carid)
{
	if((carid == 0) || (carid == 0) || (carid == 0) || (carid == 0))
	{
		return true;
	}
	return 0;
}

	
//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
	new SSSTRING[128];
	EmGuerra[playerid] = 0;
	XiterArma[playerid] = 1;
	DonoBalao[playerid] = 0;
	NaoPodeLogar[playerid] = 0;
	ComecouConversao2[playerid] = 0;
	ComecouConversao[playerid] = 0;
	EstaNoEvento[playerid] = 0;
	JaDeslogado[playerid] = 0;
 	NaCamera[playerid] = 0;
 	FoiDesban[playerid] = 0;
 	pMaxBR[playerid] = 0;
	SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
	SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
	XXAirBreak[playerid] += 3;
	SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
	SetPlayerInterior(playerid, 0);
    GranaEvento[playerid] = 0;
    XXAirBreak[playerid] += 3;
    KillTimer(TimerSS[playerid]);
   	TextDrawShowForPlayer(playerid, textlife[playerid]);
	TextDrawShowForPlayer(playerid, textcolete[playerid]);
    TextDrawShowForPlayer(playerid, Reloginho1);
	TextDrawShowForPlayer(playerid, Reloginho2);
	TextDrawShowForPlayer(playerid, Reloginho3);
	TextDrawShowForPlayer(playerid, forum);
	TextDrawShowForPlayer(playerid, forum2);
	RemovePlayerAttachedObject(playerid, OBJCAPACETE);
	StopPlayerHoldingObject(playerid);
	RemovePlayerAttachedObject(playerid, pObject[playerid][oslot]);
	pObject[playerid][oslot] = -1;
	NaoPodeDigitar[playerid] = 0;
	pObject[playerid][slotreserved] = false;
//=========================================================================================
    FilaAtendimento[playerid] = 999;
    XXAirBreak[playerid] = 0;
    TempoAtendimento2[playerid] = 0;
	//DP DA Rotam-SF

	TextDrawShowForPlayer(playerid, Hidealto);
	TextDrawShowForPlayer(playerid, Hidebaixo);

	new nome2[24], str50[50];
 	GetPlayerName(playerid, nome2, 24);
  	format(str50, sizeof str50, "%s - Arara", nome2);
   	if(DOF2_IsSet("Araras.txt", str50))
    {
        AraraInfo[playerid][Arara] = bool:DOF2_GetBool("Araras.txt", str50);
        format(str50, sizeof str50, "%s - Racao", nome2);
        AraraInfo[playerid][Racao] = bool:DOF2_GetBool("Araras.txt", str50);
        format(str50, sizeof str50, "%s - Grande", nome2);
        AraraInfo[playerid][Grande] = DOF2_GetInt("Araras.txt", str50);
        if(AraraInfo[playerid][Arara])
        {
        	AraraInfo[playerid][Timer] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
            SendClientMessage(playerid, 0xFFFF00FF, "Alimente sua arara ou ela morrerá.");
            SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
            VidaArara[playerid] = 5;
        }
  	}
//===================================================================================
	new connecting_ip[32+1];
    GetPlayerIp(playerid,connecting_ip,32);
    new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);
    if(num_players_on_ip > MAX_CONNECTIONS_FROM_IP)
    {
        Ban(playerid);
        return 1;
    }
   	IPlog(playerid);
	gActivePlayers[playerid]++;
	numplayers++;
	strmid(BanInfo[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
	strmid(BanInfo[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
	pban[playerid] = 0;
	Reduzido[playerid] = 0; // pedagio
	ReduzidoBot[playerid] = 0; //bot
	var1[playerid] = 0;
	EmDialog[playerid] = 0;
	gmsg[playerid] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	TruckMission[playerid] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	storeexit[playerid] = 0;
	PlayerInfo[playerid][pGrampo] = INVALID_PLAYER_ID;
	barexit[playerid] = 0;
	lotericaexit[playerid] = 0;
	away[playerid] = 0;
	pCofreOrg[playerid] = 0;
	InviteOffer[playerid] = 999;
	InviteJob[playerid] = 0;
	//cdivulgar[playerid] = 0;
	PlayerInfo[playerid][pGun5] = 0;
	mudandonick[playerid] = 0;
	VozDePrisao[playerid] = 0;
	gpTimes[playerid] = 0;
	PlayerLogado[playerid] = 1;
	PlayerInfo[playerid][pVeiculo] = 0;
	PlayerInfo[playerid][pVeiculo2] = 0;
	PlayerInfo[playerid][pVeiculo3] = 0;
	PlayerInfo[playerid][pVeiculo4] = 0;
	PlayerInfo[playerid][pVeiculo5] = 0;
	PlayerInfo[playerid][pGun6] = 0;
	PlayerInfo[playerid][pGun7] = 0;
	PlayerInfo[playerid][pGun8] = 0;
	PlayerInfo[playerid][pGun9] = 0;
	PlayerInfo[playerid][pGun10] = 0;
	gPlayerTerminal[playerid] = 0;
	PlayerInfo[playerid][pGun11] = 0;
	PlayerInfo[playerid][pGun12] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pCheckInfoOrg] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	gSpamCount[playerid][0] = 0;
	gSpamCount[playerid][1] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
	HidePM[playerid] = 0;
    PlayerInfo[playerid][pCaixinha] = 0;
	PlayerUpdateInfo[playerid][posxafk] = 0; PlayerUpdateInfo[playerid][posyafk] = 0; PlayerUpdateInfo[playerid][poszafk] = 0;
    PlayerUpdateInfo[playerid][angleafk] = 0; PlayerInactivity[playerid] = 0;
	SelectChar[playerid] = 0; PhoneOnline[playerid] = 0; OfAssalto[playerid] = 999; precoassalto[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0; SemBombas[playerid] = 0;
	GettingEmprego[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedAdvogado[playerid] = 0; CallAdvogado[playerid] = 0; WantAdvogado[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; PlayerInfo[playerid][pSpawn] = 0;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	SexOffer[playerid] = 999; SexPrice[playerid] = 0; MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MaapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; SetPlayerWantedLevel(playerid, 0); GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0;
	BoxWaitTime[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; CopsrondaCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0;  MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; EmpregoDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCornt[playerid] = 0; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0;
	gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerConta[playerid] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999; MechanicAccepted[playerid] = 999; CopsrondaAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = 1000; NoFuel[playerid] = 0;
	HireCar[playerid] = 0;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0;
	WatchingTV[playerid] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	PlayerInfo[playerid][pPHousekey] = 500;
	InAFoodPlace[playerid] = 0;
	OnEquipado[playerid] = 0;
	OnMafiaEquipado[playerid] = 0;
	BPHInfo[playerid][PLojaA1] = 0;
	BPHInfo[playerid][PLojaA2] = 0;
	BPHInfo[playerid][PpLoja247] = 0;
	BPHInfo[playerid][PpLoja2472] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	PlayerInfo[playerid][pVIP] = 0;
	PlayerInfo[playerid][pTimeVIP] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pConta] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pEmprego] = 0;
	PlayerInfo[playerid][pSalario] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pHeadValueT] = 0;
	PlayerInfo[playerid][pCapacete] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDorgado] = 0;
	PlayerInfo[playerid][pDorgado2] = 0;
	PlayerInfo[playerid][pDoenca] = 0;
	PlayerInfo[playerid][pCreditos] = 0;
	PlayerInfo[playerid][pDrogas] = 0;
	PlayerInfo[playerid][pDrogas2] = 0;
	PlayerInfo[playerid][pDrogas3] = 0;
	PlayerInfo[playerid][pSafeDrogas] = 0;
	PlayerInfo[playerid][pSafeDrogas2] = 0;
	PlayerInfo[playerid][pSafeDrogas3] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrogasSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pOrigem] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
 	PlayerInfo[playerid][pPos_x] = 2246.6;
	PlayerInfo[playerid][pPos_y] = -1161.9;
	PlayerInfo[playerid][pPos_z] = 1029.7;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pSkin] = 0;
	admtrampando[playerid] = 0;
	admhide[playerid] = 0;
	helperhide[playerid] = 0;
	helpertrampando[playerid] = 0;
	new randphone = 1000 + random(9999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPHousekey] = 500;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	pRoadblock[playerid] = 0;
	PlayerInfo[playerid][pParedao] = 0;
	pRoadCones[playerid] = 0;
	SpikeInfo[playerid][sCreated] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pBarraca] = 0;
	PlayerInfo[playerid][pLuta] = 0;
	PlayerInfo[playerid][pOrigem] = 1;
	strmid(PlayerInfo[playerid][pLastLogin], "0/0/0/0/0/0", 0, strlen("0/0/0/0/0/0"),255);
	ClearCrime(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	TextShow[playerid] = false;
	HouseEntered[playerid] = 500;
	new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	SetPlayerMapIcon(playerid, 1,1552.6703,-1675.5068,16.1953, 30, 0xE6E6E6E6);//dp ls
	SetPlayerMapIcon(playerid, 2,1481.0386,-1772.3120,18.7958, 56, 0xE6E6E6E6);//Prefeitura
	SetPlayerMapIcon(playerid, 3,2243.6750,-1669.8136,21.0313, 45, 0xE6E6E6E6);//Binco
	SetPlayerMapIcon(playerid, 4,1456.9010,-1137.6941,23.9617, 45, 0xE6E6E6E6);//ZIP
	SetPlayerMapIcon(playerid, 5,1461.8320,-1010.3407,26.8438, 52, 0xE6E6E6E6);//Banco
	SetPlayerMapIcon(playerid, 6,1070.0182,-1874.0474,13.5469, 18, 0xE6E6E6E6);//Ammu Nation
	SetPlayerMapIcon(playerid, 7,1415.8468,-1693.0602,13.5469, 32, 0xE6E6E6E6); // sex shop
	SetPlayerMapIcon(playerid, 8,334.0479,-1507.9438,36.0391, 30, 0xE6E6E6E6); //dp bope
	SetPlayerMapIcon(playerid, 9,1791.212036,-1164.631713,23.828100, 18 , 0xE6E6E6E6);//Loja de Armas 1
	SetPlayerMapIcon(playerid, 10,-2454.0352,503.9203,30.0793, 30 , 0xE6E6E6E6);//cp PF
   	SetPlayerMapIcon(playerid, 11,-1989.4950,1039.8499,55.7266, 18 , 0xE6E6E6E6); //wang cars
	SetPlayerMapIcon(playerid, 12,1703.2197,-1470.1509,13.5469, 51 , 0xE6E6E6E6); //produtos
	SetPlayerMapIcon(playerid, 13,1833.6124,-1842.4968,13.5781, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 14,1352.4357,-1759.0243,13.5078, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 15,1837.0278,-1682.3890,13.3233, 48 , 0xE6E6E6E6); //alhambra
	SetPlayerMapIcon(playerid, 16,2027.6760,-1405.0399,16.7958, 22 , 0xE6E6E6E6); //hospital LS
	SetPlayerMapIcon(playerid, 17,2793.6682,-1087.5436,30.7188, 56, 0xE6E6E6E6);//pref east beach
	SetPlayerMapIcon(playerid, 18,2360.4719,-1532.8904,24.0000, 32, 0xE6E6E6E6); // sex shop
//=============== cassinos ===============================================
	SetPlayerMapIcon(playerid, 19,BizzInfo[5][bEntranceX],BizzInfo[5][bEntranceY],BizzInfo[5][bEntranceZ], 45, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 20,BizzInfo[9][bEntranceX],BizzInfo[9][bEntranceY],BizzInfo[9][bEntranceZ], 12, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 21,BizzInfo[10][bEntranceX],BizzInfo[10][bEntranceY],BizzInfo[10][bEntranceZ], 12, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 22,BizzInfo[11][bEntranceX],BizzInfo[11][bEntranceY],BizzInfo[11][bEntranceZ], 12, 0xE6E6E6E6);
//============================================================================
//=============== sbizz ===============================================
	SetPlayerMapIcon(playerid, 23,SBizzInfo[0][sbEntranceX],SBizzInfo[0][sbEntranceY],SBizzInfo[0][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 24,SBizzInfo[2][sbEntranceX],SBizzInfo[2][sbEntranceY],SBizzInfo[2][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 25,SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 26,SBizzInfo[12][sbEntranceX],SBizzInfo[12][sbEntranceY],SBizzInfo[12][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 27,SBizzInfo[13][sbEntranceX],SBizzInfo[13][sbEntranceY],SBizzInfo[13][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 28,SBizzInfo[18][sbEntranceX],SBizzInfo[18][sbEntranceY],SBizzInfo[18][sbEntranceZ], 5, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 29,SBizzInfo[21][sbEntranceX],SBizzInfo[21][sbEntranceY],SBizzInfo[21][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 30,SBizzInfo[22][sbEntranceX],SBizzInfo[22][sbEntranceY],SBizzInfo[22][sbEntranceZ], 63, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 31,SBizzInfo[23][sbEntranceX],SBizzInfo[23][sbEntranceY],SBizzInfo[23][sbEntranceZ], 63, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 32,SBizzInfo[24][sbEntranceX],SBizzInfo[24][sbEntranceY],SBizzInfo[24][sbEntranceZ], 32, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 33,628.0784,-571.7713,17.3975, 30, 0xE6E6E6E6);//HQ Policia Rodoviaria
	SetPlayerMapIcon(playerid, 34,943.0517,-1743.3169,13.5546, 30, 0xE6E6E6E6);// S.S.P


	if(!NomeCorreto(PlayerName(playerid)))
	{
		SendClientMessage(playerid, -1, "Seu nome não está no formato correto! USE ex: Nome_Sobrenome");
	 	SetTimerEx("Kickado", 8000, 0, "i", playerid);
	 	NaoPodeLogar[playerid] = 1;
 	}
 	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
		SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
		SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
		SetPlayerInterior(playerid, 0);
 		new plname[MAX_PLAYER_NAME];
        PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
        ClearChatbox(playerid, 10);
		GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring, 64, "Contas/%s.ini", plname);
        if(fexist(gstring))
		{
			format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
   			SendClientMessage(playerid, COLOR_AZULBB, "Você está registrado, digite sua senha para logar.");
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
   			TextDrawShowForPlayer(playerid, entrada);
    		TextDrawShowForPlayer(playerid, entrada2);
    		GameTextForPlayer(playerid, "~y~sa-mp versao: ~b~~h~~h~~h~0.3e", 1000, 6);
		}
		else
		{
		    if(NaoPodeLogar[playerid] == 0)
		    {
				format(gstring,128,"*** Bem vindo %s ***\n*** Você não esta registrado no servidor ***\n*** Digite uma senha para registrar-se ***",PlayerName(playerid));
			    SendClientMessage(playerid, COLOR_AZULBB, "Você não está registrado, digite uma senha para registrar-se!");
	            ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Registrando...",gstring, "Registrar", "Sair");
	   			TextDrawShowForPlayer(playerid, entrada);
	    		TextDrawShowForPlayer(playerid, entrada2);
			}
		}
	  	if(!NomeCorreto(PlayerName(playerid)))
		{
			SendClientMessage(playerid, -1, "Seu nome não está no formato correto para poder jogar neste servidor.");
			SendClientMessage(playerid, -1, "Você precisa usar EX: Nome_Sobrenome, Jameson_Douglas, etc..");
			SendClientMessage(playerid, -1, "Você será kickado em alguns segundos!!");
			TextDrawShowForPlayer(playerid, TextKick[playerid]);
 		}
		SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
		SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
		SetPlayerInterior(playerid, 0);
	}
	GangZoneShowForPlayer(playerid, GZHelpers, 0x05F6B2AA);
//======== estação ==========
	if(donoestacao == 0)
    {
    	GangZoneShowForPlayer(playerid, GZEstacao, 0xC0C0C0AA);
    }
	if(donoestacao == 1)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_PM);
    }
    if(donoestacao == 2)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_BOPE);
    }
    if(donoestacao == 5)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_AZTECAS);
    }
    if(donoestacao == 11)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_PF);
    }
	if(donoestacao == 14)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_GRO);
    }
    if(donoestacao == 17)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_BALLAS);
    }
    if(donoestacao == 18)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, TEAM_VAGOS_COLOR);
    }
    if(donoestacao == 19)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_CVSF);
    }

    if(donoestacao == 21)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COR_PCC);
    }

 //======================= CASARÃO =====================
 	if(donocasarao == 0)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, 0xC0C0C0AA);
    }
	if(donocasarao == 1)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_PM);
    }
    if(donocasarao == 2)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_BOPE);
    }
    if(donocasarao == 5)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_AZTECAS);
    }
    if(donocasarao == 11)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_PF);
    }
	if(donocasarao == 14)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_GRO);
    }
    if(donocasarao == 17)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_BALLAS);
    }
    if(donocasarao == 18)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, TEAM_VAGOS_COLOR);
    }
    if(donocasarao == 19)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_CVSF);
    }

    if(donocasarao == 21)
	{
    	GangZoneShowForPlayer(playerid, GZCasarao, COR_PCC);
    }


 // ============================= MORRO ====================
  	if(donomorro == 0)
    {
    	GangZoneShowForPlayer(playerid, GZMorro, 0xC0C0C0AA);
    }
	if(donomorro == 1)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_PM);
    }
    if(donomorro == 2)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_BOPE);
    }
    if(donomorro == 5)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_AZTECAS);
    }
    if(donomorro == 11)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COLORGZ_PF);
    }
	if(donomorro == 14)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_GRO);
    }
    if(donomorro == 17)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_BALLAS);
    }
    if(donomorro == 18)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, TEAM_VAGOS_COLOR);
    }
    if(donomorro == 19)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_CVSF);
    }

    if(donomorro == 21)
	{
    	GangZoneShowForPlayer(playerid, GZMorro, COR_PCC);
    }

// ======================= Mansão do Madd Dogg =================
  	if(donoaero == 0)
    {
    	GangZoneShowForPlayer(playerid, GZMaddDogg, 0xC0C0C0AA);
    }
	if(donoaero == 1)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_PM);
    }
    if(donoaero == 2)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_BOPE);
    }
    if(donoaero == 5)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_AZTECAS);
    }
    if(donoaero == 11)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COLORGZ_PF);
    }
	if(donoaero == 14)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_GRO);
    }
    if(donoaero == 17)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_BALLAS);
    }
    if(donoaero == 18)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, TEAM_VAGOS_COLOR);
    }
    if(donoaero == 19)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_CVSF);
    }

    if(donoaero == 21)
	{
    	GangZoneShowForPlayer(playerid, GZMaddDogg, COR_PCC);
    }

// ============== parque gleen =======================
  	if(donopark == 0)
    {
    	GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
    }
	if(donopark == 1)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_PM);
    }
    if(donopark == 2)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_BOPE);
    }
    if(donopark == 5)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_AZTECAS);
    }
    if(donopark == 11)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COLORGZ_PF);
    }
	if(donopark == 14)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_GRO);
    }
    if(donopark == 17)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_BALLAS);
    }
    if(donopark == 18)
	{
    	GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
    }
    if(donopark == 19)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_CVSF);
    }

    if(donopark == 21)
	{
    	GangZoneShowForPlayer(playerid, GZPark, COR_PCC);
    }
	if(fexist(string2))
	{
		gPlayerConta[playerid] = 1;
	}
	else
	{
		gPlayerConta[playerid] = 0;
	}
	new IPDoCara[16];
	GetPlayerIp(playerid, IPDoCara, sizeof IPDoCara);
	format(SSSTRING, sizeof(SSSTRING), "AdmCmd: %s (IP: %s) conectou-se.", PlayerName(playerid),IPDoCara);
	ABroadCast(COLOR_LIGHTRED, SSSTRING, 1);
	new stringban2[128];
	format(stringban2, sizeof(stringban2), "IPsBanidos/%s.ini", IPDoCara);
	if(fexist(stringban2))
	{
        SetTimerEx("BanAuto", 9500, 0, "i", playerid);
        NaoPodeLogar[playerid] = 1;
	}
	new stringban[128];
	format(stringban, sizeof(stringban), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(stringban))
	{
	    OnPlayerAT(playerid);
        SetTimerEx("BanAuto", 9500, 0, "i", playerid);
        NaoPodeLogar[playerid] = 1;
	}
	new stringban9[128];
	format(stringban9, sizeof(stringban9), "BanidosTemp/%s.ini", PlayerName(playerid));
	if(fexist(stringban9))
	{
	    OnPlayerAT(playerid);
	}
	return true;
}

forward CheckDesbanAuto(playerid);
public CheckDesbanAuto(playerid)
{
	new string3[128];
	new string4[128];
	new ANO, MES, DIA;
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(string3, sizeof(string3), "BanidosTemp/%s.ini", PlayerName(playerid));
	format(string4, sizeof(string4), "IPsBanidosTemp/%s.ini", ip);
	if(fexist(string3))
	{
	    getdate(ANO, MES, DIA);
		if(DIA >= PlayerInfo[playerid][pDiaBanTemp] && MES >= PlayerInfo[playerid][pMesBanTemp] && ANO >= PlayerInfo[playerid][pAnoBanTemp])
		{
			DOF2_RemoveFile(string3);
			FoiDesban[playerid] = 1;
			NaoPodeLogar[playerid] = 0;
			if(fexist(string4))
			{
			    NaoPodeLogar[playerid] = 0;
				DOF2_RemoveFile(string4);
			}
		}
		else
		{
		    NaoPodeLogar[playerid] = 1;
		    ForceClassSelection(playerid);
	   	 	SetTimerEx("BanAuto2", 1300, 0, "i", playerid);
		}
	}
	else
	{
	    NaoPodeLogar[playerid] = 0;
	}
	if(fexist(string4))
	{
	    NaoPodeLogar[playerid] = 1;
	    ForceClassSelection(playerid);
		SetTimerEx("BanAuto2", 1300, 0, "i", playerid);
	}
	else
	{
	    NaoPodeLogar[playerid] = 0;
	}
	return true;
}

forward BanAuto(playerid);
public BanAuto(playerid)
{
	new string[128];
   	new DialogBPH[1500];
	new string3[128];
	new string4[128];
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	//format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string3,"Motivo"), 0, strlen(DOF2_GetString(string3,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string3,"Admin"), 0, strlen(DOF2_GetString(string3,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string3,"Data"), 0, strlen(DOF2_GetString(string3,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string3,"Hora"), 0, strlen(DOF2_GetString(string3,"Hora")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}*******[INFORMAÇÕES]*******\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}************************************\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
  		SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	format(string4, sizeof(string4), "IPsBanidos/%s.ini", ip);
	if(fexist(string4)) //autoban
	{
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string4,"Motivo"), 0, strlen(DOF2_GetString(string4,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string4,"Admin"), 0, strlen(DOF2_GetString(string4,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string4,"Data"), 0, strlen(DOF2_GetString(string4,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string4,"Hora"), 0, strlen(DOF2_GetString(string4,"Hora")), 255);
	   	strmid(BanInfo[playerid][pNick], DOF2_GetString(string4,"Nick"), 0, strlen(DOF2_GetString(string4,"Nick")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, 128, "*******[INFORMAÇÕES]*******\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", BanInfo[playerid][pNick]);
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
  		format(string, 128, "************************************\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
  		SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	return true;
}

forward BanAuto2(playerid);
public BanAuto2(playerid)
{
	new string[128];
   	new DialogBPH[1500];
	new string3[128];
	new string4[128];
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(string3, sizeof(string3), "BanidosTemp/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
   		ClearChatbox(playerid, 100);
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string3,"Motivo"), 0, strlen(DOF2_GetString(string3,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string3,"Admin"), 0, strlen(DOF2_GetString(string3,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string3,"Data"), 0, strlen(DOF2_GetString(string3,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string3,"Hora"), 0, strlen(DOF2_GetString(string3,"Hora")), 255);
	   	
  	   	strmid(BanInfo[playerid][BanDia], DOF2_GetString(string3,"DiaBanTemp"), 0, strlen(DOF2_GetString(string3,"DiaBanTemp")), 255);
	   	strmid(BanInfo[playerid][BanMes], DOF2_GetString(string3,"MesBanTemp"), 0, strlen(DOF2_GetString(string3,"MesBanTemp")), 255);
	   	strmid(BanInfo[playerid][BanAno], DOF2_GetString(string3,"AnoBanTemp"), 0, strlen(DOF2_GetString(string3,"AnoBanTemp")), 255);
	   	
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n");
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}*******[INFORMAÇÕES]*******\n\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {00FF00}%s/%s/%s\n\n", BanInfo[playerid][BanDia], BanInfo[playerid][BanMes], BanInfo[playerid][BanAno], BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}************************************\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
		ForceClassSelection(playerid);
	  	//Kick(playerid);
    	SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	format(string4, sizeof(string4), "IPsBanidosTemp/%s.ini", ip);
	if(fexist(string4)) //autoban
	{
   		ClearChatbox(playerid, 100);
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string4,"Motivo"), 0, strlen(DOF2_GetString(string4,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string4,"Admin"), 0, strlen(DOF2_GetString(string4,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string4,"Data"), 0, strlen(DOF2_GetString(string4,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string4,"Hora"), 0, strlen(DOF2_GetString(string4,"Hora")), 255);
	   	strmid(BanInfo[playerid][pNick], DOF2_GetString(string4,"Nick"), 0, strlen(DOF2_GetString(string4,"Nick")), 255);
	   	
  	   	strmid(BanInfo[playerid][BanDia], DOF2_GetString(string4,"DiaBanTemp"), 0, strlen(DOF2_GetString(string4,"DiaBanTemp")), 255);
	   	strmid(BanInfo[playerid][BanMes], DOF2_GetString(string4,"MesBanTemp"), 0, strlen(DOF2_GetString(string4,"MesBanTemp")), 255);
	   	strmid(BanInfo[playerid][BanAno], DOF2_GetString(string4,"AnoBanTemp"), 0, strlen(DOF2_GetString(string4,"AnoBanTemp")), 255);

		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n");
		strcat(DialogBPH,string);
 		format(string, 128, "*******[INFORMAÇÕES]*******\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", BanInfo[playerid][pNick]);
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {00FF00}%s/%s/%s\n\n", BanInfo[playerid][BanDia], BanInfo[playerid][BanMes], BanInfo[playerid][BanAno], BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
  		format(string, 128, "************************************\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FFFFFF}Este IP só será desbanido com a mesma conta.\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FFFFFF}www.s-bph.forumeiros.com\n");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
    	SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	return true;
}

public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		strmid(PlayerInfo[playerid][pMarriedTo], "Ninguem", 0, strlen("Ninguem"), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return true;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return true;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return true;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return true;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0;
		Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0;
		Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0;
		Groceries[playerid][pPizza] = 0;
	}
	return true;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	format(gstring, sizeof(gstring), "Loterica: Hoje o numero sorteado foi o nº %d.", number);
    OOCNews(TEAM_BALLAS_COLOR, gstring);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
					format(gstring, sizeof(gstring), "Loterica: %s ganhou R$%d com seu bilhete.", PlayerName(i), Jackpot);
					OOCNews(COLOR_LIGHTRED, gstring);
					format(gstring, sizeof(gstring), "* Você ganhou R$%d com seu bilhete de loteria.", Jackpot);
					SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
					ConsumingMoney[i] = 1;
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_GREY, " Não foi dessa Vez que você Ganhou na Loteria.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000);
		rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	else
	{
	    new rand = random(15000);
		rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	return true;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
	new nome[24], str[50];
 	GetPlayerName(playerid, nome, 24);
  	format(str, sizeof str, "%s - Arara", nome);
   	DOF2_SetBool("Araras.txt", str, AraraInfo[playerid][Arara]);
   	format(str, sizeof str, "%s - Racao", nome);
    DOF2_SetBool("Araras.txt", str, AraraInfo[playerid][Racao]);
    format(str, sizeof str, "%s - Grande", nome);
    DOF2_SetInt("Araras.txt", str, AraraInfo[playerid][Grande]);
    RemovePlayerAttachedObject(playerid, 4);
	if(DonoBalao[playerid] == 1)
	{
		StopObject(Balao);
		SetObjectPos( Balao,2904.8999,-1096.9142,11.1487-1);
		BalaoOcupado1 = 0;
		KillTimer(TempoBalao1);
		Update3DTextLabelText(TextBalao1, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	if(DonoBalao[playerid] == 2)
	{
		StopObject(Balao2);
		SetObjectPos( Balao2,2906.4272,-1056.2058,11.0407-1);
		BalaoOcupado2 = 0;
		KillTimer(TempoBalao2);
		Update3DTextLabelText(TextBalao2, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	if(DonoBalao[playerid] == 3)
	{
		StopObject(Balao3);
		SetObjectPos( Balao3,2906.4272,-1056.2058,11.0407-1);
		BalaoOcupado3 = 0;
		KillTimer(TempoBalao3);
		Update3DTextLabelText(TextBalao3, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}

	if(DonoBalao[playerid] == 4)
	{
		StopObject(Balao4);
		SetObjectPos( Balao4,2908.6658,-969.0612,11.0407-1);
		BalaoOcupado4 = 0;
		KillTimer(TempoBalao4);
		Update3DTextLabelText(TextBalao4, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	if(DonoBalao[playerid] == 5)
	{
		StopObject(Balao5);
		SetObjectPos( Balao5,2910.4563,-925.4816,11.0469-1);
		BalaoOcupado5 = 0;
		KillTimer(TempoBalao5);
 		Update3DTextLabelText(TextBalao5, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	if(DonoBalao[playerid] == 6)
	{
		StopObject(Balao6);
		SetObjectPos( Balao6,2912.0115,-882.0604,11.0469-1);
		BalaoOcupado6 = 0;
		KillTimer(TempoBalao6);
		Update3DTextLabelText(TextBalao6, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	if(DonoBalao[playerid] == 7)
	{
		StopObject(Balao7);
		SetObjectPos( Balao7,2913.2729,-839.3149,11.0469-1);
		BalaoOcupado7 = 0;
		KillTimer(TempoBalao7);
		Update3DTextLabelText(TextBalao7, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	}
	new sstring[256];
	EstaNoEvento[playerid] = 0;
	SetPlayerSkin(playerid, SkinDoCara[playerid]);
	KillTimer(TempoCheckAmmo[playerid]);
	KillTimer(TempoCheckTudo[playerid]);
	KillTimer(TempoTimerEvento[playerid]);
	CheatPlayerInfo[playerid][aAntiTeleportHack]=0;
	NaoPodeDigitar[playerid] = 0;
	if(NomeTopKills1 == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Kills) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    KillsTop1 = 0;
	    NomeTopKills1 = 999;
	}
	if(NomeTopCrimes == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Crimes) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    CrimesTop = 0;
	    NomeTopCrimes = 999;
	}
	if(NomeTopGrana == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Grana) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    GranaTop = 0;
	    NomeTopGrana = 999;
	}
	if(NomeTopHoras == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Horas jogadas) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    HorasTop = 0;
	    NomeTopHoras = 999;
	}
	if(NomeTopNoob == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Noob) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    NoobTop = 0;
	    NomeTopNoob = 999;
	}
	if(NomeTopRespeito == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Respeito) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    RespeitoTop = 0;
	    NomeTopRespeito = 999;
	}
	if(NomeTopNivel == playerid && gPlayerLogged[playerid] == 1)
	{
	    format(sstring, sizeof(sstring), "** %s (Top Nivel) deslogou do servidor.",PlayerName(playerid));
	    SendClientMessageToAll(COLOR_YELLOW, sstring);
	    printf(sstring);
	    NivelTop = 0;
	    NomeTopNivel = 999;
	}
	if(MensagemDesligou == 1)
	{
	    return true;
	}
	CheatPlayerInfo[playerid][aX] = 0;
	CheatPlayerInfo[playerid][aY] = 0;
	CheatPlayerInfo[playerid][aZ] = 0;
	DisablePlayerCheckpoint(playerid);
 	TextDrawDestroy(Text:FilaAtendimentoText[playerid]);
    TextDrawDestroy(Text:TempoAtendimento2Text[playerid]);
	KillTimer(TimerSS[playerid]);
 	FilaAtendimento[playerid] = 999;
    TempoAtendimento2[playerid] = 0;
	OnPlayerSave(playerid);
	KillTimer(tempotd[playerid]);
    new caller = Mobile[playerid];
    OnPlayerSave(playerid);
	if(VozDePrisao[playerid] == 1)
	{
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pJailTime] = 8 * 60;
		format(sstring, sizeof(sstring), "* %s saiu do servidor com voz de prisao, e foi preso automaticamente!", PlayerName(playerid));
		ProxDetector(50.0, playerid, sstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		VozDePrisao[playerid] = 0;
	}
    if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "A ligação caiu..");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(HireCar[playerid] > 0)
	{
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		SetVehicleToRespawn(HireCar[playerid]);
		HireCar[playerid] = 0;
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPhousekey] != gLastCar[playerid]-1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(pRoadblock[playerid] != 0)
	{
		RemoveRoadblock(playerid);
	}
	if(pRoadblock2[playerid] != 0)
	{
		RemoveRoadblock2(playerid);
	}
    if(SpikeInfo[playerid][sCreated] != 0)
	{
		RemoveRoadPregos(playerid);
	}
	if(pRoadCones[playerid] != 0)
	{
		RemoveRoadCones(playerid);
	}
   	switch(reason)
   	{
	   	case 0: format(gstring, sizeof(gstring), "***%s saiu do servidor por erro de conexão ou crash.", PlayerName(playerid));
       	case 1: format(gstring, sizeof(gstring), "***%s saiu do servidor por vontade propria.", PlayerName(playerid));
       	case 2: format(gstring, sizeof(gstring), "***%s Saiu do servidor kickado ou banido.", PlayerName(playerid));
	}
   	ProxDetector(30.0, playerid, gstring,0xDFB595FF,0xDFB595FF,0xDFB595FF,0xDFB595FF,0xDFB595FF);
   	printf("%s", gstring);
	gActivePlayers[playerid]--;
	numplayers--;
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoMorro[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZMorro);
		GangZoneShowForAll(GZMorro, 0xFFFFFF96);
		GuerranoMorro = 0;
		ProvocoMorro[playerid] = 0;
		donomorro = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraMorro);
	}

	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZMaddDogg);
		GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}
	if(ProvocoPark[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPark);
		GangZoneShowForAll(GZPark, 0xFFFFFF96);
		GuerranoPark = 0;
		ProvocoPark[playerid] = 0;
		donopark = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPark);
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(CopsrondaAccepted[i] < 999)
	        {
		        if(CopsrondaAccepted[i] == playerid)
		        {
		            CopsrondaAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Policial o player~n~~r~Deixou o jogo", 5000, 1);
		            CopsrondaCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MedicAccepted[i] < 999)
	        {
		        if(MedicAccepted[i] == playerid)
		        {
		            MedicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MedicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MechanicAccepted[i] < 999)
	        {
		        if(MechanicAccepted[i] == playerid)
		        {
		            MechanicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MechanicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(gstring, sizeof(gstring), "~w~Passageiro saiu~n~~g~ganhou R$%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Seu contrato saiu do servidor.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}

	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPHousekey] != gLastCar[playerid]-1)
		{
			VTrancado[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	PlayerBoxing[Boxer2] = 0;
	        	SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
	        	PlayerBoxing[Boxer1] = 0;
	        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    InRing = 0;
     	RorndStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(IsACop(playerid))
	{
	    if(EmpregoDuty[playerid] == 2) { Copsronda -= 1; }
	}
	if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//1 daki pr baixo os 3
	{
	    if(EmpregoDuty[playerid] == 2) { Medics -= 1; }
	}
	else if(IsAMec(playerid))
	{
	    if(EmpregoDuty[playerid] == 2) { Mechanics -= 1; }
	}
	OnPlayerSave(playerid);
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
	if((PlayerInfo[playerid][pAdmin] >= 1) && (PlayerInfo[playerid][pAdmin] <= 1341))
	{
		new string[128];
		new AdminName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, AdminName, sizeof(AdminName));
		format(string, sizeof(string), "~y~%s: ~r~OFF", AdminName);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			GameTextForPlayer(i, string , 5000, 1);
		}
	}
	return 0;
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
	    XiterArma[playerid] = 1;
	    TextDrawHideForPlayer(playerid, gpss[playerid]);
	    HouseEntered[playerid] = 500;
	    SkinDoCara[playerid] = GetPlayerSkin(playerid);
	   	TextDrawHideForPlayer(playerid, Hidealto);
		TextDrawHideForPlayer(playerid, Hidebaixo);
	    new rand;
	    new stringagendou[128];
	    if(sincronizando[playerid] == 1)
		{
			return true;
  		}
     	if(PlayerInfo[playerid][pBan] > 0)
  		{
  		    SendClientMessage(playerid, COLOR_DBLUE, "Você foi desbanido do servidor, Tenha um Bom Jogo!");
  		    PlayerInfo[playerid][pBan] = 0;
		}
    	if(helpertrampando[playerid] == 1)
	    {
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,421.1092,2536.4766,10.0000);
			SetPlayerInterior(playerid,10);
			GameTextForPlayer(playerid, "~w~HQ HELPER ", 5000, 1);
			SendClientMessage(playerid, COR_HELPER, "Você é um Helper em modo ajuda e nasceu na HQ dos Helpers!");
			PlayerInfo[playerid][pInt] = 10;
			return true;
		}
		if(PlayerInfo[playerid][pVIP] == 0 && PlayerInfo[playerid][pHospitalID] > 0 && SistemaHospital == 1)
		{
		    if(PlayerInfo[playerid][pHospitalID] == 1)
		    {
				XXAirBreak[playerid] += 3;
		        GameTextForPlayer(playerid, "~r~Hospitalizado em LS", 5000, 6);
		    	Controle(playerid, 0);
		    	storeexit[playerid] = 1;
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 10);
				rand = random(sizeof(HospitalizadoSpawns));
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, HospitalizadoSpawns[rand][0], HospitalizadoSpawns[rand][1], HospitalizadoSpawns[rand][2]); // Warp the player
				SetPlayerFacingAngle(playerid, HospitalizadoSpawns[rand][3]);
	    		ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				ShowPlayerDialog(playerid, 11, DIALOG_STYLE_MSGBOX, "Remedio do Hospital", "Os médicos lhe ofereceram um remédio para você se recuperar\nVocê pode escolher entre pagar o remédio e sair do Hospital\nOu continuar no Hospital até se recuperar dos ferimentos\n\nCusto do remédio: R$3500", "Aceitar", "Recusar");
				return true;
			}
			else if(PlayerInfo[playerid][pHospitalID] == 2)
		    {
				XXAirBreak[playerid] += 3;
		        GameTextForPlayer(playerid, "~r~Hospitalizado em SF", 5000, 6);
		    	Controle(playerid, 0);
                SetPlayerInterior(playerid, 10);
                storeexit[playerid] = 2;
				rand = random(sizeof(HospitalizadoSpawns));
				SetPlayerVirtualWorld(playerid, 1);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, HospitalizadoSpawns[rand][0], HospitalizadoSpawns[rand][1], HospitalizadoSpawns[rand][2]); // Warp the player
				SetPlayerFacingAngle(playerid, HospitalizadoSpawns[rand][3]);
	    		ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
            	ShowPlayerDialog(playerid, 11, DIALOG_STYLE_MSGBOX, "Remedio do Hospital", "Os médicos lhe ofereceram um remédio para você se recuperar\nVocê pode escolher entre pagar o remédio e sair do Hospital\nOu continuar no Hospital até se recuperar dos ferimentos\n\nCusto do remédio: R$3500", "Aceitar", "Recusar");
				return true;
			}
			return true;
		}
		if(MedicBill[playerid] >= 2 && PlayerInfo[playerid][pJailed] == 0)
		{
			XXAirBreak[playerid] += 3;
		   	format(gstring, 128, "Médico: Você foi recuperado e perdeu R$%d.", precomorte);
		   	SendClientMessage(playerid, 0xFF8282AA, gstring);
		   	GivePlayerMoney(playerid, -precomorte);
			XXAirBreak[playerid] += 3;
			SBizzInfo[12][sbTill] += precomorte;
		    ExtortionSBiz(12, precomorte);
		    ResetPlayerWeaponsBPH(playerid);
			MedicBill[playerid] = 0;
			MedicTime[playerid] = 0;
			NeedMedicTime[playerid] = 0;
			PlayerInfo[playerid][pDeaths] += 1;
			CofreOrg[4][Dinheiro] += precomorte;
			if(WantedPoints[playerid] > 0)
			{
				XXAirBreak[playerid] += 3;
				new Wanted = WantedPoints[playerid];
				new diecash = WantedPoints[playerid]*200;
		    	format(gstring, sizeof(gstring), "Você perdeu R$%d por morrer com Nivel De Procura: %d.", diecash, Wanted);
		    	SendClientMessage(playerid, COLOR_YELLOW, gstring);
		    	GivePlayerMoney(playerid, - diecash);
			}
		}
  		spawnado[playerid] = 1;
	    MedicBill[playerid] ++;
	    Controle(playerid, 1);
	    SetPlayerToTeamColor(playerid);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gNews[playerid] = 1;
			gFam[playerid] = 1;
			Controle(playerid, 0);
			RegistrationStep[playerid] = 1;
			ClearChatbox(playerid, 8);
			//PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.00);
			SetPlayerCameraPos( playerid, 1425.6246, -912.0739, 84.8901 );
			SetPlayerCameraLookAt( playerid, 1424.7957, -902.5995, 81.8000 );
			XXAirBreak[playerid] += 3;
			SetPlayerPos(playerid, 1446.6510,-807.7561,84.2902);
			SetPlayerInterior(playerid, 0);
			PlayerPlaySound(playerid,1039,0.0,0.0,0.0);
			SetPlayerVirtualWorld(playerid,playerid+1);
			ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"Escolha seu sexo:","\nEscolha seu sexo corretamente\n\nOBS: você não terá outra chance de escolher seu sexo\n","Homem","Mulher");
			PlayAudioStreamForPlayer(playerid, "https://dl.dropbox.com/u/84351048/Musicas/If%20It%20Means%20A%20Lot%20To%20You%20-Michael%20Henry%20and%20Justin%20Robinett%20with%20Lyrics.mp3");
			XXAirBreak[playerid] += 3;
	    }
		new House = PlayerInfo[playerid][pPHousekey];
		if(PlayerInfo[playerid][pLuta] == 1)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
		if(PlayerInfo[playerid][pLuta] == 2)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		}
		if(PlayerInfo[playerid][pLuta] == 3)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		if(PlayerInfo[playerid][pLuta] == 4)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
		if(PlayerInfo[playerid][pLuta] == 5)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		if(PlayerInfo[playerid][pLuta] == 6)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		}

		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 6);
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 264.1557,77.4240,1001.0391); // Warp the player
			storeexit[playerid] = 66;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 27)
		{
		    SetPlayerInterior(playerid, 6);
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 264.1557,77.4240,1001.0391); // Warp the player
			storeexit[playerid] = 67;
			SetPlayerVirtualWorld(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		
		if(PlayerInfo[playerid][pJailed] == 33)
		{
		    SetPlayerInterior(playerid, 10);
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 223.4674,110.9308,999.0156); // presão na Policia rodoviaria
			SetPlayerFacingAngle(playerid, 354.5019);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 3);
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 198.1241,174.9942,1003.0234); // Warp the player
			SetPlayerFacingAngle(playerid, 2.2642);
			storeexit[playerid] = 2;
			SetPlayerVirtualWorld(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 11)
		{
		    SetPlayerInterior(playerid, 3);
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 198.1241,174.9942,1003.0234); // Warp the player
			SetPlayerFacingAngle(playerid, 2.2642);
			storeexit[playerid] = 11;
			SetPlayerVirtualWorld(playerid, 2);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 16)
		{
		    SetPlayerInterior(playerid, 3);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 198.1241,174.9942,1003.0234); // Warp the player
			SetPlayerFacingAngle(playerid, 2.2642);
			storeexit[playerid] = 16;
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			VozDePrisao[playerid] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
		    SetPlayerInterior(playerid, 0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1293.2203,490.5885,11.1953);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Prisão");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 9)
		{
		    if(PlayerInfo[playerid][pAgendado] == 1)
		    {
		       	new motivoagendou[128];
				strmid(motivoagendou, PlayerInfo[playerid][pMotivoAgendou], 0, strlen(PlayerInfo[playerid][pMotivoAgendou]), 255);
		       	new adminagendou[64];
				strmid(adminagendou, PlayerInfo[playerid][pAdminAgendou], 0, strlen(PlayerInfo[playerid][pAdminAgendou]), 255);
		        format(stringagendou, sizeof(stringagendou), "O Admin %s agendou você para %d minutos de cadeia, Motivo: %s", adminagendou, PlayerInfo[playerid][pTempoAgendado], motivoagendou);
		        SendClientMessage(playerid, COLOR_LIGHTRED, stringagendou);
		  		PlayerInfo[playerid][pAgendado] = 0;
			}
			XXAirBreak[playerid] += 3;
		    SetPlayerInterior(playerid, 1);
		    NaoPodeDigitar[playerid] = 1;
			XXAirBreak[playerid] += 3;
			SetPlayerPos(playerid, 963.418762,2108.292480,1011.030273);//XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1175.6014,-1179.9524,87.0427);
			//SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
            SendClientMessage(playerid, COLOR_LIGHTRED, "Sentença incompleta,Você voltou para Cadeia!");
			return true;
		}

		if(House !=500 && PlayerInfo[playerid][pSpawn] == 1)
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,HouseInfo[House][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[House][hWorld]);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, HouseInfo[House][hExitx], HouseInfo[House][hExity],HouseInfo[House][hExitz]); // Warp the player
			PlayerInfo[playerid][pLocal] = House;
			PlayerInfo[playerid][pInt] = HouseInfo[House][hInt];
			HouseEntered[playerid] = House;
			return true;
		}
		
		if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)// Taxistas Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1004.5120,-1431.9630,13.5469);
			SetPlayerFacingAngle(playerid,181.6931);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
		}
		if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//Policia Militar Nascimento
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1529.4567,-1671.7179,6.2188);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return true;
	    }
	    
		if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//Policia Rodoviária
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 611.0753,-585.4783,17.2266);
		    SetPlayerFacingAngle(playerid,359.0599);
		    PlayerInfo[playerid][pInt] = 0;
			return true;
	    }
	    
   		if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Secretaria de segurança
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 936.8104,-1746.1929,13.5469);
		    SetPlayerFacingAngle(playerid,285.5956);
		    PlayerInfo[playerid][pInt] = 0;
			return true;
	    }
		if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//Rotam Nascimento
		{

			XXAirBreak[playerid] += 3;
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 327.9110,-1514.2948,36.0391);
		    SetPlayerFacingAngle(playerid,51.1759);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return true;
	    }
		if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército Nascimento
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1522.0642,478.4109,7.1875);
		    SetPlayerFacingAngle(playerid, 359.3457);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//MEDICO Nascimento
		{

			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2041.3466,-1409.0089,17.1641);
	     	SetPlayerFacingAngle(playerid,181.3526);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Aztecas Nascimento
		{
			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 316.1400,-1771.1389,4.6898);
		    SetPlayerFacingAngle(playerid,181.4693);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//GIA Nascimento
		{

			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-525.3108,-504.6893,25.5234);
			SetPlayerFacingAngle(playerid,177.4875);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Nascimento
		{

			XXAirBreak[playerid] += 3;
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 354.8267,154.4102,1025.7964);
		    PlayerInfo[playerid][pInt] = 0;
		    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		    storeexit[playerid] = 1717;
		    SetPlayerArmour(playerid, 100);
			PlayerInfo[playerid][pLocal] = 241;
			SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
	    if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) //Hitmans Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1103.7292,-301.5847,73.9851);
			SetPlayerFacingAngle(playerid,270.1619);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) //Repórters Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 735.3049,-1350.8284,13.5000);
			SetPlayerVirtualWorld(playerid,0);
			GivePlayerWeaponBPH(playerid, 43, 120);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) //Groove Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2516.1411,-1675.4065,13.9113);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) //GI Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 426.1718,2536.5134,16.5469);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //Rotam-SF Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 197.8396,168.9996,1003.0234);
			SetPlayerFacingAngle(playerid, 87.4229);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			storeexit[playerid] = 16;
 			SetPlayerWantedLevel(playerid, 0);
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) //Ballas Membros  Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1154.4968,-1180.8517,32.8187);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) //Vagos Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2808.3562,-1176.4606,25.3687);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //Máfia Yakuza Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 679.7172,-1275.9229,13.5931);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) //Máfia Cosa Nostra Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 309.4009,-1161.1469,80.9141);
			SetPlayerFacingAngle(playerid,128.7879);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
  		if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//Policia Federal Nascimento
		{

			XXAirBreak[playerid] += 3;
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2440.0061,497.1938,30.1016);
            SetPlayerFacingAngle(playerid,208.9188);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
	    if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) //Comando Vermelho
	    {

			XXAirBreak[playerid] += 3;
		    SetPlayerInterior(playerid, 0);
		    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2008.4799,-2066.0486,13.5469);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
        if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //Comando Vermelho-SF Nascimento
	    {

			XXAirBreak[playerid] += 3;
	        SetPlayerInterior(playerid, 0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2522.8977,1216.2544,37.4283);
			SetPlayerFacingAngle(playerid,174.7669);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
     	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) //PCC Nascimento
	    {

			XXAirBreak[playerid] += 3;
	        SetPlayerInterior(playerid, 0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2232.2180,-1458.5508,24.0173);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,352.1631);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
        if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) //Triads Nascimento
	    {

			XXAirBreak[playerid] += 3;
	        SetPlayerInterior(playerid, 0);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1691.1533,1367.1213,7.1797);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,42.8215);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
        if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) //Guerrilheiros Israelitas Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2281.6396,2288.4011,4.9699);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
   //================================
   		if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) //Guerrilheiros Israelitas Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2322.7439,-157.5740,35.5547);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }

     	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) //Guerrilheiros Israelitas Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2462.5132,132.5567,35.1719);
            SetPlayerFacingAngle(playerid,127.4057);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }

	    	       //================================
        if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) //Guerrilheiros Israelitas Nascimento
	    {

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1591.7808,716.3661,-5.2422);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    	       //================================
     	if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //Guerrilheiros Israelitas Nascimento
	    {
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1829.3571,108.0647,15.1172);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }

	    	       //================================
		if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) //Guerrilheiros Israelitas Nascimento
	    {
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2459.0505,795.3023,35.1786);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    	       //================================
        if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) //Guerrilheiros Israelitas Nascimento
	    {
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2059.1130,393.0208,35.1719);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    	       //================================
        if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) //Guerrilheiros Israelitas Nascimento
	    {
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2681.2629,636.5414,14.4531);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }

	    	       //================================
        if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) //Guerrilheiros Israelitas Nascimento
	    {
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2274.6904,533.6465,35.0494);
            SetPlayerFacingAngle(playerid,181.3263);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
   //========================================

		if(PlayerInfo[playerid][pOrigem] == 1)//Country Club - SF
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
	 	if(PlayerInfo[playerid][pOrigem] == 2)//East Beach - LS
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		
		if(PlayerInfo[playerid][pOrigem] == 3)//Verona Beach - LS
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		
		if(PlayerInfo[playerid][pOrigem] == 4)//City Hall - SF
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pOrigem] == 5)//East Los Santos - LS
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pOrigem] == 6)//Downtown - SF
		{
			XXAirBreak[playerid] += 3;
		   	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,960.7544,-54.4915,1001.1172);
			SetPlayerFacingAngle(playerid, 181.2104);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		if ((gTeam[playerid]) == 1)
	    {
			XXAirBreak[playerid] += 3;
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		else
		{
			XXAirBreak[playerid] += 3;
            XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1754.4994,-1907.7122,13.5658);
  			SetPlayerFacingAngle(playerid, 1.7634);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
	}
	SetCameraBehindPlayer(playerid);
	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
    new string[256];
    TextDrawHideForPlayer(playerid, MostrarVida[playerid]);
	if(PlayerInfo[playerid][pVIP] < 1 && SistemaHospital == 1 && helpertrampando[playerid] < 1 && admtrampando[playerid] < 1)
	{
	    if(PlayerInfo[playerid][pOrigem] == 2)
	    {
			SendClientMessage(playerid, COLOR_GRAD2, "[Informação] Você será internado no hospital da sua cidade {FFFFFF}(Hospital Regional de Los Santos)");
			PlayerInfo[playerid][pTempoHospitalizado] = 90;
			storeexit[playerid] = 1;
			PlayerInfo[playerid][pHospitalID] = 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[Informação] Você será internado no hospital da sua cidade {FFFFFF}(Hospital Regional de San Fierro)");
			PlayerInfo[playerid][pTempoHospitalizado] = 90;
			storeexit[playerid] = 2;
			PlayerInfo[playerid][pHospitalID] = 2;
		}
	}
 	if(PlayerInfo[playerid][pVIP] > 0 && SistemaHospital == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você é um player VIP e não precisará ir para o Hospital!");
	}
	if(NaCamera[playerid] > 1)
	{
		TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
		TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
		TextDrawHideForPlayer(playerid, TextRec[playerid]);
		NaCamera[playerid] = 0;
	}
	RemovePlayerAttachedObject(playerid,3);
 	antifakekill[playerid] ++;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
	new Float:px,Float:py,Float:pz;
	PlayerInactivity[playerid] = 0;
	new arma;
	arma = GetPlayerWeapon(killerid);
	gPlayerSpawned[playerid] = 0;
	if(arma ==  34)
	{
		format(string, sizeof(string), "Aviso: Você foi morto por um tiro de Sniper disparado por %s", PlayerName(killerid));
	    SendClientMessage(playerid, COLORGZ_EXE, string);
	}
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerPos(playerid, px, py, pz);
	spawnado[playerid] = 0;
	if(PlayerInfo[playerid][pLevel] >=3)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		   	if(IsPlayerConnected(i) && IsAMedicos(i))
		   	{
   				PlayerPlaySound(i, 1039, 0.0, 0.0, 0.0);
               	format(gstring, sizeof(gstring), "~w~Pessoa ~r~Morta~n~Bonus~g~R$200");
               	GameTextForPlayer(i, gstring, 5000, 1);
               	GivePlayerMoney(i, 200);
			}
		}
	}
	if (!IsPlayerNPC(playerid))
	{
		CheatPlayerInfo[playerid][aAntiTeleportHack]=0;
	}

	if(Sequestrado[playerid] == 1)
	{
        format(string, sizeof(string), "[Fim Triste] A vítima de sequestro %s está morta", sendername);
		SendClientMessageToAll(COLOR_DBLUE, string);
		Sequestrado[playerid] = 0;
	}

	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	SetPlayerCriminal(killerid, 255, "Assassinato");
	PlayerInfo[killerid][pKills] += 1;
	if(TendoGuerra == 1 && IsPlayerInTerritorio(playerid) && IsPlayerInTerritorio(killerid))
	{
		if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
		{
	    	if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
   			if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
				Territorio[GImortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 6 || PlayerInfo[killerid][pLider] == 6)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
      		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
				Territorio[GImortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 15 || PlayerInfo[killerid][pLider] == 15)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
      		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
				Territorio[GImortos] += 1;
			}
		}
  		if(PlayerInfo[killerid][pMembro] == 23 || PlayerInfo[killerid][pLider] == 23)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
      		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
		}
	}
//==================================[SUSPEITO MORTO]=========================//
	if(WantedPoints[playerid] >= 1)
	{
		new price = WantedPoints[playerid] * 100;
	    if(PlayerInfo[killerid][pMembro] == 1 || PlayerInfo[killerid][pLider] == 1)
  		{
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 1;
   			PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Policia Militar, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 2 || PlayerInfo[killerid][pLider] == 2)
	  	{
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 2;
		   	PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na HQ Rotam, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
 		{
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 3;
   			PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos no Exército, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 16 || PlayerInfo[killerid][pLider] == 16)
	    {
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 16;
		    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Rotam-SF, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 11 || PlayerInfo[killerid][pLider] == 11)
	    {
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 11;
		    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Policia Federal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 27 || PlayerInfo[killerid][pLider] == 27)
  		{
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 27;
		    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Policia Militar de SF, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
		if(PlayerInfo[killerid][pMembro] == 33 || PlayerInfo[killerid][pLider] == 33)
	   	{
			ConsumingMoney[killerid] = 1;
			GivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pJailed] = 33;
		    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
		    format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Policia Rodoviária, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
		    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       		WantedPoints[playerid] = 0;
       		SetPlayerWantedLevel(playerid, 0);
		}
	   	if(IsACop(killerid))
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
		    	if(IsPlayerConnected(i) && IsACop(i))
		    	{
		    	    if(GetPlayerState(i) == 2)
		    	    {
		    	        PlayerPlaySound(i, 2134, 0.0, 0.0, 0.0);
					}
					else
					{
                		PlayerPlaySound(i, 1039, 0.0, 0.0, 0.0);
					}
                	format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$500");
                	GameTextForPlayer(i, gstring, 5000, 1);
                	GivePlayerMoney(i, 500);
				}
			}
		}
	}
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoMorro[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZMorro);
		GangZoneShowForAll(GZMorro, 0xFFFFFF96);
		GuerranoMorro = 0;
		ProvocoMorro[playerid] = 0;
		donomorro = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraMorro);
	}

	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZMaddDogg);
		GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}

	if(ProvocoPark[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPark);
		GangZoneShowForAll(GZPark, 0xFFFFFF96);
		GuerranoPark = 0;
		ProvocoPark[playerid] = 0;
		donopark = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPark);
	}

	if(GetPlayerState(killerid) == 2)
	{
        GetPlayerName(killerid,kickname,sizeof(kickname));
		format(gstring,sizeof(gstring),"AdmCmd: %s ID:[%d] cometeu DB em %s ID:[%d] e será kickado por um administrador !",kickname,killerid,PlayerName(playerid),playerid);
	    SendClientMessageToAll(COLOR_LIGHTRED,gstring);
	}

	if(reason == 36)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "AdmAviso: [%d]%s usou Bazuka =2= em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED,gstring,1);
			printf("%s", gstring);
		}
	}
 	if(reason == 26)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "AdmAviso: [%d]%s usou 12 Cano cerrado em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED,gstring,1);
			printf("%s", gstring);
		}
	}

	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
	}
	new caller = Mobile[playerid];
	new name[MAX_PLAYER_NAME];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "Morreram do outro lado da linha....");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(PlayerInfo[playerid][pHeadValue] > 0 || PlayerInfo[playerid][pHeadValueT] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(GetPlayerOrg(killerid) == 8)
		    {
		        if(GoChase[killerid] == playerid)
		        {
      		 		if(GetPlayerOrg(killerid) == 8) { CHitman++; }
		            ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					GivePlayerMoneyEx(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"<< O Hitman %s Completou o contrato em %s pelo preço de R$%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(GetPlayerOrg(killerid), COLOR_YELLOW, string);
					format(string,128,"<< O Hitman %s matou você por um contrato de R$%d, então não foi DM. >>",killer,PlayerInfo[playerid][pHeadValue]);
					SendClientMessage(playerid, COLORGZ_EXE, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		    if(GetPlayerOrg(killerid) == 22)
		    {
		        if(GoChase[killerid] == playerid)
		        {
         		 	if(GetPlayerOrg(killerid) == 22) { CTriad++; }
		            ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					GivePlayerMoneyEx(killerid, PlayerInfo[playerid][pHeadValueT]);
					format(string,128,"<< O Triad %s Completou o contrato em %s pelo preço de R$%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(GetPlayerOrg(killerid), COLOR_YELLOW, string);
					format(string,128,"<< O Triad %s matou você por um contrato de R$%d, então não foi DM. >>",killer,PlayerInfo[playerid][pHeadValue]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValueT] = 0;
					GotTri[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if(PlayerInfo[killerid][pHeadValue] > 0 || PlayerInfo[killerid][pHeadValueT] > 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(GetPlayerOrg(playerid) == 8)
		    {
		        if(GoChase[playerid] == killerid)
		        {
		            ConsumingMoney[playerid] = 1;
					format(gstring,128,"<< O Hitman %s foi morto por %s, e perdeu o seu contrato >>",PlayerName(playerid),PlayerName(killerid));
					SendFamilyMessage(GetPlayerOrg(playerid), COLOR_YELLOW, gstring);
					PlayerInfo[killerid][pHeadValue] = 0;
					GotHit[killerid] = 0;
					GetChased[killerid] = 999;
					GoChase[playerid] = 999;
				}
			}
		    if(GetPlayerOrg(playerid) == 22)
		    {
		        if(GoChase[playerid] == killerid)
		        {
		            ConsumingMoney[playerid] = 1;
					format(gstring,128,"<< O Triad %s foi morto por %s, e perdeu o seu contrato >>",PlayerName(playerid),PlayerName(killerid));
					SendFamilyMessage(GetPlayerOrg(playerid), COLOR_YELLOW, gstring);
					PlayerInfo[killerid][pHeadValueT] = 0;
					GotTri[killerid] = 0;
					GetChased[killerid] = 999;
					GoChase[playerid] = 999;
				}
			}
		}
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
}
public OnPlayerSpawn(playerid)
{
    NaoMostra[playerid] = 0;
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 0)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.0, 1.0, 1.0);
	}
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 1)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.1, 1.1, 1.1);
	}
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 2)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.2, 1.2, 1.2);
	}
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 3)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.3, 1.3, 1.3);
	}
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 4)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.5, 1.5, 1.5);
	}
 	if(AraraInfo[playerid][Arara] == true && AraraInfo[playerid][Grande] == 5)
  	{
		SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.6, 1.6, 1.6);
	}
	new string[128];
   	new DialogBPH[1500];
	new string3[128];
	new string4[128];
	new ip[16];
	TextDrawHideForPlayer(playerid, gpss[playerid]);
	GetPlayerIp(playerid, ip, sizeof ip);
	//format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
   		ClearChatbox(playerid, 10);
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string3,"Motivo"), 0, strlen(DOF2_GetString(string3,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string3,"Admin"), 0, strlen(DOF2_GetString(string3,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string3,"Data"), 0, strlen(DOF2_GetString(string3,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string3,"Hora"), 0, strlen(DOF2_GetString(string3,"Hora")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}*******[INFORMAÇÕES]*******\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}************************************\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
  		SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	format(string4, sizeof(string4), "IPsBanidos/%s.ini", ip);
	if(fexist(string4)) //autoban
	{
   		ClearChatbox(playerid, 10);
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string4,"Motivo"), 0, strlen(DOF2_GetString(string4,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string4,"Admin"), 0, strlen(DOF2_GetString(string4,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string4,"Data"), 0, strlen(DOF2_GetString(string4,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string4,"Hora"), 0, strlen(DOF2_GetString(string4,"Hora")), 255);
	   	strmid(BanInfo[playerid][pNick], DOF2_GetString(string4,"Nick"), 0, strlen(DOF2_GetString(string4,"Nick")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, 128, "*******[INFORMAÇÕES]*******\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", BanInfo[playerid][pNick]);
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
  		format(string, 128, "************************************\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
  		SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
    AntiDeAMX();
    TextDrawShowForPlayer(playerid, Reloginho1);
	TextDrawShowForPlayer(playerid, Reloginho2);
	TextDrawHideForPlayer(playerid, Hidealto);
	TextDrawHideForPlayer(playerid, Hidebaixo);
	TextDrawShowForPlayer(playerid, forum2);
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "AdmCmd: Você foi kickado automaticamente, Motivo: Spawn sem login");
        Kick(playerid);
        return true;
 	}
	CheckInfoOrg(playerid);
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLider] < 1)
	{
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Você não pertence a mais nenhuma org, agora é um civil novamente!");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1)
		{
			PlayerInfo[playerid][pSkin] = 23;
		}
		else
		{
			PlayerInfo[playerid][pSkin] = 141;
		}
		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMembro] < 1)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz mais parte de uma org, agora é um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1)
			{
				PlayerInfo[playerid][pSkin] = 23;
			}
			else
			{
				PlayerInfo[playerid][pSkin] = 150;
			}
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pMembro] != 22)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz mais parte de uma org, agora é um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1)
			{
				PlayerInfo[playerid][pSkin] = 23;
			}
			else
			{
				PlayerInfo[playerid][pSkin] = 216;
			}
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pMembro] != 27)
	    {
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é mais um oficial, é um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1)
		{
			PlayerInfo[playerid][pSkin] = 291;
		}
		else
		{
			PlayerInfo[playerid][pSkin] = 141;
		}
  		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
	    {
			MedicBill[playerid] = 0;
			if(PlayerInfo[playerid][pMembro] == 1) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2;}
			else if(PlayerInfo[playerid][pMembro] == 2) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 3) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 4) { SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMembro] == 5) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 6) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 8) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 9) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 10) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 11) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 12) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pMembro] == 13) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pMembro] == 14) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pMembro] == 15) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pMembro] == 16) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 17) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pMembro] == 18) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 19) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 20) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 21) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 22) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
            else if(PlayerInfo[playerid][pMembro] == 23) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
            //SPAAWN LIDER
			else if(PlayerInfo[playerid][pLider] == 1) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 2) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 3) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 4) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 5) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 6) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 7) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 8) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 9) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 10) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 11) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 12) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 22; }
			else if(PlayerInfo[playerid][pLider] == 13) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pLider] == 14) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pLider] == 15) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pLider] == 16) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 17) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pLider] == 18) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 19) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 20) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 21) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 22) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 23) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pSkin] > 0)
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	}
	else
	{
		if(PlayerInfo[playerid][pSex] == 1)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
		else
		{
			PlayerInfo[playerid][pSkin] = 216;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	return true;
}
stock PAdminsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("admins.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock PHelpersLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("helpers.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock PayLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock KickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock SBanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("s_ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock pCasaLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("CasaLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock RconBanlog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("BanidoRcon.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock comandosadminlog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("comandosadmin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock SmsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("sms.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock AgendarLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("AgendarCadeia.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock CCarros(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("CriarCarros.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock VipsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("vips.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
	{
	    MedicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0 && MechanicAccepted[playerid] < 999)
	{
	    MechanicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CopsrondaCallTime[playerid] > 0 && CopsrondaAccepted[playerid] < 999)
	{
	    CopsrondaAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		CopsrondaCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~Complete a Missao indo nos Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(TruckMission[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$800 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 800);
		var1[playerid] = 1;
        SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 2)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$800 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 800);
		var1[playerid] = 1;
        SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 3)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$1000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 1000);
		var1[playerid] = 1;
        SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}

	
//=========== onibus==================
	if(CheCks[playerid] == 55)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao destino, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
		Controle(playerid, 0);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao destino", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
	if(CheCks[playerid] == 1)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou a Loja 24-7, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou a 24-7", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
	if(CheCks[playerid] == 2)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou a Prefeitura, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou a Prefeitura", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
	if(CheCks[playerid] == 3)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao restaurante, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao restaurante", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 4)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou a loja de armas 2, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou a loja de armas 2", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 5)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao banco de LS, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao banco", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 6)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao Cassino, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao Cassino", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 7)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou a loja de armas 2, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou a loja de armas 2", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 8)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao aluguel de carros, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao aluguel de carros", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 9)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou a Pizzaria, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou a Pizzaria", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
   	if(CheCks[playerid] == 10)
    {
		format(string, sizeof(string), "* Motorista de onibus %s chegou ao Monte Chilliad, e irá esperar os passageiros por 10 segundos.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        CheCks[playerid] = 0;
        Controle(playerid, 0);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chegou ao destino e ganhou R$80");
		GivePlayerMoney(playerid, 80);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao Chilliad", 5000, 3);
        ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"Escolha o proximo Local","Parada: 24/7\nParada: Prefeitura\nParada: Restaurante\nParada: Loja de armas 1\nParada: Banco\nParada: Cassino\nParada: Loja de armas 2\nParada: Aluguel de carros\nParada: Pizzaria\nParada: Monte Chilliad\nTerminar","Selecionar","Sair");
   	}
	
//============================ fim onibus ========================
	if(PlayerToPoint(8.0,playerid,1481.1926,-1764.2736,18.7958))//Prefeitura
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Prefeitura", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1462.395751,-1012.391174,26.843799))//Banco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Banco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1546.2761,-1675.5995,13.5620))//DP
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Departamento de Policia", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1350.4865,-1753.2505,13.3582))//24-7
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Mercado de Commerce", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1790.5725,-1167.3705,23.8281))//Loja de Armas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1362.2240,-1279.7227,13.3828))//Ammu Nation
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Ammu Nation", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2244.7954,-1663.5021,15.4766))//Binco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Binco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2155.4363,-1171.3413,23.8206))//Aluguel de Carros
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1411.5593,-1699.5270,13.5395))//Centro de Licencas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Centro de Licencas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2003.4354,-1444.1321,13.5621))//Hospital
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Hospital", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1928.826904,-1776.405517,13.546895))//Posto idlewood
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Posto de Idlewood", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2232.5723,-1332.8412,23.9815))//Igreja
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Igreja", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1460.6941,-1142.9766,24.3906))//Zip
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Zip", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~p~|Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,454.1039,-1501.5459,30.8761))//victim
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~VICTIM", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,661.0214,-573.4525,16.3359))//Posto Dillimore
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Posto de Dillimore", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1003.0009,-941.7861,41.6509))//Posto temple
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Posto de Temple", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1637.6385,-1148.0294,23.90636))//Concessionaria
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Concessionaria", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2420.6565,-1738.9923,13.5469))//mercado ganton
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Mercado de Ganton", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,961.7795,-944.9980,40.3419))//D.E.T.R.A.N
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~D.E.T.R.A.N", 5000, 3);
   	}
   	if(PlayerToPoint(1.7,playerid,246.4971,74.3957,1003.6406))//Postao Presos DP
    {
        OnPlayerCommandText(playerid,"/pp");
        GameTextForPlayer(playerid, " ~w~Portao Celas ~b~Aberto", 5000, 3);
   	}
   	if(PlayerToPoint(2.0,playerid,367.3167,162.2013,1025.7891))//Postao Interno Prefeitura
    {
        OnPlayerCommandText(playerid,"/ppre");
        GameTextForPlayer(playerid, " ~w~Porta Prefeitura ~b~Aberto", 5000, 3);
   	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
				GameTextForPlayer(playerid, "~w~Chegou em~n~~y~Casa", 5000, 1);
		    }
		}
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
		    switch(gPlayerTerminal[playerid])
		    {
		        case 1:
		        {
   	        		SetPlayerCheckpoint(playerid,1533.1049,-1610.5599,13.4766, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 2:
				{
                    SetPlayerCheckpoint(playerid,1736.9674,-1601.5439,13.5225, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 3:
				{
				    SetPlayerCheckpoint(playerid,1818.3682,-1694.8099,13.4831, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 4:
				{
			    	SetPlayerCheckpoint(playerid,1819.0150,-1872.5851,13.5023, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 5:
				{
				    SetPlayerCheckpoint(playerid,1987.3519,-2169.5242,13.4809, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 6:
				{
				    SetPlayerCheckpoint(playerid,2274.7886,-2274.3623,13.4837, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 7:
				{
				    SetPlayerCheckpoint(playerid,1996.1328,-2163.6931,13.4833, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid,1964.8201,-2077.6494,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 9:
				{
				    SetPlayerCheckpoint(playerid,1825.4634,-1906.8052,13.5044, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 10:
				{
				    SetPlayerCheckpoint(playerid,1824.8920,-1705.7137,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 11:
			    {
			    	SetPlayerCheckpoint(playerid,1526.6500,-1612.1188,13.4907, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
	    		case 12:
			    {
	    			SetPlayerCheckpoint(playerid,1373.5723,-1729.5554,13.4952, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 13:
				{
				    new conta = gPlayerTerminal[playerid]*50;
				    format(gstring, 128, "Você completou a rota do ônibus e ganhou R$%d, use /terminais para iniciar novamente a rota.", conta);
        		    SendClientMessage(playerid, COLOR_YELLOW, gstring);
					SendClientMessage(playerid, COLOR_YELLOW, "Use /sair para sair do ônibus.");
				    BusrouteEnd(playerid);
				}
			}
			gPlayerTerminal[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			return true;
		}
	}
	DisablePlayerCheckpoint(playerid);
	return true;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == PickInterior)
	{
		GameTextForPlayer(playerid, "~b~digite~n~~g~/batercartao~n~~w~OU /equipar", 3000, 3);
	}
	if(pickupid == LFicha)
	{
		GameTextForPlayer(playerid, "~b~digite~n~~w~/limparficha", 3000, 3);
	}

	if(pickupid == picVida)
	{
	    new Float:health;
	    GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, health + 15);
    	KillTimer(DestroyPickupVidaTimer[picVida]);
	    DestroyVidaPickup(pickupid);
	    return true;
	}
    if(pickupid == portaodpauto)
    {
    	playerpickup[playerid] = pickupid;
    	//OnPlayerCommandText(playerid,"/ppp2");
    }
    return true;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	Controle(playerid, 0);
	return 0;
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}
}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return true;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(IsPlayerNPC(playerid)) return 1;
	xacalaca[playerid] ++;
    SetTimerEx("desxacalaca", 1000,false,"i",playerid);
    PlayerInactivity[playerid] = 0;
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    SetCameraBehindPlayer(playerid);
	   	if(PlayerToPoint(11, playerid, 616.7898,-74.8150,997.8890))
		{
        	PutPlayerInVehicle(playerid, gLastCar[playerid], 0);
        	Controle(playerid, 0);
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(gstring, sizeof(gstring), "* Está fora de serviço, ganhou R$%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1;
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(gstring, sizeof(gstring), "~w~Custo da corrida~n~~r~R$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, gstring, 5000, 1);
			    format(gstring, sizeof(gstring), "~w~Passageiro saiu do taxi~n~~g~ganhou R$%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
    			TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == 2 || newstate == 3)
    {
	    if(GetPlayerVehicleID(playerid) == 24)
	    {
	        if(PlayerInfo[playerid][pLider] != 1)
	        {
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Você não é o delegado de Los Santos!");
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI, BUSSES, BOTS
	{
	    new name[MAX_PLAYER_NAME];
	   	new arma = GetPlayerWeapon(playerid);
	    GetPlayerName(playerid, name, sizeof(name));
	    if(arma == 24 || arma == 25)
	    {
			SetPlayerArmedWeapon(playerid, 0);
			SendClientMessage(playerid, COLOR_GRAD1, "Proibido entrar de passageiro com esta arma, ela foi retirada de sua mão!");
		}
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TransportValue[i])
	                {
	                    format(gstring, sizeof(gstring), "* Você precisa de R$%d para entrar.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						RemovePlayerFromVehicleEx(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o taxista.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Taxi.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o Motorista De Onibus.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Onibus.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
	                    }
						GivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Você pode ver alguns comandos do veiculo digitando /ajudaveh");
		SendClientMessage(playerid, COLOR_YELLOW2, "[PlayHappy] Aperte a letra Y para ativar a câmera em 1ª pessoa.");
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new HouseCar = PlayerInfo[playerid][pPHousekey]+totalveiculos;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		new carid=GetVehicleModel(newcar);
		if(carid == 0 || carid == 0 || carid == 0) { }
		else
		{
			if(IsAAztecaCar(newcar))
			{
		    	if(!IsAAzteca(playerid) && !IsAAztecaSF(playerid))
		    	{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é dos Varriors Los Aztecas");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			//=============[ COPS ] =================
 			else if(IsAPMSFCar(newcar) || IsAPRCar(newcar) || IsABOPEsCar(newcar) || IsAPFCar(newcar) || IsAExCar(newcar))
			{
			    if(!IsACop(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Policial");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			//==========================================
			else if(IsAOniCar(newcar))
			{
			    if(!IsAOni(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um motorista de Onibus");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAMecCar(newcar))
			{
			    if(PlayerInfo[playerid][pEmprego] != 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Mecânico");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
 //========================================
 			else if(IsAPCCCar(newcar))
			{
			    if(!IsAPCCSF(playerid) && !IsAPCC(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um PCC");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsABallasCar(newcar))
			{
			    if(!IsABallasSF(playerid) && !IsABallas(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Ballas");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsAVagosCar(newcar))
			{
			    if(!IsAVagosSF(playerid) && !IsAVagos(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Los Santos Vagos");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsAGrooveCar(newcar))
			{
			    if(!IsAGroove(playerid) && !IsAGrooveSF(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Groove Street");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsAnAmbulanceCar(newcar))
			{
			    if(!IsAMedicosSF(playerid) && !IsAMedicos(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Medico");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAComandoVermelhoCar(newcar))
			{
		    	if(!IsASonsofAnarchy(playerid) && !IsAComandoVermelho(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é do Comando Vermelho");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACaminhoneiroCar(newcar))
			{
		    	if(!IsACaminhoneiro(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Caminhoneiro");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAJornalCar(newcar))
			{
			    if(!IsAJornal(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Repórter");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsASecretariaCar(newcar))
			{
			    if(!IsASecretaria(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Funcionário da Secretaria de segurança!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsATriadCar(newcar))
			{
			    if(!IsATriad(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Triad");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsATaxiCar(newcar))
			{
			    if(!IsATaxi(playerid) && !IsATaxiSF(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Taxista");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsAAlCar(newcar))
			{
			    if(!IsAAl(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um FARC");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
   			else if(IsAGICar(newcar))
			{
			    if(!IsAGI(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Guerrilheiro Israelita");
					RemovePlayerFromVehicleEx(playerid);
				}
			}

			else if(IsAExCar(newcar))
			{
			    if(!IsACop(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é do Exército");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACopCar(newcar))
			{
			    if(!IsACop(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Policial");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHitCar(newcar))
			{
			    if(!IsAHit(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é um Hitman");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
//====================================================================
			else if(IsAHelperCar(newcar))
			{
 				if(PlayerInfo[playerid][pHelper] == 0)
 		 		{
      				SendClientMessage(playerid, COR_HELPER, " Você não é um Helper");
					RemovePlayerFromVehicleEx(playerid);
			 		return true;
 				}
   				if(helpertrampando[playerid] == 0)
     			{
          			SendClientMessage(playerid, COR_HELPER, " Você não esta em Modo ajuda!");
                	RemovePlayerFromVehicleEx(playerid);
			  		return true;
   				}
				return 1;
   	 		}
//==============================================================================
			else if(IsAGOVCar(newcar))
			{
			    if(!IsAGOV(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não é da Prefeitura");
					RemovePlayerFromVehicleEx(playerid);
				}
        	}
		}
		if(IsAPlane(newcar))
		{
	    	if(PlayerInfo[playerid][pFlyLic] < 1)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Você ainda não tem licença para Voar! Compre uma na Prefeitura");
		    	SetPlayerCriminal(playerid,255,"Voando Sem Licença");
			}
		}
       	else
		{
   	    	if(PlayerInfo[playerid][pCarLic] < 1)
			{
		    	if(PlayerDrunk[playerid] >= 1)
				{
					SetPlayerCriminal(playerid,255, "Dirigindo Embreagado");
				}
				if(IsABikeCar(newcar)) { }
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Você ainda não tem licença para dirigir carro! Compre uma na Prefeitura");
					SetPlayerCriminal(playerid,255,"Dirigindo sem Carteira");
               	}
			}
			else if(PlayerDrunk[playerid] >= 1)
			{
				SetPlayerCriminal(playerid,255, "Dirigindo Embreagado");
			}
		}
		/*if((newcar >= 322 && newcar <=367) || (newcar >= 402 && newcar <=408))
         {
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Veiculo pode ser alugado Preço:R$%d", SBizzInfo[1][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR, DIALOG_STYLE_MSGBOX, "Alugar o Veiculo", Aluguelbox, "Alugar", "sair");
			}
		}
		if((newcar >= 368 && newcar <= 370))
		{
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Helicóptero pode ser alugado Preço:R$%d", SBizzInfo[19][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR2, DIALOG_STYLE_MSGBOX, "Aluguel de Helicopteros", Aluguelbox, "Alugar", "Sair");
			}
		}*/

		if(oldcar != 301)
		{
			if((HouseCar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != HouseCar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					VTrancado[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED && logouagora[playerid] ==0 )
	{
	    if(sincronizando[playerid] == 1)
		{
			return true;
		}
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
		    if(sincronizando[playerid] == 1)
			{
			return true;
			}
			SetPlayerSpawn(playerid);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return true;
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //Ford-GT
		}
		case 70:
		{
			return 130000; //infernus
		}
		case 71:
		{
			return 100000; //Diablo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()//ATUAL
{
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(PlayerInfo[j][pDoenca]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 4.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 4 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 8.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 8 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 12 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
            else if(PlayerInfo[j][pDoenca]==4)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Cirrose - Vá até um hospital ou procure um médico para se curar.");
			}
			else if(PlayerInfo[j][pDoenca]==5)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Câncer de Pulmão - Vá até um hospital ou procure um médico para se curar.");
			}
			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(gstring, sizeof(gstring), "Você esta devendo: R$%d Se não tiver essa grana você será preso no proximo payday", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, gstring);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
 		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//forndowner = -1;
	}
	return true;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return true;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    NovaCamera[playerid] = 0;
	if(PlayerToPoint(11, playerid, 616.7898,-74.8150,997.8890))
	{
        PutPlayerInVehicle(playerid, gLastCar[playerid], 0);
	}
	
 	if (GetPlayerState(playerid) == 1)
	{
		return true;
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	Controle(playerid, 1);
	return true;
}

public OnPlayerRequestClass(playerid, classid)
{
	new string[128];
   	new DialogBPH[1500];
	new string3[68];
	new string4[35];
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string3,"Motivo"), 0, strlen(DOF2_GetString(string3,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string3,"Admin"), 0, strlen(DOF2_GetString(string3,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string3,"Data"), 0, strlen(DOF2_GetString(string3,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string3,"Hora"), 0, strlen(DOF2_GetString(string3,"Hora")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n\n");
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}*******[INFORMAÇÕES]*******\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", PlayerName(playerid));
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n");
		strcat(DialogBPH,string);
 		format(string, 128, "{FFFFFF}************************************\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
    	SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	format(string4, sizeof(string4), "IPsBanidos/%s.ini", ip);
	if(fexist(string4)) //autoban
	{
		strmid(BanInfo[playerid][pMotivo], DOF2_GetString(string4,"Motivo"), 0, strlen(DOF2_GetString(string4,"Motivo")), 255);
		strmid(BanInfo[playerid][pAdmBan], DOF2_GetString(string4,"Admin"), 0, strlen(DOF2_GetString(string4,"Admin")), 255);
	   	strmid(BanInfo[playerid][pData], DOF2_GetString(string4,"Data"), 0, strlen(DOF2_GetString(string4,"Data")), 255);
	   	strmid(BanInfo[playerid][pHora], DOF2_GetString(string4,"Hora"), 0, strlen(DOF2_GetString(string4,"Hora")), 255);
	   	strmid(BanInfo[playerid][pNick], DOF2_GetString(string4,"Nick"), 0, strlen(DOF2_GetString(string4,"Nick")), 255);
		format(string, 128, "{FF0000}Você está Banido do Servidor.\n\n\n");
		strcat(DialogBPH,string);
 		format(string, 128, "*******[INFORMAÇÕES]*******\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Nick: %s\n\n", BanInfo[playerid][pNick]);
		strcat(DialogBPH,string);
 		format(string, sizeof(string), "{00FFFF}IP: %s\n\n", ip);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Motivo: %s\n\n", BanInfo[playerid][pMotivo]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Admin: %s\n\n", BanInfo[playerid][pAdmBan]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Dia: %s\n\n", BanInfo[playerid][pData]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Hora: %s\n\n", BanInfo[playerid][pHora]);
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{00FFFF}Data Desban: {FF0000}PERMANENTE\n");
		strcat(DialogBPH,string);
  		format(string, 128, "************************************\n");
		strcat(DialogBPH,string);
		format(string, sizeof(string), "{FF0000}Obs: Para fazer uma revisão acesse\n{FFFFFF}www.s-bph.forumeiros.com");
		strcat(DialogBPH,string);
		ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do ban", DialogBPH, "Sair", "");
  		//Kick(playerid);
  		SetTimerEx("KickBanido", 10000, 0, "i", playerid);
  		NaoPodeLogar[playerid] = 1;
  		return true;
	}
	else
	{
		SpawnPlayer(playerid);
	}
	return false;
}

public SetupPlayerForClassSelection(playerid)
{
	return true;
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 11)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid) && !IsACop(playerid))
	{
	    if(WantedPoints[playerid] < 10) WantedPoints[playerid] += 1;
	    PlayerInfo[playerid][pCrimes] += 1;
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
		    format(turner, sizeof(turner), "desconhecido");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(gstring, sizeof(gstring), "Você cometeu um crime ( %s ). Relatado por: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		format(gstring, sizeof(gstring), "Nível de procurado: %d", WantedPoints[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, gstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "HQ - Todas as unidades: Relato: %s",turner);
					SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					format(gstring, sizeof(gstring), "HQ - Crime: %s, Suspeito: %s",reason,turned);
					SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					if(GetPlayerInterior(playerid) == 0)
					{
						format(gstring, sizeof(gstring), "Local: %s, Em Interior: Não",location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
					else
					{
						format(gstring, sizeof(gstring), "Local: %s, Em Interior: Sim",location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
				}
			}
		}
	}//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "190");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		RingTone[playerid] = 20;
        SetPlayerWantedLevel(playerid, 0);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "<< HQ: Todas As Unidades, Oficial %s Completou a sentença >>",turner);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					format(gstring, sizeof(gstring), "HQ: %s Foi processado, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					SetPlayerWantedLevel(playerid, 0);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return true;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return true;
}

public OtherTimer()
{
    new string[256];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    Velociimetro();
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        MostrarTextVida(i);
	       	new Float:xiter_colete;
			GetPlayerArmour(i,xiter_colete);
			if(PlayerInfo[i][pTempoHospitalizado] > 0 && PlayerInfo[i][pHospitalID] > 0)
			{
			    ApplyAnimation(i,"CRACK","crckdeth2",4.1,0,1,1,1,1);
			}
     		if(NaCamera[i] == 1)
	        {
	            TextDrawHideForPlayer(i, TextRec[i]);
	            NaCamera[i] = 0;
			}
	        if(NaCamera[i] == 5)
	        {
	            TextDrawShowForPlayer(i, TextRec[i]);
	            NaCamera[i] = 6;
			}
 	        else if(NaCamera[i] == 6)
	        {
	            TextDrawHideForPlayer(i, TextRec[i]);
	            NaCamera[i] = 5;
			}
			//new string[128];
 			if(AXITERCOLETE[i] >= 1)
			{
	    		AXITERCOLETE[i] -= 1;
			}
			if(Suspect2[i] >= 1)
			{
	    		Suspect2[i] -= 1;
			}
			if(xiter_colete > 95.0 && VidaDoCara[i] == 1 && AXITERCOLETE[i] == 0)
			{
			    MostrarTextXiter(i);
	   			format(string, sizeof(string), "O Player %s [ID: %d] pode estar usando um xiter para ganhar colete, observe isto com cuidado!", PlayerName(i),i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				Suspect2[i] = 2;
				SetPlayerArmour(i,0);
			}
 			if(xiter_colete < 10)
			{
				VidaDoCara[i] = 1;
			}
			if(xiter_colete > 9 && Suspect2[i] == 0)
			{
				VidaDoCara[i] = 2;
			}
			new Float:Viida;
   		 	GetPlayerHealth(i,Viida);
    		if(XXAirBreak[i] > 5)
    		{
        		XXAirBreak[i] = 5;
    		}
			if(admtrampando[i] == 1 && PlayerInfo[i][pAdmin] >= 1)
			{
	    		SetPlayerHealth(i, 99999);
			}
			if(PlayerInfo[i][pConta] > 999999999 && ComecouConversao[i] == 0)
			{
				TempoCheckOuros[i] = SetTimerEx("CheckOuros", 1000, 1, "i", i);
				ComecouConversao[i] = 1;
				IniciouOuros[i] = 0;
				TerminouOuros[i] = 0;
			}
			if(GetPlayerMoney(i) > 9999999 && ComecouConversao2[i] == 0)
			{
				TempoCheckOuros2[i] = SetTimerEx("CheckCashOuros", 1000, 1, "i", i);
				ComecouConversao2[i] = 1;
				IniciouOuros2[i] = 0;
				TerminouOuros2[i] = 0;
			}
	        //new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}

			if(GetSpeedKM(i) >= 235 && GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
       	     	new vehicle = GetPlayerVehicleID(i);
			   	new VehicleModel = GetVehicleModel(vehicle);
	       		if(VehicleModel == 487 || VehicleModel == 520 || VehicleModel == 497 || VehicleModel == 425 || VehicleModel == 592 || VehicleModel == 519 || VehicleModel == 593 || VehicleModel == 452)
	       		{
   		   	 		return true;
	       		}
	       		MostrarTextXiter(i);
				format(string, sizeof(string), "[ATENÇÃO] pois %s[ID:%d] pode estar usando Speed-Hack, Observe isto",PlayerName(i),i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
			}
			
			if(PlayerInfo[i][pConnectTime] < 1 && gPlayerLogged[i] == 1 && GetPlayerWeapon(i) > 1)
			{
		  			ResetPlayerWeaponsBPH(i);
					SendClientMessage(i,COLOR_WHITE,"[ERRO] Você só pode pegar armas com mais de 1 hora jogada, suas armas foram retiradas!");
			}
			if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new House = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(House > 10000)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && House == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && House == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && House == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
									LinkVehicleToInterior(tmpcar, 0);
								}
								else
								{
									XXAirBreak[i] += 3;SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetPlayerMoney(i) - oldcash;
								printf("Total %d = GetPlayerMoney(playerid) %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}
						if(House == 241)//City Hall
						{
						    SetPlayerInterior(i,0);
							XXAirBreak[i] += 3;SetPlayerPos(i,1481.0386,-1772.3120,18.7958);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(House >= 99 && House != 10000)
						{
							XXAirBreak[i] += 3;SetPlayerPos(i, BizzInfo[House-99][bEntranceX], BizzInfo[House-99][bEntranceY],BizzInfo[House-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
						else if(House < 99 && House != 10000)
						{
							XXAirBreak[i] += 3;SetPlayerPos(i, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(gstring, sizeof(gstring), "* %s's Celular tocando.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(gstring, sizeof(gstring), "~w~Custo da ligacao~n~~r~R$%d",CallCost[i]);
				GivePlayerMoney(i, -CallCost[i]);
				SBizzInfo[2][sbTill] += CallCost[i];
				ExtortionSBiz(2, CallCost[i]);
				GameTextForPlayer(i, gstring, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(gstring, sizeof(gstring), "~r~%d ~w~: ~g~R$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, gstring, 15000, 6);
			}
			if (gPlayerTerminal[i] != 0)
			{
			    new vehicleid = GetPlayerVehicleID(i);
				if (vehicleid != 0)
				{
					if (!IsABus(vehicleid))
					{
						if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
					}
				}
				else
				{
				    if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
				}
			}
		}
	}
	return true;
}

public SetPlayerUnjail()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pTempoHospitalizado] > 0)
	        {
	            PlayerInfo[i][pTempoHospitalizado] --;
			}
 	        if(PlayerInfo[i][pTempoHospitalizado] <= 0 && PlayerInfo[i][pHospitalID] > 0)
	        {
	            Hospitalizadao(i);
			}
			new level = PlayerInfo[i][pLevel];
			new vip = PlayerInfo[i][pVIP];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pSalario] += 3; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pSalario] += 4; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pSalario] += 5; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pSalario] += 6; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pSalario] += 7; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pSalario] += 8; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pSalario] += 9; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pSalario] += 10; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pSalario] += 11; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pSalario] += 12; }
			else if(level >= 21) { PlayerInfo[i][pSalario] += 15; }
            if(vip == 1) { PlayerInfo[i][pSalario] += 2; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 4; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 6; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
						XXAirBreak[i] += 3;SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						XXAirBreak[i] += 3;SetPlayerPos(i,-1536.3813,483.9163,7.1797);
					}
 					else if(PlayerInfo[i][pJailed] == 33)
					{
						SetPlayerInterior(i, 10);
						XXAirBreak[i] += 3;SetPlayerPos(i,223.5218,114.8807,999.0156);
					}
					else if(PlayerInfo[i][pJailed] == 9)
					{
						SetPlayerInterior(i, 0);
						NaoPodeDigitar[i] = 0;
						SetPlayerSpawn(i);
						SetPlayerVirtualWorld(i, 0);
  						SetPlayerFacingAngle(i,270.0);
					}
					else if(PlayerInfo[i][pJailed] == 2 || PlayerInfo[i][pJailed] == 11 || PlayerInfo[i][pJailed] == 16)
					{
					    XXAirBreak[i] += 3;SetPlayerPos(i, 197.8425,178.8899,1003.0234);
					    SetPlayerInterior(i, 3);
					}
 					else if(PlayerInfo[i][pJailed] == 27)
					{
					    SetPlayerInterior(i, 6);
					    storeexit[i] = 67;
					    XXAirBreak[i] += 3;SetPlayerPos(i, 268.1595,77.9132,1001.0391);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Você pagou sua divida com a sociedade.");
					GameTextForPlayer(i, "~r~Livre~n~~w~Seja um jogador melhor", 5000, 1);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if(GetPlayerMoney(i) - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetPlayerMoney(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        CurrentMoney[i] = GetPlayerMoney(i);
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetPlayerMoney(i);
		    }
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }

			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] >= 5)
			    {
			        PlayerDrunkTime[i] = 0;
			        PlayerDrunk[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~A Luta Começou", 5000, 1);
					Controle(i, 1);
					RorndStarted = 1;
				}
			    else
				{
				    format(gstring, sizeof(gstring), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, gstring, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RorndStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pEmprego] == 8)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é campeão.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da Luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da Luta", 5000, 1);
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pEmprego] == 8)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é o campeão.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~g~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da luta", 5000, 1);
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RorndStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MedicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
            if(CopsrondaCallTime[i] > 0)
			{
			    if(CopsrondaAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(CopsrondaAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(CopsrondaAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MechanicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        Controle(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
		}
	}
}

public CheckGas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    OnPlayerSave(i);
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
       	    {
          		new mot, lu, alar, por, cap, porma, ob;
				new vehicle = GetPlayerVehicleID(i);
			    new VehicleModel = GetVehicleModel(vehicle);
	       		if(VehicleModel == 487 || VehicleModel == 520 || VehicleModel == 462 || VehicleModel == 497 || VehicleModel == 425 || VehicleModel == 592 || VehicleModel == 519 || VehicleModel == 593 || VehicleModel == 452)
	       		{
	       		    return true;
	       		}
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    if(Gas[vehicle] <= 10)
				   	{
					   	PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
				   	}
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
                    NoFuel[i] = 1;
					PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
     				GetVehicleParamsEx(vehicle, mot, lu, alar, por, cap, porma, ob);
                	SetVehicleParamsEx(vehicle, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
					GameTextForPlayer(i,"~r~Sem combustivel~n~~y~Chame um mecanico para ajudar",1500,3);
				}
			}
    	}
	}
	return true;
}

public Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[128];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
		    FillUp = FillUp * 4;
			if(Refueling[i] == 1)
		    {
				if(GetPlayerMoney(i) >= FillUp+4)
				{
					Gas[VID] = 100;
				    format(string,sizeof(string),"* Você reabasteceu seu veículo, por: R$%d.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
				    Controle(i, 1);
					GivePlayerMoney(i, - FillUp);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
				}
			   	else
			   	{
			   	    Controle(i, 1);
			   	    format(string,sizeof(string),"* Voce nao tem dinheiro suficiente para encher o tanque, custo: $%d.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
			   	}
		 	}
		}
	}
	return true;
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d entrada: R$%d Cofre: R$%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorção: %s",SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d entrada: R$%d Cofre: R$%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorção: %s",BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash = GetPlayerMoney(targetid);
		new atext[20];
		new ytext[20];
		new zztext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Masculino"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Feminino"; }
		new dtext[20];
		if(PlayerInfo[targetid][pDoenca] == 1) { dtext = "Mongolismo"; }
		else if(PlayerInfo[targetid][pDoenca] == 2) { dtext = "AIDS"; }
		else if(PlayerInfo[targetid][pDoenca] == 3) { dtext = "Herpes Genital"; }
		else if(PlayerInfo[targetid][pDoenca] == 4) { dtext = "Cirrose"; }
		else if(PlayerInfo[targetid][pDoenca] == 5) { dtext = "Câncer de Pulmão"; }
 		else if(PlayerInfo[targetid][pOrigem] == 2) { ytext = "Los Santos"; }
		else if(PlayerInfo[targetid][pOrigem] == 1) { ytext = "San Fierro"; }
		
		else if(PlayerInfo[targetid][pFome] >= 11) { zztext = "NÃO"; }
		else if(PlayerInfo[targetid][pFome] == 10) { zztext = "Quase"; }
		else if(PlayerInfo[targetid][pFome] == 9) { zztext = "Pouca Fome"; }
		else if(PlayerInfo[targetid][pFome] == 8) { zztext = "Pouca Fome"; }
		else if(PlayerInfo[targetid][pFome] == 7) { zztext = "Pouca Fome"; }
		else if(PlayerInfo[targetid][pFome] == 6) { zztext = "Com Fome"; }
		else if(PlayerInfo[targetid][pFome] == 5) { zztext = "Com Fome"; }
		else if(PlayerInfo[targetid][pFome] == 4) { zztext = "Bastante Fome"; }
		else if(PlayerInfo[targetid][pFome] == 3) { zztext = "Bastante Fome"; }
		else if(PlayerInfo[targetid][pFome] == 2) { zztext = "Muita Fome"; }
		else if(PlayerInfo[targetid][pFome] == 1) { zztext = "Muita Fome"; }
		else if(PlayerInfo[targetid][pFome] == 0) { zztext = "Morrendo"; }
		else {zztext = "Nenhum";}
	
        new rtext[64];
	    if(PlayerInfo[targetid][pMembro] == 1 || PlayerInfo[targetid][pLider] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Cadete"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Capitão"; }
	        else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Comandante"; }
			else { rtext = "Soldado"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 2 || PlayerInfo[targetid][pLider] == 2)//Rotam Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Tenente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Capitão"; }
			else { rtext = "Recruta"; }
		}
        else if(PlayerInfo[targetid][pMembro] == 3 || PlayerInfo[targetid][pLider] == 3)//Exército Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "GATE"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Major"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Tenente Coronel"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "General"; }
			else { rtext = "Soldado"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 4 || PlayerInfo[targetid][pLider] == 4)//Medicos Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Auxiliar de Enfermeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Enfermeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Médico"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Bombeiro Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Doutor"; }
			else { rtext = "Auxiliar de Enfermeiro"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 6 || PlayerInfo[targetid][pLider] == 6)//Guerrilheiros Israelitas Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombadeador"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Ahmed Yassin"; }
			else { rtext = "Homem-Bomba"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 7 || PlayerInfo[targetid][pLider] == 7)//Prefeito Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Motorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Segurança"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Acessor"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Vice-Prefeito"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Prefeito"; }
			else { rtext = "Motorista"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 8 || PlayerInfo[targetid][pLider] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Assasino Frio"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Vice-Diretor"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 9 || PlayerInfo[targetid][pLider] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Humorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Repórter Local"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Repórter Nacional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Editor Local"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Fotografo Paparazzi"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor de Produção"; }
			else { rtext = "Humorista"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 10 || PlayerInfo[targetid][pLider] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Taxista Em Treinamento"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Taxista Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Taxista Experiente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Taxista Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefe"; }
			else { rtext = "Taxista Em Treinamento"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 14 || PlayerInfo[targetid][pLider] == 14 || PlayerInfo[targetid][pMembro] == 17
		|| PlayerInfo[targetid][pLider] == 17 || PlayerInfo[targetid][pMembro] == 18 || PlayerInfo[targetid][pLider] == 18
		|| PlayerInfo[targetid][pMembro] == 19 || PlayerInfo[targetid][pLider] == 19 || PlayerInfo[targetid][pMembro] == 20
		|| PlayerInfo[targetid][pLider] == 20 || PlayerInfo[targetid][pMembro] == 5 || PlayerInfo[targetid][pLider] == 5
		|| PlayerInfo[targetid][pMembro] == 21 || PlayerInfo[targetid][pLider] == 21)//GANG'S Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Olheiro"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Aviaozinho"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Fogueteiro"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefe da Boca"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 15 || PlayerInfo[targetid][pLider] == 15)//AlQaeda Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombardeador"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Osama Bin Laden"; }
			else { rtext = "Homem-Bomba"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 16 || PlayerInfo[targetid][pLider] == 16)//Rotam-SF Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Agente Do G.O.E"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente Do G.E.R"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Atirador de Elite"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Perito Criminal"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Líder"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 13 || PlayerInfo[targetid][pLider] == 13
		|| PlayerInfo[targetid][pMembro] == 12 || PlayerInfo[targetid][pLider] == 12)//Máfias Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Associado"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Braço-Direito"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Líder"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[targetid][pMembro] == 11 || PlayerInfo[targetid][pLider] == 11)//PF Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Espião"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Atirador"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Capitão"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Líder"; }
			else { rtext = "Agente"; }
		}
		else
		{
		    rtext = "Nenhum";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pEmprego] == 1) { jtext = "Detetive"; }
        else if(PlayerInfo[targetid][pEmprego] == 2) { jtext = "Advogado"; }
        else if(PlayerInfo[targetid][pEmprego] == 3) { jtext = "Prof.Sexo"; }
        else if(PlayerInfo[targetid][pEmprego] == 4) { jtext = "Vendedor De Drogas"; }
        else if(PlayerInfo[targetid][pEmprego] == 5) { jtext = "Mecanico"; }
        else if(PlayerInfo[targetid][pEmprego] == 6) { jtext = "Segurança"; }
        else if(PlayerInfo[targetid][pEmprego] == 7) { jtext = "Vendedor de armas"; }
		else if(PlayerInfo[targetid][pEmprego] == 8) { jtext = "Boxeador"; }
        else if(PlayerInfo[targetid][pEmprego] == 9) { jtext = "Motorista de Onibus"; }
        else if(PlayerInfo[targetid][pEmprego] == 10) { jtext = "Mendigo"; }
        else if(PlayerInfo[targetid][pEmprego] == 11) { jtext = "Caminhoneiro"; }
        else { jtext = "Nenhum"; }
		new drank[20];
		if(PlayerInfo[targetid][pVIP] == 0) { drank = "Gratis"; }
	    else if(PlayerInfo[targetid][pVIP] == 1) { drank = "VIP"; }
		else if(PlayerInfo[targetid][pVIP] == 2) { drank = "VIP-POWER"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		//new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		new lotto = PlayerInfo[targetid][pLottoNr];
		new deaths = PlayerInfo[targetid][pDeaths];
		new crimes = PlayerInfo[targetid][pCrimes];
		new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
		new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
		new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
		new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
		new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
		new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
		new mats = PlayerInfo[targetid][pMats];
		new smats = PlayerInfo[targetid][psMats];
		new Wanted = WantedPoints[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Conta = PlayerInfo[targetid][pConta];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expquantidade = nxtlevel*levelexp;
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		//new creditos = PlayerInfo[targetid][pCreditos];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		if(targetid == playerid)
		{

            format(gstring, sizeof(gstring),"|______________ RG de %s ______________|",name);
			SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		}
		else
		{
			format(gstring, sizeof(gstring),"|______________ RG de %s ______________|",name);
			SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		}
		format(gstring, sizeof(gstring), "Nivel:[%d] Idade:[%d] Sexo:[%s] Dinheiro:[R$%d] Banco:[R$%d] Ouros:[%d] Celular:[%d] ", level,PlayerInfo[targetid][pAge],atext, cash, Conta,PlayerInfo[targetid][pOuros], pnumber);
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		format(gstring, sizeof(gstring), "Conta:[%s] Casado Com:[%s] Horas Jogadas:[%d] Emprego:[%s] Vida:[%.1f]", drank,married,ptime,jtext,shealth+50);
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		format(gstring, sizeof(gstring), "Crimes Cometidos:[%d] Matou:[%d] Morreu:[%d] Loteria:[%d] Cidade:[%s]", crimes,kills,deaths,lotto, ytext );
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		format(gstring, sizeof(gstring), "Próximo Nivel:[R$%d] Respeito:[%d/%d] Doenças:[%s] Nivel de Procura:[%d]",costlevel,exp,expquantidade,dtext, Wanted);
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		format(gstring, sizeof(gstring), "Materiais:[%d] Safe Materiais:[%d] Organização:[%s] Cargo:[%s] Fome:[%s]",mats,smats,NomeORG(targetid),rtext, zztext);
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
		format(gstring, sizeof(gstring), "Maconha:[%d] Cocaina:[%d] Crack:[%d] Safe Maconha:[%d] Safe Cocaina:[%d] Safe Crack:[%d]",Drogas,Drogas2,Drogas3,SafeDrogas,SafeDrogas2,SafeDrogas3);
		SendClientMessage(playerid, 0xC0C6EEAA,gstring);
	}
}

public SetPlayerToTeamColor(playerid)
{
    if(admtrampando[playerid] == 1 && admhide[playerid] != 1){SetPlayerColor(playerid, COR_ADMIN);return true;}
 	else if(helpertrampando[playerid] == 1 && helperhide[playerid] != 1){SetPlayerColor(playerid, COR_HELPER);return true;}
	else if (PlayerInfo[playerid][pTeam] == 3){SetPlayerColor(playerid, COLOR_WHITE);return true;}
	else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1){SetPlayerColor(playerid, COR_PM);return true;}
	else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2){SetPlayerColor(playerid, COR_BOPE);return true;}
	else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3){SetPlayerColor(playerid, COR_EXE);return true;}
	else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4){SetPlayerColor(playerid, COR_Medicos);return true;}
	else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5){SetPlayerColor(playerid, COR_AZTECAS);return true;}
	else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6){SetPlayerColor(playerid, COR_GIA);return true;}
    else if (PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7){SetPlayerColor(playerid, COR_PRE);return true;}
	else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8){SetPlayerColor(playerid, COR_HITMAN);return true;}
	else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9){SetPlayerColor(playerid, COR_REPORTER);return true;}
    else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10){SetPlayerColor(playerid, COR_TAXI);return true;}
	else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11){SetPlayerColor(playerid, COR_PF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13){SetPlayerColor(playerid, COR_YAK);return true;}
	else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14){SetPlayerColor(playerid, 0x00CA00FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15){SetPlayerColor(playerid, COR_FARC);return true;}
	else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16){SetPlayerColor(playerid, COR_BOPE);return true;}
	else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17){SetPlayerColor(playerid, COR_BALLAS);return true;}
	else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18){SetPlayerColor(playerid, 0xDEBC00FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19){SetPlayerColor(playerid, 0xB60000FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20){SetPlayerColor(playerid, 0xB60000FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21){SetPlayerColor(playerid, COR_PCC);return true;}
	else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22){SetPlayerColor(playerid, COR_TRIADS);return true;}
 	else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23){SetPlayerColor(playerid, COR_GI);return true;}
 	else if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24){SetPlayerColor(playerid, COR_PCC);return true;}
	else if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25){SetPlayerColor(playerid, COR_AZTECAS);return true;}
	else if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26){SetPlayerColor(playerid, COR_BALLAS);return true;}
	else if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27){SetPlayerColor(playerid, COR_PM);return true;}
	else if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28){SetPlayerColor(playerid, 0xDEBC00FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29){SetPlayerColor(playerid, 0x00CA00FF);return true;}
	else if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30){SetPlayerColor(playerid, COR_TAXI);return true;}
	else if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31){SetPlayerColor(playerid, COR_Medicos);return true;}
	else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32){SetPlayerColor(playerid, COR_REPORTER);return true;}
	else if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33){SetPlayerColor(playerid, COR_PR);return true;}
	else if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34){SetPlayerColor(playerid, COLOR_YELLOW2);return true;}
	else {SetPlayerColor(playerid, COLOR_WHITE);return true;}
}

//---------------------------------------------------------

public GameModeInitExitFunc()
{
	SendClientMessageToAll(COLOR_DBLUE, "Isso é um GMX! não saia do jogo, o server está sendo reiniciado e voltará em alguns segundos!!");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerLogged[i] = 0;
		}
	}
	SaveAccounts();
//	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
	OnPropUpdate();
	SaveBoxer();
	SaveCars();
	SetTimer("GameModeExitFunc", 3000, 0);
	return 1;
}

public GameModeExitFunc()
{
   	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerInterior(i,0);
			gPlayerCheckpointStatus[i] = CHECKPOINT_Nenhum;
			InterpolateCameraPos( i, 1785.2525, -1319.4958, 132.3343, 1714.2161, -1585.4520, 132.3343 ,4000, CAMERA_CUT);
			InterpolateCameraLookAt(i, 1781.4613, -1328.4274, 129.9151, 1708.8176, -1589.8236, 125.1409, 3000, CAMERA_CUT);
			GameTextForPlayer(i, "~b~~h~Reiniciando ~r~~h~& ~w~~h~Salvando...", 8000, 3);
		}
	}
//	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
	//KillTimer(TempoAn);
	KillTimer(TempoCorrida);
	KillTimer(TempoSequestrar);
	KillTimer(TempoAmarrar);
	KillTimer(TempoServicoTaxi);
	KillTimer(TempoServicoOnibus);
	KillTimer(TempoServicoPolicia);
	KillTimer(TempoServicoMedico);
	KillTimer(TempoServicoMecanico);
	KillTimer(TempoMecanico);
	KillTimer(TempoMedico);
	KillTimer(TempoCorridaOni);
	KillTimer(TempoAnGov);
	KillTimer(TempoAnReporter);
	KillTimer(TempoSincronizar);
	KillTimer(Tempohbomba);
//	KillTimer(Tempoincendiar);
	KillTimer(Tempocbomba);
	OnPropUpdate();
	SaveBoxer();
	SaveCars();
	SetTimer("ReiniciarServer", 4000, 0);
	SalvarNumeroRegistrados();
}

forward ReiniciarServer();
public ReiniciarServer()
{
	GameModeExit();
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[128];
	new File: file = fopen("boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return true;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[128];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		fclose(file);
	}
	return true;
}

public SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d", Jackpot,Tax,TaxValue);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return true;
}

public LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("PlayHappy/Casas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmorrx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmorry] = strval(arrCoords[10]);
			HouseInfo[idx][hArmorrz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 587)
			{
				HouseInfo[idx][hVec] = 587;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hWorld] = strval(arrCoords[29]);
			idx++;
		}
		printf("casas carregadas", idx);
		printf("Anti-xiters carregados ", idx);
		fclose(file);
	}
	return true;
}

forward LoadFamilies();
public LoadFamilies()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("families.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(FamilyInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			FamilyInfo[idx][FamilyTaken] = strval(arrCoords[0]);
			strmid(FamilyInfo[idx][FamilyName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(FamilyInfo[idx][FamilyMOTD], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(FamilyInfo[idx][FamilyColor], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(FamilyInfo[idx][FamilyLeader], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			FamilyInfo[idx][FamilyMembers] = strval(arrCoords[5]);
			FamilyInfo[idx][FamilySpawn][0] = floatstr(arrCoords[6]);
			FamilyInfo[idx][FamilySpawn][1] = floatstr(arrCoords[7]);
			FamilyInfo[idx][FamilySpawn][2] = floatstr(arrCoords[8]);
			FamilyInfo[idx][FamilySpawn][3] = floatstr(arrCoords[9]);
			FamilyInfo[idx][FamilyInterior] = strval(arrCoords[10]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

forward LoadTurfs();
public LoadTurfs()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("turfs.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(TurfInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(TurfInfo[idx][zOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(TurfInfo[idx][zColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			TurfInfo[idx][zMinX] = floatstr(arrCoords[2]);
			TurfInfo[idx][zMinY] = floatstr(arrCoords[3]);
			TurfInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			TurfInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

forward LoadCK();
public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[17][64];
	new strFromFile2[256];
	new File: file = fopen("PlayHappy/bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			idx++;
		}
		printf("empresas com interiores carregadas", idx);
		fclose(file);
	}
	return 1;
}

public LoadSBizz()
{
	new arrCoords[12][64];
	new strFromFile2[256];
	new File: file = fopen("PlayHappy/sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			idx++;
		}
		printf("empresas sem interiores carregadas", idx);
		fclose(file);
	}
	return 1;
}

public OnGameModeInit()
{
	ServerMoneyInit();
	PrecoMorro = 5000;
	PrecoPG = 5000;
	PrecoUnity = 5000;
	PrecoCasarao = 5000;
	PrecoMaddDogg = 5000;
	MensagemDesligou = 0;

	VelocidadeBalao = 2;
	VelocidadeBalao2 = 2;
	VelocidadeBalao3 = 2;
	VelocidadeBalao4 = 2;
	VelocidadeBalao5 = 2;
	VelocidadeBalao6 = 2;
	VelocidadeBalao7 = 2;

    CarregarSenhaSeguranca();
	ManualVehicleEngineAndLights();
	CarregarNumeroRegistrados();
 	LoadBizz();
   	LoadSBizz();
	LoadOrgs();
	LoadSalarioOrg();
   	LoadProperty();
	LoadBoxer();
	LoadStuff();
	LoadCar();
    LoadCofreOrg();
	LoadCandidatos();
	TerFome = 0;//comando para definir /terfome
	SistemaHospital = 1;//comando para definir /hospital
	SetHora();
	NoEvento = 0;
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
  	CHitman = 0;
    CTriad = 0;
	SetGameModeText(SVVERSAO);
 	SendRconCommand(MPNOME);
 	SendRconCommand(NOMESERVER);
 	SendRconCommand(NOMESITE);
 	SendRconCommand(RCONPASS);
	SendRconCommand("rcon 0");
	SendRconCommand("stream_distance 180.0");
	SendRconCommand("stream_rate 1000");
//=======================================================
    BombCount = TextDrawCreate(270.000000, 397.000000, "00:00:00");
    TextDrawBackgroundColor(BombCount, 255);
    TextDrawFont(BombCount, 2);
    TextDrawLetterSize(BombCount, 0.500000, 2.199999);
    TextDrawColor(BombCount, -1);
    TextDrawSetOutline(BombCount, 1);
    TextDrawSetProportional(BombCount, 1);

	ShowPlayerMarkers(0);
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	UsePlayerPedAnims();

	SetTimer("SendMensagens",90000,1);
    weaponhacktimer = SetTimer("CheckHack",1000,1);
    unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 40000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1);
	checkgastimer = SetTimer("CheckGas", 15000, 1);
    SetTimer("TempoTerritorios", 1500000, 1);
    SetTimer("reloginho",1000,true);
    SetTimer("OnplayerAtualizador", 1000, 1);
    SetTimer("AtualizarTops", 500000, 1);
//=========================== HQ HELPERS =================
    GZHelpers = GangZoneCreate(2459.588, -1756.869, 2516.631, -1717.392);
//===================== GZ's Los Santos =============================
    GZMorro = GangZoneCreate(2117.333, -1069.962, 2261.841, -959.4252);
 	GZCasarao = GangZoneCreate(1122.6149,-2156.6142,1382.6149,-1936.6143);
    GZMaddDogg = GangZoneCreate(1213.6815,-861.0207,1328.6815,-761.0207);
    GZPark = GangZoneCreate(1847.332, -1267.349, 2060.291, -1137.074);
    GZEstacao = GangZoneCreate(1649.584, -1985.838, 1839.726, -1855.563);

//============================ fim GZ's =======================


	CreateObject(4874, 315.79998779297,-1818.5999755859,6.0999999046326,0,0,90);
	pfdoor = CreateObject(980,-2433.97338867,496.39559937,31.70938301,0.00000000,0.00000000,24.00000000,0.0); //object(airportgate) (1)
	pfdoor2 = CreateObject(971,-2424.72973633,500.50247192,30.89804077,0.00000000,0.00000000,24.00000000,0.0); //object(subwaygate) (1)
	CreateObject(1829, 354.39999389648, 172.19999694824, 1007.799987793, 0, 0, 90.000, 300.0);// Cofre da Pref
	Create3DTextLabel("Cofre da Prefeitura",0xFF0000FF,354.39999389648, 172.19999694824, 1007.799987793,15.0,0);
	Create3DTextLabel("Cofre da Prefeitura",0xFF0000FF,354.39999389648, 172.19999694824, 1007.799987793,15.0,1);
	Create3DTextLabel("Cofre da Prefeitura",0xFF0000FF,354.39999389648, 172.19999694824, 1007.799987793,15.0,2);
	Create3DTextLabel("Cofre da Prefeitura",0xFF0000FF,354.39999389648, 172.19999694824, 1007.799987793,15.0,3);
    //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|
	Create3DTextLabel("HQ Helper",COR_3DLABEL,2476.1846,-1750.4175,13.5469,15,0);
    Create3DTextLabel("Elevador",COR_3DLABEL,608.4651,-590.1628,17.2266,8,0);

 	Create3DTextLabel("Los Santos Hospital\nAperte 'F' para entrar",COR_3DLABEL,2034.1270,-1403.3320,17.2874,30,0);
    
    Create3DTextLabel("HQ Aztecas\nAperte F para entrar",COR_AZTECAS,315.8926,-1769.9169,4.6362,8,0);
	Create3DTextLabel("USE: /batecartao\nUSE: /equipar",COLOR_AZULBB,-1521.1884,462.9987,7.1875,20.0,0);
	Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,-1588.4751,732.4855,-4.9063,20.0,0);
	Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,1530.3060,-1702.4915,6.2252,9.0,0);
    Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,302.7936,-1529.9443,24.9219,9.0,0);
    Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,240.6516,112.8062,1003.2188,9.0,0);
    Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,255.1123,77.4241,1003.6406,9.0,0);
    Create3DTextLabel("BaterCartao\nDigite /batercartao",COLOR_AZULBB,255.1123,77.4241,1003.6406,9.0,1);
    Create3DTextLabel("'/BCMedicos'\nPara Bater Cartao",COLOR_AZULBB,2041.5625,-1422.2742,17.1641,9.0,0);// Medicos
    Create3DTextLabel("'BCMEC'\nPara Trabalhar",COLOR_AZULBB,1466.7955,-2226.0144,13.5469,10.0,0); //MECANICOS
	Create3DTextLabel("Equipar\nAperte F",COLOR_AZULBB,246.3115,121.0975,1003.2301,10.0,0);
	Create3DTextLabel("Equipar\nAperte F",COLOR_AZULBB,262.0182,71.0734,1003.2422,10.0,0);
	Create3DTextLabel("Equipar\nAperte F",COLOR_AZULBB,211.2608,185.8552,1003.0313,10.0,0);
	//Create3DTextLabel("Equipar\nAperte F",COR_3DLABEL,616.8616,-592.8971,17.233a0,10.0,0);//PR
	Create3DTextLabel("Equipar\nAperte F",COLOR_AZULBB,1221.7601,-1802.2505,13.6108,10.0,0);//BOMB
	
	Create3DTextLabel("Menu cameras de segurança\nAperte a letra 'F' para acessar",COLOR_YELLOW2,361.1929,204.4032,1008.3828,15.0,0);//BOMB
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Aperte a letra 'F' para entrar",-1,1753.6919,-1894.0520,13.5984,15.0,0);//entrada RC
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Aperte a letra 'F' para sair",-1,963.9667,-53.1824,1001.1246,8.0,0);//saida RC

	Create3DTextLabel("Sex Shop\nAperte 'F' Para entrar",0xE800A6FF,1412.0570,-1700.0341,13.5395,10.0,0);
	Create3DTextLabel("Sex Shop\nAperte 'F' Para entrar",0xE800A6FF,2360.4719,-1532.8904,24.0000,10.0,0);
    //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|

    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Estilos de Lutas\nAperte Enter Para Mudar Luta",COLOR_AZULBB,768.2192,-3.9873,1000.7203,15.0,0);
	Create3DTextLabel("Aperte a Letra F para entrar", COLOR_AZULBB, 1651.9165,-1247.4479,14.8125, 4.0, 0);
    Create3DTextLabel("Departamento de Policia Militar\nAperte Enter Para Entrar",COR_3DLABEL,1554.9537,-1675.6584,16.1953,30.0,0);
    Create3DTextLabel("Secretaria de segurança Publica\nAperte 'F' Para Entrar",COR_3DLABEL,943.0517,-1743.3169,13.5546,30.0,0);
    Create3DTextLabel("Departamento da Policia Rodoviária\nAperte 'F' Para Entrar",COR_3DLABEL,628.0784,-571.7713,17.3975,30.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,2);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,1);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,3);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Caixa Eletrônico\nAperte Enter Para Usar",COLOR_AZULBB,957.4735,-48.6141,1001.1172,9.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Banco\nAperte Enter Para Usar",COLOR_AZULBB,2308.7908,-13.2499,26.7422,5.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Banco\nAperte Enter Para Usar",COLOR_AZULBB,2327.4045,6.5299,26.5351,5.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,1833.6124,-1842.4968,13.5781,8.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,1000.5861,-919.8832,42.3281,8.0,0);

//======================================
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,937.1777,-1736.6523,13.5469,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,311.2129,-1769.9749,4.5807,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,619.5972,-594.2736,17.2330,15.0,0);
	Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,2511.9155,-1682.3066,13.4634, 15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,402.8394,2543.3838,16.5469,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,1157.3890,-1192.1559,32.0275,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,2825.6370,-1175.9810,25.1884,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,1996.3022,-2076.2432,13.5469,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,2252.0061,-1458.4739,24.0210,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,-2241.4641,2358.0771,4.9796,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,1544.3475,-1619.7036,13.5546,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,319.7691,-1524.2484,36.0391,15.0,0);
	Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,-1526.4010,485.6462,7.1797,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,369.9092,167.6522,1008.3828,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,1103.6532,-296.7144,73.9851,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,771.6934,-1329.1243,13.5469,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,965.8672,-1414.8424,13.2804,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,-2440.3508,491.8625,30.0938,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,-1695.4508,1336.5465,7.1797,15.0,0);
    Create3DTextLabel("Informações da Organização\nAperfe 'F' para acessar",0xFF0000FF,1996.5020,-1451.3936,13.5547,15.0,0);
    //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    
    Create3DTextLabel("Equipamentos do territorio\nAperfe 'F' para equipar",0xCDAC00FF,2155.4729,-1016.9375,62.8514,15.0,0);
    Create3DTextLabel("Equipamentos do territorio\nAperfe 'F' para equipar",0xCDAC00FF,1967.0825,-1245.5968,24.2317,15.0,0);
    Create3DTextLabel("Equipamentos do territorio\nAperfe 'F' para equipar",0xCDAC00FF,1727.1581,-1944.3672,13.5669,15.0,0);
    Create3DTextLabel("Equipamentos do territorio\nAperfe 'F' para equipar",0xCDAC00FF,1240.9377,-2031.4834,59.9921,15.0,0);
    Create3DTextLabel("Equipamentos do territorio\nAperfe 'F' para equipar",0xCDAC00FF,1281.7220,-831.5698,83.1406,15.0,0);
    
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,1928.6006,-1776.4480,13.5469,8.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,1315.5110,-898.9860,39.5781,8.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,1352.4357,-1759.0243,13.5078,8.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Mercado\nAperte Enter Para Entrar",COLOR_AZULBB,-2442.6755,754.3430,35.1719,8.0,0); //GANTON
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Prefeitura de Commerce\nAperte Enter Para Entrar",COLOR_AZULBB,1481.0386,-1772.3120,18.7958,25.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Prefeitura de Country Club\nAperte Enter Para Entrar",COLOR_AZULBB,-2720.0007,-318.6132,7.8438,25.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Prefeitura de East Beach\nAperte Enter Para Entrar",COLOR_AZULBB,2793.6682,-1087.5436,30.7188,25.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Prefeitura de Downtown\nAperte Enter Para Entrar",COLOR_AZULBB,-1882.6202,824.2709,35.1751,25.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Alhambra\nAperte 'F' Para Entrar",COLOR_AZULBB,1837.0278,-1682.3890,13.3233,9.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte Enter Para Usar",COLOR_AZULBB,2148.7146,-1010.8959,62.5722,5.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte Enter Para Usar",COLOR_AZULBB,1450.4479,-2287.0803,13.5469,5.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte Enter Para Usar",COLOR_AZULBB,1919.1384,-1415.4775,13.5703,5.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte Enter Para Usar",COLOR_AZULBB,1123.7664,-1506.4692,15.7869,5.0,0);
    Create3DTextLabel("Digite\n'/materiais pegar [1 - 20]' Para pegar",COLOR_AZULBB,1837.0897,-1887.5219,13.4226,12.0,0);//MORRO
    Create3DTextLabel("Digite\n'/materiais trocar'",COLOR_AZULBB,1953.3899,-1997.8810,13.5469,12.0,0);// TRAZEIRA DA LOJA DE ARMAS
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Loja de Roupas Binco\nAperte Enter Para Entrar",COR_3DLABEL,2244.5669,-1664.4495,15.4766,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Loja de Roupas Victim\nAperte Enter Para Entrar",COR_3DLABEL,-1694.5050,950.8621,24.8906,10.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Loja de Roupas Zip\nAperte Enter Para Entrar",COR_3DLABEL,1456.9010,-1137.6941,23.9617,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}The Pig Pen\nAperte Enter Para Entrar",COR_3DLABEL,2421.4998,-1219.2438,25.5617,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Ginásio de Lutas\nAperte Enter Para Entrar",COR_3DLABEL,2229.9011,-1721.2582,13.5613,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Burguer Shot\nAperte Enter Para Entrar",COR_3DLABEL,1200.4497,-918.7695,43.1105,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Burguer Shot\nAperte Enter Para Entrar",COR_3DLABEL,810.4855,-1616.1888,13.5469,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Cluckin Bell\nAperte Enter Para Entrar",COR_3DLABEL,927.6217,-1353.0105,13.3438,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Cluckin Bell\nAperte Enter Para Entrar",COR_3DLABEL,2419.8442,-1509.4996,24.0000,10.0,0);// PERTO DA GROOVE
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Pizzaria\nAperte Enter Para Entrar",COR_3DLABEL,2105.4858,-1806.4725,13.5547,10.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Lanchonete\nAperte Enter Para Entrar",COR_3DLABEL,975.4691,-1335.9618,13.5319,10.0,0);
	Create3DTextLabel("HQ Vagos\nAperte Enter Para Entrar",COR_VAGOS,2808.0676,-1176.2814,25.3787,10.0,0);
	Create3DTextLabel("HQ PCC\nAperte Enter Para Entrar",0xB9C35AFF,2232.2180,-1458.5508,24.0173,13.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Puteiro\nAperte Enter Para Entrar",COLOR_AZULBB,-2624.5981,1412.1927,7.0938,15.0,0);
	Create3DTextLabel("DP Rotam\nAperte Enter Para Entrar",COLOR_AZULBB,327.9436,-1512.2135,36.0325,20.0,0);
	Create3DTextLabel("DP Policia Federal\nAperte Enter Para Entrar",COLOR_AZULBB,-2454.0352,503.9203,30.0793,20.0,0);
	Create3DTextLabel("HQ Ballas\nAperte Enter Para Entrar",COR_BALLAS,1154.4968,-1180.8517,32.8187,20.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}USE: /beber ",COR_3DLABEL,498.6937,-75.5562,998.7578,20.0,0);// BEBER BAR
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}USE: /beber ",0xFF0000FF,1479.1809,-1685.3807,14.0469,15.0,0);
	Create3DTextLabel("HQ Groove Street\nAperte Enter Para Entrar",0x00D900FF,2495.3481,-1691.1355,14.7656,20.0,0);
    Create3DTextLabel("Equipar Guerrilheiros Israelitas\nAperte F Para Equipar",COR_3DLABEL,-309.3545,1761.2603,43.6406,15.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Para comprar\nUSE /comprar",COLOR_AZULBB,-26.8819,-89.6936,1003.5469,15.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Para comprar\nUSE /comprar",COLOR_AZULBB,-22.2540,-55.6456,1003.5469,15.0,0);
    Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Para comprar\nUSE /comprar",COLOR_AZULBB,-22.3265,-138.4765,1003.5469,15.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Para comprar\nUSE /comprar",COLOR_AZULBB,-30.3140,-28.3121,1003.5573,15.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COLOR_AZULBB,1524.4977,-1677.9469,6.2188,8.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COLOR_AZULBB,1565.1235,-1666.9944,28.3956,8.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COLOR_AZULBB,246.2975,87.4735,1003.6406,8.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Menu de Licencas\nAperte Enter Para Usar",COR_3DLABEL,360.4893,170.2785,1008.3893,20.0,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Menu de Licencas\nAperte Enter Para Usar",COR_3DLABEL,360.4893,170.2785,1008.3893,20.0,2);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Menu de Licencas\nAperte Enter Para Usar",COR_3DLABEL,360.4893,170.2785,1008.3893,20.0,1);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Menu de Licencas\nAperte Enter Para Usar",COR_3DLABEL,360.4893,170.2785,1008.3893,20.0,3);
	Create3DTextLabel("Menu de Armas\nAperte Enter Para Usar",COLOR_AZULBB,312.1259,-166.1339,999.6010,8.0,0);
	Create3DTextLabel("Menu de Armas\nAperte Enter Para Usar",COLOR_AZULBB,313.8642,-133.8308,999.6016,8.0,0);
	Create3DTextLabel("HQ FARC\nAperte F para entrar",0x595A5BFF,424.2209,2536.6211,16.1484,8.0,0);
	Create3DTextLabel("HQ Triad\nAperte F para entrar",0xC6CAE9FF,-1691.6503,1367.4924,7.1797,8.0,0);
	Create3DTextLabel("HQ GI\nAperte F para entrar",0x00D0F6FF,-2281.4895,2288.3999,4.9679,8.0,0);
	Create3DTextLabel("Menu de Armas\nAperte Enter Para Usar",COLOR_AZULBB,295.7041,-80.3617,1001.5156,8.0,0);
	Create3DTextLabel("Trocar Materiais\nAperte Enter Para Trocar",COLOR_AZULBB,1990.8590,-1996.3722,13.5469,10,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,1172.6522,-1327.9591,15.4025,8,0);
	Create3DTextLabel("{FF0000}Play{66FF00}Happy\n{FFFFFF}Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,2029.5945,-1404.6426,17.2512,8,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_AZULBB,253.9280,69.6094,1003.6406,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_AZULBB,253.9271,69.5726,1003.6406,7,1);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_AZULBB,259.2474,120.3977,1003.2188,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_AZULBB,234.8419,111.2194,1003.2257,7,0);
	Create3DTextLabel("Equipamento\nAperte Enter Para Pegar",COLOR_AZULBB,346.1226,161.8205,1025.7964,20.0,0);
    //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|
	Create3DTextLabel("Cofre Policia Militar\nAperte Enter Para Usar",0xE800A6FF,1568.6442,-1689.9729,6.2188,7,0);
    Create3DTextLabel("Cofre Rotam\nAperte Enter Para Usar",0xE800A6FF,323.8644,-1518.2356,36.0325,7,0);
    Create3DTextLabel("Cofre Exército\nAperte Enter Para Usar",0xE800A6FF,-1520.0920,480.5076,7.1875,7,0);
    Create3DTextLabel("Cofre Medicos\nAperte Enter Para Usar",0xE800A6FF,2041.6974,-1430.1006,17.1641,7,0);
    Create3DTextLabel("Cofre Secretaria de Segurança\nAperte Enter Para Usar",0xE800A6FF,367.4628, 216.1502,1008.3828,7,0);
    Create3DTextLabel("Cofre Aztecas\nAperte Enter Para Usar",0xE800A6FF,325.8390,-1769.9778,4.7614,7,0);
    Create3DTextLabel("Cofre Polícia Rodoviária\nAperte Enter Para Usar",0xE800A6FF,608.2841,-586.3127,17.2266,7,0);
    Create3DTextLabel("Cofre Prefeitura\nAperte Enter Para Usar",0xE800A6FF,356.3957,152.4393,1025.7891,7,0);
    Create3DTextLabel("Cofre Hitmans\nAperte Enter Para Usar",0xE800A6FF,1105.9783,-301.7331,74.5391,7,0);
    Create3DTextLabel("Cofre Repórteres\nAperte Enter Para Usar",0xE800A6FF,752.1580,-1358.9927,13.5000,7,0);
    Create3DTextLabel("Cofre Taxistas\nAperte Enter Para Usar",0xE800A6FF,992.5768,-1460.1726,13.5469,7,0);
    Create3DTextLabel("Cofre Policia Federal\nAperte Enter Para Usar",0xE800A6FF,-2458.0300,500.2602,30.0783,7,0);
    Create3DTextLabel("Cofre Groove Street\nAperte Enter Para Usar",0xE800A6FF,2514.1301,-1691.2979,14.0460,7,0);
    Create3DTextLabel("Cofre FARC\nAperte Enter Para Usar",0xE800A6FF,400.0611,2539.5366,16.5448,7,0);
    Create3DTextLabel("Cofre Rotam-SF\nAperte Enter Para Usar",0xE800A6FF,208.8036,145.8378,1003.0234,7,0);
    Create3DTextLabel("Cofre Ballas\nAperte Enter Para Usar",0xE800A6FF,1154.1490,-1185.1548,32.0275,7,0);
    Create3DTextLabel("Cofre Vagos\nAperte Enter Para Usar",0xE800A6FF,2825.3916,-1170.2870,25.2235,7,0);
    Create3DTextLabel("Cofre Comando Vermelho\nAperte Enter Para Usar",0xE800A6FF,1996.3494,-2070.2419,13.5469,7,0);
    Create3DTextLabel("Cofre PCC\nAperte Enter Para Usar",0xE800A6FF,2247.3445,-1458.7847,24.0243,7,0);
    Create3DTextLabel("Cofre Triads\nAperte Enter Para Usar",0xE800A6FF,-1688.6979,1343.3650,7.1722,7,0);
    Create3DTextLabel("Cofre Guerrilheiros Israelitas\nAperte Enter Para Usar",COR_3DLABEL,-2237.1875,2353.9629,4.9807,7,0);
	Create3DTextLabel("Bar's\nAperte Enter Para Entrar",COR_3DLABEL,2309.9460,-1643.6337,14.8270,7,-1);
	Create3DTextLabel("HQ Hitmans\nAperte Enter Para Entrar",COLOR_AZULBB,1073.2368,-345.5004,73.9922,7,0);
//>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-
	TextBalao1 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2901.6897,-1096.7598,11.1809,7,0);
    TextBalao2 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2903.6123,-1056.1793,11.0407,7,0);
    TextBalao3 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2904.8555,-1012.4421,11.0469,7,0);
    TextBalao4 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2906.0674,-968.9991,11.0407,7,0);
    TextBalao5 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2907.4604,-925.5068,11.0469,7,0);
    TextBalao6 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2909.0190,-882.0096,11.0469,7,0);
   	TextBalao7 = Create3DTextLabel("Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)",0xE800A6FF,2910.3433,-839.2621,11.0469,7,0);

	new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++){Gas[c] = GasMax;}
	donoestacao = 0;
	donocasarao = 0;
	donomorro = 0;
	donoaero = 0;
	donopark = 0;
	PlayerHaul[390][pCapasity] = 100;
	PlayerHaul[391][pCapasity] = 100;
	PlayerHaul[392][pCapasity] = 50;
	PlayerHaul[393][pCapasity] = 50;
	//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	News[hTaken1] = 0;
	News[hTaken2] = 0;
	News[hTaken3] = 0;
	News[hTaken4] = 0;
	News[hTaken5] = 0;
	format(string, sizeof(string), "Nada");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "Ninguem");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	new gGstring[256];
	//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	for(new i = 0; i < sizeof(CreatedCars);i++)
	{
		CreatedCars[i] = 0;
	}
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
 		if(HouseInfo[0][hOwned] == 0)
		{
        	CreateDynamicPickup(1273, 23, HouseInfo[0][hEntrancex], HouseInfo[0][hEntrancey], HouseInfo[0][hEntrancez]);
    	}
  		if(HouseInfo[0][hOwned] == 1)
		{
     	   CreateDynamicPickup(1239, 23, HouseInfo[0][hEntrancex], HouseInfo[0][hEntrancey], HouseInfo[0][hEntrancez]);
    	}
    	if(HouseInfo[h][hOwned] == 0)
		{
        	CreateDynamicPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
        	pickups++;
        	format(gGstring, sizeof(gGstring), TextCasaVenda,HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
        	HouseLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,13.0,0);
   	 	}
    	if(HouseInfo[h][hOwned] == 1)
		{
        	CreateDynamicPickup(1239, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
        	pickups++;
        	if(HouseInfo[h][hRentabil] == 0)
			{
            	format(gGstring, sizeof(gGstring), TextCasa,HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
            	HouseLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,13.0,0);
        	}
        	else
			{
            	format(gGstring, sizeof(gGstring), TextCasaAl,HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
            	HouseLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,13.0,0);
        	}
    	}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
    	if(BizzInfo[h][bOwned] == 0)
		{
        	CreateDynamicPickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
        	pickups++;
        	format(gGstring, sizeof(gGstring), TextEmpresaVenda,BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded], BizzInfo[h][bTill]);
        	BizzLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
   	 	}
    	if(BizzInfo[h][bOwned] == 1)
		{
        	//CreateDynamicPickup(1239, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
        	//pickups++;
        	format(gGstring, sizeof(gGstring), TextEmpresa,BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded], BizzInfo[h][bTill]);
        	BizzLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
	}

   	if(BizzInfo[0][bOwned] == 1)
	{
       	CreateDynamicPickup(353, 23, BizzInfo[0][bEntranceX], BizzInfo[0][bEntranceY], BizzInfo[0][bEntranceZ]);
   	}
   	
   	if(BizzInfo[1][bOwned] == 1)
	{
       	CreateDynamicPickup(353, 23, BizzInfo[1][bEntranceX], BizzInfo[1][bEntranceY], BizzInfo[1][bEntranceZ]);
   	}
   	if(BizzInfo[7][bOwned] == 1)
	{
       	CreateDynamicPickup(353, 23, BizzInfo[7][bEntranceX], BizzInfo[7][bEntranceY], BizzInfo[7][bEntranceZ]);
   	}
   	if(BizzInfo[8][bOwned] == 1)
	{
       	CreateDynamicPickup(353, 23, BizzInfo[8][bEntranceX], BizzInfo[8][bEntranceY], BizzInfo[8][bEntranceZ]);
   	}
   	if(BizzInfo[2][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[2][bEntranceX], BizzInfo[2][bEntranceY], BizzInfo[2][bEntranceZ]);
   	}
   	if(BizzInfo[3][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[3][bEntranceX], BizzInfo[3][bEntranceY], BizzInfo[3][bEntranceZ]);
   	}
   	if(BizzInfo[4][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ]);
   	}
 	if(BizzInfo[5][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[5][bEntranceX], BizzInfo[5][bEntranceY], BizzInfo[5][bEntranceZ]);
   	}
   	if(BizzInfo[6][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[6][bEntranceX], BizzInfo[6][bEntranceY], BizzInfo[6][bEntranceZ]);
   	}
   	if(BizzInfo[9][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[9][bEntranceX], BizzInfo[9][bEntranceY], BizzInfo[9][bEntranceZ]);
   	}
    if(BizzInfo[10][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[10][bEntranceX], BizzInfo[10][bEntranceY], BizzInfo[10][bEntranceZ]);
   	}
   	if(BizzInfo[11][bOwned] == 1)
	{
       	CreateDynamicPickup(1239, 23, BizzInfo[11][bEntranceX], BizzInfo[11][bEntranceY], BizzInfo[11][bEntranceZ]);
   	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
    	if(SBizzInfo[h][sbOwned] == 0)
		{
        	CreateDynamicPickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
        	pickups++;
        	format(gGstring, sizeof(gGstring), TextMEmpresaVenda,SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
        	SBizzLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
    	}
    	if(SBizzInfo[h][sbOwned] == 1)
		{
        	CreateDynamicPickup(1239, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
        	pickups++;
        	format(gGstring, sizeof(gGstring), TextMEmpresa,SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
        	SBizzLabel[h] = Create3DTextLabel(gGstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
    	}
	}

//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==<|
	CreateDynamicPickup(1318,23,238.6457,139.2875,1003.0234,-1) ; // interior DP
	CreateDynamicPickup(1318,23,198.5305,179.3016,1003.0312,-1) ; // interior DP
	CreateDynamicPickup(1318,23,268.4232,77.5704,1001.0391,-1) ; // interior DP
	CreateDynamicPickup(1239,23,2041.6371,-1392.5150,48.3359) ; // Elevador Medicos
	CreateDynamicPickup(1239,23,2360.4719,-1532.8904,24.0000) ; // sex shop
	CreateDynamicPickup(1239,23,361.1929,204.4032,1008.3828) ; // ssp
	
	CreateDynamicPickup(1239,23,608.4651,-590.1628,17.2266) ; // elevador pr
	CreateDynamicPickup(1239,23,616.6039,-595.3680,22.7258) ; // elevador pr

	CreateDynamicPickup(1239,23,211.4565,287.2705,270.4649) ; // Elevador Medicos
	CreateDynamicPickup(1239,23,424.2209,2536.6211,16.1484) ; // hq farc
	CreateDynamicPickup(1239,23,-1691.6503,1367.4924,7.1797) ; // hq triad
	CreateDynamicPickup(1239,23,-2281.4895,2288.3999,4.9679) ; // hq GI
	CreateDynamicPickup(1239,23,2793.6682,-1087.5436,30.7188) ; // pref east Beach
	CreateDynamicPickup(1239,23,-1882.6202,824.2709,35.1751) ; // pref downtown
	CreateDynamicPickup(1239,23,1412.0570,-1700.0341,13.5395) ; // sex shop entrada
	CreateDynamicPickup(1239,23,-100.3403,-24.6412,1000.7188) ; // sex shop saida
	CreateDynamicPickup(1254, 23,-103.9931,-22.0508,1000.7188,-1); //  SEXO SHOP
	CreateDynamicPickup(1239, 23,253.9271,69.5726,1003.6406,1); // P-S
   	CreateDynamicPickup(1239,23,2037.6494,-1404.6544,17.2538) ; // Elevador Medicos
	CreateDynamicPickup(1239,23,964.0209,-1465.8312,13.4589); // Elevador Taxi
	CreateDynamicPickup(1239,23,965.7349,-1465.6044,21.3783); // Elevador Taxi
   	CreateDynamicPickup(1239,23,2522.9346,-1679.4137,15.4970) ; // Elevador Groove
   	CreateDynamicPickup(1239,23,2524.4297,-1681.8153,19.9302) ; // Elevador Groove
	CreateDynamicPickup(1239,23,1524.4977,-1677.9469,6.2188); //Elevador PM
	CreateDynamicPickup(1239,23,1565.1235,-1666.9944,28.3956); //Elevador PM
	CreateDynamicPickup(1239,23,346.8519,-1494.9565,36.0391);//Elevador BOPE
	CreateDynamicPickup(1239,23,345.1602,-1482.8597,76.5391);//Elevador BOPE
	CreateDynamicPickup(1239,23,246.2975,87.4735,1003.6406); //Elevador Cop
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==<|
   	CreateDynamicPickup(1314, 23, 1568.6442,-1689.9729,6.2188); //Cofre ORG
    CreateDynamicPickup(1314, 23, 323.8644,-1518.2356,36.0325); //Cofre ORG
    CreateDynamicPickup(1314, 23, -1520.0920,480.5076,7.1875); //Cofre ORG
    CreateDynamicPickup(1314, 23, 2041.6974,-1430.1006,17.1641); //Cofre ORG
    CreateDynamicPickup(1314, 23, 325.8390,-1769.9778,4.7614); //Cofre ORG
   	CreateDynamicPickup(1314, 23, 367.4628,216.1502,1008.3828); //Cofre ORG
   	CreateDynamicPickup(1314, 23, 608.2841,-586.3127,17.2266); //Cofre ORG

    CreateDynamicPickup(1314, 23, 1105.9783,-301.7331,74.5391); //Cofre ORG
    CreateDynamicPickup(1314, 23, 752.1580,-1358.9927,13.5000); //Cofre ORG
    CreateDynamicPickup(1314, 23, 992.5768,-1460.1726,13.5469); //Cofre ORG
    CreateDynamicPickup(1314, 23, -2458.0300,500.2602,30.0783); //Cofre ORG
    CreateDynamicPickup(1314, 23, 2514.1301,-1691.2979,14.0460); //Cofre ORG
    CreateDynamicPickup(1314, 23, 400.0611,2539.5366,16.5448); //Cofre ORG
    CreateDynamicPickup(1314, 23, 208.8036,145.8378,1003.0234); //Cofre ORG
    CreateDynamicPickup(1314, 23, 1154.1490,-1185.1548,32.0275); //Cofre ORG
    CreateDynamicPickup(1314, 23, 2825.3916,-1170.2870,25.2235); //Cofre ORG
    CreateDynamicPickup(1314, 23, 1996.3494,-2070.2419,13.5469); //Cofre ORG
    CreateDynamicPickup(1314, 23, 196.0160,-232.4899,1.7786); //Cofre ORG
    CreateDynamicPickup(1314, 23, 1315.3110,-869.2617,39.5781); //Cofre ORG
    CreateDynamicPickup(1314, 23, 1028.7534,-1106.7701,23.8281); //Cofre ORG
    CreateDynamicPickup(1314, 23, 2247.3445,-1458.7847,24.0243); //Cofre ORG
    CreateDynamicPickup(1314, 23, -1688.6979,1343.3650,7.1722); //Cofre ORG
    CreateDynamicPickup(1314, 23, -2237.1875,2353.9629,4.9807); //Cofre ORG
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==<|
	CreateDynamicPickup(1239, 23, 390.4640,173.8098,1008.3828,-1) ; // Saida Prefeitura
    CreateDynamicPickup(1239, 23, 1631.9160,-1172.1013,24.0781) ; // SAIDA BOPE
   	CreateDynamicPickup(1239, 23, 2008.4799,-2066.0486,13.5469) ; // entrada HQ Comando Vermelho
	CreateDynamicPickup(1239, 23, 967.2544,2175.1235,10.8203) ; // entrada HQ PCC
 	CreateDynamicPickup(1239, 23, 1073.2368,-345.5004,73.9922);//entrada hq hitmans
    CreateDynamicPickup(1239, 23, 366.4064,197.7209,1008.3828); //SAIDA HQ S.S.P
   	CreateDynamicPickup(1239, 23, -2624.5981,1412.1927,7.0938); // entrada Máfia Cosa Nostra
	CreateDynamicPickup(1239, 23, 315.8926,-1769.9169,4.6362) ; // entrada HQ Los Aztecas
	CreateDynamicPickup(1239, 23, 1154.4968,-1180.8517,32.8187) ; // entrada HQ Ballas
	//CreateDynamicPickup(1239, 1, 952.5583,-909.3518,45.7656);// entrada D.E.T.R.A.N
	CreateDynamicPickup(1239, 23, 2808.0676,-1176.2814,25.3787); //HQ VAGOS
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==<|
	CreateDynamicPickup(1242, 23, 1530.3060,-1702.4915,6.2252); //BaterCartao
	CreateDynamicPickup(1242, 23, 302.7936,-1529.9443,24.9219); //BaterCartao
	CreateDynamicPickup(1242, 23, 240.6516,112.8062,1003.2188); //BaterCartao
	CreateDynamicPickup(1242, 23, 255.1123,77.4241,1003.6406); //BaterCartao
	PickInterior = CreatePickup(1242, 23, 229.8059,164.7830,1003.0234,-1); //BaterCartao
    CreateDynamicPickup(1242, 23, 2041.5625,-1422.2742,17.1641); //BaterCartao Medicos
    CreateDynamicPickup(1242, 23, 1466.7955,-2226.0144,13.5469); //BaterCartao MECANICOS
	CreateDynamicPickup(1242, 23, -1521.1884,462.9987,7.1875); //Equipar COP
	CreateDynamicPickup(1242, 23, 246.3115,121.0975,1003.2301); //Equipar COP
	CreateDynamicPickup(1242, 23, 262.0182,71.0734,1003.2422); //Equipar COP
	CreateDynamicPickup(1242, 23, 211.2608,185.8552,1003.0313); //Equipar COP
    portaodpauto = CreatePickup(1210, 0, 246.4286,73.8840,1003.6406); //Dp Auto
    CreateDynamicPickup(351,23,312.1259,-166.1339,999.6010); // loja de armas 1
    CreateDynamicPickup(351,23,313.8642,-133.8308,999.6016); // loja de armas SF
    

//=========================================================================================
	CreateDynamicPickup(1318,23,234.1756,1064.4358,1084.2112,-1); //
	CreateDynamicPickup(1318,23,2468.1064,-1698.4801,1013.5078,-1); //
	CreateDynamicPickup(1318,23,318.5897,1115.1740,1083.8828,-1); //
	CreateDynamicPickup(1318,23,2324.5151,-1148.6710,1050.7101,-1); //
	CreateDynamicPickup(1318,23,235.4455,1187.0156,1080.2578,-1); //
	CreateDynamicPickup(1318,23,225.7570,1240.0000,1082.1406,-1); //
	CreateDynamicPickup(1318,23,223.0440,1289.2599,1082.1328,-1); //
	CreateDynamicPickup(1318,23,225.6310,1022.4800,1084.0146,-1); //
	CreateDynamicPickup(1318,23,328.0737,1478.4346,1084.4375,-1); //
	CreateDynamicPickup(1318,23,260.8594,1238.0526,1084.2578,-1); //
	CreateDynamicPickup(351,23,296.3083,-38.1549,1001.5156,-1); //
	CreateDynamicPickup(1318,23,285.4666,-41.0111,1001.5156,-1); //
	CreateDynamicPickup(1318,23,27.1000,1341.1000,1084.3750,-1); // aki
	CreateDynamicPickup(1318,23,2234.0549,1711.9801,1011.6857,-1); // aki
	CreateDynamicPickup(1318,23,2137.9553,1599.2861,1008.3666,-1); // aki
	CreateDynamicPickup(1318,23,2016.6693,1017.6930,996.8750,-1); // aki
	CreateDynamicPickup(1318,23,1133.1121,-9.6913,1000.6797,-1); // aki
	CreateDynamicPickup(1318,23,421.1092,2536.4766,10.0000,-1); // aki
	CreateDynamicPickup(1318,23,140.4000,1370.3000,1083.8656,-1); // aki2
	CreateDynamicPickup(1318,23,83.3000,1324.7000,1083.8594,-1); // aki3
	CreateDynamicPickup(1318,23,267.1422,304.9236,999.1484,-1); // aki4
	CreateDynamicPickup(1318,23,301.3582,306.2504,1003.5391,-1); // aki5
	CreateDynamicPickup(1318,23,385.7908,1471.7882,1080.1875,-1); // aki6
	CreateDynamicPickup(1318,23,261.0813,1286.1119,1080.2578,-1); // aki7
	CreateDynamicPickup(1318,23,745.3000,1437.7000,1102.7031,-1); // aki8
	CreateDynamicPickup(1318,23,376.3000,1417.2000,1081.3281,-1); // aki9
	CreateDynamicPickup(1318,23,23.1114,1405.1415,1084.4297,-1); // aki10
	CreateDynamicPickup(1318,23,447.0000,1400.3000,1084.3047,-1); // aki11
	CreateDynamicPickup(1318,23,295.4000,1473.2000,1080.2578,-1); // aki12
	CreateDynamicPickup(1318,23,231.4000,1114.1000,1080.9922,-1); // aki13
	CreateDynamicPickup(1318,23,-69.1564,1354.8154,1080.2109,-1); // aki14
	CreateDynamicPickup(1318,23,2261.2698,-1135.8125,1050.6328,-1); // aki15
	CreateDynamicPickup(1318,23,315.4988,-142.3861,999.6016,-1); // loja de armas SF2
	CreateDynamicPickup(1318,23,2034.1270,-1403.3320,17.2874,0); // hospital LS
	CreateDynamicPickup(1318,23,369.6563,165.0458,1053.2078,-1); // SAIDA HOSPITAL
	CreateDynamicPickup(1318,23,285.8319,-86.1915,1001.5229,-1); //
	CreateDynamicPickup(1318,23,316.3902,-169.8001,999.6010,-1); //
	CreateDynamicPickup(1318,23,260.8594,1238.0526,1084.2578,-1); //
    CreateDynamicPickup(351,23,295.7041,-80.3617,1001.5156); // Ammu Nation
    CreateDynamicPickup(1318,23,1753.6919,-1894.0520,13.5984); // RC
    CreateDynamicPickup(1318,23,963.9667,-53.1824,1001.1246); // RC
//======================= pickups Balões ====================
    CreateDynamicPickup(19132,23,2901.6897,-1096.7598,11.1809); // 1
    CreateDynamicPickup(19132,23,2903.6123,-1056.1793,11.0407);// 2
    CreateDynamicPickup(19132,23,2904.8555,-1012.4421,11.0469);// 3
    CreateDynamicPickup(19132,23,2906.0674,-968.9991,11.0407);// 4
    CreateDynamicPickup(19132,23,2907.4604,-925.5068,11.0469);// 5
    CreateDynamicPickup(19132,23,2909.0190,-882.0096,11.0469);// 6
    CreateDynamicPickup(19132,23,2910.3433,-839.2621,11.0469);// 7
	CreateDynamicPickup(1239, 23, 2309.9460,-1643.6337,14.8270);//BAR HC GROOVE
	CreateDynamicPickup(1277, 23, 360.4893,170.2785,1008.3893,-1); //licencas
	//CreateDynamicPickup(1210, 23, 361.8300,173.5202,1008.3828); //Empregos
	CreateDynamicPickup(1210, 23, 361.8300,173.5202,1008.3828,-1); //Empregos
	CreateDynamicPickup(1240, 23, 1172.6522,-1327.9591,15.4025); //Hospital 1 near Ammu
	CreateDynamicPickup(1240, 23, 2029.5945,-1404.6426,17.2512); //Hospital 2 near speedway
	CreateDynamicPickup(1239, 23, 1481.0386,-1772.3120,18.7958); //pref LS
	CreateDynamicPickup(1239, 23, -2720.1074,-318.5733,7.8438); //pref sf
	CreateDynamicPickup(2060, 23, 1973.1670,-1236.3485,20.0561); //Pacotes de Material
	CreateDynamicPickup(2060, 23, 1724.8873,-1939.0111,13.5826); //Pacotes de Material
	CreateDynamicPickup(2060, 23, 383.3600,-2039.3550,7.8359); //Pacotes de Material
	CreateDynamicPickup(2060, 23, -1499.6814,-387.1735,7.0689); //Pacotes de Material
	CreateDynamicPickup(2060, 23, -1476.8855,149.6899,18.7734); //Pacotes de Material
	CreateDynamicPickup(2060, 23, -2656.9631,1357.5219,7.0339); //Pacotes de Material
	CreateDynamicPickup(2060, 23, -2993.6001,472.7318,4.9141); //Pacotes de Material
	CreateDynamicPickup(2060, 23, -2108.2251,159.1501,35.0835); //Pacotes de Material
	CreateDynamicPickup(371, 23, 1544.2,-1353.4,329.4); //LS towertop
	CreateDynamicPickup(371, 23, 1536.0, -1360.0, 1150.0); //LS towertop
	CreateDynamicPickup(1242, 23, 1527.5,-12.1,1002.0); //binco armor
	CreateDynamicPickup(1240, 23, 279.3000,1853.5619,8.7649); //area51 health
	CreateDynamicPickup(1239, 23,259.2474,120.3977,1003.2188);// /limpar
	CreateDynamicPickup(1239, 23,234.8461,111.1823,1003.2257);// /limpar
	CreateDynamicPickup(1242,23,346.1226,161.8205,1025.7964); //EquiparGov
	CreateDynamicPickup(2060,23,1240.5569,-2036.9919,59.9709);// Trocar Materias
	CreateDynamicPickup(1239, 23,2232.2180,-1458.5508,24.0173);//hq PCC
	CreateDynamicPickup(1247, 23, 1554.9537,-1675.6584,16.1953);//DP PM
	CreateDynamicPickup(1247, 23, 628.0784,-571.7713,17.3975);//DP policia rodoviaria
	CreateDynamicPickup(1247, 23, 943.0517,-1743.3169,13.5546);//Secretaria de segurança
	CreateDynamicPickup(1247, 23, 1545.4073,-1607.9791,13.3828);//DP Prender
	CreateDynamicPickup(1247, 23, -1741.0514,961.7468,24.8828);//-1741.0514,961.7468,24.8828); // PC GARAGEM PRENDER
	CreateDynamicPickup(1247, 23, 324.3141,-1496.9177,24.9219); // pr garagem
	CreateDynamicPickup(1239, 23, 1836.4064,-1682.4403,13.3493);//Alhabra
	CreateDynamicPickup(1247, 23, 327.9436,-1512.2135,36.0325);//DP GT3
	CreateDynamicPickup(1239, 23, 975.4691,-1335.9618,13.5319);//Bar Pawno
	CreateDynamicPickup(1239, 23, 2244.5669,-1664.4495,15.4766);//entrada Binco
	CreateDynamicPickup(1239, 23, 2229.9011,-1721.2582,13.5613);//Ganton gym
	CreateDynamicPickup(1239, 23, 2421.4998,-1219.2438,25.5617);//Pig Pen
	CreateDynamicPickup(1239, 23, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
	CreateDynamicPickup(1239, 23, 810.5328,-1616.1392,13.5469);//Marina burger
	CreateDynamicPickup(1239, 23, 927.6217,-1353.0105,13.3438);//Cluckin Bell
	CreateDynamicPickup(1239, 23, 1200.4232,-918.5194,43.1125);//Vinewood burger
	CreateDynamicPickup(1239, 23, 1833.6124,-1842.4968,13.5781);//24/7 estação entrada
	CreateDynamicPickup(1239, 23, -30.9536,-91.5262,1003.5469);//24/7 saida
	CreateDynamicPickup(1239, 23, 1315.5110,-898.9860,39.5781);//24/7 perto madd dogg
	CreateDynamicPickup(1239, 23, 2476.1846,-1750.4175,13.5469);//HQ Helper
	CreateDynamicPickup(1239, 23, 1000.5861,-919.8832,42.3281);//24/7 gas station vinewood
	CreateDynamicPickup(1239, 23, -2442.6755,754.3430,35.1719);//24/7 GANTON ( PERTO DA GROOVE )
	CreateDynamicPickup(1239, 23, 1928.6006,-1776.4480,13.5469);//24/7 posto idle
	CreateDynamicPickup(1239, 23, 1352.4357,-1759.0243,13.5078);//24/7 Near DMV
	CreateDynamicPickup(1239, 23, 203.5140,-202.2578,1.5781); //Pizza stack at BlueBerry
	CreateDynamicPickup(1239, 23, 242.7591,66.4315,1003.6406); // Inside PD elevator
	CreateDynamicPickup(1239, 23, 1570.3828,-1333.8882,16.4844); // Building next AB
	CreateDynamicPickup(1239, 2, 2495.3481,-1691.1355,14.7656); // Grove HQ
    CreateDynamicPickup(1274, 1, 1929.5409,-1785.1664,13.5469); // Caixa Eletronico 1
    CreateDynamicPickup(1279, 23, 2148.7146,-1010.8959,62.5722); //Drogas Morro
    CreateDynamicPickup(1279, 23, 1919.1384,-1415.4775,13.5703); // Drogas Skate
    CreateDynamicPickup(1279, 23, 1450.4479,-2287.0803,13.5469); // Drogas Aero
    CreateDynamicPickup(1279, 23, 1123.7664,-1506.4692,15.7869); // Drogas Shop
    CreateDynamicPickup(1239, 23, 252.5820,69.7423,1003.6406) ; // Limpar DP
    CreateDynamicPickup(1242, 23, -1521.1884,462.9987,7.1875) ; // Equipar Exército
   	CreateDynamicPickup(1242, 23, -1588.4751,732.4855,-4.9063) ; // batercartao
    CreateDynamicPickup(2060, 23, 1953.3899,-1997.8810,13.5469) ; // Materiais VEND
    CreateDynamicPickup(2060, 23, 1837.0897,-1887.5219,13.4226) ; // Materiais VEND
   	CreateDynamicPickup(1247, 23, 321.8284,315.6733,999.1484) ; // PRENDER PF
   	CreateDynamicPickup(1210, 23, 355.2333,169.3552,1025.7891); // DarTaxa
   	CreateDynamicPickup(1210, 23, 367.3167,162.2013,1025.7891); // Portao Prefeitura
   	CreateDynamicPickup(1239, 23, 2232.9934,-1333.1924,23.9815) ; // IGREJA
   	CreateDynamicPickup(1247, 23, -1298.8188,490.5014,11.1953) ; // PRENDER EXERCITO
   	CreateDynamicPickup(1247, 23, -2454.0352,503.9203,30.0793) ; // Interior Policia Federal
   	LFicha = CreatePickup(1239, 23, 198.9671,168.1982,1003.0234, -1) ; // Limpar PC
   	CreateDynamicPickup(1314, 23, 768.2192,-3.9873,1000.7203); // mudarluta
   	CreateDynamicPickup(1239, 23, -1694.5050,950.8621,24.8906); // entrada VICTIM
    CreateDynamicPickup(1239, 23, 1456.9010,-1137.6941,23.9617); // entrada ZIP
	CreateDynamicPickup(1274, 23, 2308.7908,-13.2499,26.7422); // Banco Los Santos($)
	CreateDynamicPickup(1274, 23, 2327.4045,6.5299,26.5351); // Banco SF($)
	CreateDynamicPickup(1239, 23, 2104.8252,-1806.5239,13.5547) ; // Pickup entrada Pizza
	CreateDynamicPickup(1247, 23, 195.5733,158.4008,1003.0234); //prender novo
    CreateDynamicPickup(1239, 23, 2249.8088,-2257.7874,14.7647) ; // Vender Madeiras Ilegais
	CreateDynamicPickup(1239, 23, 2315.5200,0.3490,26.7422);//BANCO
	CreateDynamicPickup(1239, 23, 1434.1337,-968.4908,37.3894);//BANCO
	CreateDynamicPickup(1239, 23, 2147.7161,1603.5366,1006.1677);//BANCO
	CreateDynamicPickup(1239, 23, 2155.9976,1597.9829,999.9699);//BANCO
	CreateDynamicPickup(CAIXINHA_VG, 23, 311.2129,-1769.9749,4.5807);
	CreateDynamicPickup(CAIXINHA_VG, 23, 2511.9155,-1682.3066,13.4634);
	CreateDynamicPickup(CAIXINHA_VG, 23, 402.8394,2543.3838,16.5469);
	CreateDynamicPickup(CAIXINHA_VG, 23, 1157.3890,-1192.1559,32.0275);
	CreateDynamicPickup(CAIXINHA_VG, 23, 2825.6370,-1175.9810,25.1884);
	CreateDynamicPickup(CAIXINHA_VG, 23, 1996.3022,-2076.2432,13.5469);
	CreateDynamicPickup(CAIXINHA_VG, 23, 2252.0061,-1458.4739,24.0210);
	CreateDynamicPickup(CAIXINHA_VG, 23, -2241.4641,2358.0771,4.9796);
	CreateDynamicPickup(CAIXINHA_VG, 23, 937.1777,-1736.6523,13.5469);
	CreateDynamicPickup(CAIXINHA_VG, 23, 1544.3475,-1619.7036,13.5546);
	CreateDynamicPickup(CAIXINHA_VG, 23, 319.7691,-1524.2484,36.0391);
	CreateDynamicPickup(CAIXINHA_VG, 23, -1526.4010,485.6462,7.1797);
	CreateDynamicPickup(CAIXINHA_VG, 23, 369.9092,167.6522,1008.3828);
	CreateDynamicPickup(CAIXINHA_VG, 23, 1103.6532,-296.7144,73.9851);
	CreateDynamicPickup(CAIXINHA_VG, 23, 771.6934,-1329.1243,13.5469);
	CreateDynamicPickup(CAIXINHA_VG, 23, 965.8672,-1414.8424,13.2804);
	CreateDynamicPickup(CAIXINHA_VG, 23, -2440.3508,491.8625,30.0938);
	CreateDynamicPickup(CAIXINHA_VG, 23, -1695.4508,1336.5465,7.1797);
	CreateDynamicPickup(CAIXINHA_VG, 23, 1996.5020,-1451.3936,13.5547);
	CreateDynamicPickup(CAIXINHA_VG, 23, 619.5972,-594.2736,17.2330);
//=============================== equipar TR's ========================

	CreateDynamicPickup(PICKTR, 23, 2155.4729,-1016.9375,62.8514);
	CreateDynamicPickup(PICKTR, 23, 1967.0825,-1245.5968,24.2317);
	CreateDynamicPickup(PICKTR, 23, 1727.1581,-1944.3672,13.5669);
	CreateDynamicPickup(PICKTR, 23, 1240.9377,-2031.4834,59.9921);
	CreateDynamicPickup(PICKTR, 23, 1281.7220,-831.5698,83.1406);

//=-=-=-=-=-=-=-=-=-=-=-= PORTOES =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=//
//======================[ BALÃO - TESTE ] ================================
	Balao = CreateObject(19332,2904.8999,-1096.9142,11.1487-1,0,0,180,3000);
	Balao2 = CreateObject(19333,2906.4272,-1056.2058,11.0407-1,0,0,180,3000);
	Balao3 = CreateObject(19334,2907.6707,-1012.4935,11.0469-1,0,0,180,3000);
	Balao4 = CreateObject(19335,2908.6658,-969.0612,11.0407-1,0,0,180,3000);
	Balao5 = CreateObject(19336,2910.4563,-925.4816,11.0469-1,0,0,180,3000);
	Balao6 = CreateObject(19337,2912.0115,-882.0604,11.0469-1,0,0,180,3000);
	Balao7 = CreateObject(19338,2913.2729,-839.3149,11.0469-1,0,0,180,3000);
//====================================================
	Balao1Laser = CreateObject(18647,0.0,0.0,0.0,0,0,0);
	Balao2Laser = CreateObject(18646,0.0,0.0,0.0,0,0,0);
	Balao3Laser = CreateObject(18649,0.0,0.0,0.0,0,0,0);
	Balao4Laser = CreateObject(18650,0.0,0.0,0.0,0,0,0);
	Balao5Laser = CreateObject(18651,0.0,0.0,0.0,0,0,0);
	Balao6Laser = CreateObject(18648,0.0,0.0,0.0,0,0,0);
	Balao7Laser = CreateObject(18646,0.0,0.0,0.0,0,0,0);
	
//===================[ atach ] ================
	AttachObjectToObject(Balao1Laser, Balao, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao2Laser, Balao2, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao3Laser, Balao3, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao4Laser, Balao4, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao5Laser, Balao5, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao6Laser, Balao6, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);
	AttachObjectToObject(Balao7Laser, Balao7, 0.0, 0.0, 0.0+3, 0, 0, 270, 1);

	PDDOORa = CreateObject(985 , 247.005905 , 72.448440 , 1003.640625 , 0.000000 , 0.000000 , 1260.000000 );
	PDDOORb = CreateObject(985 , 250.774871 , 60.822799 , 1003.640625 , 0.000000 , 0.000000 , 5130.000000 );
	PDDOORc = CreateObject(986 , 248.142105 , 78.125961 , 1003.640625 , 0.000000 , 0.000000 , 12690.000000 );
	PDPMLS = CreateObject(980, 1546.8681640625, -1627.3585205078, 15.156204223633, 0, 0, 90);
	gt3gate = CreateObject(971, 283.095062, -1542.899170, 25.510294, 0.0000, 0.0000, 326.2500);
	gt3gate3 = CreateObject(971, 321.832672, -1488.615112, 25.527353, 0.0000, 0.0000, 323.6717);
	PDGARAGE = CreateObject(980,1588.195,-1637.969,15.193,0.0,0.0,0.0);
	gatepf2 = CreateObject(971, 2334.757568, 2443.675537, 8.250650, 0.0000, 0.0000, 236.2500);
	gatepf3 = CreateObject(971, 2293.928467, 2499.322021, 5.825822, 0.0000, 0.0000, 90.0000);
	portaoPC1 = CreateObject(980, 923.80151367188, -1224.8518066406, 18.749954223633, 0, 0, 270);
	portaoPC2 = CreateObject(980, 923.73193359375, -1217.4801025391, 18.749954223633, 0, 0, 270);
	PortaooPC = CreateObject(5856, 922.45611572266, -1208.7191162109, 17.982734680176, 0, 0, 0);
	PDEx = CreateObject(980, -1531.3978271484, 482.25979614258, 8.9530792236328, 0, 0, 359.99975585938);
	PortaoPre = CreateObject(2990, 369.15893554688, 162.35037231445, 1028.6030273438, 0, 0, 270.67565917969);
	PortaoReporter = CreateObject(971, 777.80017089844, -1330.2664794922, 14.200000762939, 0, 0, 0);
   	portaomedicos1 = CreateObject(980, 2002.9000244141 ,-1450.8000488281 ,15.300000190735 ,0.0000 ,0.0000 ,180.5);
   	portaomedicos2 =CreateObject(980, 1997.0999755859 ,-1445.0999755859 ,15.300000190735 ,0.0000 ,0.0000 ,90.499877929688);
   	CreateObject(1297, 1996.1999511719 ,-1450.5999755859 ,15.89999961853 ,0.0000 ,0.0000 ,12);
   	CreateObject(1297, 1997.0999755859 ,-1451.8000488281 ,15.89999961853 ,0.0000 ,0.0000 ,60.25);
	PortaoTaxi = CreateObject(980,958.840,-1415.794,15.151,0.0,0.0,0.0);
	acn = CreateObject(19313, 321.39999389648, -1188.1999511719, 77.099998474121, 0, 359, 37.996215820313);//2933
//========== Predio Casarão ===============================
	CreateDynamicObject(4563,1172.8000488281,-2038.9000244141,154.30000305176,0.0,0.0,90.25, 0, 0, -1, 700.0);//
//==========================[ HOSPITAL ] ==========================
    CreateDynamicObject(5820,-2479.1000976563,-134.10000610352,29.10000038147,0,0,178.75);
    CreateObject(14597,358.69921875,165.099609375,1054.1999511719,0,0,0);
    CreateDynamicObject(1999,347.89999389648,163,1052.1999511719,0,0,180);
    CreateDynamicObject(1703,346.20001220703,167.39999389648,1052.1999511719,0,0,0);
    CreateDynamicObject(1703,349.70001220703,167.39999389648,1052.1999511719,0,0,0);
    CreateDynamicObject(1671,347,164,1052.6999511719,0,0,20);
    CreateDynamicObject(2167,348.79998779297,162.19999694824,1052.1999511719,0,0,180);
    CreateDynamicObject(2002,346,165.39999389648,1052.1999511719,0,0,90);
    CreateDynamicObject(2209,351.39999389648,162.80000305176,1052.1999511719,0,0,0);
    CreateDynamicObject(1806,351.60000610352,164,1052.1999511719,0,0,210);
    CreateDynamicObject(2894,351.5,162.80000305176,1053,0,0,0);
    CreateObject(11427,372.39999389648,165.10000610352,1059.4000244141,0,0,0.75);
    CreateObject(3383,356.39999389648,173.69999694824,1052.1999511719,0,0,270.75);
    CreateObject(3383,360.5,173.80000305176,1052.1999511719,0,0,89.4970703125);
    CreateObject(3383,368.10000610352,174,1052.1999511719,0,0,90);
    CreateObject(3383,364.29998779297,174,1052.1999511719,0,0,269.75);
    CreateObject(3383,368.10000610352,156.30000305176,1052.1999511719,0,0,90.25);
    CreateObject(3383,364.39999389648,156.30000305176,1052.1999511719,0,0,270.24719238281);
    CreateObject(3383,356.60000610352,156,1052.1999511719,0,0,270);
    CreateObject(3383,360.20001220703,156,1052.1999511719,0,0,90);
    //==============================[ Heliporto CVLS ] ============================
    CreateObject(6973,1996.1999511719,-2058.8000488281,20.000000,0,0,90);
    CreateDynamicObject(3258,1971.0999755859,-2052.5,24.10000038147,0,180,180);
    CreateDynamicObject(3258,1970.4000244141,-2072,24.10000038147,0,179.99450683594,179.99450683594);
    CreateDynamicObject(3258,1988.9000244141,-2052.6000976563,24.10000038147,0,179.99450683594,179.99450683594);
//==================== obj RC Unity ===========================
    CreateDynamicObject(3877,954.79998779297,-48.099998474121,1001.799987793,0,0,0);
    CreateDynamicObject(3642,971.70001220703,-56.799999237061,1002.5999755859,0,0,88.5);
    CreateDynamicObject(1808,964,-43,1000.0999755859,0,0,0);
    CreateDynamicObject(2681,956.79998779297,-48.900001525879,1000.0999755859,0,0,90);
    CreateDynamicObject(2681,956.79998779297,-48.099998474121,1000.0999755859,0,0,90);
    CreateDynamicObject(2255,964.29998779297,-51.099998474121,1001.799987793,0,0,269.5);
    CreateDynamicObject(2628,948.09997558594,-62.200000762939,1000.0999755859,0,0,180);
    CreateDynamicObject(2627,948.09997558594,-54.200000762939,1000.0999755859,0,0,0);
    CreateDynamicObject(2630,948,-57.299999237061,1000.0999755859,0,0,0);
    CreateDynamicObject(2632,942.79998779297,-56.099998474121,1000.200012207,0,0,90);
    CreateDynamicObject(2629,942.79998779297,-56.799999237061,1000.299987793,0,0,178.25);
    CreateDynamicObject(2218,967,-45.599998474121,1001,334.74801635742,25.031494140625,11.266510009766);
    CreateDynamicObject(2342,967.20001220703,-47.900001525879,1001.0999755859,0,0,0);
    CreateDynamicObject(2645,972.29998779297,-44.900001525879,1002.200012207,0,0,269);
    CreateDynamicObject(2714,965.70001220703,-53.099998474121,1003.299987793,0,0,265.5);
    CreateDynamicObject(16780,967.29998779297,-46.599998474121,1003.700012207,0,0,0);
    CreateDynamicObject(2179,956.29998779297,-43,1001.799987793,0,0,0);
    CreateDynamicObject(1886,956.29998779297,-53.200000762939,1003.9000244141,0,0,120);
    CreateDynamicObject(16779,952.40002441406,-45.700000762939,1003.700012207,0,0,0);
    CreateDynamicObject(16779,945.09997558594,-58.299999237061,1003.700012207,0,0,0);
    CreateDynamicObject(1721,955.5,-52.400001525879,1000.0999755859,0,0,0);
    CreateDynamicObject(1721,954.90002441406,-52.400001525879,1000.0999755859,0,0,0);
    CreateDynamicObject(1721,954.29998779297,-52.400001525879,1000.0999755859,0,0,0);
    CreateDynamicObject(2096,964.20001220703,-55.099998474121,1000.0999755859,0,0,270);
    CreateDynamicObject(2894,960.29998779297,-57.799999237061,1000.9000244141,0,0,0);
    CreateDynamicObject(2894,961.09997558594,-57.599998474121,1000.9000244141,0,0,50);
    CreateDynamicObject(2894,957.70001220703,-54.299999237061,1001.0999755859,0,0,288);
    CreateDynamicObject(14699,963.70001220703,-54.799999237061,1000.700012207,0.026153564453125,89.751159667969,334.00012207031);
    CreateDynamicObject(14699,966.20001220703,-56.200000762939,1000.700012207,0,90,28.250061035156);
    CreateDynamicObject(1635,969.79998779297,-42.900001525879,1001.9000244141,0,0,90);

    CreateDynamicObject(3657,1770,-1909.0999755859,13.10000038147,0,0,90);
    CreateDynamicObject(3657,1770,-1912.5999755859,13.10000038147,0,0,90);
    CreateDynamicObject(3886,1757.3000488281,-1894.0999755859,11.699999809265,0,0,90.25);
    CreateDynamicObject(3886,1767.6999511719,-1894.0999755859,11.699999809265,0,0,269.74719238281);
    CreateDynamicObject(2372,1753.9000244141,-1896.1999511719,12.60000038147,0,0,90.25);
    CreateDynamicObject(2372,1756.0999755859,-1896.1999511719,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1758.3000488281,-1896.1999511719,12.60000038147,0,0,89.997192382813);
    CreateDynamicObject(2372,1760.5,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1762.6999511719,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1764.9000244141,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1767.0999755859,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1769.3000488281,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1771.5,-1896.1999511719,12.60000038147,0,0,89.994506835938);
    CreateDynamicObject(2372,1754.0999755859,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1756.3000488281,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1758.5,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1760.6999511719,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1762.9000244141,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1765.0999755859,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1767.3000488281,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1769.5,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(2372,1771.6999511719,-1891.5,12.60000038147,0,0,90.247192382813);
    CreateDynamicObject(6462,1789.9000244141,-1875.5999755859,14.39999961853,0,0,0);
    CreateDynamicObject(16327,1843,-1862.4000244141,12.300000190735,0,0,0);
    CreateDynamicObject(3920,1763,-1907.3000488281,14.699999809265,7.5,0,0);
    CreateDynamicObject(3920,1769.3000488281,-1913.4000244141,14.699999809265,4,0,270);
    CreateDynamicObject(3920,1769.3000488281,-1926.0999755859,14.699999809265,3.75,0,270);
    CreateDynamicObject(2372,1755.1999511719,-1885.8000488281,11.60000038147,0,0,359.99719238281);
    CreateDynamicObject(2372,1756.5999755859,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1757.9000244141,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1759.3000488281,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1760.5999755859,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1753.8000488281,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1752.4000244141,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1761.9000244141,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1763.1999511719,-1885.8000488281,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1757.0999755859,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1758.6999511719,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1760.1999511719,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1761.6999511719,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1763.0999755859,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1764.5,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1765.9000244141,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1767.4000244141,-1906.5999755859,11.60000038147,0,0,359.99450683594);
    CreateDynamicObject(2372,1768.8000488281,-1906.5999755859,11.60000038147,0,0,359.99450683594);
///=============================== fim RC ==============================

//====================================[ Predio DPLS ]=====================================================
    CreateObject(5882,1567.5999755859,-1675.6999511719,71.599998474121,0,0,0, 2000.0);
    CreateDynamicObject(1536,1555.3000488281,-1674.1999511719,15.199999809265,0,0,269.75);
    CreateDynamicObject(1536,1555.3000488281,-1677.1999511719,15.199999809265,0,0,88.499969482422);
    CreateDynamicObject(2886,2008.5999755859,-1450.3000488281,14,0,0,180);

	CreateDynamicObject(2886,247.72758484,72.33472443,1003.92919922,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2886,250.40625000,64.48971558,1003.90820312,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2886,250.90625000,64.57377625,1003.92028809,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,244.89843750,73.80095673,1003.94177246,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,248.41078186,74.61183929,1003.93310547,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,247.88383484,77.16934967,1003.94836426,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(3749,1547.55212402,-1627.36657715,18.24122620,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(971,-1421.89575200,493.65304600,5.58397600,0.00000000,0.00000000,90.00000000); //exercito
	CreateDynamicObject(971,-1421.88977100,502.44271900,5.58397600,0.00000000,0.00000000,90.00000000); //exercito
	CreateDynamicObject(8209,-1657.58972168,309.62448120,6.68852663,0.00000000,0.00000000,9.92492676); //exercito
	CreateDynamicObject(7657,-1516.18835449,481.56393433,12.89653015,0.00000000,0.00000000,178.64941406); //exercito
	CreateDynamicObject(5822,-1311.83837891,484.17300415,12.08705711,0.00000000,0.00000000,92.85986328); //exercito escada151 objetos
	CreateDynamicObject( 2942,1928.77148400,-1785.18701200,13.13976600,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2930, 1582.6254882813, -1638.0324707031, 15.007925987244, 0, 0, 91.309509277344);//36 objetos*/
	CreateDynamicObject(1676, 1000.5368041992, -937.51239013672, 42.908992767334, 0, 0, 9.9249267578125);
	CreateDynamicObject(1676, 1007.5074462891, -936.49285888672, 42.908992767334, 0, 0, 7.939208984375);//2 objetos
	CreateDynamicObject(971, 1499.8586425781, -1860.7644042969, 16.116792678833, 0, 0, 0);//4 objetos
	CreateDynamicObject(2930, -1297.6999511719, 491.39999389648, 12.89999961853, 0, 0, 0);

//>========================== Medicos LS ==========
	CreateDynamicObject(8210,2025.0999755859,-1351.5,24.60000038147,0.00000000,0.00000000,180.00000000);
	CreateDynamicObject(8210,2051.1000976563,-1379.00,24.60000038147,0.00000000,0.00000000,86.744506835938);
	CreateDynamicObject(7927,366.49870000,189.72340000,1008.61030000,0.00000000,0.00000000,90.00000000); //

//HQ TAXISTAS
	CreateDynamicObject(980,1041.181,-1460.063,15.419,0.0,0.0,-92.742);
	CreateDynamicObject(987,953.222,-1473.284,12.536,0.0,0.0,-0.859);
	CreateDynamicObject(983,949.976,-1473.470,16.832,0.0,0.0,-90.241);
	CreateDynamicObject(983,950.004,-1473.339,18.154,0.0,0.0,-90.241);
	CreateDynamicObject(987,952.874,-1415.724,12.635,0.0,0.0,-89.381);
//HQ REPORTER
	CreateDynamicObject(980,778,-1384.8000488281,13.89999961853,0,0,180);
	CreateDynamicObject(11472,738.68500000,-1360.54800000,21.54300000,0.00000000,0.00000000,-90.00000000); //
	CreateDynamicObject(7927,366.49870000,189.72340000,1008.61030000,0.00000000,0.00000000,90.00000000); //
//PORTA BOPE
	CreateDynamicObject(2946, 327.39999389648, -1511.8000488281, 35, 0, 0, 142);
	CreateDynamicObject(2946, 327.39999389648, -1511.8000488281, 35, 0, 0, 320.99829101563);
//PORTA BANCO-SF
	CreateDynamicObject(1557, 2333.8000488281, 7.6999998092651, 25.5, 0, 0, 270);
	CreateDynamicObject(1557, 2333.8000488281, 4.6999998092651, 25.5, 0, 0, 89.994506835938);
//GRADES CELAS PM,PF
	CreateDynamicObject(3109, 321.46438598633, 302.0078125, 999.40002441406, 0.00000000, 0.00000000, 268.69067382813);

//==================================== [ CARROS ] =======================================================

//|=============== POLICIA MILITAR =====================================================================================================
	AddStaticVehicleEx(599,1546.6871,-1676.2659,6.0796,88.8288,0,1,-1);//PMLS1
	AddStaticVehicleEx(599,1546.8060,-1667.8275,6.0808,88.9835,0,1,-1);//PMLS2
	AddStaticVehicleEx(528,1528.7026,-1683.8708,5.9350,270.8665,0,1,-1);//PMLS3
	AddStaticVehicleEx(528,1528.8638,-1688.0539,5.9322,269.4189,0,1,-1);//PMLS4
	AddStaticVehicleEx(427,1570.4122,-1710.8531,6.0225,0.0000,0,1,-1);//PMLS5
	AddStaticVehicleEx(427,1578.6390,-1710.7867,6.0224,358.6211,0,1,-1);//PMLS6
	AddStaticVehicleEx(596,1587.4077,-1711.7373,5.6115,359.2400,0,1,-1);//PMLS7
	AddStaticVehicleEx(596,1595.4750,-1711.7558,5.6118,359.6711,0,1,-1);//PMLS8
	AddStaticVehicleEx(596,1602.7106,-1700.1680,5.6116,90.3724,0,1,-1);//PMLS9
	AddStaticVehicleEx(596,1602.7845,-1691.8337,5.6118,89.0900,0,1,-1);//PMLS10
	AddStaticVehicleEx(596,1602.7258,-1684.0151,5.6111,90.2294,0,1,-1);//PMLS11
	AddStaticVehicleEx(437,1604.3303,-1608.2424,13.6247,180.9725,0,1,-1);//PMLS12
	AddStaticVehicleEx(596,1594.0656,-1605.9812,13.1190,180.5864,0,1,-1);//PMLS13
	AddStaticVehicleEx(596,1587.4974,-1605.9029,13.1040,179.8552,0,1,-1);//PMLS14
	AddStaticVehicleEx(596,1580.9460,-1605.9554,13.0759,177.7407,0,1,-1);//PMLS15
	AddStaticVehicleEx(596,1574.5443,-1605.9224,13.1032,179.9343,0,1,-1);//PMLS16
	AddStaticVehicleEx(523,1572.5017,-1634.0411,13.1236,359.0856,0,1,-1);//PMLS17
	AddStaticVehicleEx(523,1569.2320,-1634.0843,13.1255,358.1541,0,1,-1);//PMLS18
	AddStaticVehicleEx(523,1565.6208,-1634.0600,13.1256,359.0390,0,1,-1);//PMLS19
	AddStaticVehicleEx(523,1561.9379,-1634.1472,13.1243,4.6304,0,1,-1);//PMLS20
	AddStaticVehicleEx(523,1558.0518,-1634.2308,13.1275,1.2411,0,1,-1);//PMLS21
	AddStaticVehicleEx(497,1518.8060,-1651.3003,13.7181,270.1406,0,1,-1); //heli
	AddStaticVehicleEx(497,1516.9474,-1660.5878,13.7210,270.3623,0,1,-1); //heli
	AddStaticVehicleEx(540,1545.8829,-1670.1770,13.4255,88.1110,0,0,-1); // PMLS24
	
//====================== BOPE ================================================================================
	AddStaticVehicleEx(599,305.6436,-1480.8773,24.7822,233.6496,0,0,-1); // bope 1
	AddStaticVehicleEx(599,299.2804,-1490.0864,24.7848,234.4877,0,0,-1); // bope 2
	AddStaticVehicleEx(599,293.0708,-1545.5187,24.7818,55.2270,0,0,-1); // bope 3
	AddStaticVehicleEx(599,299.5797,-1536.4169,24.7850,54.5720,0,0,-1); // bope 4
	AddStaticVehicleEx(490,280.9660,-1530.7444,24.7223,233.8178,0,0,-1); // bope 5
	AddStaticVehicleEx(490,289.9776,-1516.8864,24.7212,234.1068,0,0,-1); // bope 6
	AddStaticVehicleEx(427,284.4430,-1526.7015,24.7260,234.6956,0,0,-1); // bope 7
	AddStaticVehicleEx(427,300.2951,-1504.2303,24.7290,234.6367,0,0,-1); // bope 8
	AddStaticVehicleEx(597,358.2215,-1558.4650,32.5870,55.8145,0,0,-1); // bope 9
	AddStaticVehicleEx(597,359.0267,-1548.4785,32.9330,53.0377,0,0,-1); // bope 10
	AddStaticVehicleEx(523,318.6457,-1507.9160,24.4874,56.1140,1,1,-1); // bope 11
	AddStaticVehicleEx(523,315.2908,-1513.3015,24.4917,54.6393,1,1,-1); // bope 12
	AddStaticVehicleEx(523,311.6905,-1518.7906,24.4922,55.3032,1,1,-1); // bope 13
	AddStaticVehicleEx(497,326.2104,-1498.3422,76.7152,221.9967,0,0,-1); // bope 14
	AddStaticVehicleEx(497,318.8298,-1508.1473,76.7160,231.9834,0,0,-1); // bope 15
	AddStaticVehicleEx(560,293.1649,-1512.6666,24.2985,235.6584,0,0,-1); // carro bope 1
	AddStaticVehicleEx(560,302.6249,-1498.9799,24.3039,234.9235,0,0,-1); // carro bope 2
	AddStaticVehicleEx(522,316.9765,-1510.8833,24.4822,55.7618,0,0,-1); // carro bope 3
	AddStaticVehicleEx(522,313.2525,-1516.1130,24.4814,56.7616,0,0,-1); // carro bope 4
	AddStaticVehicleEx(522,320.1462,-1505.5435,24.4869,54.9424,0,0,-1); // carro bope 5

//==================== EXERCITO =================================================================================
	AddStaticVehicleEx(411,-1227.8358,452.9356,7.2006,89.2371,1,1,-1); // carro exercito 1
	AddStaticVehicleEx(411,-1227.6935,468.0202,7.2005,88.6465,1,1,-1); // carro exercito 2
	AddStaticVehicleEx(596,-1334.0588,443.4516,6.8910,359.2509,86,113,-1); // carro exercito 3
	AddStaticVehicleEx(596,-1325.2241,443.1027,6.9061,359.7466,86,113,-1); // carro exercito 4
	AddStaticVehicleEx(470,-1316.0884,442.9895,7.1832,359.5066,86,113,-1); // carro exercito 5
	AddStaticVehicleEx(470,-1307.7202,442.9413,7.1828,0.4435,86,113,-1); // carro exercito 6
	AddStaticVehicleEx(433,-1295.2557,445.0778,7.6231,358.8351,1,1,-1); // carro exercito 7
	AddStaticVehicleEx(433,-1284.1067,445.2265,7.6228,357.9004,1,1,-1); // carro exercito 8
	AddStaticVehicleEx(427,-1273.9225,444.0561,7.3122,357.2698,86,113,-1); // carro exercito 9
	AddStaticVehicleEx(523,-1265.1178,443.5576,6.7418,358.8881,1,1,-1); // moto exercito 10
	AddStaticVehicleEx(523,-1259.2461,443.4483,6.7511,359.8180,1,1,-1); // moto exercito 11
	AddStaticVehicleEx(523,-1253.7181,443.5089,6.7519,1.1828,1,1,-1); // moto exercito 12
	AddStaticVehicleEx(520,-1427.8953,494.2342,18.9520,269.5899,1,1,-1); // jato exercito 13
	AddStaticVehicleEx(520,-1456.2798,508.0115,18.9878,269.0984,1,1,-1); // jato exercito 14
	AddStaticVehicleEx(548,-1458.1108,494.1015,20.2037,269.0548,86,86,-1); // heli carga exercito 15
	AddStaticVehicleEx(425,-1260.5425,495.3485,18.8045,89.6005,1,1,-1); // heli huerra exercito 16
	AddStaticVehicleEx(425,-1278.9393,495.4998,18.8066,89.7873,1,1,-1); //heli guerra exercito 17
	AddStaticVehicleEx(497,-1293.9374,495.0912,18.4509,0.3532,86,86,-1); //heli exercito 18
	AddStaticVehicleEx(430,-1281.2770,485.7846,-0.2118,267.9676,86,113,-1); // barco exercito 19
	AddStaticVehicleEx(430,-1452.4417,505.7320,-0.3274,89.2602,86,113,-1); // barco exercito 20
	AddStaticVehicleEx(430,-1485.9309,484.6871,-0.0394,91.3087,86,113,-1); // barco exercito 21
	AddStaticVehicleEx(596,-1345.1558,455.5187,6.9084,0.5128,86,113,-1); // carro exercito
	AddStaticVehicleEx(596,-1354.7914,455.1299,6.9092,359.9993,86,113,-1); // carro exercito
	AddStaticVehicleEx(596,-1363.7050,455.1025,6.9079,1.9180,86,113,-1); // carro exercito

//=================== Medicos ========================================================================================
	AddStaticVehicleEx(416,2038.97473145,-1447.74206543,17.60395432,90.00000000,1,3,-1); //Ambulance    [ 122 ]
	AddStaticVehicleEx(416,2000.98083496,-1406.79394531,17.46540070,180.00000000,1,3,-1); //Ambulance    [ 123 ]
	AddStaticVehicleEx(416,2025.00500488,-1412.81982422,17.29176331,89.99987793,1,3,-1); //Ambulance    [ 124 ]
	AddStaticVehicleEx(416,2012.98413086,-1418.80981445,17.29176331,91.99536133,1,3,-1); //Ambulance    [ 125 ]
	AddStaticVehicleEx(586,2017.12915039,-1433.66479492,13.15168762,50.00000000,1,3,-1); //Wayfarer    [ 119 ]
	AddStaticVehicleEx(586,2018.96496582,-1432.00805664,13.15128803,49.99877930,1,3,-1); //Wayfarer    [ 120 ]
	AddStaticVehicleEx(487,2017.18750000,-1389.87500000,48.60093689,180.00000000,1,3,-1); //Maverick    [ 128 ]

//================= AZTECAS ========================================================================================

	AddStaticVehicleEx(567,330.9874,-1809.8018,4.3437,359.6347,79,79,-1); // aztecas1
	AddStaticVehicleEx(559,321.1782,-1809.6036,4.1598,358.5912,79,79,-1); // aztecas2
	AddStaticVehicleEx(424,317.9139,-1809.2891,4.2694,359.3187,79,79,-1); // aztecas3
	AddStaticVehicleEx(482,311.6131,-1809.4457,4.5332,0.9209,79,79,-1); // aztecas4
	AddStaticVehicleEx(560,311.7488,-1788.6865,4.2825,179.9274,79,79,-1); // aztecas5
	AddStaticVehicleEx(522,315.1989,-1788.9363,4.2003,178.0608,79,79,-1); // aztecas6
	AddStaticVehicleEx(522,318.0529,-1788.8314,4.2411,180.9897,79,79,-1); // aztecas7
	AddStaticVehicleEx(411,321.2765,-1788.7489,4.4577,179.7370,79,79,-1); // aztecas8
	AddStaticVehicleEx(480,324.6985,-1788.7434,4.5605,180.2742,79,79,-1); // aztecas9
	AddStaticVehicleEx(487,317.1623,-1835.6078,6.5165,88.8536,79,79,-1); // aztecas10// ERA PRA SER 11 >.< CONTAGEM FAIL :@

//=========================[ Secretaria de segurança ] ============================

	AddStaticVehicleEx(490,962.9000,-1753.7164,13.6335,178.0445,1,0, -1); // secretaria e segurança
	AddStaticVehicleEx(490,959.1819,-1753.6011,13.6226,177.8813,1,0, -1); // secretaria e segurança
	AddStaticVehicleEx(490,955.1273,-1753.5862,13.6301,177.7336,1,0, -1); // secretaria e segurança
	AddStaticVehicleEx(490,951.1833,-1753.5894,13.6307,175.7250,1,0, -1); // secretaria e segurança
	AddStaticVehicleEx(490,947.1798,-1753.8827,13.6300,175.4326,1,0, -1); // secretaria e segurança
	AddStaticVehicleEx(522,943.8680,-1751.2148,13.1106,138.1849,1,0, -1); // secretaria de segurança
	AddStaticVehicleEx(522,940.1488,-1750.6241,13.1041,137.0976,1,0, -1); // secretaria de segurança
	AddStaticVehicleEx(522,941.9980,-1750.8983,13.1024,136.6991,1,0, -1); // secretaria de segurança
	AddStaticVehicleEx(522,938.5032,-1750.3479,13.0996,136.5629,1,0, -1); // secretaria de segurança
	AddStaticVehicleEx(497,931.4693,-1724.4000,13.7239,89.9155,1,0, -1); // secretaria de segurança


//================= PREFEITURA ======================================================================================
	AddStaticVehicleEx(522, -2738.2539,-335.2140,6.7391,47.7742, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(560, -2758.5876,-344.1469,6.8717,1.0555, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(560, -2707.4111,-302.4392,6.8502,135.3106, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(487, -2793.1618,-343.3135,7.3681,0.0549, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(409, 1476.6389,-1726.0959,13.3932,90.9532, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(522, 1522.0886,-1846.0485,13.1196,357.2290, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(522, 1524.9886,-1846.1342,13.1191,358.7823, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(560, 1529.5324,-1846.4885,13.2203,358.8546, 1,1, -1);//Prefeitura
	AddStaticVehicleEx(560, 1533.9796,-1846.5582,13.2193,359.6951, 1,1, -1);//Prefeitura

//================ HITMANS ===========================================================================================
	AddStaticVehicleEx(487,1096.5649,-336.4010,74.1709,87.2448,13,13,-1); // Hitman1
	AddStaticVehicleEx(534,1088.7184,-324.3289,73.7389,89.7770,13,13,-1); // Hitman2
	AddStaticVehicleEx(560,1088.8278,-318.5800,73.7097,89.2910,13,13,-1); // Hitman3
	AddStaticVehicleEx(562,1089.8339,-300.1772,73.6486,88.9000,13,13,-1); // Hitman4
	AddStaticVehicleEx(411,1089.6306,-294.2273,73.8132,88.4817,13,13,-1); // Hitman5
	AddStaticVehicleEx(411,1082.4860,-287.8770,73.8141,179.3768,13,13,-1); // Hitman6
	AddStaticVehicleEx(522,1055.8807,-294.4683,73.5324,273.8374,13,13,-1); // Hitman7
	AddStaticVehicleEx(522,1055.8783,-296.6512,73.5370,271.0594,13,13,-1); // Hitman8
	AddStaticVehicleEx(522,1055.7688,-299.0233,73.5652,263.7314,13,13,-1); // Hitman9
	AddStaticVehicleEx(522,1055.9011,-301.6764,73.5578,269.4880,13,13,-1); // Hitman10
	AddStaticVehicleEx(522,1055.8319,-304.2759,73.5574,267.5344,13,13,-1); // Hitman11

//=============== REPORTER ==================================================================================================
	AddStaticVehicleEx(582,739.8584,-1333.6587,13.5972,180.1957,13,13,-1); // reporte 1
	AddStaticVehicleEx(582,747.1868,-1333.6637,13.5940,180.6823,13,13,-1); // reporte 2
	AddStaticVehicleEx(582,754.7347,-1333.7186,13.5787,180.9125,13,13,-1); // reporte 3
	AddStaticVehicleEx(582,762.5927,-1333.9873,13.5941,178.1487,13,13,-1); // reporte 4
	AddStaticVehicleEx(582,783.3341,-1344.0449,13.5828,91.0566,13,13,-1); // reporte 6
	AddStaticVehicleEx(582,783.2918,-1351.6785,13.6087,89.4505,13,13,-1); // reporte 7
    AddStaticVehicleEx(582,764.1529,-1380.5381,13.7080,359.5219,13,13,-1); // reporte 8
    AddStaticVehicleEx(560,773.7608,-1381.4971,13.3785,0.5489,13,13,-1); // reporte 9
    AddStaticVehicleEx(560,781.6207,-1381.4340,13.3870,358.3725,13,13,-1); // creporte 10
    AddStaticVehicleEx(488,777.9664,-1369.7356,19.9012,358.1478,13,13,-1); // heli reporter 11
	AddStaticVehicleEx(488,743.0276,-1368.8562,25.8792,181.3057,13,13,-1); // heli reporter 12

//============== TAXISTA ===========================================================================================================
	AddStaticVehicleEx(420,981.9116,-1433.8053,13.5531,179.3187,6,6,-1); // taxi 1
	AddStaticVehicleEx(420,989.8789,-1433.5850,13.5592,184.3137,6,6,-1); // taxi 2
	AddStaticVehicleEx(420,997.8811,-1433.6967,13.3286,181.2386,6,6,-1); // taxi 3
	AddStaticVehicleEx(420,1015.6336,-1433.5183,13.3195,180.7739,0,0,-1); // taxi 4
	AddStaticVehicleEx(420,1022.6530,-1433.4480,13.3083,179.4612,0,0,-1); // taxi 5
	AddStaticVehicleEx(420,1029.0442,-1433.4532,13.3256,180.0785,0,0,-1); // taxi 6
	AddStaticVehicleEx(586,1019.9182,-1462.6682,13.0793,0.1319,6,6,-1); // taxi 7
	AddStaticVehicleEx(586,1016.4743,-1462.5500,13.0737,3.3525,6,6,-1); // taxi 8
	AddStaticVehicleEx(586,1012.8196,-1462.5608,13.0711,3.0619,6,6,-1); // taxi 9
	AddStaticVehicleEx(586,1010.4554,-1462.4133,13.0640,4.8563,6,6,-1); // taxi 10
	AddStaticVehicleEx(586,1007.3239,-1462.6339,13.0683,5.0972,6,6,-1); // taxi 11
	AddStaticVehicleEx(487,973.1631,-1465.5087,21.5196,356.6991,6,6,-1); // heli taxi 1
	AddStaticVehicleEx(487,985.3223,-1465.8511,21.4546,358.2152,6,6,-1); // heli taxi 2

//============= POLICIA FEDERAL ================================================================================================================
	AddStaticVehicleEx(427,-2441.5435,526.2667,30.0564,181.9647,113,1,-1); // PF1
	AddStaticVehicleEx(427,-2437.8384,526.3060,30.0509,180.4888,113,1,-1); // PF4
	AddStaticVehicleEx(599,-2413.8823,540.0011,30.1404,270.4297,113,1,-1); // PF3
	AddStaticVehicleEx(599,-2414.2156,535.8632,30.1402,257.7232,113,1,-1); // PF5
	AddStaticVehicleEx(599,-2415.4175,532.1715,30.1455,246.7266,113,1,-1); // PF6
	AddStaticVehicleEx(490,-2416.7915,528.4579,29.6789,239.2116,1,113,-1); // PF7
	AddStaticVehicleEx(490,-2419.2363,525.0135,29.6789,231.4109,1,113,-1); // PF8
	AddStaticVehicleEx(490,-2422.4275,521.7137,29.6786,225.1178,1,113,-1); // PF9
	AddStaticVehicleEx(598,-2425.8840,518.6827,29.7017,221.4962,113,1,-1); // PF10
	AddStaticVehicleEx(497,-2439.9163,526.3338,34.2939,268.6298,113,1,-1); // PF11
	AddStaticVehicleEx(541,-2464.2847,504.4300,29.7245,180.5379,0,0,-1); // PF12
	AddStaticVehicleEx(522,-2475.9421,506.3710,29.6269,218.1806,113,1,-1); // PF13
	AddStaticVehicleEx(522,-2478.2866,506.1689,29.6223,216.0378,113,1,-1); // PF14
	AddStaticVehicleEx(522,-2481.0142,506.1295,29.6378,217.2151,113,1,-1); // PF15
	AddStaticVehicleEx(522,-2483.7446,506.1713,29.6403,216.1977,113,1,-1); // PF16
	AddStaticVehicleEx(522,-2486.4775,506.0441,29.6444,214.7697,113,1,-1); // PF17
	AddStaticVehicleEx(523,-2494.7791,504.3294,29.6431,177.9711,113,1,-1); // PF18
	AddStaticVehicleEx(523,-2496.9126,504.3466,29.6439,180.9198,113,1,-1); // PF19
	AddStaticVehicleEx(523,-2498.8677,504.1306,29.6452,183.3009,113,1,-1); // PF20
	AddStaticVehicleEx(523,-2501.0918,504.1790,29.6482,185.4503,113,1,-1); // PF21
	AddStaticVehicleEx(497,-2476.3467,493.7039,30.2520,264.8796,113,1,-1); // PF22
	AddStaticVehicleEx(437,-2470.4761,482.6510,30.0376,297.5431,113,1,-1); // PF23

//============ Carros espalhados por aê mano ====================================================================================================================================================
	AddStaticVehicleEx(400,2293.6978,-1671.7883,14.7966,359.0262,-1,-1,-1); //
	AddStaticVehicleEx(401,2568.5051,-1724.2327,13.3263,89.8617,-1,-1,-1); // 2
	AddStaticVehicleEx(402,1857.4216,-1759.2261,13.3784,90.4204,-1,-1,-1); // 3
	AddStaticVehicleEx(403,1820.8308,-1467.8524,14.1557,269.8344,-1,-1,-1); // 4
	AddStaticVehicleEx(404,1755.3098,-1344.1333,15.4895,268.9281,-1,-1,-1);// 5
	AddStaticVehicleEx(405,1958.3906,-1333.3604,22.6108,270.2152,-1,-1,-1); // 6
	AddStaticVehicleEx(412,1081.9503,-1703.7773,13.3845,270.0951,-1,-1,-1); // 7
	AddStaticVehicleEx(415,1381.1915,-1848.0261,13.3185,178.8771,-1,-1,-1); // 8
	AddStaticVehicleEx(419,1745.2642,-1860.0833,13.2886,270.6426,-1,-1,-1); // 9
	AddStaticVehicleEx(421,1867.1594,-1036.5278,23.7917,242.8647,-1,-1,-1); // 10
	AddStaticVehicleEx(429,2740.9465,-1143.8796,44.9619,271.0641,-1,-1,-1); // 11
	AddStaticVehicleEx(434,2790.1929,-1883.4969,11.0383,89.0240,-1,-1,-1); // 12
	AddStaticVehicleEx(439,-2843.5898,387.3704,4.3959,0.8420,-1,-1,-1); // 13
	AddStaticVehicleEx(442,925.1368,-1122.3147,23.8355,359.8628,0,0,80); // 14 cemiterio
	AddStaticVehicleEx(442,936.0014,-1122.5574,23.8264,359.5724,0,0,80); // 15 cemiterio
	AddStaticVehicleEx(443,-2217.4207,-258.7235,36.1471,180.6103,-1,-1,-1); // 16
	AddStaticVehicleEx(458,-2103.2908,-560.2798,32.1236,231.4280,-1,-1,-1); // 17
	AddStaticVehicleEx(466,-1461.6459,-567.2202,13.8901,200.7890,-1,-1,-1); // 18
	AddStaticVehicleEx(476,-1461.0604,-521.4478,14.8829,205.9236,-1,-1,-1); // 19
	AddStaticVehicleEx(476,-1433.8032,-507.8747,14.9001,208.0814,-1,-1,-1); // 20
	AddStaticVehicleEx(500,-1317.9556,-495.7501,14.2491,29.0032,-1,-1,-1); // 21
	AddStaticVehicleEx(504,-1287.7189,-313.0418,13.9409,201.9427,-1,-1,-1); // 22

//=========== GROOVE STREET =======================================================================================================================================
	AddStaticVehicleEx(424,2499.3936,-1683.6714,13.1049,277.9147,86,86,-1); // carro groove 1	[ 64 ]
	AddStaticVehicleEx(451,2473.9622,-1693.5035,13.2200,359.7079,86,86,-1); // carro groove 2    [ 65 ]
	AddStaticVehicleEx(560,2508.3750,-1677.2435,13.2115,328.8571,86,86,-1); // carro groove 3    [ 66 ]
	AddStaticVehicleEx(559,2510.1279,-1667.1589,13.1800,15.1649,86,86,-1); // carro groove 4		[ 67 ]
	AddStaticVehicleEx(411,2496.8115,-1647.7126,13.2535,210.6379,86,86,-1); // carro groove 5    [ 68 ]
	AddStaticVehicleEx(567,2468.7090,-1670.3972,13.0992,14.5934,86,86,-1); // carro groove 6     [ 69 ]
	AddStaticVehicleEx(480,2515.0391,-1686.0542,13.2324,74.8100,86,86,-1); // carro groove 7 	    [ 70 ]
	AddStaticVehicleEx(482,2483.1802,-1653.1826,13.0933,266.6223,86,86,-1); // carro groove 8    [ 71 ]
	AddStaticVehicleEx(487,2528.1475,-1677.7980,20.1070,88.8134,86,86,-1); // heli groove       [ 72 ]
	AddStaticVehicleEx(522,2487.5161,-1685.6387,13.1070,44.6681,86,86,-1); // groove moto 1      [ 73 ]
	AddStaticVehicleEx(522,2484.9285,-1685.7277,13.1016,45.1795,86,86,-1); // groove moto 2      [ 74 ]

//===========FARC=======================================================================================================================================
	AddStaticVehicleEx(520,382.0672,2538.5024,17.2623,179.0163,0,0,-1); // hydra al´qaeda 1      [ 282 ]
	AddStaticVehicleEx(425,347.0407,2539.1038,17.5199,179.0246,0,0,-1); // hydra al´qaeda 2      [ 283 ]
	AddStaticVehicleEx(487,366.0395,2537.8293,16.8276,161.9232,0,0,-1); // heli al´qaeda       [ 284 ]
	AddStaticVehicleEx(411,424.8906,2516.1953,16.4970,89.8145,0,0,-1); // tanque al´qaeda 1     [ 285 ]
	AddStaticVehicleEx(411,424.3374,2504.1704,16.4971,88.5026,0,0,-1); // tanque al´qaeda 2     [ 286 ]
	AddStaticVehicleEx(402,413.2605,2452.6563,16.2054,357.5121,0,0,-1); // carro al´qaeda 1    [ 287 ]
	AddStaticVehicleEx(559,401.1563,2453.1179,16.2052,359.3275,0,0,-1); // carro al´qaeda 2    [ 288 ]
	AddStaticVehicleEx(451,407.3538,2460.2817,16.2057,357.3129,0,0,-1); // carro al´qaeda 3    [ 289 ]
	AddStaticVehicleEx(541,418.2018,2437.5090,16.2049,359.6690,0,0,-1); // carro al´qaeda 4     [ 290 ]
	AddStaticVehicleEx(534,413.4090,2437.3838,16.2049,1.4261,0,0,-1); // carro al´qaeda 5       [ 291 ]
	AddStaticVehicleEx(560,408.0492,2437.2141,16.2053,358.9307,0,0,-1); // carro al´qaeda 6     [ 292 ]
	AddStaticVehicleEx(579,400.6902,2437.0471,16.2054,1.0032,0,0,-1); // carro al´qaeda 7       [ 293 ]
	AddStaticVehicleEx(579,397.4241,2437.1575,16.2052,359.4397,0,0,-1); // carro al´qaeda 8     [ 294 ]
	AddStaticVehicleEx(522,392.1531,2436.7544,16.0708,359.2458,0,0,-1); // moto al´qaeda 1       [ 295 ]
	AddStaticVehicleEx(522,390.8281,2436.8748,16.0638,358.4109,0,0,-1); // moto al´qaeda 2      [ 296 ]
	AddStaticVehicleEx(520,325.2316,2540.8120,17.5310,176.7372,0,0,-1); // jato al qaeda


//============ BALLAS ===================================================================================================================================================================================
	AddStaticVehicleEx(424,1094.6819,-1220.6886,17.6143,270.0439,186,186,-1); // ballas1
	AddStaticVehicleEx(411,1100.9613,-1220.5817,17.5213,270.6091,186,186,-1); // ballas2
	AddStaticVehicleEx(480,1108.0659,-1220.5481,17.6062,271.1903,186,186,-1); // ballas3
	AddStaticVehicleEx(522,1119.6160,-1215.9280,17.6046,90.9506,186,186,-1); // ballas4
	AddStaticVehicleEx(522,1119.5807,-1213.7260,17.5836,87.7690,186,186,-1); // ballas5
	AddStaticVehicleEx(482,1112.9521,-1194.0735,18.1069,179.0382,186,186,-1); // ballas6
	AddStaticVehicleEx(567,1106.2533,-1193.7109,17.9837,176.5975,186,186,-1); // ballas7
	AddStaticVehicleEx(560,1085.4323,-1201.7513,17.5510,274.6654,186,186,-1); // ballas8
	AddStaticVehicleEx(451,1085.8463,-1197.3270,17.7291,268.0471,186,186,-1); // ballas9
	AddStaticVehicleEx(559,1085.7570,-1192.4545,17.8349,269.4980,186,186,-1); // ballas10
	AddStaticVehicleEx(487,1129.1254,-1181.5354,32.1651,177.2165,186,186,-1); // ballas11

//============ LOS VAGOS ======================================================================================================================================================================================================

	AddStaticVehicleEx(567,2821.7822,-1187.6957,25.0849,269.0305,6,6,-1); // Vagos1
	AddStaticVehicleEx(522,2820.5835,-1178.6016,24.8120,184.8555,6,6,-1); // Vagos2
	AddStaticVehicleEx(522,2818.7988,-1178.5640,24.8386,183.9695,6,6,-1); // Vagos3
	AddStaticVehicleEx(480,2831.2339,-1159.1781,24.7425,184.1544,6,6,-1); // Vagos4
	AddStaticVehicleEx(411,2831.6077,-1165.6921,24.6178,183.9435,6,6,-1); // Vagos5
	AddStaticVehicleEx(559,2834.5298,-1199.9845,23.9209,9.8731,6,6,-1); // Vagos6
	AddStaticVehicleEx(560,2830.8938,-1203.2236,24.1470,5.2603,6,6,-1); // Vagos7
	AddStaticVehicleEx(424,2827.1511,-1204.3922,24.6487,7.2774,6,6,-1); // Vagos8
	AddStaticVehicleEx(451,2830.1660,-1196.8950,24.3763,6.1852,6,6,-1); // Vagos9
	AddStaticVehicleEx(482,2826.7102,-1164.3049,24.8997,181.3530,6,6,-1); // Vagos10
	AddStaticVehicleEx(487,2807.5088,-1183.4384,25.5562,268.6282,6,6,-1); // Vagos11


//============ Comando Vermelho ======================================================================================================================================================================================================

	AddStaticVehicleEx(424,2016.1832,-2053.8499,13.3269,92.5841,3,3,-1); // cv1
	AddStaticVehicleEx(522,2013.0677,-2048.3188,13.1043,90.3609,3,3,-1); // cv2
	AddStaticVehicleEx(522,2012.8486,-2046.2533,13.1100,88.8328,3,3,-1); // cv3
	AddStaticVehicleEx(482,2011.4330,-2037.4110,13.6180,179.0479,3,3,-1); // cv4
	AddStaticVehicleEx(567,2011.5370,-2028.4714,13.4159,359.1670,3,3,-1); // cv5
	AddStaticVehicleEx(451,2015.1843,-2062.6824,13.2539,87.7549,3,3,-1); // cv6
	AddStaticVehicleEx(559,1992.8518,-2041.3776,13.2026,270.9941,3,3,-1); // cv7
	AddStaticVehicleEx(411,1992.6755,-2037.0969,13.2534,270.4845,3,3,-1); // cv8
	AddStaticVehicleEx(480,1992.6888,-2032.6384,13.3203,270.3158,3,3,-1); // cv9
	AddStaticVehicleEx(487,1979.7465,-2062.2078,25.4111+1,358.9763,3,3,-1); // cv10
	AddStaticVehicleEx(560,1992.8307,-2028.1777,13.2521,270.1271,3,3,-1); // cv11

//=============== PCC ====================================================================================================================
	AddStaticVehicleEx(487,2258.7563,-1424.3679,24.2970,358.0430,65,65,-1); // pcc1
	AddStaticVehicleEx(482,2249.8787,-1423.6832,24.1215,359.2128,65,65,-1); // pcc2
	AddStaticVehicleEx(424,2241.3235,-1422.1624,23.8062,358.1451,65,65,-1); // pcc3
	AddStaticVehicleEx(567,2236.9194,-1423.4283,23.9420,0.7490,65,65,-1); // pcc4
	AddStaticVehicleEx(451,2231.1985,-1421.6602,23.7097,87.8139,65,65,-1); // pcc5
	AddStaticVehicleEx(560,2231.2891,-1444.2888,23.7546,178.7548,65,65,-1); // pcc6
	AddStaticVehicleEx(411,2235.7319,-1444.0626,23.7639,176.6531,65,65,-1); // pcc7
	AddStaticVehicleEx(480,2243.5154,-1446.0830,23.7915,90.0343,65,65,-1); // pcc8
	AddStaticVehicleEx(559,2250.3967,-1446.0417,23.6762,271.1629,65,65,-1); // pcc9
	AddStaticVehicleEx(522,2240.5588,-1460.3363,23.5850,355.8412,65,65,-1); // pcc10
	AddStaticVehicleEx(522,2238.9058,-1460.2676,23.5982,0.8002,65,65,-1); // pcc11


//========== TRIADS =============================================================================================================================
    AddStaticVehicleEx(487,-1666.00000000,1329.59997559,7.50000000,132.00000000,32,32,-1); // heli triad
	AddStaticVehicleEx(560,-1697.30004883,1329.69995117,7.09999990,225.99963379,32,32,-1); // carro triad 1
	AddStaticVehicleEx(411,-1721.19995117,1355.00000000,7.09999990,224.00000000,32,32,-1); // carro triad 2
	AddStaticVehicleEx(562,-1691.59997559,1324.19995117,7.09999990,225.99426270,32,32,-1); // carro triad 3
	AddStaticVehicleEx(411,-1715.40002441,1349.00000000,7.09999990,224.00000000,32,32,-1); // carro triad 4
	AddStaticVehicleEx(534,-1675.80004883,1332.09997559,7.09999990,223.99963379,32,32,-1); // carro triad 5
	AddStaticVehicleEx(522,-1685.50000000,1324.59997559,6.80000019,232.00000000,32,32,-1); // carro triad 6
	AddStaticVehicleEx(522,-1683.69995117,1326.40002441,6.80000019,226.00000000,32,32,-1); // carro triad 7
	AddStaticVehicleEx(522,-1705.50000000,1352.40002441,6.80000019,223.99963379,32,32,-1); // carro triad 8
	AddStaticVehicleEx(522,-1707.19995117,1350.69995117,6.80000019,223.99475098,32,32,-1); // carro triad 9
	AddStaticVehicleEx(522,-1708.90002441,1348.90002441,6.80000019,223.99475098,32,32,-1); // carro triad 10

//============== Guerrilheiros Israelitas ==========================================================================================================================

   	AddStaticVehicleEx(522,-2273.2861,2312.3357,4.3846,270.1851,147,147,-1); // GI1
	AddStaticVehicleEx(522,-2273.3621,2315.2454,4.3852,270.6380,147,147,-1); // GI2
	AddStaticVehicleEx(522,-2273.2625,2318.2949,4.3798,265.0225,147,147,-1); // GI3
	AddStaticVehicleEx(522,-2273.4854,2321.2568,4.3848,271.1382,147,147,-1); // GI4
	AddStaticVehicleEx(560,-2272.3164,2324.3250,4.5057,270.2993,147,147,-1); // GI5
	AddStaticVehicleEx(482,-2271.6487,2330.2493,4.9413,269.7563,147,147,-1); // GI6
	AddStaticVehicleEx(562,-2272.2712,2336.2600,4.4732,269.9053,147,147,-1); // GI7
	AddStaticVehicleEx(559,-2251.6628,2333.0127,4.4706,90.5532,147,147,-1); // GI8
	AddStaticVehicleEx(602,-2251.9976,2326.9648,4.6209,89.3442,147,147,-1); // GI9
	AddStaticVehicleEx(561,-2252.0344,2320.8860,4.6283,90.1796,147,147,-1); // GI10
	AddStaticVehicleEx(534,-2252.4341,2314.9629,4.5387,89.3046,147,147,-1); // GI11
	AddStaticVehicleEx(520,-2254.5215,2290.1006,5.5434,359.4037,147,147,-1); // GI12
	AddStaticVehicleEx(520,-2268.1130,2289.8008,5.5435,359.2360,147,147,-1); // GI13
	AddStaticVehicleEx(521,-2268.2227,2275.8977,4.9972,0.6866,147,147,-1); // GI14
	AddStaticVehicleEx(521,-2254.1987,2276.3196,4.9976,359.7614,147,147,-1); // GI15
	AddStaticVehicleEx(425,-2227.3757,2327.3906,8.1285,359.6765,147,147,-1); // GI16
	AddStaticVehicleEx(487,-2218.7585,2349.5259,5.1649,131.5615,147,147,-1); // GI17

//======= ENTREGA DE PRODUTOS =====================================================================================================================================================
	AddStaticVehicleEx(456,1670.7562,-1476.2228,13.5562,88.9853,5,5,-1); // truck 1    [ 390 ]
	AddStaticVehicleEx(456,1680.2968,-1476.3918,13.5573,88.9854,86,86,-1); // truck 2    [ 391 ]
	AddStaticVehicleEx(440,1697.7805,-1476.0262,13.4957,90.0862,14,14,-1); // truck 3    [ 392 ]
	AddStaticVehicleEx(440,1691.4647,-1476.0363,13.5047,90.0953,2,2,-1); // truck 4    [ 393 ]

//======= BARCOS PRAIA ==================================================================================================================================================================================================================================================================================
	AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,3,3,-1); // Barco Praia 1 [445]
	AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,4,4,-1); // Barco Praia 2 [446]
	AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,6,6,-1); // Barco Praia 3 [447]

//====== GUINCHOS MECANICO ==============================================================================================================================================================================================
    AddStaticVehicleEx(525,1438.1301,-2224.9685,13.4240,179.7757,0,1,-1); // carro mec 1
    AddStaticVehicleEx(525,1444.5961,-2225.5974,13.4227,179.5055,0,1,-1); // carro mec 2
    AddStaticVehicleEx(525,1430.2616,-2225.0168,13.4203,180.9174,0,1,-1); // carro mec 3
    AddStaticVehicleEx(525,1422.0533,-2224.9136,13.4198,178.1534,0,1,-1); // carro mec 4
    AddStaticVehicleEx(525,1421.4253,-2242.0681,13.4224,178.0322,0,1,-1); // carro mec 5

//===== ONIBUS ==============================================================================================================================================================================================
    AddStaticVehicleEx(437,1411.2141,-2332.9297,13.6802,359.6307,3,3,-1); // onibus 1
	AddStaticVehicleEx(437,1404.3752,-2332.6462,13.6802,359.0913,3,3,-1); // onibus 2
	AddStaticVehicleEx(437,1411.2321,-2362.3940,13.6802,359.1358,3,3,-1); // onibus 3
	AddStaticVehicleEx(437,1404.6716,-2362.4756,13.6796,358.9854,3,3,-1); // onibus 4
	AddStaticVehicleEx(437,1398.1703,-2362.5554,13.6826,359.1479,3,3,-1); // onibus 5
	AddStaticVehicleEx(437,1391.4984,-2362.7532,13.6826,0.1325,3,3,-1); // onibus 6
	AddStaticVehicleEx(437,1367.7448,-2365.5542,13.6782,270.0238,3,3,-1); // onibus 7

//==== CAMINHÕES ================================================================================================================================================================================================================================================================================================
	AddStaticVehicleEx(514,-77.5039,-1108.1729,1.6683,161.8915,13,13,-1); // truck
	AddStaticVehicleEx(514,-72.3507,-1109.7822,1.6670,161.7769,13,13,-1); // truck
	AddStaticVehicleEx(514,-67.0126,-1111.7156,1.6688,160.4800,13,13,-1); // truck
	AddStaticVehicleEx(435,-51.0638,-1135.2831,1.0781,68.3320,1,1,-1); // trailer
	AddStaticVehicleEx(435,-53.6230,-1139.7546,1.0781,67.5604,1,1,-1); // trailer
	AddStaticVehicleEx(435,-55.0517,-1144.3676,0.8018,68.1347,1,1,-1); // trailer

//======= KARTS EMPRESA ==========================================================================================================================================================================
   	AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,0,0,-1); // kart  [470]
	AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,0,0,-1); // kart  [471]
	AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,0,0,-1); // kart  [472]
	AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,0,0,-1); // kart  [473]
	AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,0,0,-1); // kart  [474]
	AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,0,0,-1); // kart  [475]

//====== Carros RC [parte 1] ===============================================================================================================================

	AddStaticVehicleEx(462,1752.9154,-1885.4235,13.1501,179.2499,186,186, -1); // RC1
	AddStaticVehicleEx(462,1754.3219,-1885.4146,13.1564,178.2753,186,186, -1); // RC2
	AddStaticVehicleEx(462,1755.7249,-1885.3701,13.1501,180.3649,186,186, -1); // RC3
	AddStaticVehicleEx(462,1756.9860,-1885.4275,13.1498,177.8246,186,186, -1); // RC4
	AddStaticVehicleEx(462,1758.3969,-1885.3148,13.1545,181.7095,186,186, -1); // RC5
	AddStaticVehicleEx(462,1759.7574,-1885.2955,13.1483,180.1603,186,186, -1); // RC6
	AddStaticVehicleEx(462,1761.0232,-1885.2906,13.1480,176.3682,186,186, -1); // RC7

//==============================[ Faggios hospital de LS ] =============================
	AddStaticVehicleEx(462,1998.4541,-1436.5945,13.6228,273.3743,186,186,200); // HospLS Faggio
	AddStaticVehicleEx(462,1998.4298,-1434.0845,14.1093,271.6551,6,6,200); // HospLS Faggio
	AddStaticVehicleEx(462,1998.4222,-1431.6196,14.5894,276.0698,3,3,200); // HospLS Faggio
	AddStaticVehicleEx(462,1998.4541,-1429.2903,15.0585,270.9140,7,7,200); // HospLS Faggio
	AddStaticVehicleEx(462,2011.3771,-1449.5131,13.6146,358.6065,1,1,200); // HospLS Faggio
	AddStaticVehicleEx(462,2013.5543,-1449.5129,14.0163,3.3785,3,3,200); // HospLS Faggio
	AddStaticVehicleEx(462,2015.8561,-1449.5127,14.4596,358.0677,6,6,200); // HospLS Faggio
	AddStaticVehicleEx(462,2018.1885,-1449.4865,14.9118,356.6141,186,186,200); // HospLS Faggio

//============= CARROS EXTRAS ============================================================================================================

    AddStaticVehicleEx(566,2657.2393,-1691.9628,9.0937,269.5798,13,13,-1); // carro 13
    AddStaticVehicleEx(578,2792.8848,-1673.7758,10.5196,179.8651,1,1,-1); // carro 14
	AddStaticVehicleEx(560,1400.5226,-2262.8608,13.2517,358.3562,3,3,-1); // carro aero
	AddStaticVehicleEx(475,1552.7026,-2361.6294,13.3589,358.4216,9,39,-1); // carro aero
	AddStaticVehicleEx(526,1385.0472,-2347.6960,13.3057,358.8528,5,5,-1); // carro aero
	AddStaticVehicleEx(462,1757.6940,-1905.9728,13.1597,359.4662,186,186, -1); // RC16
	AddStaticVehicleEx(418,1838.0145,-1871.1613,13.4829,359.4306,7,7,-1); // carro 2
	AddStaticVehicleEx(422,2065.6506,-1903.8691,13.5312,179.9458,8,8,-1); // carro 3
	AddStaticVehicleEx(405,1564.19995117,-1445.69995117,13.39999962,89.99993896,0,0,-1); //Sentinel
	AddStaticVehicleEx(560,1388.3287,-1454.3060,13.2515,342.0545,0,0,-1); // carro extra
	AddStaticVehicleEx(526,1425.0472,-1143.3719,23.6817,178.8585,182,182,-1); // ao lado da zip perto do banco

//======== BARCOS PRAIA ======================================================================================================
	AddStaticVehicleEx(452,166.6003,-1898.6937,-0.4749,178.4558,1,22,-1);
	AddStaticVehicleEx(452,174.8188,-1898.0938,-0.3189,172.4603,1,35,-1);
	AddStaticVehicleEx(452,185.2851,-1898.3643,-0.2911,174.2977,1,5,-1);
//=== HQ Helper ================================================================================================================================================================================================================================================================

	AddStaticVehicleEx(522,2485.39990234,-1744.69995117,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1743.19995117,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1755.50000000,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1753.69995117,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1748.30004883,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1751.90002441,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1746.50000000,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(522,2485.39990234,-1750.09997559,13.19999981,90.00000000,181,181,-1); //NRG-500
	AddStaticVehicleEx(560,2491.19995117,-1756.30004883,13.30000019,270.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(560,2491.19995117,-1751.69995117,13.30000019,270.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(560,2491.19921875,-1747.19921875,13.30000019,270.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(560,2502.80004883,-1747.00000000,13.19999981,90.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(560,2502.80004883,-1752.00000000,13.19999981,90.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(560,2502.80004883,-1756.69995117,13.19999981,90.00000000,181,181,-1); //Sultan
	AddStaticVehicleEx(522,2485.39990234,-1757.30004883,13.19999981,90.00000000,181,181,-1); //NRG-500
	
//====== Carros RC [parte 2] ====================================================

	AddStaticVehicleEx(462,1762.3193,-1885.3657,13.1546,179.0668,186,186, -1); // RC8
	AddStaticVehicleEx(462,1767.9816,-1905.8418,13.1618,359.6849,186,186, -1); // RC9
	AddStaticVehicleEx(462,1764.9999,-1905.9722,13.1569,1.3254,186,186, -1); // RC10
	AddStaticVehicleEx(462,1766.5170,-1905.9120,13.1598,1.2449,186,186, -1); // RC11
	AddStaticVehicleEx(462,1763.5210,-1905.8910,13.1522,0.0950,186,186, -1); // RC12
	AddStaticVehicleEx(462,1762.1790,-1905.9216,13.1731,359.2943,186,186, -1); // RC13
	AddStaticVehicleEx(462,1760.7721,-1905.8519,13.1649,359.1941,186,186, -1); // RC14
	AddStaticVehicleEx(462,1759.3063,-1905.9686,13.1508,359.5926,186,186, -1); // RC15

//=========== AEREOS DO LS ============================================================================================================================================
	AddStaticVehicleEx(519,2041.3267,-2647.7214,14.4689,1.9154,1,1,-1); // aviao
	AddStaticVehicleEx(519,2014.8304,-2649.1277,14.4689,3.2044,1,1,-1); // aviao2
	AddStaticVehicleEx(519,1558.2052,-2430.8350,14.4767,151.5341,1,1,-1); // aviao3
	AddStaticVehicleEx(487,2075.6763,-2462.3757,13.7354,180.0603,1,1,-1); // heli
	AddStaticVehicleEx(487,2096.0747,-2454.8586,13.7237,177.1874,1,1,-1); // heli2
	AddStaticVehicleEx(593,1725.1467,-2424.7200,14.0168,155.5299,1,1,-1); // aviao
	AddStaticVehicleEx(593,1718.8738,-2646.1694,14.0035,0.2520,1,1,-1); // aviao
	AddStaticVehicleEx(592,1816.9586,-2416.8665,14.7502,183.5626,1,1,-1); // aviaoooooow

//======================[ new - CARROS POLÍCIA RODOVIÁRIA ] ==============================================================

	AddStaticVehicleEx(437,645.6361,-612.7105,16.4475,0.3076,0,6,-1); // Policia Rodoviária 1
	AddStaticVehicleEx(596,639.8463,-609.5717,16.2233,0.0868,0,6,-1); // Policia Rodoviária 2
	AddStaticVehicleEx(596,635.5755,-609.4813,16.2240,0.9597,0,6,-1); // Policia Rodoviária 3
	AddStaticVehicleEx(596,631.2111,-609.5035,16.2240,359.9801,0,6,-1); // Policia Rodoviária 4
	AddStaticVehicleEx(599,626.8886,-609.4042,16.8883,358.6597,0,6,-1); // Policia Rodoviária 5
	AddStaticVehicleEx(599,622.4388,-609.3965,17.3712,357.8020,0,6,-1);// Policia Rodoviária 6
	AddStaticVehicleEx(427,619.1886,-601.6791,17.3679,269.5083,0,6,-1); // Policia Rodoviária 7
	AddStaticVehicleEx(427,619.1559,-597.1899,17.3699,269.2015,0,6,-1); // Policia Rodoviária 8
	AddStaticVehicleEx(523,623.5961,-585.0902,16.6107,181.6507,0,6,-1); // Policia Rodoviária 9
	AddStaticVehicleEx(523,625.3988,-584.9437,16.4092,178.3478,0,6,-1); // Policia Rodoviária 10
	AddStaticVehicleEx(523,627.2673,-584.8857,16.1836,181.5176,0,6,-1); // Policia Rodoviária 11
	AddStaticVehicleEx(415,615.5931,-584.6423,16.9990,270.4473,0,6,-1); // Policia Rodoviária 12
	AddStaticVehicleEx(522,617.9281,-591.5347,16.7986,358.1109,6,0,-1); // Policia Rodoviária 13
	AddStaticVehicleEx(522,616.1029,-591.5640,16.7980,0.9259,6,0,-1); // Policia Rodoviária 14
	AddStaticVehicleEx(522,614.3087,-591.6962,16.7802,0.3071,6,0,-1); // Policia Rodoviária 15
	AddStaticVehicleEx(522,612.5806,-591.5600,16.7847,358.0121,6,0,-1); // Policia Rodoviária 16
	AddStaticVehicleEx(522,611.0068,-591.5247,16.7893,357.4015,6,0,-1); // Policia Rodoviária 17
	AddStaticVehicleEx(522,609.1996,-591.5750,16.7898,356.7868,6,0,-1); // Policia Rodoviária 18
	AddStaticVehicleEx(525,629.4944,-555.2971,16.2534,268.7678,0,6,-1);// Policia Rodoviária 19
	AddStaticVehicleEx(525,629.4283,-549.1209,16.2816,269.6236,0,6,-1); // Policia Rodoviária 20
	AddStaticVehicleEx(497,612.7413,-607.9334,22.9048,268.3603,0,6,-1); // Heli Policia Rodoviária 21
	AddStaticVehicleEx(497,612.3206,-598.9410,22.9036,271.4482,6,0,-1); // Heli Policia Rodoviária 22
	
//=========================================================================================================================
	print("todos os carros posicionados");
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		AddStaticVehicleEx(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2],-1);
		VTrancado[h+totalveiculosh] = 1;
		gCarLock[h+totalveiculosh] = 1;
		//LockCar(h+totalveiculosh);
		SetVehicleToRespawn(h+totalveiculosh);
	}
    for(new i = 1; i < sizeof(CarInfo); i++)
	{
		CarInfo[i][ownedvehicle] = AddStaticVehicleEx(CarInfo[i][cModel],CarInfo[i][cLocationx],CarInfo[i][cLocationy],CarInfo[i][cLocationz],CarInfo[i][cAngle],CarInfo[i][cColorOne],CarInfo[i][cColorTwo],-1);
	}

	for(new t=0; t<MAX_VEHICLES; t++)
	{
	    new lu, alar, por, cap, porma, ob;
 		SetVehicleParamsEx(t, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
		SaveLastPosition(t);
	}

  	Reloginho1 = TextDrawCreate(553.00000,401.00000, "-");
	TextDrawFont(Reloginho1, 2);
	TextDrawColor(Reloginho1, 0xE5E5E5FF);
	TextDrawLetterSize(Reloginho1, 0.200000, 0.790000);
 	TextDrawSetOutline(Reloginho1, 1);
  	TextDrawSetProportional(Reloginho1, 1);
  	TextDrawAlignment(Reloginho1, 2);
  	TextDrawBackgroundColor(Reloginho1, 0x00000055);
  	TextDrawSetShadow(Reloginho1, 1);

	Reloginho2 = TextDrawCreate(477.000000,377.000000, "-");
	//TextDrawBackgroundColor(Reloginho2, -65281);
	TextDrawBackgroundColor(Reloginho2, COLOR_LIGHTRED);
	TextDrawFont(Reloginho2, 1);
	TextDrawLetterSize(Reloginho2, 11.300043, 0.510000);
	TextDrawColor(Reloginho2, VERDE2);
	TextDrawSetOutline(Reloginho2, 0);
	TextDrawSetProportional(Reloginho2, 1);
	TextDrawSetShadow(Reloginho2, 1);

	Reloginho3 = TextDrawCreate(477.000000,409.000000, "-");
	TextDrawBackgroundColor(Reloginho3, COLOR_LIGHTRED);
	TextDrawFont(Reloginho3, 1);
	TextDrawLetterSize(Reloginho3, 11.300043, 0.510000);
	TextDrawColor(Reloginho3, VERDE2);
	TextDrawSetOutline(Reloginho3, 0);
	TextDrawSetProportional(Reloginho3, 1);
	TextDrawSetShadow(Reloginho3, 1);

	forum = TextDrawCreate(510.000000,382.000000, "~r~~h~Play~g~~h~~h~Happy");
	TextDrawBackgroundColor(forum, 0x00000060);
	TextDrawFont(forum,1);
	TextDrawLetterSize(forum,0.500000, 1.700000);
	TextDrawColor(forum, -1);
	TextDrawSetOutline(forum,1);
	TextDrawSetProportional(forum,1);

	forum2 = TextDrawCreate(493.000000,415.000000, "www.s-bph.forumeiros.com");
	TextDrawBackgroundColor(forum2, 0x000030);
	TextDrawFont(forum2, 1);
	TextDrawLetterSize(forum2, 0.290000, 0.700000);
	TextDrawColor(forum2, VERDE2);
	TextDrawSetOutline(forum2, 1);
	TextDrawSetProportional(forum2, 1);
	TextDrawSetShadow(forum2, 1);

	entrada = TextDrawCreate(87.000000,300.000000," ~y~BRASIL ~w~~h~PLAY ~b~~h~Happy: ~p~versao: ~r~~h~1.0~r~a");
    TextDrawAlignment(entrada,0);
    TextDrawBackgroundColor(entrada,0x000000ff);
    TextDrawFont(entrada,3);
    //TextDrawLetterSize(entrada,1.000000,6.099996);// original
    TextDrawLetterSize(entrada,0.800000,3.099996);
    TextDrawColor(entrada,0xffffffff);
    TextDrawSetOutline(entrada,1);
    TextDrawSetProportional(entrada,1);
    TextDrawSetShadow(entrada,1);

	entrada2 = TextDrawCreate(1.000000,1.000000,"-");
    TextDrawAlignment(entrada2,0);
    TextDrawBackgroundColor(entrada2,0x000000ff);
    TextDrawFont(entrada2,3);
    TextDrawLetterSize(entrada2,1.000000,1.099996);
    TextDrawColor(entrada2,0xffffffff);
    TextDrawSetOutline(entrada2,1);
    TextDrawSetProportional(entrada2,1);
    TextDrawSetShadow(entrada2,1);
    
 	Hidealto = TextDrawCreate(1.000000,-45.000000,"__");
	Hidebaixo = TextDrawCreate(-2.000000,351.000000,"__");
	TextDrawUseBox(Hidealto,1);
	TextDrawBoxColor(Hidealto,58);
	TextDrawTextSize(Hidealto,655.000000,80.000000);
	TextDrawUseBox(Hidebaixo,1);
	TextDrawBoxColor(Hidebaixo,58);
	TextDrawTextSize(Hidebaixo,840.000000,240.000000);
	TextDrawAlignment(Hidealto,0);
	TextDrawAlignment(Hidebaixo,0);
	TextDrawBackgroundColor(Hidealto,0x000000ff);
	TextDrawBackgroundColor(Hidebaixo,0x000000ff);
	/*TextDrawFont(Hidealto,3);
	TextDrawLetterSize(Hidealto,1.000000,14.000000);
	TextDrawFont(Hidebaixo,3);
	TextDrawLetterSize(Hidebaixo,1.000000,24.000000);*/
	TextDrawFont(Hidealto,3);
	TextDrawLetterSize(Hidealto,1.000000,19.000000);
	TextDrawFont(Hidebaixo,3);
	TextDrawLetterSize(Hidebaixo,1.000000,30.000000);
	TextDrawColor(Hidealto,0xffffffff);
	TextDrawColor(Hidebaixo,0xffffffff);
	TextDrawSetOutline(Hidealto,1);
	TextDrawSetOutline(Hidebaixo,1);
	TextDrawSetProportional(Hidealto,1);
	TextDrawSetProportional(Hidebaixo,1);
	TextDrawSetShadow(Hidealto,1);
	TextDrawSetShadow(Hidebaixo,1);


//============ regras: ceditos GM BVO ===========
	Rules1 = TextDrawCreate(319.000000, 59.000000, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Rules1, 2);
	TextDrawBackgroundColor(Rules1, 255);
	TextDrawFont(Rules1, 1);
	TextDrawLetterSize(Rules1, 0.990000, 1.400000);
	TextDrawColor(Rules1, -1);
	TextDrawSetOutline(Rules1, 0);
	TextDrawSetProportional(Rules1, 1);
	TextDrawSetShadow(Rules1, 1);
	TextDrawUseBox(Rules1, 1);
	TextDrawBoxColor(Rules1, 50);
	TextDrawTextSize(Rules1, 9.000000, -452.000000);

	Rules2 = TextDrawCreate(319.000000, 60.000000, "~y~Brasil ~w~Play~y~Happy");
	TextDrawAlignment(Rules2, 2);
	TextDrawBackgroundColor(Rules2, 255);
	TextDrawFont(Rules2, 0);
	TextDrawLetterSize(Rules2, 0.649999, 2.000000);
	TextDrawColor(Rules2, -1);
	TextDrawSetOutline(Rules2, 1);
	TextDrawSetProportional(Rules2, 1);

	Rules3 = TextDrawCreate(315.000000, 82.000000, "~g~Bem Vindo ao Servidor !");
	TextDrawAlignment(Rules3, 2);
	TextDrawBackgroundColor(Rules3, 255);
	TextDrawFont(Rules3, 2);
	TextDrawLetterSize(Rules3, 0.559999, 1.800000);
	TextDrawColor(Rules3, -1);
	TextDrawSetOutline(Rules3, 1);
	TextDrawSetProportional(Rules3, 1);

	Rules4 = TextDrawCreate(322.000000, 104.000000, "~y~E um prazer telo no server");
	TextDrawAlignment(Rules4, 2);
	TextDrawBackgroundColor(Rules4, 255);
	TextDrawFont(Rules4, 3);
	TextDrawLetterSize(Rules4, 0.589999, 2.100000);
	TextDrawColor(Rules4, -1);
	TextDrawSetOutline(Rules4, 1);
	TextDrawSetProportional(Rules4, 1);

	Rules5 = TextDrawCreate(100.000000, 178.000000, "~y~1) ~w~Seja Sempre RPG! ~n~~n~~n~~n~~y~3) ~w~Nao cometa DM ~n~~n~~n~~n~~y~5) ~w~Nunca cometa flood!");
	TextDrawBackgroundColor(Rules5, 255);
	TextDrawFont(Rules5, 1);
	TextDrawLetterSize(Rules5, 0.400000, 1.500000);
	TextDrawColor(Rules5, -1);
	TextDrawSetOutline(Rules5, 1);
	TextDrawSetProportional(Rules5, 1);

	Rules6 = TextDrawCreate(116.000000, 197.000000, "~w~Para ser RPG, basta imitar a vida real ~n~Nosso servidor tem varias coisas para se divertir~n~ mais RPG e nossa Base.");
	TextDrawBackgroundColor(Rules6, -65281);
	TextDrawFont(Rules6, 1);
	TextDrawLetterSize(Rules6, 0.220000, 0.899999);
	TextDrawColor(Rules6, -1);
	TextDrawSetOutline(Rules6, 0);
	TextDrawSetProportional(Rules6, 1);
	TextDrawSetShadow(Rules6, 0);

	Rules7 = TextDrawCreate(137.000000, 141.000000, "Leia as Regras:");
	TextDrawBackgroundColor(Rules7, 255);
	TextDrawFont(Rules7, 1);
	TextDrawLetterSize(Rules7, 0.500000, 1.400000);
	TextDrawColor(Rules7, -1778384641);
	TextDrawSetOutline(Rules7, 1);
	TextDrawSetProportional(Rules7, 1);

	Rules8 = TextDrawCreate(116.000000, 251.000000, "DM e matar sem motivo,isso e proibido, ~n~nunca cometa DM~n~ Ou podera ser severamente Punido.");
	TextDrawBackgroundColor(Rules8, -65281);
	TextDrawFont(Rules8, 1);
	TextDrawLetterSize(Rules8, 0.220000, 0.899999);
	TextDrawColor(Rules8, -1);
	TextDrawSetOutline(Rules8, 0);
	TextDrawSetProportional(Rules8, 1);
	TextDrawSetShadow(Rules8, 0);

	Rules9 = TextDrawCreate(116.000000, 305.000000, "Flood e Repetir a mesma coisa varias veses! ~n~ Alem de incomodar outros jogadores ~n~ Voce pode ser punido!");
	TextDrawBackgroundColor(Rules9, -65281);
	TextDrawFont(Rules9, 1);
	TextDrawLetterSize(Rules9, 0.220000, 0.899999);
	TextDrawColor(Rules9, -1);
	TextDrawSetOutline(Rules9, 0);
	TextDrawSetProportional(Rules9, 1);
	TextDrawSetShadow(Rules9, 0);

	Rules10 = TextDrawCreate(534.000000, 178.000000, "~y~2) ~w~Acompanhe as novidades~w~~n~~n~~n~~n~~y~4) ~w~Quer ser Admin?~n~~n~~n~~n~~y~ ~y~Duvidas?");
	TextDrawAlignment(Rules10, 3);
	TextDrawBackgroundColor(Rules10, 255);
	TextDrawFont(Rules10, 1);
	TextDrawLetterSize(Rules10, 0.400000, 1.500000);
	TextDrawColor(Rules10, -1);
	TextDrawSetOutline(Rules10, 1);
	TextDrawSetProportional(Rules10, 1);

	Rules11 = TextDrawCreate(511.000000, 253.000000, "~w~Tem apenas uma Frase ~n~~y~Admin nao se pede se Conquista!~n~~w~Siga as normas talvez consiga");
	TextDrawAlignment(Rules11, 3);
	TextDrawBackgroundColor(Rules11, -65281);
	TextDrawFont(Rules11, 1);
	TextDrawLetterSize(Rules11, 0.220000, 0.899999);
	TextDrawColor(Rules11, -1);
	TextDrawSetOutline(Rules11, 0);
	TextDrawSetProportional(Rules11, 1);
	TextDrawSetShadow(Rules11, 0);

	Rules12 = TextDrawCreate(511.000000, 195.000000, "Sempre se atualize com o forum!~n~Coloque nos favoritos~n~~w~www.~y~brasilPlayHappy~w~.forumeiros.com");
	TextDrawAlignment(Rules12, 3);
	TextDrawBackgroundColor(Rules12, -65281);
	TextDrawFont(Rules12, 1);
	TextDrawLetterSize(Rules12, 0.220000, 0.899999);
	TextDrawColor(Rules12, -1);
	TextDrawSetOutline(Rules12, 0);
	TextDrawSetProportional(Rules12, 1);
	TextDrawSetShadow(Rules12, 0);

	Rules13 = TextDrawCreate(511.000000, 307.000000, "~n~USE /duvida ou /relatorio!~n~Os Administradores online~w~Estao aqui para lhe ajudar! ");
	TextDrawAlignment(Rules13, 3);
	TextDrawBackgroundColor(Rules13, -65281);
	TextDrawFont(Rules13, 1);
	TextDrawLetterSize(Rules13, 0.220000, 0.899999);
	TextDrawColor(Rules13, -1);
	TextDrawSetOutline(Rules13, 0);
	TextDrawSetProportional(Rules13, 1);
	TextDrawSetShadow(Rules13, 0);

	Rules14 = TextDrawCreate(171.000000, 373.000000, "USE: /creditos para ver os creditos! ~b~");
	TextDrawBackgroundColor(Rules14, 255);
	TextDrawFont(Rules14, 1);
	TextDrawLetterSize(Rules14, 0.500000, 1.000000);
	TextDrawColor(Rules14, -1);
	TextDrawSetOutline(Rules14, 1);
	TextDrawSetProportional(Rules14, 1);

 	xiterD = TextDrawCreate(570.00000,127.20000, "~r~~h~xiter detectado");
	TextDrawFont(xiterD, 2);
	TextDrawColor(xiterD, -1);
	TextDrawLetterSize(xiterD, 0.200000, 0.900000);
	TextDrawSetOutline(xiterD, 1);
	TextDrawSetProportional(xiterD, 1);
	TextDrawAlignment(xiterD, 2);
	TextDrawBackgroundColor(xiterD, 0x00000035);
	TextDrawSetShadow(xiterD, 1);
	for(new p = 0; p < CAR_AMOUNT; p++)
	{
	    if(IsAPRCar(p))
	    {
	        AddVehicleComponent(p,1087);
			AddVehicleComponent(p,1073);
		}
	}

	for(new i=0; i<MAX_PLAYERS; i++)
	{
	  	textlife[i] = TextDrawCreate(575.00000,66.20000, "100.0");
		TextDrawFont(textlife[i], 2);
		TextDrawColor(textlife[i], -1);
		TextDrawLetterSize(textlife[i], 0.220000, 0.880000);
	 	TextDrawSetOutline(textlife[i], 1);
	  	TextDrawSetProportional(textlife[i], 1);
	  	TextDrawAlignment(textlife[i], 2);
	  	TextDrawBackgroundColor(textlife[i], 0x00000065);
	  	TextDrawSetShadow(textlife[i], 1);

   	  	textcolete[i] = TextDrawCreate(575.00000,45.00000, "100.0");
		TextDrawFont(textcolete[i], 2);
		TextDrawColor(textcolete[i], -1);
		TextDrawLetterSize(textcolete[i], 0.220000, 0.880000);
	 	TextDrawSetOutline(textcolete[i], 1);
	  	TextDrawSetProportional(textcolete[i], 1);
	  	TextDrawAlignment(textcolete[i], 2);
	  	TextDrawBackgroundColor(textcolete[i], 0x00000065);
	  	TextDrawSetShadow(textcolete[i], 1);
	
 		Speed[i] = TextDrawCreate(43.000000, 295.000000,"_");
		TextDrawTextSize(Speed[i],633.000000, -19.000000);
		TextDrawAlignment(Speed[i],5);
		TextDrawBackgroundColor(Speed[i],0x00000050);
		TextDrawFont(Speed[i],1);
		TextDrawLetterSize(Speed[i],0.290000, 0.800000);
		TextDrawColor(Speed[i],0xFFFFFFFF);
		TextDrawSetOutline(Speed[i],1);
		TextDrawSetProportional(Speed[i],1);
		TextDrawSetShadow(Speed[i],0);
		
  		nomeveiculo[i] = TextDrawCreate(42.000000, 282.000000,"_");
		TextDrawTextSize(nomeveiculo[i],633.000000, -19.000000);
		TextDrawAlignment(nomeveiculo[i],5);
		TextDrawBackgroundColor(nomeveiculo[i],0x00000050);
		TextDrawFont(nomeveiculo[i],1);
		TextDrawLetterSize(nomeveiculo[i],0.590000, 1.500000);
		TextDrawColor(nomeveiculo[i],VERDE2);
		TextDrawSetOutline(nomeveiculo[i],1);
		TextDrawSetProportional(nomeveiculo[i],1);
		TextDrawSetShadow(nomeveiculo[i],0);
		
        TextRec[i] = TextDrawCreate(460.000000, 345.000000,"     REC.");
		TextDrawTextSize(TextRec[i],633.000000, -19.000000);
		TextDrawAlignment(TextRec[i],5);
		TextDrawBackgroundColor(TextRec[i],0x000000FF);
		TextDrawFont(TextRec[i],1);
		TextDrawLetterSize(TextRec[i],1.090000, 1.650000);
		TextDrawColor(TextRec[i],TEAM_GROVE_COLOR);
		TextDrawSetOutline(TextRec[i],1);
		TextDrawSetProportional(TextRec[i],1);
		TextDrawSetShadow(TextRec[i],1);
		
		Hidealto2[i] = TextDrawCreate(1.000000,-45.000000,"__");
		Hidebaixo2[i] = TextDrawCreate(-2.000000,371.000000,"__");
		TextDrawUseBox(Hidealto2[i],1);
		TextDrawBoxColor(Hidealto2[i],0x000000ff);
		TextDrawTextSize(Hidealto2[i],655.000000,80.000000);
		TextDrawUseBox(Hidebaixo2[i],1);
		TextDrawBoxColor(Hidebaixo2[i],0x000000ff);
		TextDrawTextSize(Hidebaixo2[i],840.000000,240.000000);
		TextDrawAlignment(Hidealto2[i],0);
		TextDrawAlignment(Hidebaixo2[i],0);
		TextDrawBackgroundColor(Hidealto2[i],0x000000ff);
		TextDrawBackgroundColor(Hidebaixo2[i],0x000000ff);
		TextDrawFont(Hidealto2[i],3);
		TextDrawLetterSize(Hidealto2[i],1.000000,14.000000);
		TextDrawFont(Hidebaixo2[i],3);
		TextDrawLetterSize(Hidebaixo2[i],1.000000,24.000000);
		TextDrawColor(Hidealto2[i],0xffffffff);
		TextDrawColor(Hidebaixo2[i],0xffffffff);
		TextDrawSetOutline(Hidealto2[i],1);
		TextDrawSetOutline(Hidebaixo2[i],1);
		TextDrawSetProportional(Hidealto2[i],1);
		TextDrawSetProportional(Hidebaixo2[i],1);
		TextDrawSetShadow(Hidealto2[i],1);
		TextDrawSetShadow(Hidebaixo2[i],1);
		
		gpss[i] = TextDrawCreate(480.000000,173.000000," ");
		TextDrawAlignment(gpss[i],0);
		TextDrawBackgroundColor(gpss[i],0x000000ff);
		TextDrawFont(gpss[i],1);
		TextDrawLetterSize(gpss[i],0.299999,1.000000);
		TextDrawColor(gpss[i],0xffffffff);
		TextDrawSetOutline(gpss[i],1);
		TextDrawSetProportional(gpss[i],1);
		TextDrawSetShadow(gpss[i],1);
		
		MostrarVida[i] = TextDrawCreate(370.000000,396.000000," ");
		TextDrawTextSize(MostrarVida[i],645.000000,1.000000);
		TextDrawAlignment(MostrarVida[i],0);
		TextDrawFont(MostrarVida[i],3);
		TextDrawLetterSize(MostrarVida[i],0.490000,1.130000);
		TextDrawColor(MostrarVida[i],0xffffffff);
		TextDrawSetOutline(MostrarVida[i],1);
		TextDrawSetProportional(MostrarVida[i],1);
		TextDrawSetShadow(MostrarVida[i],1);

//[][][][][][][][][][][][][][][][][][][][][][][][texts][][][][][][][][][][][][][][][][][][][][][][][][][][][

		TextKick[i] = TextDrawCreate(300.000000, 135.000000, "~d~~b~KICKADO~d~");
		TextDrawAlignment(TextKick[i], 2);
		TextDrawBackgroundColor(TextKick[i], 255);
		TextDrawFont(TextKick[i], 1);
		TextDrawLetterSize(TextKick[i], 0.999999, 2.990000);
		TextDrawColor(TextKick[i], -1);
		TextDrawSetOutline(TextKick[i], 1);
		TextDrawSetProportional(TextKick[i], 1);

		TextBan[i] = TextDrawCreate(300.000000, 135.000000, "~d~~b~BANIDO~d~");
		TextDrawAlignment(TextBan[i], 2);
		TextDrawBackgroundColor(TextBan[i], 255);
		TextDrawFont(TextBan[i], 1);
		TextDrawLetterSize(TextBan[i], 0.999999, 2.990000);
		TextDrawColor(TextBan[i], -1);
		TextDrawSetOutline(TextBan[i], 1);
		TextDrawSetProportional(TextBan[i], 1);
	}
   	for(new u=0;u<MAX_VEHICLES;u++)
	{
    	VeiculoValido[u] = 0;
   	}
   	for(new th=0;th<MAX_VEHICLES;th++)
	{
    	SetVehicleNumberPlate(th, "Play Happy");
   	}
   	for(new carro = 1; carro < MAX_VEHICLES; carro++)
	{
	    if(GetVehicleModel(carro) == 560)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
 		if(GetVehicleModel(carro) == 458)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
  		if(GetVehicleModel(carro) == 490)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.3, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
   		if(GetVehicleModel(carro) == 599)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
    	if(GetVehicleModel(carro) == 596 || GetVehicleModel(carro) == 597 || GetVehicleModel(carro) == 420)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.1, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
     	if(GetVehicleModel(carro) == 411)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.1, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
      	if(GetVehicleModel(carro) == 559)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 442)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.2, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 480)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 567)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.1, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 462)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 522 || GetVehicleModel(carro) == 521)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0+0.1, 0.0+1.0, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 463)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.3, 0.0+0.8, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 470)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.6, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 500)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.3, 0.0+0.6, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 431)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.1, 0.0+4.3, 0.0+1.2, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 523 || GetVehicleModel(carro) == 468)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 562)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.2, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 579)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.4, 0.0+0.8, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 418)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.3, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
       	if(GetVehicleModel(carro) == 586)
	    {
			ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
			SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
			AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.2, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
   	}
	return true;
}

public SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	Fixhour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		PayDay();
		SetHora();
	}
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public Production()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerDrunk[i] > 0)
			{
				PlayerDrunk[i] = 0;
				PlayerDrunkTime[i] = 0;
				SetPlayerDrunkLevel (i, 0);
				GameTextForPlayer(i, "~w~O efeito da bebida~n~~b~acabou", 3500, 1);
			}
 		    if(PlayerInfo[i][pPayDay] < 6)
		 	{
		 		PlayerInfo[i][pPayDay] += 1;
		 	} //+ 5 min to PayDay anti-abuse
		}
	}
}

public PayDay()
{
	new Conta,interest;
	new rent = 0;
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
		    	if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COR_TRIADS, "Você devia ter debitado suas dívidas, lhe enviaram um pedido de prisão.");
				    GameTextForPlayer(i, "~r~apreendido !", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		XXAirBreak[i] += 3;SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsBPH(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(string, sizeof(string), "Você foi preso por %d segundos.   Fiança: Desativada", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				}
				if(Multa[i] > 1)
				{
				    SendClientMessage(i, COR_TRIADS, "Você devia ter debitado suas dívidas, lhe enviaram um pedido de prisão.");
				    GameTextForPlayer(i, "~r~apreendido !", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		XXAirBreak[i] += 3;SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsBPH(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(string, sizeof(string), "Você foi preso por %d segundos.   Fiança: Desativada", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				}
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Você não pagou a sua dívida e foi preso.");
				    GameTextForPlayer(i, "~r~Preso!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		XXAirBreak[i] += 3;SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsBPH(i);
                    WantedPoints[i] = 0;
      				SetPlayerWantedLevel(i, 0);
					PlayerInfo[i][pJailTime] = 600;
					format(string, sizeof(string), "Você foi preso por %d segundos.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				Conta = PlayerInfo[i][pConta];
				new key = PlayerInfo[i][pPHousekey];
				if(key != 500)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoneyEx(i))
					{
						PlayerInfo[i][pPHousekey] = 500;
						SendClientMessage(i, COLOR_WHITE, "Você foi expulso(a).");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
			    if(PlayerInfo[i][pVIP] == 1)
				{
					tmpintrate = 3;
				}
			    else if(PlayerInfo[i][pVIP] == 2)
				{
					tmpintrate = 4;
				}
				else
				{
					tmpintrate = 1;
				}
				if(PlayerInfo[i][pPayDay] >= 3)
				{
				    Tax += TaxValue;//Shorld work for every player online
				    PlayerInfo[i][pConta] -= TaxValue;
					new checks = PlayerInfo[i][pSalario];
				    new ebill = (PlayerInfo[i][pConta]/30000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    GivePlayerMoneyEx(i, checks);
				    if(PlayerInfo[i][pConta] > 0)
				    {
				    	PlayerInfo[i][pConta] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					if(CHitman == CTriad && Avisouc == 0)
					{

					Avisouc = 1;
					}
					if(CHitman > CTriad && Avisouc == 0)
					{

					CHitman = 0;
					CTriad = 0;
					Avisouc = 1;
					GanhouArmamento = 8;
					}
					if(CTriad > CHitman && Avisouc == 0)
					{

					CHitman = 0;
					CTriad = 0;
					Avisouc = 1;
					GanhouArmamento = 26;
                    }
					interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					//PlayerPlayMusic(i);
					PlayerPlaySound(i, 1185, 0.0, 0.0, 0.0);
					PlayerInfo[i][pConta] = Conta+interest;
					SendClientMessage(i, COLOR_WHITE, "|___  Seu Pagamento  ___|");
					format(string, sizeof(string), "  Salario: R$%d   Despesas: -R$%d", checks, TaxValue);
					SendClientMessage(i, COLOR_GRAD1, string);
					format(string, sizeof(string), "  Medico: R$300   Imposto: -R$%d", Tax);
                    SendClientMessage(i, COLOR_GRAD1, string);
					if(PlayerInfo[i][pPHousekey] != 500 || PlayerInfo[i][pPbiskey] != 255)
					{
					    format(string, sizeof(string), "  Energia: -R$%d", ebill);
						SendClientMessage(i, COLOR_GRAD1, string);
					}
					format(string, sizeof(string), "  Conta Bancaria: R$%d", Conta);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  Juros: 0.%d  por cento",tmpintrate);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  Valor ganho com Juros R$%d", interest);
					SendClientMessage(i, COLOR_GRAD2, string);
					SendClientMessage(i, COLOR_WHITE, "|_________________________________|");
					format(string, sizeof(string), "  Novo Saldo Bancario: R$%d", PlayerInfo[i][pConta]);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  Aluguel: -R$%d", rent);
					SendClientMessage(i, COLOR_GRAD2, string);
                    SalarioPlayer(i);
					Checkprop();
					SaveBoxer();
					SaveCars();
					SetTimerEx("PararMusica", 7900, 0, "i", i);
                    format(string, sizeof(string), "~r~PayDay~n~~w~Salario");
					GameTextForPlayer(i, string, 5000, 1);
					GivePlayerMoney(i,- 100);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pSalario] = 0;
					PlayerInfo[i][pConnectTime] += 1;
                    PlayerInfo[i][pCaixinha] = 0;
					pban[i] = 0;
					if(PlayerInfo[i][pEmprego] > 0)
	    			{
	    	    		if(PlayerInfo[i][pContractTime] < 25)
	    	    		{
							PlayerInfo[i][pContractTime] ++;
						}
	    			}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* Você não jogou tempo suficiente para receber salário!.");
				}
			}
		}
		new lolbagui;
		lolbagui = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		if(lolbagui >= nxtlevel*levelexp)
		{
		    GameTextForPlayer(i, "~w~~h~Respeito Adquirido~n~~g~Digite /comprarnivel", 5000, 1);
		}
	}
}
forward PayDayManual(playerid);
public PayDayManual(playerid)
{
	new Conta,interest;
	new rent = 0;
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				Conta = PlayerInfo[i][pConta];
				new tmpintrate;
			    if(PlayerInfo[i][pVIP] == 1)
				{
					tmpintrate = 3;
				}
			    else if(PlayerInfo[i][pVIP] == 2)
				{
					tmpintrate = 4;
				}
				else
				{
					tmpintrate = 1;
				}
			  	Tax += TaxValue;//Shorld work for every player online
			    PlayerInfo[i][pConta] -= TaxValue;
				new checks = PlayerInfo[i][pSalario];
			    new ebill = (PlayerInfo[i][pConta]/30000)*(PlayerInfo[i][pLevel]);
			    ConsumingMoney[i] = 1;
			    GivePlayerMoneyEx(i, checks);
			    if(PlayerInfo[i][pConta] > 0)
			   	{
			    	PlayerInfo[i][pConta] -= ebill;
			    	SBizzInfo[4][sbTill] += ebill;
				}
				else
				{
				    ebill = 0;
				}
				interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
				PlayerInfo[i][pExp]++;
				//PlayerPlayMusic(i);
				PlayerPlaySound(i, 1185, 0.0, 0.0, 0.0);
				PlayerInfo[i][pConta] = Conta+interest;
				SendClientMessage(i, COLOR_WHITE, "|___  Seu Pagamento  ___|");
				format(string, sizeof(string), "  Salario: R$%d   Despesas: -R$%d", checks, TaxValue);
				SendClientMessage(i, COLOR_GRAD1, string);
				format(string, sizeof(string), "  Medico: R$300   Imposto: -R$%d", Tax);
                SendClientMessage(i, COLOR_GRAD1, string);
				if(PlayerInfo[i][pPHousekey] != 500 || PlayerInfo[i][pPbiskey] != 255)
				{
				    format(string, sizeof(string), "  Energia: -R$%d", ebill);
					SendClientMessage(i, COLOR_GRAD1, string);
				}
				format(string, sizeof(string), "  Conta Bancaria: R$%d", Conta);
				SendClientMessage(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  Juros: 0.%d  por cento",tmpintrate);
				SendClientMessage(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  Valor ganho com Juros R$%d", interest);
				SendClientMessage(i, COLOR_GRAD2, string);
				SendClientMessage(i, COLOR_WHITE, "|_________________________________|");
				format(string, sizeof(string), "  Novo Saldo Bancario: R$%d", PlayerInfo[i][pConta]);
				SendClientMessage(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  Aluguel: -R$%d", rent);
				SendClientMessage(i, COLOR_GRAD2, string);
                SalarioPlayer(i);
				SaveCars();
				SetTimerEx("PararMusica", 7900, 0, "i", i);
                format(string, sizeof(string), "~r~PayDay~n~~w~Salario");
				GameTextForPlayer(i, string, 5000, 1);
				GivePlayerMoney(i,- 100);
				rent = 0;
				PlayerInfo[i][pPayDay] = 0;
				PlayerInfo[i][pSalario] = 0;
				PlayerInfo[i][pConnectTime] += 1;
                PlayerInfo[i][pCaixinha] = 0;
				pban[i] = 0;
				if(PlayerInfo[i][pEmprego] > 0)
	    		{
	    	   		if(PlayerInfo[i][pContractTime] < 25)
	    	   		{
						PlayerInfo[i][pContractTime] ++;
					}
	    		}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* Você não jogou tempo suficiente para receber salário!.");
				}
			}
		}
		new lolbagui;
		lolbagui = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		if(lolbagui >= nxtlevel*levelexp)
		{
		    GameTextForPlayer(i, "~w~~h~Respeito Adquirido~n~~g~Digite /comprarnivel", 5000, 1);
		}
	}
  	format(string, sizeof(string), "Salario manual dado com sucesso por: %s.", PlayerName(playerid));
	SendClientMessageToAll(COLOR_PURPLE, string);
	PayLog(string);
	return true;
}


forward PararMusica(playerid);
public PararMusica(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerPlaySound(playerid, 1186, 0.0, 0.0, 0.0);
	}
	return true;
}

stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock GetPlayerNameEx(playerid)
{
    new string[24];
    GetPlayerName(playerid,string,24);
    new str[24];
    strmid(str,string,0,strlen(string),24);
    for(new i = 0; i < MAX_PLAYER_NAME; ++i)
    {
        if (str[i] == '_') str[i] = ' ';
    }
    return str;
}

stock strtokEx(const string[], &index)
{
	new length = strlen(string);
 	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[64];
	while ((index < length) && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
	    if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return true;
}
public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new string3[32];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "Contas/%s.ini", playername3);
		new File: hFile = fopen(string3, io_write);
		if (hFile)
		{
		  	strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		    new var[32];
			format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
			PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
			format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
			format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
			format(var, 32, "HelperLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
			format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
			format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
			format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
			format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
			format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
			format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
			format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
			format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
			format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
			format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
			format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
			format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
			format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
			format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
			format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
			format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
			format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
			format(var, 32, "HeadValueT=%d\n",PlayerInfo[playerid][pHeadValueT]);fwrite(hFile, var);
			format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
			format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
			format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
			format(var, 32, "Capacete=%d\n",PlayerInfo[playerid][pCapacete]);fwrite(hFile, var);
			format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
			format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
			format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
			format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
			format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
			format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
			format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
			format(var, 32, "origin=%d\n",PlayerInfo[playerid][pOrigem]);fwrite(hFile, var);
			format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
			format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
			format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
			format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
			format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
			format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
			format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
			format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
			format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
			format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
			format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
			format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
			format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
			format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
			format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
			format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
			format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
			format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
			format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
			format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
			format(var, 32, "TestVip=%d\n",PlayerInfo[playerid][pTimeVIP]);fwrite(hFile, var);
			format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
			format(var, 32, "Ouros=%d\n",PlayerInfo[playerid][pOuros]);fwrite(hFile, var);
			format(var, 32, "Avisado=%d\n",PlayerInfo[playerid][pAviso]);fwrite(hFile, var);
			format(var, 32, "Fome=%d\n",PlayerInfo[playerid][pFome]);fwrite(hFile, var);
			format(var, 32, "PegouVIP=%d\n",PlayerInfo[playerid][pPVIP]);fwrite(hFile, var);
			format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
            format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
			format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
			format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
			format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
			format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
			format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
			format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
			format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
			format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
			format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
			format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
			format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
			format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
			format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
			format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
			format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
			format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
			format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
			format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado2]);fwrite(hFile, var);
			format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
			format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
			format(var, 32, "Ban=%d\n",PlayerInfo[playerid][pBan]);fwrite(hFile, var);
			format(var, 32, "TempoHospital=%d\n",PlayerInfo[playerid][pTempoHospitalizado]);fwrite(hFile, var);
			format(var, 32, "HospitalID=%d\n",PlayerInfo[playerid][pHospitalID]);fwrite(hFile, var);
			fclose(hFile);
			TotalRegistro++;
			SalvarNumeroRegistrados();
		}
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "•|SERVER|•: Você agora pode digitar sua senha para Logar");
			format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
	        ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
    		TextDrawShowForPlayer(playerid, entrada);
    		TextDrawShowForPlayer(playerid, entrada2);
    		SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
			SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
			SetPlayerInterior(playerid, 0);
    	}
	}
	return true;
}
public OnPlayerLogin(playerid,password[])
{
	if(NaoPodeLogar[playerid] == 1)
	{
	    ForceClassSelection(playerid);
		return true;
	}
	new tmp2[256];
    new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	strmid(PlayerInfo[playerid][pKey], DOF2_GetString(string2, "Key"), 0, strlen(DOF2_GetString(string2, "Key")), 255);
	if(strcmp(PlayerInfo[playerid][pKey],password, true) == 0)
  	{
		PlayerInfo[playerid][pLevel] = DOF2_GetInt(string2, "Level");
		PlayerInfo[playerid][pAdmin] = DOF2_GetInt(string2, "AdminLevel");
		PlayerInfo[playerid][pHelper] = DOF2_GetInt(string2, "HelperLevel");
		PlayerInfo[playerid][pVIP] = DOF2_GetInt(string2, "DonateRank");
		PlayerInfo[playerid][gPupgrade] = DOF2_GetInt(string2, "UpgradePoints");
		PlayerInfo[playerid][pConnectTime] = DOF2_GetInt(string2, "ConnectedTime");
		PlayerInfo[playerid][pReg] = DOF2_GetInt(string2, "Registered");
		PlayerInfo[playerid][pSex] = DOF2_GetInt(string2, "Sex");
		PlayerInfo[playerid][pMuted] = DOF2_GetInt(string2, "Muted");
		PlayerInfo[playerid][pExp] = DOF2_GetInt(string2, "Respect");
		PlayerInfo[playerid][pCash] = DOF2_GetInt(string2, "Money");
		PlayerInfo[playerid][pConta] = DOF2_GetInt(string2, "Bank");
		PlayerInfo[playerid][pCrimes] = DOF2_GetInt(string2, "Crimes");
		PlayerInfo[playerid][pKills] = DOF2_GetInt(string2, "Kills");
		PlayerInfo[playerid][pDeaths] = DOF2_GetInt(string2, "Deaths");
		PlayerInfo[playerid][pPhoneBook] = DOF2_GetInt(string2, "Phonebook");
		PlayerInfo[playerid][pLottoNr] = DOF2_GetInt(string2, "LottoNr");
		PlayerInfo[playerid][pEmprego] = DOF2_GetInt(string2, "Emprego");
		PlayerInfo[playerid][pSalario] = DOF2_GetInt(string2, "Paycheck");
		PlayerInfo[playerid][pHeadValue] = DOF2_GetInt(string2, "HeadValue");
		PlayerInfo[playerid][pHeadValueT] = DOF2_GetInt(string2, "HeadValueT");
		PlayerInfo[playerid][pJailed] = DOF2_GetInt(string2, "Jailed");
		PlayerInfo[playerid][pJailTime] = DOF2_GetInt(string2, "JailTime");
		PlayerInfo[playerid][pCapacete] = DOF2_GetInt(string2, "Capacete");
		PlayerInfo[playerid][pMats] = DOF2_GetInt(string2, "Materiais");
		PlayerInfo[playerid][pDrogas] = DOF2_GetInt(string2, "Maconha");
		PlayerInfo[playerid][pDrogas2] = DOF2_GetInt(string2, "Cocaina");
		PlayerInfo[playerid][pDrogas3] = DOF2_GetInt(string2, "Crack");
		PlayerInfo[playerid][pLider] = DOF2_GetInt(string2, "Lider");
		PlayerInfo[playerid][pMembro] = DOF2_GetInt(string2, "Member");
		PlayerInfo[playerid][pCargo] = DOF2_GetInt(string2, "Rank");
		PlayerInfo[playerid][pSkin] = DOF2_GetInt(string2, "Char");
		PlayerInfo[playerid][pOrigem] = DOF2_GetInt(string2, "origin");
		PlayerInfo[playerid][pContractTime] = DOF2_GetInt(string2, "ContractTime");
		PlayerInfo[playerid][pDetSkill] = DOF2_GetInt(string2, "DetSkill");
		PlayerInfo[playerid][pSexSkill] = DOF2_GetInt(string2, "SexSkill");
		PlayerInfo[playerid][pBoxSkill] = DOF2_GetInt(string2, "BoxSkill");
		PlayerInfo[playerid][pLawSkill] = DOF2_GetInt(string2, "LawSkill");
		PlayerInfo[playerid][pMechSkill] = DOF2_GetInt(string2, "MechSkill");
		PlayerInfo[playerid][pNewsSkill] = DOF2_GetInt(string2, "NewsSkill");
		PlayerInfo[playerid][pDrogasSkill] = DOF2_GetInt(string2, "DrogasSkill");
		PlayerInfo[playerid][pCookSkill] = DOF2_GetInt(string2, "CookSkill");
		PlayerInfo[playerid][pSHealth] = DOF2_GetFloat(string2, "pSHealth");
		PlayerInfo[playerid][pSArmour] = DOF2_GetFloat(string2, "pSArmour");
		PlayerInfo[playerid][pTeam] = DOF2_GetInt(string2, "Team");
		PlayerInfo[playerid][pPnumber] = DOF2_GetInt(string2, "PhoneNr");
		PlayerInfo[playerid][pPHousekey] = DOF2_GetInt(string2, "House");
		PlayerInfo[playerid][pPbiskey] = DOF2_GetInt(string2, "Bizz");
		PlayerInfo[playerid][pPos_x] = DOF2_GetFloat(string2, "Pos_x");
		PlayerInfo[playerid][pPos_y] = DOF2_GetFloat(string2, "Pos_y");
		PlayerInfo[playerid][pPos_z] = DOF2_GetFloat(string2, "Pos_z");
		PlayerInfo[playerid][pCarLic] = DOF2_GetInt(string2, "CarLic");
		PlayerInfo[playerid][pFlyLic] = DOF2_GetInt(string2, "FlyLic");
		PlayerInfo[playerid][pBoatLic] = DOF2_GetInt(string2, "BoatLic");
		PlayerInfo[playerid][pGunLic] = DOF2_GetInt(string2, "GunLic");
		PlayerInfo[playerid][pPayDay] = DOF2_GetInt(string2, "PayDay");
		PlayerInfo[playerid][pCDPlayer] = DOF2_GetInt(string2, "CDPlayer");
		PlayerInfo[playerid][pWins] = DOF2_GetInt(string2, "Wins");
		PlayerInfo[playerid][pLoses] = DOF2_GetInt(string2, "Loses");
		PlayerInfo[playerid][pAlcoholPerk] = DOF2_GetInt(string2, "AlcoholPerk");
		PlayerInfo[playerid][pDrugPerk] = DOF2_GetInt(string2, "DrugPerk");
		PlayerInfo[playerid][pMiserPerk] = DOF2_GetInt(string2, "MiserPerk");
		PlayerInfo[playerid][pPainPerk] = DOF2_GetInt(string2, "PainPerk");
		PlayerInfo[playerid][pTraderPerk] = DOF2_GetInt(string2, "TraderPerk");
		PlayerInfo[playerid][pTut] = DOF2_GetInt(string2, "Tutorial");
		PlayerInfo[playerid][pWarns] = DOF2_GetInt(string2, "Avisos");
		PlayerInfo[playerid][pMarried] = DOF2_GetInt(string2, "Married");
		strmid(PlayerInfo[playerid][pMarriedTo],DOF2_GetString(string2,"MarriedTo"),0,strlen(DOF2_GetString(string2,"MarriedTo")),255);
		PlayerInfo[playerid][pSpawn] = DOF2_GetInt(string2, "Spawn");
		PlayerInfo[playerid][pSafeDrogas] = DOF2_GetInt(string2, "SafeMaconha");
		PlayerInfo[playerid][pSafeDrogas2] = DOF2_GetInt(string2, "SafeCocaina");
		PlayerInfo[playerid][pSafeDrogas3] = DOF2_GetInt(string2, "SafeCrack");
		PlayerInfo[playerid][psMats] = DOF2_GetInt(string2, "SafeMateriais");
		WantedPoints[playerid] = DOF2_GetInt(string2, "NivelProcurado");
		PlayerInfo[playerid][pTimeVIP] = DOF2_GetInt(string2, "TestVip");
		PlayerInfo[playerid][pLuta] = DOF2_GetInt(string2, "Luta");
		PlayerInfo[playerid][pDorgado] = DOF2_GetInt(string2, "Dorgado");
		PlayerInfo[playerid][pDorgado2] = DOF2_GetInt(string2, "Dorgado2");
		PlayerInfo[playerid][pDoenca] = DOF2_GetInt(string2, "Doenca");
		strmid(PlayerInfo[playerid][pLastLogin],DOF2_GetString(string2,"LU"),0,strlen(DOF2_GetString(string2,"LU")),255);
		PlayerInfo[playerid][pBan] = DOF2_GetInt(string2, "Ban");
		PlayerInfo[playerid][pAge] = DOF2_GetInt(string2, "Age");
		PlayerInfo[playerid][pOuros] = DOF2_GetInt(string2, "Ouros");
		PlayerInfo[playerid][pAviso] = DOF2_GetInt(string2, "Avisado");
		PlayerInfo[playerid][pFome] = DOF2_GetInt(string2, "Fome");
		PlayerInfo[playerid][pPVIP] = DOF2_GetInt(string2, "PegouVIP");
		PlayerInfo[playerid][pDiaBanTemp] = DOF2_GetInt(string2, "DiasBanTemp");
		PlayerInfo[playerid][pMesBanTemp] = DOF2_GetInt(string2, "MesBanTemp");
		PlayerInfo[playerid][pAnoBanTemp] = DOF2_GetInt(string2, "AnoBanTemp");
		PlayerInfo[playerid][pDiaVIP] = DOF2_GetInt(string2, "DiasVIP");
		PlayerInfo[playerid][pMesVIP] = DOF2_GetInt(string2, "MesVIP");
		PlayerInfo[playerid][pAnoVIP] = DOF2_GetInt(string2, "AnoVIP");
		strmid(PlayerInfo[playerid][pAdminAgendou],DOF2_GetString(string2,"AdminAgendou"),0,strlen(DOF2_GetString(string2,"AdminAgendou")),255);
		strmid(PlayerInfo[playerid][pMotivoAgendou],DOF2_GetString(string2,"MotivoAgendou"),0,strlen(DOF2_GetString(string2,"MotivoAgendou")),255);
		PlayerInfo[playerid][pAgendado] = DOF2_GetInt(string2, "Agendado");
		PlayerInfo[playerid][pTempoAgendado] = DOF2_GetInt(string2, "TempoAgendado");
		PlayerInfo[playerid][pTempoHospitalizado] = DOF2_GetInt(string2, "TempoHospital");
		PlayerInfo[playerid][pHospitalID] = DOF2_GetInt(string2, "HospitalID");
		PlayerInfo[playerid][pGun1] = DOF2_GetInt(string2, "Armas1");
		PlayerInfo[playerid][pGun2] = DOF2_GetInt(string2, "Armas2");
		PlayerInfo[playerid][pGun3] = DOF2_GetInt(string2, "Armas3");
		PlayerInfo[playerid][pGun4] = DOF2_GetInt(string2, "Armas4");
		PlayerInfo[playerid][pGun5] = DOF2_GetInt(string2, "Armas5");
		PlayerInfo[playerid][pGun6] = DOF2_GetInt(string2, "Armas6");
		PlayerInfo[playerid][pGun7] = DOF2_GetInt(string2, "Armas7");
		PlayerInfo[playerid][pGun8] = DOF2_GetInt(string2, "Armas8");
		PlayerInfo[playerid][pGun9] = DOF2_GetInt(string2, "Armas9");
		PlayerInfo[playerid][pGun10] = DOF2_GetInt(string2, "Armas10");
		PlayerInfo[playerid][pGun11] = DOF2_GetInt(string2, "Armas11");
		PlayerInfo[playerid][pGun12] = DOF2_GetInt(string2, "Armas12");
		PlayerInfo[playerid][pAmmo1] = DOF2_GetInt(string2, "Balas1");
		PlayerInfo[playerid][pAmmo2] = DOF2_GetInt(string2, "Balas2");
		PlayerInfo[playerid][pAmmo3] = DOF2_GetInt(string2, "Balas3");
		PlayerInfo[playerid][pAmmo4] = DOF2_GetInt(string2, "Balas4");
		PlayerInfo[playerid][pAmmo5] = DOF2_GetInt(string2, "Balas5");
		PlayerInfo[playerid][pAmmo6] = DOF2_GetInt(string2, "Balas6");
		PlayerInfo[playerid][pAmmo7] = DOF2_GetInt(string2, "Balas7");
		PlayerInfo[playerid][pAmmo8] = DOF2_GetInt(string2, "Balas8");
		PlayerInfo[playerid][pAmmo9] = DOF2_GetInt(string2, "Balas9");
		PlayerInfo[playerid][pAmmo10] = DOF2_GetInt(string2, "Balas10");
		PlayerInfo[playerid][pAmmo11] = DOF2_GetInt(string2, "Balas11");
		PlayerInfo[playerid][pAmmo12] = DOF2_GetInt(string2, "Balas12");
		logouagora[playerid] = 1;
    	CheckOwner(playerid);
     	CheckOwnerb(playerid);
		CheckOwnerh(playerid);
	}
	else
	{
	    new plrIP[16];
	    GetPlayerIp(playerid, plrIP, sizeof(plrIP));
	   	getdate(Ano, Mes, Dia);
		SendClientMessage(playerid, COLOR_WHITE, "Sua senha não esta combinando com seu nick, se errar 5 Vezes será banido do servidor");
		SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
		SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
		SetPlayerInterior(playerid, 0);
		format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
  		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
     	TextDrawShowForPlayer(playerid, entrada);
    	TextDrawShowForPlayer(playerid, entrada2);
	    gPlayerLogTries[playerid] += 1;
	    if(gPlayerLogTries[playerid] == 5)
		{
			new stri[64], tmp[20], tmp3[20], ip[16];
			GetPlayerIp(playerid, ip, sizeof ip);
			format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
			getdate(Ano, Mes, Dia);
			format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
			gettime(Hora, Minuto, Segundo);
			format(tmp3, 20, "%d:%ud:%d", Hora, Minuto, Segundo);
			format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
			DOF2_CreateFile(stri);
			DOF2_SetString(stri,"Motivo","Errou a senha 5 vezes");
			DOF2_SetString(stri,"Admin","Automatico");
			DOF2_SetString(stri,"Data",tmp);
			DOF2_SetString(stri,"Hora",tmp3);
			DOF2_SetString(stri,"Nick",PlayerName(playerid));
		}
		return true;
	}
	ResetPlayerMoney(playerid);
	ConsumingMoney[playerid] = 1;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 2;
		PlayerInfo[playerid][pAge] = 15;
		PlayerInfo[playerid][pSHealth] = 50;
		PlayerInfo[playerid][pPos_x] = 2246.6;
		PlayerInfo[playerid][pPos_y] = -1161.9;
		PlayerInfo[playerid][pPos_z] = 1029.7;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		if(PlayerInfo[playerid][pSex] == 1)
		{
			SetPlayerSkin(playerid, 23);
		}
		else
		{
			SetPlayerSkin(playerid, 150);
		}
		new randphone = 1000 + random(8999);
		PlayerInfo[playerid][pPnumber] = randphone;
		PlayerInfo[playerid][pPHousekey] = 500;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pConta] = 100;
		PlayerInfo[playerid][pReg] = 1;
		PlayerInfo[playerid][pEmprego] = 0;
		PlayerInfo[playerid][pKills] = 0;
		PlayerInfo[playerid][pDeaths] = 0;
		ResetPlayerMoney(playerid);
	}
	SalvarNumeroRegistrados();
	CheckDesbanAuto(playerid);
 	if(NaoPodeLogar[playerid] == 1)
	{
	   	ForceClassSelection(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pWarns] == 1) //1 aviso
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Sua Conta Já tem 1 Aviso!");
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Se Você tiver 3 avisos será banido automaticamente!");
	}
	if(PlayerInfo[playerid][pWarns] == 2) //2 avisos
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Sua Conta Já tem 2 Avisos!");
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Se Você tiver 3 avisos será banido automaticamente!");
	}
	if(PlayerInfo[playerid][pWarns] >= 3) //3 avisos
	{
	    PlayerInfo[playerid][pWarns] = 0;
	}
	PlayerPlaySound(playerid, 1191, 0.0, 0.0, 0.0);
  	SendClientMessage(playerid, COLOR_YELLOW2, "Seja bem vindo ao: Brasil PlayHappy [RPG v1.0a]");
	printf("%s logou no server.",PlayerName(playerid));
	new Info[6][10];
 	split(PlayerInfo[playerid][pLastLogin],Info,'/');
  	DateProp(playerid);
  	new dia,mes,ano,hora,mins,seg,string3[20];
  	getdate(ano,mes,dia);
    gettime(hora,mins,seg);
  	format(string3, sizeof(string3),"%d/%d/%d/%d/%d/%d",dia,mes,ano,hora,mins,seg);
  	strmid(PlayerInfo[playerid][pLastLogin],string3,0,strlen(string3),255);
   	if (PlayerInfo[playerid][pTimeVIP] >= 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"SERVER: Você está usando VIP Teste!.");
  	}
	new string5[64];
	format(string5, sizeof(string5), "RetirarAdmin/%s.ini", PlayerName(playerid));
	if(fexist(string5) && PlayerInfo[playerid][pAdmin] >= 1)
	{
	   	SendClientMessage(playerid, COLOR_LIGHTRED,"•|SERVER|• Você não é mais um admin do servidor!");
	   	PlayerInfo[playerid][pAdmin] = 0;
	   	new File: hFile = fopen(string5, io_write);
		if (hFile)
		{
			new var[32];
			format(var, 32, "Admin=RETIRADO");fwrite(hFile, var);
			fclose(hFile);
		}
	}
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
		format(string2, sizeof(string2), "SERVER: Você logou com Admin nivel:[%d]",PlayerInfo[playerid][pAdmin]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,string2);
		SetPlayerHealth(playerid,99999);
		admtrampando[playerid] = 1;
	}
	new string6[64];
	format(string6, sizeof(string6), "RetirarHelper/%s.ini", PlayerName(playerid));
	if(fexist(string6) && PlayerInfo[playerid][pHelper] >= 1)
	{
	   	SendClientMessage(playerid, COLOR_LIGHTRED,"•|SERVER|• Você não é mais um Helper do servidor!");
	   	PlayerInfo[playerid][pHelper] = 0;
	   	new File: hFile = fopen(string6, io_write);
		if (hFile)
		{
			new var[32];
			format(var, 32, "Helper=RETIRADO");
			fwrite(hFile, var);
			fclose(hFile);
		}
	}
	if(PlayerInfo[playerid][pHelper] > 0)
	{
		format(string2, sizeof(string2), "SERVER: Você logou com Helper nivel:[%d]",PlayerInfo[playerid][pHelper]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,string2);
	}
	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
	if(gTeam[playerid] == 0)
	{
		gTeam[playerid] = 3;
	}
	else
	{
		gTeam[playerid] = PlayerInfo[playerid][pTeam];
	}
	MedicBill[playerid] = 0;
	LogadoSV[playerid] = 1;
	new KengaMelada[128];
 	if(NaoPodeLogar[playerid] == 1)
	{
	   	ForceClassSelection(playerid);
		return 1;
	}
	if(NaoPodeLogar[playerid] == 0)
	{
		format(KengaMelada,sizeof(KengaMelada),"[ID: %d] %s: logou no servidor.", playerid, PlayerName(playerid));
   		SendClientMessageToAll(COLOR_GRAD1, KengaMelada);
	}
	if(PlayerInfo[playerid][pSex] == 2)
	{
		format(tmp2, sizeof(tmp2), "~p~Bem vinda ~n~~p~~h~   %s", PlayerName(playerid));
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	if(PlayerInfo[playerid][pSex] == 1)
	{
		format(tmp2, sizeof(tmp2), "~w~Bem vindo ~n~~y~   %s", PlayerName(playerid));
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	gPlayerLogged[playerid] = 1;
	SpawnPlayer(playerid);
	if(FoiDesban[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "|SERVER| Seu ban temporario acabou, você foi desbanido. Bom jogo!");
        FoiDesban[playerid] = 0;
	}
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
   	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
   	ScoreLevel(playerid);
    gmsg[playerid] = 1;
   	TextDrawHideForPlayer(playerid, entrada);
    TextDrawHideForPlayer(playerid, entrada2);
   	tempotd[playerid] = SetTimerEx("PiscarTD", 9000, 1, "i", playerid);
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1341)
	{
		new AdminName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, AdminName, sizeof(AdminName));
    	format(gstring, sizeof(gstring), "~w~~y~%s: ~g~On", AdminName);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
    		if(IsPlayerConnected(i)) GameTextForPlayer(i, gstring , 5000, 1);
		}
	}
	TempoLogin = SetTimerEx("LoginAgora", 10000, 0, "i", playerid);
//========================= [ retirar vip ] =============================
	getdate(year, month, day);
	CheckDesbanAuto(playerid);
	new VIPVencido[MAX_PLAYERS];
	if(PlayerInfo[playerid][pVIP] >= 1 && PlayerInfo[playerid][pTimeVIP] < 1)
	{
	    VIPVencido[playerid] = 0;
		if(month >= PlayerInfo[playerid][pMesVIP] && year >= PlayerInfo[playerid][pAnoVIP])
		{
			if(day > PlayerInfo[playerid][pDiaVIP]+3)
			{
	  			PlayerInfo[playerid][pVIP] = 0;
				SendClientMessage(playerid, COLOR_LIGHTRED, "|SERVER| Seu VIP venceu. Renove seu VIP para ter seu benefinios novamente!");
			}
			else
			{
			    VIPVencido[playerid] = 1;
			}
		}
	}
	if (PlayerInfo[playerid][pVIP] == 1 && PlayerInfo[playerid][pTimeVIP] <= 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"SERVER: Você é jogador VIP.");
		cVIPc[playerid] = 0;
  	}
   	else if (PlayerInfo[playerid][pVIP] == 2)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"SERVER: Você é jogador VIP-POWER.");
		cVIPc[playerid] = 0;
	}
	if(PlayerInfo[playerid][pVIP] >= 1)
	{
   		new DialogBPH[1500];
   		if(PlayerInfo[playerid][pVIP] == 1 && PlayerInfo[playerid][pTimeVIP] < 1)
   		{
			format(string2, 128, "{00FF00}Você é um Player VIP.\n\n");
			strcat(DialogBPH,string2);
 			format(string2, 128, "{00CCFF}*********************************[CONTA VIP]*********************************\n\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
			format(string2, sizeof(string2), "{FFFF99}Nick: {00FF00}%s\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
			if(VIPVencido[playerid] == 0)
			{
				format(string2, sizeof(string2), "{FFFF99}Seu VIP: {00FF00}SEU VIP ESTÁ EM DIA\n\n");
				strcat(DialogBPH,string2);
			}
			else
			{
			   	format(string2, sizeof(string2), "{FFFF99}Seu VIP: {CC0000}SEU VIP ESTÁ VENCIDO\n\n");
				strcat(DialogBPH,string2);
			}
	 		format(string2, sizeof(string2), "{FFFF99}Vencimento do VIP: {FFFF00}%d/%d/%d\n\n", PlayerInfo[playerid][pDiaVIP], PlayerInfo[playerid][pMesVIP], PlayerInfo[playerid][pAnoVIP]);
			strcat(DialogBPH,string2);
		}
   		if(PlayerInfo[playerid][pTimeVIP] >= 1)
   		{
			format(string2, 128, "{00FF00}Você é um Player VIP.\n\n");
			strcat(DialogBPH,string2);
 			format(string2, 128, "{00CCFF}*********************************[CONTA VIP]*********************************\n\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
			format(string2, sizeof(string2), "{FFFF99}Nick: {00FF00}%s\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
			format(string2, sizeof(string2), "{FFFF99}Seu VIP: {00FF00}SEU VIP ESTÁ EM DIA\n\n");
			strcat(DialogBPH,string2);
	 		format(string2, sizeof(string2), "{FFFF99}Vencimento do VIP: {FFFF00}USE: /tempovip\n\n");
			strcat(DialogBPH,string2);
		}
   		if(PlayerInfo[playerid][pVIP] == 2)
   		{
			format(string2, 128, "{00FF00}Você é um Player VIP-POWER.\n\n");
			strcat(DialogBPH,string2);
 			format(string2, 128, "{00CCFF}*********************************[CONTA VIP-POWER]*********************************\n\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
 			format(string2, sizeof(string2), "{FFFF99}Nick: {00FF00}%s\n\n", PlayerName(playerid));
			strcat(DialogBPH,string2);
			if(VIPVencido[playerid] == 0)
			{
				format(string2, sizeof(string2), "{FFFF99}Seu VIP-POWER: {00FF00}SEU VIP-POWER ESTÁ EM DIA\n\n");
				strcat(DialogBPH,string2);
			}
			else
			{
			   	format(string2, sizeof(string2), "{FFFF99}Seu VIP-POWER: {CC0000}SEU VIP-POWER ESTÁ VENCIDO\n\n");
				strcat(DialogBPH,string2);
			}
 	 		format(string2, sizeof(string2), "{FFFF99}Vencimento do VIP-POWER: {FFFF00}%d/%d/%d\n\n", PlayerInfo[playerid][pDiaVIP], PlayerInfo[playerid][pMesVIP], PlayerInfo[playerid][pAnoVIP]);
			strcat(DialogBPH,string2);
		}
		format(string2, sizeof(string2), "{FFFF99}Organização: {FFFFFF}%s\n\n", NomeORG(playerid));
		strcat(DialogBPH,string2);
 		if(PlayerInfo[playerid][pCarKey] == 0)
		{
			format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 1: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 1: {00FF00}SIM\n\n");
			strcat(DialogBPH,string2);
		}
  		if(PlayerInfo[playerid][pCarKey2] == 0)
		{
			format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 2: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 2: {00FF00}SIM\n\n");
			strcat(DialogBPH,string2);
		}
  		if(PlayerInfo[playerid][pCarKey3] == 0)
		{
			format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 3: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 3: {00FF00}SIM\n\n");
			strcat(DialogBPH,string2);
		}
  		if(PlayerInfo[playerid][pCarKey4] == 0 && PlayerInfo[playerid][pVIP] >= 2)
		{
			format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 4: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    if(PlayerInfo[playerid][pVIP] >= 2)
		    {
		    	format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 4: {00FF00}SIM\n\n");
				strcat(DialogBPH,string2);
			}
		}
  		if(PlayerInfo[playerid][pCarKey5] == 0 && PlayerInfo[playerid][pVIP] >= 2)
		{
			format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 5: {CC0000}NÃO\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    if(PlayerInfo[playerid][pVIP] >= 2)
		    {
		    	format(string2, sizeof(string2), "{FFFF99}Veiculo VIP 5: {00FF00}SIM\n");
				strcat(DialogBPH,string2);
			}
		}
 		format(string2, sizeof(string2), "{FFFFFF}--------------------------------\n");
		strcat(DialogBPH,string2);
 		if(PlayerInfo[playerid][pPHousekey] == 500)
		{
			format(string2, sizeof(string2), "{FFFF99}Casa: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    format(string2, sizeof(string2), "{FFFF99}Casa: {00FF00}SIM\n\n");
			strcat(DialogBPH,string2);
		}
 		if(PlayerInfo[playerid][pPbiskey] == 255)
		{
			format(string2, sizeof(string2), "{FFFF99}Empresa: {CC0000}NÃO\n\n");
			strcat(DialogBPH,string2);
		}
		else
		{
		    format(string2, sizeof(string2), "{FFFF99}Empresa: {00FF00}SIM\n\n");
			strcat(DialogBPH,string2);
		}
		format(string2, sizeof(string2), "{FF0006}Obs: se você acha que alguma coisa está errada acesse\n\n");
		strcat(DialogBPH,string2);
		format(string2, sizeof(string2), "{FFFF00}www.s-bph.forumeiros.com\n\n");
		strcat(DialogBPH,string2);
 		format(string2, 128, "{00CCFF}******************************[ Brasil Play Happy ]******************************\n", PlayerName(playerid));
		strcat(DialogBPH,string2);
		ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "{FFFFFF}Informações do VIP", DialogBPH, "OK", "");
	}
	new TantoOuros[MAX_PLAYERS];
	if(PlayerInfo[playerid][pConta] >= 999999999)
	{
	    TantoOuros[playerid] = 0;
		for(new i = 0; i < 10000; i++)
		{
		    if(PlayerInfo[playerid][pConta] > 999999991)
		    {
		        TantoOuros[playerid] += 1;
		        PlayerInfo[playerid][pConta] -= 100000;
		        PlayerInfo[playerid][pOuros] += 1;
			}
		}
		format(gstring, sizeof(gstring), "Você relogou com mais de 1kkk no banco e foi convertido o resto para %d ouros.", TantoOuros[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, gstring);
	}
	SetTimerEx("SetTudo", 8000, 0, "i", playerid);
	//SetTudo(playerid);
	return true;
}

public OnPlayerUpdate(playerid)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3001 && PlayerBrilhando[playerid] == 1)
	    {
			new random2 = random(sizeof(Cores));
			SetPlayerColor(playerid, Cores[random2]);
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    	{
        	for(new i = 0; i < sizeof(SpikeInfo); i++)
  	    	{
  	       		if(IsPlayerInRangeOfPoint(playerid, 6.2, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
           		{
  	           		if(SpikeInfo[i][sCreated] == 1)
  	           		{
  	               		new panels, doors, luzes, tires;
  	               		new carid = GetPlayerVehicleID(playerid);
		           		GetVehicleDamageStatus(carid, panels, doors, luzes, tires);
		           		tires = encode_tires(1, 1, 1, 1);
		           		UpdateVehicleDamageStatus(carid, panels, doors, luzes, tires);
  	           		}
  	       		}
  	    	}
  		}
	}
	return true;
}
forward OnPlayerSave22(playerid);
public OnPlayerSave22(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Contas/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "HelperLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "HeadValueT=%d\n",PlayerInfo[playerid][pHeadValueT]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "origin=%d\n",PlayerInfo[playerid][pOrigem]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				format(var, 32, "TestVip=%d\n",PlayerInfo[playerid][pTimeVIP]);fwrite(hFile, var);
				format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
				format(var, 32, "Ouros=%d\n",PlayerInfo[playerid][pOuros]);fwrite(hFile, var);
   				format(var, 32, "Avisado=%d\n",PlayerInfo[playerid][pAviso]);fwrite(hFile, var);
   				format(var, 32, "Fome=%d\n",PlayerInfo[playerid][pFome]);fwrite(hFile, var);
   				format(var, 32, "PegouVIP=%d\n",PlayerInfo[playerid][pPVIP]);fwrite(hFile, var);
   				format(var, 32, "DiasBanTemp=%d\n",PlayerInfo[playerid][pDiaBanTemp]);fwrite(hFile, var);
   				format(var, 32, "MesBanTemp=%d\n",PlayerInfo[playerid][pMesBanTemp]);fwrite(hFile, var);
   				format(var, 32, "AnoBanTemp=%d\n",PlayerInfo[playerid][pAnoBanTemp]);fwrite(hFile, var);
     			format(var, 32, "DiasVIP=%d\n",PlayerInfo[playerid][pDiaVIP]);fwrite(hFile, var);
   				format(var, 32, "MesVIP=%d\n",PlayerInfo[playerid][pMesVIP]);fwrite(hFile, var);
   				format(var, 32, "AnoVIP=%d\n",PlayerInfo[playerid][pAnoVIP]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
				format(var, 32, "Ban=%d\n",PlayerInfo[playerid][pBan]);fwrite(hFile, var);
				format(var, 32, "TempoHospital=%d\n",PlayerInfo[playerid][pTempoHospitalizado]);fwrite(hFile, var);
				format(var, 32, "HospitalID=%d\n",PlayerInfo[playerid][pHospitalID]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
	}
	return true;
}
public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmorrx],
		HouseInfo[idx][hArmorry],
		HouseInfo[idx][hArmorrz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hWorld]);
		HouseInfo[idx][hWorld] = idx;
		if(idx == 0)
		{
			file2 = fopen("PlayHappy/Casas.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayHappy/Casas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior]);
		//BizzInfo[idx][VirtualWorld]);
		if(idx == 0)
		{
			file2 = fopen("PlayHappy/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayHappy/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked]);
		if(idx == 0)
		{
			file2 = fopen("PlayHappy/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayHappy/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	Atualizar3Dtexts();
	return true;
}

public BroadCast(COLOR,const string[])
{
	SendClientMessageToAll(COLOR, string);
	return true;
}

public ABroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	printf("%s", string);
	return true;
}

forward CopBroadCast(COLOR,const string[]);
public CopBroadCast(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (IsACop(i))
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	return true;
}

public ChatHelperAdmin(COLOR,const string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pHelper] >= 1 || PlayerInfo[i][pAdmin] >= 1)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}

public HelperBroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pHelper] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}

forward EmpregoMensagem(COLOR,const string[],emprego);
public EmpregoMensagem(COLOR,const string[],emprego)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pEmprego] == emprego)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}

forward HelperBroadCast2(COLOR,const string[],level);
public HelperBroadCast2(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pHelper] >= level && helpertrampando[i] == 1)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}

public OOCNews(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

forward OOCLosSantos(COLOR,const string[]);
public OOCLosSantos(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInLosSantos(i))
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

forward OOCLasVenturas(COLOR,const string[]);
public OOCLasVenturas(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInLasVenturas(i))
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

forward OOCSanFierro(COLOR,const string[]);
public OOCSanFierro(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInLasVenturas(i) || IsPlayerInLosSantos(i))
		    {
				return true;
			}
			else
			{
			    SendClientMessage(i, COLOR, string);
			}
		}
	}
	return true;
}

public SendEmpregoMessage(Emprego, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pEmprego] == Emprego)
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

public SendFamilyMessage(family, COLOR, string[])
{
	if(family > 0)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
		    	if(PlayerInfo[i][pMembro] == family || PlayerInfo[i][pLider] == family)
		    	{
               		if(!gFam[i])
                	{
						SendClientMessage(i, COLOR, string);
					}
				}
			}
		}
	}
}

public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
//=======
	PlayerInactivity[playerid] = 0;
 	new string[256];
	new playerdinheiro;
	new playermoney;
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new plname[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
	//SpamProtection(playerid);

	//==
    new ComandoAtual[128];
    new Parametro;
    ComandoAtual = strtok(cmdtext, Parametro);
    if(!strcmp(ComandoAtual, Comandos[playerid], true) && strlen(Comandos[playerid]))
    {
        FloodComandos[playerid]++;
        SetTimerEx("LiberarComandos", Tempo, false, "n", playerid);
        if(FloodComandos[playerid] == 3)
        {
            Comandos[playerid] = ("");
            FloodComandos[playerid] = -1;
            new NickName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, NickName, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s saiu do servidor por flood excessivo", NickName);
	        ProxDetector(30.0, playerid, string, 0xDFB595FF,0xDFB595FF,0xDFB595FF,0xDFB595FF,0xDFB595FF);
			Kick(playerid);
        }
        if(FloodComandos[playerid] >= 1)
        {
            return 1;
        }
    }
    else
    {
        FloodComandos[playerid] = -1;
    }
    format(Comandos[playerid], 20, "%s", ComandoAtual);
	if (strcmp(cmd, "/logar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
	        new tmppass[64];
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Você já está logado.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /logar [Senha]");
				format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
	            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
				return true;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return true;
	}
	if (strcmp(cmd, "/registrar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Você já está logado.");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 64, "Contas/%s.ini", sendername);
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "O Nick que você está usando já existe, use outro por favor.");
				fclose(hFile);
				format(gstring,128,"*** Bem vindo novamente %s ***\n*** Você esta registrado ***\n*** Digite sua senha para logar ***",PlayerName(playerid));
	            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Logando...",gstring, "Logar", "Sair");
				return true;
			}
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Por favor, USE: /registrar [Senha]");
				format(gstring,128,"*** Bem vindo %s ***\n*** Você não esta registrado no servidor ***\n*** Digite uma senha para registrar-se ***",PlayerName(playerid));
	            ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Registrando...",gstring, "Registrar", "Sair");
				return true;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return true;
	}
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid,COLOR_GRAD1,"Você não está logado no servidor, USE: /logar [SENHA]!");
		return 1;
	}
	if(strcmp(cmd, "/Demitir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] > 5)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Você não pode demitir quem não é da sua org.");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
								return 1;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(string, sizeof(string), "* Você foi demitido pelo líder %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora você é um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
							if(PlayerInfo[para1][pSex] == 1)
							{
								PlayerInfo[para1][pSkin] = 293;
							}
							else
							{
								PlayerInfo[para1][pSkin] = 12;
							}
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							MedicBill[para1] = 0;
							//TempoDeDar[para1] = SetTimerEx("BOSTA", 10000, 0, "i", para1);
							XXAirBreak[para1] += 3;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Você demitiu %s, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return 1;
						}
					}
				}
			}
 			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cvip", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVIP] >= 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /v [Chat Vip]");
				return true;
			}
			if(cVIPc[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "	Seu chat VIP está desligado! USE: /desligarchat");
				return true;
			}
 			if(PlayerInfo[playerid][pVIP] == 1 && PlayerInfo[playerid][pTimeVIP] >= 4)
			{
				format(string, sizeof(string), "** VIP TEST %s: %s **", sendername, result);
			}
			if(PlayerInfo[playerid][pVIP] == 1 && PlayerInfo[playerid][pTimeVIP] <=0)
			{
				format(string, sizeof(string), "** VIP %s: %s **", sendername, result);
			}
			else if(PlayerInfo[playerid][pVIP] == 2)
			{
				format(string, sizeof(string), "** VIP-POWER %s: %s **", sendername, result);
			}
			SendVIPMessage(0x00FFFFFF,string);
			printf("VIP %s: %s", sendername, result);
		}
		return true;
	}
	if (strcmp(cmd,"/rg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

			if (gPlayerLogged[playerid] != 0)
			{
   				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/serio", true) == 0)
	{
	    MostrarTextXiter(playerid);
	    return true;
	}
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/a)dmin [admin chat]");
				return true;
			}

			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
				ABroadCast(0xF679C4AA, string, 1);
                //SendHelperMessage(0x63C3F6AA, string);
			}
			format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] *%d Admin %s: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerInfo[playerid][pAdmin], sendername, result);
			AChatLog(string);
		}
		return true;
	}

	if(strcmp(cmd, "/admin_1337", true) == 0 || strcmp(cmd, "/a_1337", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /a_1337 [Chat admin Master+]");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				format(string, sizeof(string), "*[MASTER+] %d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
				ABroadCast(0xF679C4AA, string, 1337);
			}
			format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] *%d Admin %s: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerInfo[playerid][pAdmin], sendername, result);
			AChatLog(string);
		}
		return true;
	}


	if(strcmp(cmd, "/adminhelper", true) == 0 || strcmp(cmd, "/ah", true) == 0 || strcmp(cmd, "/helper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        new length = strlen(cmdtext);
        	while ((idx < length) && (cmdtext[idx] <= ' '))
        	{
 		 		idx++;
        	}
        	new offset = idx;
        	new result[64];
        	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        	{
            	result[idx - offset] = cmdtext[idx];
            	idx++;
        	}
        	result[idx - offset] = EOS;
        	if(!strlen(result))
        	{
        		SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ah)dmin/helper [admin/helper chat]");
	            return 1;
        	}
        	format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], sendername, result);
        	if(PlayerInfo[playerid][pAdmin] >= 1)
  		 	{
            	format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], sendername, result);
            	ChatHelperAdmin(0xD1AE7AAA,string);
            	return 1;
       	 	}
        	if(PlayerInfo[playerid][pHelper] >= 1)
        	{
            	format(string, sizeof(string)," *%d Helper %s: %s", PlayerInfo[playerid][pHelper], sendername, result);
            	ChatHelperAdmin(0xD1AE7AAA, string);
            	return 1;
        	}
    	}
    	return 1;
	}
	if(strcmp(cmd, "/h", true) == 0 || strcmp(cmd, "/hc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/h ou /hc)helper [helper chat]");
				return true;
			}
			format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], sendername, result);
			if (PlayerInfo[playerid][pHelper] >= 1)
			{
				SendHelperMessage(COR_HELPER, string);
			}
			printf("Helper %s: %s", sendername, result);
		}
		return true;
	}

	if(strcmp(cmd,"/laptop",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 22)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop, e se desconectou de sua Agencia.");
			        ConnectedToPC[playerid] = 0;
			        return true;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você ligou seu laptop, e se conectou a sua Agência.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ *Agencia dos Assasinos* ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não e um Assasino!");
		        return true;
		    }
		}
	    return true;
	}
	
	if(strcmp(cmd, "/convidar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /convidar [playerid/Parte-do-Nick]");
				return true;
			}
			new para1;
            para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] > 90)
			{
			    new lolz = GetPlayerOrg(playerid);
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparvaga primeiro.");
					return true;
	    		}
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player já participa de Org/Gang/Mafia.");
						return true;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você convidou %s para sua organização: %s.", giveplayer,NomeORG(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

						new convitestring[128];
		        		format(convitestring,sizeof(convitestring), "O Lider dos: %s\n\nEsta convidando voce para entrar para a organização\n\nDeseja entrar para org?",NomeORG(playerid));
		        		ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",convitestring,"Aceitar","Recusar");

						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente líderes podem usar este comando !");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/baixinho", true) == 0 || strcmp(cmd, "/ba", true) == 0)
	{
	   	if(NaCamera[playerid] > 3)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   return true;
	    }
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode sussurrar da cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não logou ainda !");
	            return true;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ba)ixinho [Para falar baixiinho]");
				return true;
			}
			format(string, sizeof(string), "%s baixinho: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return true;
	}

	if(strcmp(cmd, "/departamento", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_DEPTH, "USE: (/d)epartamento [Texto]");
				return true;
			}

			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PM Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** PM %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PM %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PM %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PM %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Policia Militar %s: %s, câmbio. **", sendername, result);

				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}

			if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PMSF Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** PMSF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PMSF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PMSF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PMSF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Policia Militar SF %s: %s, câmbio. **", sendername, result);

				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Rotam Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Rotam %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Exército Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Exército %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Exército %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Exército %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Exército %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Exército %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Exercito %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente do Governo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Segurança do Governo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista do Governo %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Governo %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Rotam-SF Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Líder P.R %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Polícial Rodoviário %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Polícial Rodoviário %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Polícial Rodoviário %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Polícial Rodoviário %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Polícial Rodoviário %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Rotam-SF %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			
			else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Secretario %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_NEWS, string);
				SendFamilyMessage(1, COLOR_NEWS, string);
				SendFamilyMessage(3, COLOR_NEWS, string);
				SendFamilyMessage(16, COLOR_NEWS, string);
				SendFamilyMessage(27, COLOR_NEWS, string);
				SendFamilyMessage(31, COLOR_NEWS, string);
				SendFamilyMessage(7, COLOR_NEWS, string);
				SendFamilyMessage(11, COLOR_NEWS, string);
				SendFamilyMessage(4, COLOR_NEWS, string);
				SendFamilyMessage(33, COLOR_NEWS, string);
				SendFamilyMessage(34, COLOR_NEWS, string);
				printf("%s", string);
				return true;
			}
			
   			else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PF Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** PF %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Medicos Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Medicos %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}

			else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Medicos Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Medicos SF %s: %s, câmbio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_LIGHTRED, string);
				SendFamilyMessage(1, COLOR_LIGHTRED, string);
				SendFamilyMessage(3, COLOR_LIGHTRED, string);
				SendFamilyMessage(16, COLOR_LIGHTRED, string);
				SendFamilyMessage(27, COLOR_LIGHTRED, string);
				SendFamilyMessage(31, COLOR_LIGHTRED, string);
				SendFamilyMessage(7, COLOR_LIGHTRED, string);
				SendFamilyMessage(11, COLOR_LIGHTRED, string);
				SendFamilyMessage(4, COLOR_LIGHTRED, string);
				SendFamilyMessage(33, COLOR_LIGHTRED, string);
				SendFamilyMessage(34, COLOR_LIGHTRED, string);
				printf("%s", string);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial/Médico!");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/familia", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar. pois está calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/f)amilia [Chat da Familia]");
				return 1;
			}
   			new leader = PlayerInfo[playerid][pLider];
		    new member = PlayerInfo[playerid][pMembro];
   			format(string, sizeof(string), "* %s Falou algo no radio.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if(member==8)
			{
   				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Vice-Diretor %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assasino Frio %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Matador %s: %s. **", sendername, result); }
				else { format(string, sizeof(string), "** Matador %s: %s. **", sendername, result); }
				SendFamilyMessage(8, COLOR_WHITE, string);
			}
			else if(member==22)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Vice-Diretor %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assasino Frio %s: %s. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Matador %s: %s. **", sendername, result); }
				else { format(string, sizeof(string), "** Matador %s: %s. **", sendername, result); }
				SendFamilyMessage(22, COLOR_WHITE, string);
			}
			else if(leader==8)
			{
				format(string, sizeof(string), "** Diretor %s: %s. **", sendername, result);
				SendFamilyMessage(8, COLOR_WHITE, string);
			}
			else if(leader==22)
			{
				format(string, sizeof(string), "** Diretor %s: %s. **", sendername, result);
				SendFamilyMessage(22, COLOR_WHITE, string);
			}
			printf("%s", string);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/ce", true) == 0 || strcmp(cmd, "/chatemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar. pois está calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ce [Chat do Emprego]");
				return 1;
			}
			if(PlayerInfo[playerid][pEmprego] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não possui um emprego!");
				return true;
			}
		    new emprego = PlayerInfo[playerid][pEmprego];
			if(emprego >= 1)
			{
   				if(PlayerInfo[playerid][pEmprego] == 1)
   				{
			   		format(string, sizeof(string), "** Detetive %s: %s.", sendername, result);
   				}
				else if(PlayerInfo[playerid][pEmprego] == 2)
				{
					format(string, sizeof(string), "** Advogado %s: %s.", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 3)
				{
					format(string, sizeof(string), "** P.Sexo %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 4)
				{
					format(string, sizeof(string), "** Vendedor de drogas %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 5)
				{
					format(string, sizeof(string), "** Mecânico %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 6)
				{
					format(string, sizeof(string), "** Segurança %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 7)
				{
					format(string, sizeof(string), "** Vendedor de armas %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 8)
				{
					format(string, sizeof(string), "** Boxeador %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 9)
				{
					format(string, sizeof(string), "** Motorista de ônibus %s: %s. ", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 99)
				{
					format(string, sizeof(string), "** Mendigo %s: %s. **", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 11)
				{
					format(string, sizeof(string), "** Caminhoneiro %s: %s. **", sendername, result);
				}
				else if(PlayerInfo[playerid][pEmprego] == 12)
				{
					format(string, sizeof(string), "** Poeta %s: %s. **", sendername, result);
				}
				EmpregoMensagem(0xF6B5F7FF, string, emprego);
			}
		}
		return 1;
	}


//----------------------------------[Short]-----------------------------------------------
 	if(strcmp(cmd,"/Gritar",true) == 0 || strcmp(cmd,"/g",true) == 0)
	{
	   	if(NaCamera[playerid] > 3)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   return true;
	    }
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode gritar na cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid,CINZA,"Você não está logado/registrado!");
	            return true;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,CINZA2,"Use: (/G)ritar [Texto]");
				return true;
			}
			format(string,sizeof(string),"%s Grita: %s!!!",sendername,result);
			ProxDetector(30.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			printf("%s",string);
		}
		return true;
	}

	if(strcmp(cmd, "/alianca", true) == 0 || strcmp(cmd, "/al", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/al)ianca [chat da aliança]");
				return 1;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
				format(string, sizeof(string), "* %s Falou algo no radio.", PlayerName(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    if(IsAGroove(playerid) || IsAGrooveSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(14, COLOR_ALIANCA, string);
					SendFamilyMessage(29, COLOR_ALIANCA, string);
			    }
			    else if(IsAVagos(playerid) || IsAVagosSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(18, COLOR_ALIANCA, string);
					SendFamilyMessage(28, COLOR_ALIANCA, string);
			    }
			    else if(IsABallas(playerid) || IsABallasSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(17, COLOR_ALIANCA, string);
					SendFamilyMessage(26, COLOR_ALIANCA, string);
			    }
			    else if(IsAAzteca(playerid) || IsAAztecaSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(5, COLOR_ALIANCA, string);
					SendFamilyMessage(25, COLOR_ALIANCA, string);
			    }
			    else if(IsAComandoVermelho(playerid) || IsASonsofAnarchy(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(19, COLOR_ALIANCA, string);
					SendFamilyMessage(20, COLOR_ALIANCA, string);
			    }
			    else if(IsAPCC(playerid) || IsAPCCSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(21, COLOR_ALIANCA, string);
					SendFamilyMessage(24, COLOR_ALIANCA, string);
			    }

	 //=============================================
  				else if(IsABOPEs(playerid) || IsAPoliciaCivil(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(2, COLOR_ALIANCA, string);
					SendFamilyMessage(16, COLOR_ALIANCA, string);
			    }

			    else if(IsAPM(playerid) || IsAPMSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(1, COLOR_ALIANCA, string);
					SendFamilyMessage(27, COLOR_ALIANCA, string);
			    }

			    else if(IsATaxi(playerid) || IsATaxiSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(10, COLOR_ALIANCA, string);
					SendFamilyMessage(30, COLOR_ALIANCA, string);
			    }

			    else if(IsAMedicos(playerid) || IsAMedicosSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(4, COLOR_ALIANCA, string);
					SendFamilyMessage(31, COLOR_ALIANCA, string);
			    }

			    else if(IsAJornal(playerid) || IsAJornalSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(9, COLOR_ALIANCA, string);
					SendFamilyMessage(32, COLOR_ALIANCA, string);
			    }
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não faz parte de nenhuma família!");
				return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/gangue", true) == 0 || strcmp(cmd, "/ga", true) == 0 || strcmp(cmd, "/ganguee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ga)ngue [Chat]");
				return true;
			}

			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
				format(string, sizeof(string), "* %s Falou algo no radio.", PlayerName(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    new leader = PlayerInfo[playerid][pLider];
			    new member = PlayerInfo[playerid][pMembro];
			    if(member==5)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe da boca %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Lider %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Vapor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Soldado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_AZTECAS, string);
			    }

			    if(member==25)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe da boca %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Lider %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Vapor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Soldado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_AZTECAS, string);
			    }
			    if(member==6)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe do terrorismo %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
			    }
       			if(member==23)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
			    }

			    if(member==9)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor de Produção %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Produção %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Editor Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Repórter Nacional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Repórter Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Humorista %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Humorista %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
			    }

			    if(member==32)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor de Produção %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Produção %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Editor Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Repórter Nacional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Repórter Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Humorista %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Humorista %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
			    }
			    if(member==10)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Taxista Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Taxista Experiente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Taxista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Taxista Em Treinamento %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Taxista em Treinamento %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
				}

                if(member==30)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Taxista Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Taxista Experiente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Taxista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Taxista Em Treinamento %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Taxista em Treinamento %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
				}
				if(member==14)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GRO, string);
				}

				if(member==29)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GRO, string);
				}
   //========================================
   				if(member==24)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_AZTECAS, string);
				}
   //===========================================
				if(member==15)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_WHITE, string);
				}
				if(member==17)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Vapor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Aviãozinho %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_BALLAS, string);
				}

				if(member==26)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Vapor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Aviãozinho %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_BALLAS, string);
				}
				if(member==18)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_VAGOS, string);
				}

				if(member==28)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_VAGOS, string);
				}
				if(member==19)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ganngster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_CVSF, string);
				}
				if(member==20)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Matador Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Psicótico %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Olheiro %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_CVSF, string);
				}
				if(member==21)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Vapor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Drift Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_PCC, string);
				}
				if(member==13)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Consiglieri %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Soldatto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assossiado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novizio %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novizio %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_YAK, string);
				}
				if(member==12)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Capo Bastone %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo Regime %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sgarrista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Picciotto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Associate %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_PR, string);
				}
				if(leader==5)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_AZTECAS, string);
				}

				if(leader==25)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_AZTECAS, string);
				}
				if(leader==24)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_PCC, string);
				}
				if(leader==6)
				{
				    format(string, sizeof(string), "** Líder %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}
    			if(leader==23)
				{
				    format(string, sizeof(string), "** Líder %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}

				if(leader==9)
				{
				    format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}

				if(leader==32)
				{
				    format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}
				if(leader==10)
				{
				    format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}

				if(leader==30)
				{
				    format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}
				if(leader==14)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GRO, string);
				}

				if(leader==29)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GRO, string);
				}
				if(leader==15)
				{
				    format(string, sizeof(string), "** Líder %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_WHITE, string);
				}
				if(leader==20)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_CVSF, string);
				}
				if(leader==21)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_PCC, string);
				}
				if(leader==17)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_BALLAS, string);
				}

				if(leader==26)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_BALLAS, string);
				}
				if(leader==18)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}

				if(leader==28)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}
				if(leader==19)
				{
				    format(string, sizeof(string), "** Chefe da Boca %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_CVSF, string);
				}
				if(leader==13)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_YAK, string);
				}
				if(leader==12)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_PR, string);
				}
				printf("%s", string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não faz parte de nenhuma família!");
				return true;
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/horas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			//format(string, sizeof(string), "* %s olhou as horas.", PlayerName(playerid));
			//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
			if (minute < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]);
				}
 				else if (PlayerInfo[playerid][pTempoHospitalizado] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo Hospitalizado: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pTempoHospitalizado]);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]);
				}
 				else if (PlayerInfo[playerid][pTempoHospitalizado] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo Hospitalizado: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pTempoHospitalizado]);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return true;
	}

	if(strcmp(cmd, "/horasVIP", true) == 0 || strcmp(cmd, "/tempoVIP", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			if (PlayerInfo[playerid][pTimeVIP] > 0)
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De VIP: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pTimeVIP]);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
		}
		return true;
	}

	if(strcmp(cmd, "/cadeia",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tempo[20];
            new tempo2;
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não esta autorizado para usar este comando!");
                return true;
            }
            tmp = strtok(cmdtext, idx);
            tempo = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo] [Motivo]");
                return true;
            }
            if(!strlen(tempo))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo] [Motivo]");
                return true;
            }
            if(PlayerInfo[giveplayerid][pAdmin] >= 1339 && PlayerInfo[playerid][pAdmin] < SUB_GERENTE)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode prender um Admin Dono !");
                return true;
            }
            giveplayerid = ReturnUser(tmp);
            tempo2 = strval(tempo);
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
            idx++;
            }
            new offset = idx;
            new result[64];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
            idx++;
            }
            result[idx - offset] = EOS;
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));                    format(string, sizeof(string), "O Admin %s prendeu %s por %s minutos, Motivo: %s",PlayerName(playerid), giveplayer, tempo, (result));
                    SendClientMessageToAll(COLOR_LIGHTRED, string);
                    if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                    {
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Você esta preso na cadeia do admin");
                    }
                    else
                    {
                        format(string, sizeof(string), "* Você foi preso, Pelo Admin: %s.", PlayerName(playerid));
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                    }
                    ResetPlayerWeaponsBPH(giveplayerid);
                    WantedPoints[giveplayerid] = 0;
                    NaoPodeDigitar[giveplayerid] = 1;
                    SetPlayerWantedLevel(giveplayerid, 0);
                    PlayerInfo[giveplayerid][pJailed] = 9;
                    PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
                    SetPlayerInterior(giveplayerid, 1);
                    XXAirBreak[giveplayerid] += 2;SetPlayerPos(giveplayerid, 963.418762,2108.292480,1011.030273);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline !");
                return true;
            }
        }
        return true;
    }

	if(strcmp(cmd, "/agendarcadeia",true) == 0 || strcmp(cmd, "/agendar",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tmpo[20];
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não esta autorizado para usar este comando!");
                return true;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /agendarcadeia [NOME_CORRETO] [Tempo] [Motivo]");
                return true;
            }
            tmpo = strtok(cmdtext, idx);
            if(!strlen(tmpo))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /agendarcadeia [NOME_CORRETO] [Tempo] [Motivo]");
                return true;
            }
            new tempo2 = strval(tmpo);
            
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /agendarcadeia [NOME_CORRETO] [Tempo] [Motivo]");
				return true;
			}
            GetPlayerName(playerid, sendername, sizeof(sendername));
           	new arquivo[128];
			format(arquivo, sizeof(arquivo), "Contas/%s.ini",tmp);
			if(!DOF2_FileExists(arquivo))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "[ERRO] Este nick não está registrado no Brasil PlayHappy!");
			    return true;
			}
   			format(string, sizeof(string), "O Admin %s agendou o nick %s para %d minutos de cadeia, Motivo: %s",PlayerName(playerid), tmp, tempo2, (result));
            SendClientMessageToAll(COLOR_LIGHTRED, string);
            AgendarLog(string);
			DOF2_SetInt(arquivo,"Jailed",9);
			DOF2_SetInt(arquivo,"JailTime",tempo2 * 60);
		    strmid(AgendouInfo[playerid][cAdminAgendou], sendername, 0, strlen(sendername), MAX_PLAYER_NAME);
			DOF2_SetString(arquivo,"AdminAgendou",sendername);
 		    strmid(AgendouInfo[playerid][cMotivoAgendou], result, 0, strlen(result), MAX_PLAYER_NAME);
			DOF2_SetString(arquivo,"MotivoAgendou",result);
			DOF2_SetInt(arquivo,"Agendado",1);
			DOF2_SetInt(arquivo,"TempoAgendado",tempo2);
			DOF2_SaveFile();
        }
        return true;
    }


	if(strcmp(cmd, "/particular22", true) == 0 || strcmp(cmd, "/par22", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[giveplayerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[giveplayerid][pHelper] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "O player que você digitou não é admin ou Helper!");
	            return true;
	        }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
       				if(HidePM[giveplayerid] > 0)
					{
				       SendClientMessage(playerid, COLOR_GREY, "   Esse jogador Bloqueou Particulares!");
				       return true;
       				}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
						return true;
					}
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					print(string);
					format(string, sizeof(string), "Particular enviada para %s(ID: %d).", giveplayer, giveplayerid);
					SendClientMessage(playerid,  COLORGZ_EXE, string);
					format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] PM: %s para %s: %s.", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), PlayerName(giveplayerid), (result));
					AChatLog(string);
					return true;
				}
			}
			else
			{
					SendClientMessage(playerid, COLOR_GRAD1, "   Esse jogador está off-line.");
			}
		}
	 	return true;
	}

	if(strcmp(cmd, "/gmx", true) == 0 || strcmp(cmd, "/restart", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pAdmin] >=2)
			{
			    MensagemDesligou = 1;
			    getdate(year, month, day);
				format(string, sizeof(string), "AdmCmd: GMX dado por %s [%d/%d/%d]",PlayerName(playerid), v[2], v[1], v[0]);
			    GMXLog(string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
		    		if(IsPlayerConnected(i))
		    		{
						PlayerLogado[i] = 0;
						LogadoSV[i] = 0;
						OnPlayerSave(i);
				 	}
				}
				GameModeInitExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para dar GMX!");
			}
		}
		return true;
	}


	if(strcmp(cmd, "/particular", true) == 0 || strcmp(cmd, "/par", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1)
			{
				if(PlayerInfo[giveplayerid][pAdmin] < 1 && PlayerInfo[giveplayerid][pHelper] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "O player que você digitou não é admin ou Helper!");
	            	return true;
				}
	        }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
       				if(HidePM[giveplayerid] > 0)
					{
				       SendClientMessage(playerid, COLOR_GREY, "   Esse jogador Bloqueou Particulares!");
				       return true;
       				}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
						return true;
					}
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					print(string);
					format(string, sizeof(string), "Particular enviada para %s(ID: %d).", giveplayer, giveplayerid);
					SendClientMessage(playerid,  COLOR_YELLOW, string);
					format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] PM: %s para %s: %s.", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), PlayerName(giveplayerid), (result));
					AChatLog(string);
					return true;
				}
			}
			else
			{
					SendClientMessage(playerid, COLOR_GRAD1, "   Esse jogador está off-line.");
			}
		}
	 	return true;
	}

	
	if(strcmp(cmd, "/duvida", true) == 0 || strcmp(cmd, "/duvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /duvida [texto]");
				return true;
			}

            if(PlayerInfo[playerid][pVIP] == 1)
            {
                format(string, sizeof(string), "Duvida VIP de %s ID[%d]: %s ", sendername, playerid, (result));
				HelperBroadCast2(COLOR_YELLOW,string,1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sua duvida foi enviada aos Helpers..");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                format(string, sizeof(string), "Duvida VIP-POWER de %s ID[%d]: %s ", sendername, playerid, (result));
				HelperBroadCast2(COLOR_YELLOW,string,1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sua duvida foi enviada aos Helpers..");
            }
            else
            {
				format(string, sizeof(string), "Duvida de %s(%d): %s ", sendername, playerid, (result));
				HelperBroadCast2(COLOR_YELLOW,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua duvida foi enviada aos Helpers..");
			}
		}
	    return true;

	}
	
	if(strcmp(cmd, "/relatorio", true) == 0 || strcmp(cmd, "/relatorio", true) == 0)
 	{
  		if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Você não está logado!");
	            return true;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /relatorio [texto]");
				return true;
			}

            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "Relatorio VIP de %s - ID[%d]: %s ", sendername, playerid, lol, (result));
				//HelperBroadCast(COLOR_YELLOW,string,1);
				ABroadCast(COLOR_LIGHTBLUE,string,1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu relatorios VIP foi enviado aos admins..");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "Relatorio VIP-POWER de %s - ID[%d]: %s ", sendername, playerid, lol, (result));
				//HelperBroadCast(COLOR_YELLOW,string,1);
                ABroadCast(COLOR_LIGHTBLUE,string,1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu relatorio VIP-POWER foi enviado aos admins..");
            }
            else
            {
				format(string, sizeof(string), "Relatorio de %s(%d): %s ", sendername, playerid, (result));
				//HelperBroadCast(COLOR_YELLOW,string,1);
                ABroadCast(COLOR_YELLOW,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relatorio foi enviado aos admins..");
			}
		}
	    return true;

	}
	if(strcmp(cmd, "/presos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE, "|______________[ Presos ]______________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Policia Militar - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 27)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Policia Militar de SF - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
   					if(PlayerInfo[i][pJailed] == 33)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Policia Rodoviária - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 2)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Rotam LS - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 11)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Policia Federal - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 16)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Rotam de SF - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 3)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: HQ Exército - Tempo: %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 9)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s: Cadeia Admin: Tempo - %d seg.",  sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return true;

	}
	
	if(strcmp(cmd, "/Hospitalizados", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE, "|______________[ Hospitalizados ]______________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pHospitalID] > 0 && PlayerInfo[i][pTempoHospitalizado] > 0)
				    {
				    	if(storeexit[i] == 1)
				    	{
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 128, "Hospitalizado %s [Tempo: %d seg] {FFFFFF}(Hosp. Regional de Los Santos)",  sendername, PlayerInfo[i][pTempoHospitalizado]);
      						SendClientMessage(playerid, COLOR_GRAD2, string);
						}
						if(storeexit[i] == 2)
				    	{
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 128, "Hospitalizado %s [Tempo: %d seg] {FFFFFF}(Hosp. Regional de San Fierro)",  sendername, PlayerInfo[i][pTempoHospitalizado]);
      						SendClientMessage(playerid, COLOR_GRAD2, string);
						}
					}
				}
			}
		}
		return true;

	}
	
	if(strcmp(cmd, "/promover", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use:  /Promover [id] [Cargos 1 a 5] OBS:[Cargos 100 e 200 são Sub-Lideres]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level != 1 && level != 2 && level != 3 && level != 4 && level != 5 && level != 100 && level != 200)
			{
				SendClientMessage(playerid, COLOR_GREY, "   [Cargos 1 a 5] OBS:Cargos 100 e 200 são Sub-Lideres");
				return true;
			}
			if (PlayerInfo[playerid][pLider] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
    				for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
				  		{
					    	if(para1 != INVALID_PLAYER_ID)
					      	{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[para1][pCargo] = level;
								format(string, sizeof(string), "   Você foi promovido pelo líder %s", PlayerName(playerid));
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "   Você promoveu %s a cargo %d.", giveplayer,level);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								new org = PlayerInfo[playerid][pLider];
								if(level == 100)
								{
						    		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
									{
							    		DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 100);

									}
									else
									{
							   			strmid(string, InfoOrg[org][SubLider], 0, strlen(InfoOrg[org][SubLider]), 255);
							    		DemitirInfoOrg(giveplayer);
							    		DemitirInfoOrg(InfoOrg[org][SubLider]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 100);
									}
									return true;
								}
								else if(level == 200)
								{
						    		if(strcmp(InfoOrg[org][SubLider2],"Ninguem",true)==0)
									{
                                        DemitirInfoOrg(giveplayer);
										DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 200);

									}
									else
									{
						   				strmid(string, InfoOrg[org][SubLider2], 0, strlen(InfoOrg[org][SubLider2]), 255);
                                        DemitirInfoOrg(giveplayer);
										DemitirInfoOrg(InfoOrg[org][SubLider2]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 200);
									}
                                    return true;
								}
								if(strcmp(InfoOrg[org][SubLider],giveplayer,true)==0)
								{
		    						if(level < 100)
									{
										DemitirInfoOrg(giveplayer);
								    	ConviteInfoOrg(giveplayer, org, level);
									}
									return true;
								}
							}
							if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
					  		{
					  		    SendClientMessage(playerid, COLOR_GREY, "Não pode promover quem não é da sua org.");
					  		    return true;
							}
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder !");
			}
		}
		return true;
	}
	if(NaoPodeDigitar[playerid] == 1)
 	{
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você está preso por admin, e não pode digitar comandos");
	    SendClientMessage(playerid, COLOR_GRAD2, "DISPONIVEIS: /horas /presos /relatorio /duvida /par /laptop /v /ba /rg");
		SendClientMessage(playerid, COLOR_GRAD2, "DISPONIVEIS: /ga /f /al /d /a /ah /h /gritar /demitir /convidar /promover");
	    return 1;
	}
	
	if(strcmp(cmd,"/hqhelper",true)==0)
    {
        if(PlayerInfo[playerid][pHelper] == 0)
        {
      		SendClientMessage(playerid, COLOR_GRAD1, " Você não é um Helper!");
     		return 1;
  		}
    	if(helpertrampando[playerid] == 0)
     	{
    		SendClientMessage(playerid, COLOR_GRAD1, " Você não esta em Modo ajuda!");
   			return 1;
		}
  		format(string, sizeof(string), "Helper %s Foi para HQ dos Helpers.",sendername);
    	ProxDetector(30.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
		if (GetPlayerState(playerid) == 2)
		{
			XXAirBreak[playerid] += 3;
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 2477.7720,-1750.3823,13.5469);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			return true;
		}
		else
		{
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2477.7720,-1750.3823,13.5469);
		}
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		return true;
	}

	if(strcmp(cmd,"/comprarouros",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {

	    	if(!PlayerToPoint(9.5,playerid,2327.4045,6.5299,26.5351) && !PlayerToPoint(9.5,playerid,2308.8313,-13.9553,26.7422))//PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não esta no banco");
	            return true;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /comprarouros [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			new price = moneys * 100000;
			if(PlayerInfo[playerid][pConta] > price)
			{
   				format(string, sizeof(string), "*Você comprou %d ouros por R$%d", moneys, price);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    PlayerInfo[playerid][pConta] -= price;
			    PlayerInfo[playerid][pOuros] += moneys;
			}
			else
			{
   				format(string, sizeof(string), "   Voce não tem R$%d !", price);
			    SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
  		else
    	{
     		SendClientMessage(playerid, COLOR_GREY, "   Você não esta no local de troca !");
       		return 1;
    	}
	    return true;
	}
	if(strcmp(cmd,"/venderouros",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {

	    	if(!PlayerToPoint(9.5,playerid,2327.4045,6.5299,26.5351) && !PlayerToPoint(9.5,playerid,2308.8313,-13.9553,26.7422))//PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469)

	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não esta no banco");
	            return true;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /venderouros [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			new price = moneys * 100000;
			if(PlayerInfo[playerid][pOuros] >= moneys)
			{
				format(string, sizeof(string), "*Você vendeu %d ouros por R$%d", moneys, price);
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    PlayerInfo[playerid][pConta] += price;
			    PlayerInfo[playerid][pOuros] -= moneys;
			}
			else
			{
   				format(string, sizeof(string), "   Voce não tem %d ouros", moneys);
			    SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
  		else
  		{
    		SendClientMessage(playerid, COLOR_GREY, "   Você não esta conectado");
      		return 1;
    	}
	    return true;
	}

	if(strcmp(cmd,"/Materiais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Você não é Vendedor De Armas.");
			    return 1;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "Use: /Materiais [name]");
				SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: pegar, trocar.");
				return 1;
			}
			if(strcmp(x_nr,"pegar",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,1837.0897,-1887.5219,13.4226))
			    {
			        if(MatsHolding[playerid] >= 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você já tem pacotes !");
				        return 1;
			        }
			        tmp = strtok(cmdtext, idx);
			        if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "Use: /Materiais pegar [quantidade]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 20) { SendClientMessage(playerid, COLOR_GREY, "O máximo de pacotes é 20!"); return 1; }
					new price = moneys * 100;
					if(GetPlayerMoneyEx(playerid) > price)
					{
					    format(string, sizeof(string), "* Você recebeu %d Materiais por R$%d, siga o checkpoint.", moneys, price);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    GivePlayerMoneyEx(playerid, - price);
					    MatsHolding[playerid] = moneys;
					    SetPlayerCheckpoint(playerid, 1953.3899,-1997.8810,13.5469, 7.0);
					}
					else
					{
					    format(string, sizeof(string), "   Voce não tem R$%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não esta no local de troca !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"trocar",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,1953.3899,-1997.8810,13.5469))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (100)*(MatsHolding[playerid]);
			            //format(string, sizeof(string), "* A Boca deu a Voce %d Para seu %d pacote.", payout, MatsHolding[playerid]);
			            format(string, sizeof(string), "* Você pegou %d Materiais por %d pacotes.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "Você não tem pacotes!");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Você não esta no Local de trocar");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Materiais Inválidos !");
			    return 1;
			}
		}
		return 1;
	}

//=====================================alarme=====================
    if(strcmp("/alarme",cmdtext,true,6)==0)
    {
        if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar em um veículo!");
			return 1;
		}
        new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		if(GetPVarInt(playerid,"Alarm") == 1)
		{
        	SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);SetPVarInt(playerid,"Alarm",0);
        	SendClientMessage(playerid, COLOR_WHITE, "Alarme do veiculo desligado");
        }
        else if(GetPVarInt(playerid,"Alarm") == 0)
		{
            SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);SetPVarInt(playerid,"Alarm",1);
            SendClientMessage(playerid, COLOR_WHITE, "Alarme do veiculo ligado");
        }
        return true;
    }
    
    if(strcmp("/farol",cmdtext,true,6)==0)
    {
        if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar em um veículo!");
			return 1;
		}
        new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;
        vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		if(GetPVarInt(playerid,"Lights") == 1)
		{
        	SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
			SetPVarInt(playerid,"Lights",0);
        	SendClientMessage(playerid, COLOR_WHITE, "Farol do veiculo desligado");
		}
        else if(GetPVarInt(playerid,"Lights") == 0)
		{
            SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
            SetPVarInt(playerid,"Lights",1);
            SendClientMessage(playerid, COLOR_WHITE, "Farol do veiculo ligado");
        }
        return true;
    }
    
    if(strcmp("/capo",cmdtext,true,6)==0)
    {
        if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar em um veículo!");
			return 1;
		}
        new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;vehicleid = GetPlayerVehicleID(playerid);GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        if(GetPVarInt(playerid,"Bonnet") == 1)
		{
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
			SetPVarInt(playerid,"Bonnet",0);
            SendClientMessage(playerid, COLOR_WHITE, "Capo do veiculo fechado");
		}
        else if(GetPVarInt(playerid,"Bonnet") == 0)
		{
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
			SetPVarInt(playerid,"Bonnet",1);
            SendClientMessage(playerid, COLOR_WHITE, "Capo do veiculo aberto");
		}
        return true;
    }
    
    if(strcmp("/SCarro",cmdtext,true,6)==0 || strcmp("/posicaocarro",cmdtext,true,6)==0 || strcmp("/adv",cmdtext,true,6)==0)
    {
    	if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			SendClientMessage(playerid,COLOR_GREY,"Você não pode usar este comando");
			return 1;
		}
        if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar em um veículo!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "USE: /SCarro [cor1] [cor2] [COMENTARIO]");
			return true;
		}
		new color1 = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "USE: /SCarro [cor1] [cor2] [COMENTARIO]");
			return true;
		}
		new color2 = strval(tmp);
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float:Pos_X, Float:Pos_Y, Float:Pos_Z, Float:Ang_Z;
		GetVehicleZAngle(vehicleid, Ang_Z);
		GetVehiclePos(vehicleid, Pos_X, Pos_Y, Pos_Z);
		new modelo = GetVehicleModel(vehicleid);
		format(string, sizeof(string), "AddStaticVehicleEx(%d, %0.4f,%0.4f,%0.4f,%0.4f, %d,%d, -1);//%s",modelo,Pos_X,Pos_Y,Pos_Z,Ang_Z,color1,color2,result);
		SendClientMessage(playerid, COLOR_WHITE, string);
		new File:Eminnen;
		Eminnen = fopen("CCarros.pwn",io_append);
		format(string, 256, "AddStaticVehicleEx(%d, %0.4f,%0.4f,%0.4f,%0.4f, %d,%d, -1);//%s\n",modelo,Pos_X,Pos_Y,Pos_Z,Ang_Z,color1,color2,result);
		fwrite(Eminnen,string);
		fclose(Eminnen);
        return true;
    }

	if(strcmp(cmd, "/bug", true) == 0)
 	{
        if(IsPlayerConnected(playerid))
        {
           	SendClientMessage(playerid, COLOR_WHITE, "OBS: Isto é muito importante e seu nick será gravado no arquivo.");
			SendClientMessage(playerid, COLOR_WHITE, "Só escreva se for realmente um BUG! ou será punido pelos responsáveis!");
			ShowPlayerDialog(playerid, 8912, DIALOG_STYLE_INPUT, "Escreva o BUG","Escreva um pouco sobre o BUG. (tente não usar acentos)                                                                                                                            .","Pronto","Cancelar");
			return true;
		}
		return true;
	}


	if(strcmp(cmd, "/rbug", true) == 0)
 	{
        if(IsPlayerConnected(playerid))
        {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				return true;
			}
  			getdate(Ano, Mes, Dia);
			gettime(Hora, Minuto, Segundo);
			if(PlayerInfo[playerid][pConnectTime] >= 0)
			{
			    new OPS[256];
				SendClientMessage(playerid, COLOR_WHITE, "OK, muito obrigado por relatar este BUG, o servidor agradece S2!!");
				new File:filebug;
				filebug = fopen("BUGS.pwn",io_append);
				format(OPS, 256, "//>================= [ %d/%d/%d as %d:%d:%d ] =================<\n\n//Por: %s\nBUG: %s\n\n",
				Dia, Mes, Ano,
				Hora, Minuto, Segundo,
				PlayerName(playerid),
				result);
				fwrite(filebug,OPS);
				fclose(filebug);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "BUG salvo com sucesso!");
				return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Você precisa ter mais de 1 hora jogada para relatar um BUG");
			    return true;
			}
		}
		return true;
    }

//======================motor===========

    if(strcmp("/motor",cmdtext,true,6)==0)
    {
        if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar em um veículo!");
			return 1;
		}
		new mot, lu, alar, por, cap, porma, ob;
        new carro = GetPlayerVehicleID(playerid);

     	new vid = GetPlayerVehicleID(playerid);
      	if(Gas[vid] == 0)
        		return SendClientMessage(playerid,COLOR_GRAD2," Veiculo sem Combustivel");
		if(LigadoDesligado2[vid] == 1)
		{
		    motor[playerid] = 1;
		}
		if(LigadoDesligado2[vid] == 0)
		{
		    motor[playerid] = 0;
		}
		if(carro != INVALID_VEHICLE_ID)
        {
            if(motor[playerid] == 0)
            {
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
                motor[playerid] = 1;
                LigadoDesligado2[carro] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "Motor do veiculo ligado");
            }
            else
            {
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
                motor[playerid] = 0;
                LigadoDesligado2[carro] = 0;
                SendClientMessage(playerid, COLOR_WHITE, "Motor do veiculo desligado");
            }
        }
        return 1;
    }
    
	if((strcmp(cmd, "/atualizar3dtext", true)==0 || strcmp(cmd, "/a3d", true) ==0) && PlayerInfo[playerid][pAdmin] >= 1337)
	{
		Atualizar3Dtexts();
		SendClientMessage(playerid, COLOR_WHITE, "Textos 3D atualizados");
		return true;
	}

	if (strcmp(cmd, "/mercadorials", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar 5 minutos pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, 1756.1359,-2064.8230,13.2708, 8.0);
        TruckMission[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}
	if (strcmp(cmd, "/mercadorialv", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, 2054.3250,1919.5562,11.8507, 8.0);
        TruckMission[playerid] = 3;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}
	if (strcmp(cmd, "/mercadoriasf", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, -1729.3041,-123.8946,3.2335, 8.0);
        TruckMission[playerid] = 2;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}

	if(strcmp(cmd,"/terminais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new Veh = GetPlayerVehicleID(playerid);
	        if(!IsAOniCar(Veh))
	        {
			    SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um ônibus!");
			    return true;
	        }
			if(PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce está de folga e recebeu R$%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					DisablePlayerCheckpoint(playerid);
					ConsumingMoney[playerid] = 1;
					TransportValue[playerid] = 0;
					TransportMoney[playerid] = 0;
					return true;
				}
				else
				{
			    	BusDrivers += 1;
					TransportDuty[playerid] = 2;
					CheCks[playerid] = 55;
					TransportValue[playerid] = 100;
   					format(string, sizeof(string), "* Motorista de onibus %s iniciou uma rota de Onibus", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você receberá R$80 a cada checkpoint.");
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE,"USE: /terminais novamente para parar o serviço");
                    RotaOnibus(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"Você não é um motorista de ônibus.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/online", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < MASTER)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem permissão para usar esse comando.");
			return true;
	    }
	    if(ContarJogadores() >= GetMaxPlayers())
	    {
	        new Geral1[] = {0xF6F6F6AA,0x95FF90AA,	0x78B4FFAA,	0xFFA0FAAA,0xF8F8FFAA,
			0xD9C1F6AA,0x2641FEAA,	0xFFA0FAAA,0xD9DB00AA,0x2641FEAA,0xF6B9F6AA,0xFFA0FAAA,0xF6F6F6AA,
			0xF636F0ff,0x95FF90AA,0x78B4FFAA,0xC36CF6AA,0xF68588AA,};
   			new Geral2[] = {0xF6F6F6AA,0x95FF90AA,	0x78B4FFAA,	0xFFA0FAAA,0xF8F8FFAA,
			0xD9C1F6AA,0x2641FEAA,	0xFFA0FAAA,0xD9DB00AA,0x2641FEAA,0xF6B9F6AA,0xFFA0FAAA,0xF6F6F6AA,
			0xF636F0ff,0x95FF90AA,0x78B4FFAA,0xC36CF6AA,0xF68588AA,};
   			new Geral3[] = {0xF6F6F6AA,0x95FF90AA,	0x78B4FFAA,	0xFFA0FAAA,0xF8F8FFAA,
			0xD9C1F6AA,0x2641FEAA,	0xFFA0FAAA,0xD9DB00AA,0x2641FEAA,0xF6B9F6AA,0xFFA0FAAA,0xF6F6F6AA,
			0xF636F0ff,0x95FF90AA,0x78B4FFAA,0xC36CF6AA,0xF68588AA,};
		 	new Geral4[] = {0xF6F6F6AA,0x95FF90AA,	0x78B4FFAA,	0xFFA0FAAA,0xF8F8FFAA,
			0xD9C1F6AA,0x2641FEAA,	0xFFA0FAAA,0xD9DB00AA,0x2641FEAA,0xF6B9F6AA,0xFFA0FAAA,0xF6F6F6AA,
			0xF636F0ff,0x95FF90AA,0x78B4FFAA,0xC36CF6AA,0xF68588AA,};
			new random1 = random(sizeof(Geral1));
			new random2 = random(sizeof(Geral2));
			new random3 = random(sizeof(Geral3));
			new random4 = random(sizeof(Geral4));
	        format(gstring, sizeof(gstring), "SERVIDOR CHEIO [%d/%d Players Online] BPH OWNA!!!", ContarJogadores(), GetMaxPlayers());
			SendClientMessageToAll(Geral1[random1], gstring);
			format(gstring, sizeof(gstring), "SERVIDOR CHEIO [%d/%d Players Online] BPH OWNA!!!", ContarJogadores(), GetMaxPlayers());
			SendClientMessageToAll(Geral2[random2], gstring);
			format(gstring, sizeof(gstring), "SERVIDOR CHEIO [%d/%d Players Online] BPH OWNA!!!", ContarJogadores(), GetMaxPlayers());
			SendClientMessageToAll(Geral3[random3], gstring);
			format(gstring, sizeof(gstring), "SERVIDOR CHEIO [%d/%d Players Online] BPH OWNA!!!", ContarJogadores(), GetMaxPlayers());
			SendClientMessageToAll(Geral4[random4], gstring);
			return true;
		}
		format(gstring, sizeof(gstring), "SERVER: %d/%d Players Online.", ContarJogadores(), GetMaxPlayers());
		SendClientMessageToAll(COLOR_LIGHTBLUE, gstring);
		return true;
	}
	

	if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/pararanim",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
   			if(PlayerToPoint(3.0,playerid,2144.3711,1641.4792,993.5761) || PlayerToPoint(3.0,playerid,303.9886,-169.0725,999.5938) || PlayerToPoint(3.0,playerid,294.8029,-57.8727,1001.5156) || PlayerToPoint(3.0,playerid,162.1254,-79.7925,1001.8047) ||
			PlayerToPoint(3.0,playerid,211.3817,-96.1272,1005.2578) || PlayerToPoint(3.0,playerid,820.8934,8.5365,1004.1958) || PlayerToPoint(3.0,playerid,205.4959,-11.5585,1005.2109))
			{
				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar este comnado agora!");
				return true;
			}
  			ClearAnimations(playerid);
    		ClearAnimations(playerid);
    	}
    	return true;
	}
	
	if(strcmp(cmd,"/saircamera",true)==0 || strcmp(cmd,"/lavecamera",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        NaCamera[playerid] = 1;
  			SpawnPlayer(playerid);
  			TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
			TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
			TextDrawHideForPlayer(playerid, TextRec[playerid]);
    	}
    	return true;
	}

//=====================================[INFOORG]================================//
 	if(strcmp(cmd, "/limparvaga", true) == 0 || strcmp(cmd, "/lvaga", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente líderes podem usar este comando!");
			return true;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvaga [Vaga]");
			return true;
		}
		new Vaga2 = strval(tmp);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
		if(strcmp(tmp,"sub",true)==0)
		{
   			if(IsPlayerOnline(InfoOrg[org][SubLider]))
  			{
  			    id=GetPlayerID(InfoOrg[org][SubLider]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
		    DOF2_SetString(arquivo,"SubLider","Ninguem");
		    DOF2_SaveFile();
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga do Sub Líder");
		    return true;
		}
		if(strcmp(tmp,"sub2",true)==0)
		{
   			if(IsPlayerOnline(InfoOrg[org][SubLider2]))
  			{
  			    id=GetPlayerID(InfoOrg[org][SubLider2]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][SubLider2], "Ninguem", 0, strlen("Ninguem"), 255);
		    DOF2_SetString(arquivo,"SubLider2","Ninguem");
		    DOF2_SaveFile();
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga do Sub Líder 2");
		    return true;
		}
		if(Vaga2 == 1)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro1]);
		    if(IsPlayerOnline(InfoOrg[org][Membro1])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro1","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 1");
		   	return true;
		}
		if(Vaga2 == 2)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro2]);
		    if(IsPlayerOnline(InfoOrg[org][Membro2])) Demitir(playerid, id);
  			strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
 			DOF2_SetString(arquivo,"Membro2","Ninguem");
 			DOF2_SaveFile();
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 2");
		}
		if(Vaga2 == 3)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro3]);
		    if(IsPlayerOnline(InfoOrg[org][Membro3])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro3","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 3");
		}
		if(Vaga2 == 4)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro4]);
		    if(IsPlayerOnline(InfoOrg[org][Membro4])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro4","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 4");
		}
		if(Vaga2 == 5)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro5]);
		    if(IsPlayerOnline(InfoOrg[org][Membro5])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro5","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 5");
		}
		if(Vaga2 == 6)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro6]);
		    if(IsPlayerOnline(InfoOrg[org][Membro6])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro6","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 6");
		}
		if(Vaga2 == 7)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro7]);
		    if(IsPlayerOnline(InfoOrg[org][Membro7])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Membro7","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 7");
		}
		if(Vaga2 == 8)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro8]);
		    if(IsPlayerOnline(InfoOrg[org][Membro8])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro8","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 8");
		}
		if(Vaga2 == 9)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro9]);
		    if(IsPlayerOnline(InfoOrg[org][Membro9])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro9","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 9");
		}
		if(Vaga2 == 10)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro10]);
		    if(IsPlayerOnline(InfoOrg[org][Membro10])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro10","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 10");
		}
		if(Vaga2 == 11)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro11]);
		    if(IsPlayerOnline(InfoOrg[org][Membro11])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro11","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 11");
		}
		if(Vaga2 == 12)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro12]);
		    if(IsPlayerOnline(InfoOrg[org][Membro12])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro12","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 12");
		}
		if(Vaga2 == 13)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro13]);
		    if(IsPlayerOnline(InfoOrg[org][Membro13])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro13","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 13");
		}
		if(Vaga2 == 14)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro14]);
		    if(IsPlayerOnline(InfoOrg[org][Membro14])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro14","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 14");
		}
		if(Vaga2 == 15)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro15]);
		    if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro15","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 16)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro16]);
		    if(IsPlayerOnline(InfoOrg[org][Membro16])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro16","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 17)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro17]);
		    if(IsPlayerOnline(InfoOrg[org][Membro17])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro17","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 18)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro18]);
		    if(IsPlayerOnline(InfoOrg[org][Membro18])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro18","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 19)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro19]);
		    if(IsPlayerOnline(InfoOrg[org][Membro19])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro19","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 20)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro20]);
		    if(IsPlayerOnline(InfoOrg[org][Membro20])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Membro20","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		//else{ SendClientMessage(playerid, COLOR_GRAD2," Vaga mínima 1, máxima 15"); }
	    return true;
	}
	
 	if(strcmp(cmd, "/limpacandidato", true) == 0 || strcmp(cmd, "/lcandidato", true) == 0)
	{
		if(PlayerInfo[playerid][pCargo] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente líderes podem usar este comando!");
			return true;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limpacandidato [Vaga]");
			return true;
		}
		new Vaga2 = strval(tmp);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "Candidatos/Org%d.cfg",org);
		if(Vaga2 == 1)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato1]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato1])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Candidato1","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 1");
		   	return true;
		}
		if(Vaga2 == 2)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato2]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato2])) Demitir(playerid, id);
  			strmid(InfoOrg2[org][Candidato2], "Ninguem", 0, strlen("Ninguem"), 255);
 			DOF2_SetString(arquivo,"Candidato2","Ninguem");
 			DOF2_SaveFile();
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 2");
		}
		if(Vaga2 == 3)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato3]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato3])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Candidato3","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 3");
		}
		if(Vaga2 == 4)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato4]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato4])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato4], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato4","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 4");
		}
		if(Vaga2 == 5)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato5]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato5])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato5], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato5","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 5");
		}
		if(Vaga2 == 6)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato6]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato6])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato6], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato6","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 6");
		}
		if(Vaga2 == 7)// id da vaga
		{
		    id=GetPlayerID(InfoOrg2[org][Candidato7]);
		    if(IsPlayerOnline(InfoOrg2[org][Candidato7])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	DOF2_SetString(arquivo,"Candidato7","Ninguem");
		   	DOF2_SaveFile();
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 7");
		}
		if(Vaga2 == 8)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato8]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato8])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato8], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato8","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 8");
		}
		if(Vaga2 == 9)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato9]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato9])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato9], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato9","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 9");
		}
		if(Vaga2 == 10)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato10]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato10])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato10], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato10","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 10");
		}
		if(Vaga2 == 11)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato11]);
		   // if(IsPlayerOnline(InfoOrg2[org][Candidato11])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato11], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato11","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 11");
		}
		if(Vaga2 == 12)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato12]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato12])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato12], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato12","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 12");
		}
		if(Vaga2 == 13)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato13]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato13])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato13], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato13","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 13");
		}
		if(Vaga2 == 14)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato14]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato14])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato14], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato14","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 14");
		}
		if(Vaga2 == 15)// id da vaga
		{
		    id=GetPlayerID(InfoOrg2[org][Candidato15]);
		    if(IsPlayerOnline(InfoOrg2[org][Candidato15])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato15], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato15","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 15");
		}
		if(Vaga2 == 16)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato16]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato16])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato16], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato16","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 16");
		}
		if(Vaga2 == 17)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato17]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato17])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato17], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato17","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 17");
		}
		if(Vaga2 == 18)// id da vaga
		{
		    id=GetPlayerID(InfoOrg2[org][Candidato18]);
		    if(IsPlayerOnline(InfoOrg2[org][Candidato18])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato18], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato18","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 18");
		}
		if(Vaga2 == 19)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato19]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato19])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato19], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato19","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 19");
		}
		if(Vaga2 == 20)// id da vaga
		{
		    //id=GetPlayerID(InfoOrg2[org][Candidato20]);
		    //if(IsPlayerOnline(InfoOrg2[org][Candidato20])) Demitir(playerid, id);
		    strmid(InfoOrg2[org][Candidato20], "Ninguem", 0, strlen("Ninguem"), 255);
        	DOF2_SetString(arquivo,"Candidato20","Ninguem");
        	DOF2_SaveFile();
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você limpou o Candidato 20");
		}
		//else{ SendClientMessage(playerid, COLOR_GRAD2," Vaga mínima 1, máxima 15"); }
	    return true;
	}

   	if (strcmp(cmd, "/limparlider", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < MASTER)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
			return true;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparlider [organização]");
			return true;
		}
		new Vaga2 = strval(tmp);
		if(Vaga2 < 1 || Vaga2 > 34) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1, máximo 34 !"); return true; }
		new id=GetPlayerID(InfoOrg[Vaga2][Lider]);
		format(string, sizeof(string), "ADMIN: %s limpou a vaga %d do líder %s",PlayerName(playerid), Vaga2, InfoOrg[Vaga2][Lider]);
		LideresLog(string);
		if(IsPlayerOnline(InfoOrg[Vaga2][Lider])) DemitirLider(id);
		strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring, 128, "ORG Arquivos/Org%d.cfg", Vaga2);
       	DOF2_SetString(gstring,"Lider","Ninguem");
       	DOF2_SaveFile();
		format(string, sizeof(string), "Você limpou o líder da organização Nº %d",Vaga2);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return true;
	}
	if(strcmp(cmd,"/carid",true) == 0 && PlayerInfo[playerid][pAdmin] == DONO)
	{
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		format(string,sizeof(string), "Carro ID: %d", vehicle);
		SendClientMessage(playerid, COLOR_GREY, string);
		return true;
	}
	
	if(strcmp(cmd,"/setpos",true)== 0 && PlayerInfo[playerid][pAdmin] == DONO)
	{
		new plid,Float:setpos[3];
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
		plid = strval(tmp);
		for(new x=0;x<3;x++)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
			setpos[x] = floatstr(tmp);
		}
		XXAirBreak[plid] += 3;SetPlayerPos(plid,setpos[0],setpos[1],setpos[2]);
		SendClientMessage(playerid, COR_PM, "Posição setada!");
		return true;
	}
	
	if(strcmp(cmd, "/rcarro", true) == 0 || strcmp(cmd, "/fixveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "Server: Voce não esta autorizado a usar este comando!");
			    return true;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
                new name[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, name, sizeof(name));
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    SendClientMessage(playerid, COLOR_GREY, "Server: Carro concertado!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/criaradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
     	{
	    	if(PlayerInfo[playerid][pAdmin] < 1337)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando!");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criaradmin [id] [Nivel(de 1 a 3)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criaradmin [id] [Nivel(de 1 a 3)]");
				return 1;
			}
			level = strval(tmp);
			if(level > 3001)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "	Não se pode criar um admin com nivel maior que 3001");
			    return true;
			}
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					if(level == 0)
					{
	    				format(string, sizeof(string), "  Você retirou o admin de %s.", giveplayer);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    format(string, sizeof(string), "  O Admin %s retirou seu admin!", sendername);
					    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                		PlayerInfo[para1][pAdmin] = 0;
	   					getdate(year, month, day);
						gettime(hour,minute,second);
						format(string, sizeof(string), "%s retirou o admin de %s [%d/%d/%d] ás [%d:%d:%d].", sendername, giveplayer, day,
						month, year, hour, minute, second);
						PAdminsLog(string);
                		return true;
					}
   					if(level > 1337)
					{
						if(strcmp(sendername,"dimmy_scarface",true)==0 || strcmp(sendername,NOME1,true)==0|| strcmp(sendername,NOME2,true)==0 || strcmp(sendername,NOME3,true)==0 ||
						strcmp(sendername,NOME4,true)==0)
						{
						
						}
						else
						{
						    PodeNaoMulek;
						    return true;
						}
					}
					format(string, sizeof(string), "   Você foi promovido a nivel %d de admin, pelo admin %s", level, sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Você promoveu %s Para admin Nivel %d", giveplayer,level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu admin nivel %d para %s [%d/%d/%d] ás [%d:%d:%d].", sendername, level, giveplayer, day,
					month, year, hour, minute, second);
					PlayerInfo[para1][pAdmin] = level;
					PAdminsLog(string);
				}
			}
		}
		return 1;
	}


   	if(strcmp(cmd, "/darvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [id] [Meses]");
				return 1;
			}
			new para1;
			new level;
			new meses;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			meses = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [id] [Meses]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		            if(level < 1)return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não pode definir para 0 meses!");
					format(string, sizeof string, "Você deu %d meses de VIP para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof string, "Admin %s te deu %d meses de VIP com R$%d e %d Niveis, Aproveite Nossos beneficios!", sendername, level, 15000000*meses, 3*meses);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu vip ao %s nível %d (%d/%d/%d - %d:%d)",sendername,giveplayer,level,day, month, year,hour, minute);
					VipsLog(string);
					PlayerInfo[para1][pLevel] += 3*meses;
					PlayerInfo[para1][pVIP] = 1;
					PlayerInfo[para1][pTimeVIP] = 0;
					GivePlayerMoney(para1, 15000000*meses);
					ScoreLevel(para1);
					PlayerInfo[para1][pDiaVIP] = day;
					PlayerInfo[para1][pMesVIP] = month+level;
					PlayerInfo[para1][pAnoVIP] = year;
					if(PlayerInfo[para1][pMesVIP] > 12)
					{
					    PlayerInfo[para1][pMesVIP] -= 12;
					    PlayerInfo[para1][pAnoVIP]++;
					}
					OnPlayerSave(para1);
				}
			}
		}
		return 1;
	}

   	if(strcmp(cmd, "/darvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvida [id] [quantia]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvida [id] [quantia]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					SetPlayerHealth(para1, level);
					format(string, 128, "AdmCmd: %s deu %d de saúde para %s",sendername, level, giveplayer);
					ABroadCast(0xC2CA7FFF,string,1);
					comandosadminlog(string);
				}
			}
		}
		return 1;
	}

   	if(strcmp(cmd, "/setardrunk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setardrunk [id] [quantia]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setardrunk [id] [quantia]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					SetPlayerDrunkLevel(para1, level);
					format(string, sizeof(string), "Você setou Drunk Level de %s para: %d.",giveplayer, level);
					SendClientMessage(playerid, COLOR_YELLOW,string);
				}
			}
		}
		return 1;
	}

   	if(strcmp(cmd, "/darcolete", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darcolete [id] [quantia]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darcolete [id] [quantia]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					SetPlayerArmour(para1, level);
					VidaDoCara[para1] = 2;AXITERCOLETE[para1] = 3;
					format(string, 128, "AdmCmd: %s deu %d de colete para %s",sendername, level, giveplayer);
					ABroadCast(0xC2CA7FFF,string,1);
					comandosadminlog(string);
				}
			}
		}
		return 1;
	}

   	if(strcmp(cmd, "/dargrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [quantia]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [quantia]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof string, "Você deu R$%d para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof string, "O Admin %s te deu R$%d", sendername, level);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(para1, level);
					format(string, 128, "AdmCmd: %s deu grana (R$%d) para %s",sendername, level, giveplayer);
					ABroadCast(0xC2CA7FFF,string,1);
					comandosadminlog(string);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darvippower", true) == 0 || strcmp(cmd, "/darsvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvippower [id] [Meses]");
				return 1;
			}
			new para1;
			new level;
			new meses;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			meses = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darsupervip [id] [Meses]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		            if(level < 1)return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não pode definir para 0 meses!");
					format(string, sizeof string, "Você deu %d Meses de VIP-POWER para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof string, "Admin %s te deu %d meses de VIP-POWER com R$%d e %d Niveis, Aproveite Nossos beneficios!", sendername, level, 30000000*meses, 6*meses);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					PlayerInfo[para1][pLevel] += 6*meses;
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu vip ao %s nível %d (%d/%d/%d - %d:%d)",sendername,giveplayer,level,day, month, year,hour, minute);
					VipsLog(string);
					PlayerInfo[para1][pVIP] = 2;
					PlayerInfo[para1][pTimeVIP] = 0;
					GivePlayerMoney(para1, 30000000*meses);
					ScoreLevel(para1);
					PlayerInfo[para1][pDiaVIP] = day;
					PlayerInfo[para1][pMesVIP] = month+level;
					PlayerInfo[para1][pAnoVIP] = year;
					if(PlayerInfo[para1][pMesVIP] > 12)
					{
					    PlayerInfo[para1][pMesVIP] -= 12;
					    PlayerInfo[para1][pAnoVIP]++;
					}
					OnPlayerSave(para1);
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/retirarvip", true) == 0 || strcmp(cmd, "/retirarvippower", true) == 0)
	{
   		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirarvip [ID do Player] [Motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] < 1337)
			{
					QQIssoNovinha;
					return true;
			}
   			if(giveplayerid != INVALID_PLAYER_ID)
		    {
		       	if (PlayerInfo[giveplayerid][pVIP] == 0)
				{

					SendClientMessage(playerid, COLOR_GRAD1," O Jogador não é VIP!");
					return true;
				}
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirarvip [ID do Player] [Motivo]");
					return true;
				}
				format(string, sizeof string, "Você retirou o VIP/VIP-POWER de %s, Motivo: %s", giveplayer, (result));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof string, "O Admin %s Retirou seu VIP/VIP-POWER, Motivo: %s", sendername, (result));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				getdate(year, month, day);
				gettime(hour,minute,second);
				format(string, sizeof(string), "%s retirou o VIP/VIP-POWER de %s (%d/%d/%d - %d:%d)",sendername,giveplayer, day, month, year,hour, minute);
				VipsLog(string);
				PlayerInfo[giveplayerid][pVIP] = 0;
				PlayerInfo[giveplayerid][pTimeVIP] = 0;
			}
			return 1;
		}
	}

	if (strcmp(cmd, "/mudarluta", true) == 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    Controle(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "Confirma", "Cancela");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Voce não está no ginásio de luta de LS.");
		}
		return true;
	}

	if (strcmp(cmd, "/praia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 229.359,-1807.635,4.141);
					LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,229.359,-1807.635,4.141);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/irtunning", true) == 0 || strcmp(cmd, "/tunning", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fim", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2415.3999,2219.0083,4.9844);
					LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/ircamera", true) == 0 || strcmp(cmd, "/ircameraa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 539.5369,-891.6889,1304.2013); LinkVehicleToInterior(tmpcar, 0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,539.5369,-891.6889,1304.2013);
					SetPlayerFacingAngle(playerid,2.7415);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/descricao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    QQIssoNovinha;
			    return 1;
			}
			tmp = strtokEx(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Editar ]______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /descricao [nome] (Use para casas e empresas)");
				return true;
			}
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Descrição da Casa: %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(HouseInfo[i][hDiscription], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Descrição da Empresa(Empresa com interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(BizzInfo[i][bMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "Descrição da SEmpresa(Empresa sem interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(SBizzInfo[i][sbMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd,"/trazersemp",true)==0  && PlayerInfo[playerid][pAdmin] == DONO)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazersemp [ID]");
	       	return true;
	    }
		new idsemp = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		SBizzInfo[idsemp][sbEntranceX] = x;
		SBizzInfo[idsemp][sbEntranceY] = y;
		SBizzInfo[idsemp][sbEntranceZ] = z;
		return true;
	}
	if(strcmp(cmd,"/trazeremp",true)==0  && PlayerInfo[playerid][pAdmin] == DONO)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazeremp [ID]");
	       	return true;
	    }
		new idemp = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		BizzInfo[idemp][bEntranceX] = x;
		BizzInfo[idemp][bEntranceY] = y;
		BizzInfo[idemp][bEntranceZ] = z;
		return true;
	}
	if(strcmp(cmd,"/trazercasa",true)==0  && PlayerInfo[playerid][pAdmin] == DONO)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazercasa [ID]");
	       	return true;
	    }
		new idcasa = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		HouseInfo[idcasa][hEntrancex] = x;
		HouseInfo[idcasa][hEntrancey] = y;
		HouseInfo[idcasa][hEntrancez] = z;
		return true;
	}
	if(strcmp(cmd,"/mudarcasa",true)==0 || strcmp(cmd,"/trocarcasa",true)==0)
	{
	    new House = PlayerInfo[playerid][pPHousekey];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
	    	if(HouseEntered[playerid] != 500)
   			{
   				SendClientMessage(playerid,COLOR_GREY,"Você não pode usar esse comando dentro de uma casa");
	        	return true;
	    	}
	    	if(GetPlayerMoney(playerid) < 200)
			{
				SendClientMessage(playerid, COLOR_GRAD5, "Você não tem dinheiro suficiente R$200");
				return true;
			}
			if(!strlen(tmp))
	    	{
	        	SendClientMessage(playerid,COLOR_GREY,"USE: /trocarcasa [1 a 34]");
	        	return true;
	    	}
			new idcasa = strval(tmp);
	    	switch (idcasa)
			{
				case 1:
				{
					HouseInfo[House][hExitx] = 2467.4951;
					HouseInfo[House][hExity] = -1698.4037;
					HouseInfo[House][hExitz] = 1013.5078;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 1.");
				}
	    		case 2:
				{
				    HouseInfo[House][hExitx] = 318.2573;
					HouseInfo[House][hExity] = 1115.3826;
					HouseInfo[House][hExitz] = 1083.8828;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 2.");
				}

				case 3:
				{
				    HouseInfo[House][hExitx] = 2324.5151;
					HouseInfo[House][hExity] = -1148.6710;
					HouseInfo[House][hExitz] = 1050.7101;
					HouseInfo[House][hInt] = 12;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 3.");
				}
				case 4:
				{
				    HouseInfo[House][hExitx] = 235.3094;
					HouseInfo[House][hExity] = 1186.9187;
					HouseInfo[House][hExitz] = 1080.2578;
					HouseInfo[House][hInt] = 3;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 4.");
				}
				case 5:
				{
				    HouseInfo[House][hExitx] = 225.756989;
					HouseInfo[House][hExity] = 1240.000000;
					HouseInfo[House][hExitz] = 1082.149902;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 5.");
				}
				case 6:
				{
				    HouseInfo[House][hExitx] = 223.043991;
					HouseInfo[House][hExity] = 1289.259888;
					HouseInfo[House][hExitz] = 1082.199951;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 6.");
				}
				case 7:
				{
				    HouseInfo[House][hExitx] = 225.630997;
					HouseInfo[House][hExity] = 1022.479980;
					HouseInfo[House][hExitz] = 1084.069946;
					HouseInfo[House][hInt] = 7;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 7.");
				}
				case 8:
				{
				    HouseInfo[House][hExitx] = 328.0475;
					HouseInfo[House][hExity] = 1478.4475;
					HouseInfo[House][hExitz] = 1084.4375;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 8.");
				}
				case 9:
				{
				    HouseInfo[House][hExitx] = 234.0843;
					HouseInfo[House][hExity] = 1064.6896;
					HouseInfo[House][hExitz] = 1084.2108;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 9.");
				}
				case 10:
				{
				    HouseInfo[House][hExitx] = 260.4075;
					HouseInfo[House][hExity] = 1238.6646;
					HouseInfo[House][hExitz] = 1084.2578;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 10.");
				}
				case 11:
				{
				    HouseInfo[House][hExitx] = 27.1000;
					HouseInfo[House][hExity] = 1341.1000;
					HouseInfo[House][hExitz] = 1084.3750;
					HouseInfo[House][hInt] = 10;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 11.");
				}
				case 12:
				{
				    HouseInfo[House][hExitx] = 140.4000;
					HouseInfo[House][hExity] = 1370.3000;
					HouseInfo[House][hExitz] = 1083.8656;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 12.");
				}
				case 13:
				{
				    HouseInfo[House][hExitx] = 83.3000;
					HouseInfo[House][hExity] = 1324.7000;
					HouseInfo[House][hExitz] = 1083.8594;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 13.");
				}
				case 14:
				{
				    HouseInfo[House][hExitx] = 267.1422;
					HouseInfo[House][hExity] = 304.9236;
					HouseInfo[House][hExitz] = 999.1484;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 14.");
				}
				case 15:
				{
				    HouseInfo[House][hExitx] = 301.3582;
					HouseInfo[House][hExity] = 306.2504;
					HouseInfo[House][hExitz] = 1003.5391;
					HouseInfo[House][hInt] = 4;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 15.");
				}
				case 16:
				{
				    HouseInfo[House][hExitx] = 385.7908;
					HouseInfo[House][hExity] = 1471.7882;
					HouseInfo[House][hExitz] = 1080.1875;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 16.");
				}
				case 17:
				{
				    HouseInfo[House][hExitx] = 261.0813;
					HouseInfo[House][hExity] = 1286.1119;
					HouseInfo[House][hExitz] = 1080.2578;
					HouseInfo[House][hInt] = 4;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 17.");
				}
				case 18:
				{
				    HouseInfo[House][hExitx] = 745.3000;
					HouseInfo[House][hExity] = 1437.7000;
					HouseInfo[House][hExitz] = 1102.7031;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 18.");
				}
				case 19:
				{
				    HouseInfo[House][hExitx] = 376.3000;
					HouseInfo[House][hExity] = 1417.2000;
					HouseInfo[House][hExitz] = 1081.3281;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 19.");
				}
				case 20:
				{
				    HouseInfo[House][hExitx] = 23.1114;
					HouseInfo[House][hExity] = 1405.1415;
					HouseInfo[House][hExitz] = 1084.4297;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 20.");
				}
				case 21:
				{
				    HouseInfo[House][hExitx] = 447.0000;
					HouseInfo[House][hExity] = 1400.3000;
					HouseInfo[House][hExitz] = 1084.3047;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 21.");
				}
				case 22:
				{
				    HouseInfo[House][hExitx] = 327.9000;
					HouseInfo[House][hExity] = 1478.3000;
					HouseInfo[House][hExitz] = 1084.4375;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 22.");
				}
				case 23:
				{
				    HouseInfo[House][hExitx] = 295.4000;
					HouseInfo[House][hExity] = 1473.2000;
					HouseInfo[House][hExitz] = 1080.2578;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 23.");
				}
				case 24:
				{
				    HouseInfo[House][hExitx] = 231.4000;
					HouseInfo[House][hExity] = 1114.1000;
					HouseInfo[House][hExitz] = 1080.9922;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 24.");
				}
				case 25:
				{
				    HouseInfo[House][hExitx] = -69.1564;
					HouseInfo[House][hExity] = 1354.8154;
					HouseInfo[House][hExitz] = 1080.2109;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 25.");
				}
				case 26:
				{
				    HouseInfo[House][hExitx] = 2261.2698;
					HouseInfo[House][hExity] = -1135.8125;
					HouseInfo[House][hExitz] = 1050.6328;
					HouseInfo[House][hInt] = 10;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 26.");
				}
				case 27:
				{
				    HouseInfo[House][hExitx] = 2216.7585;
					HouseInfo[House][hExity] = -1076.2537;
					HouseInfo[House][hExitz] = 1050.4844;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 27.");
				}
				case 28:
				{
				    HouseInfo[House][hExitx] = -262.2089;
					HouseInfo[House][hExity] = 1456.5781;
					HouseInfo[House][hExitz] = 1084.3672;
					HouseInfo[House][hInt] = 4;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 28.");
				}
				case 29:
				{
				    HouseInfo[House][hExitx] = 222.0102;
					HouseInfo[House][hExity] = 1141.4846;
					HouseInfo[House][hExitz] = 1082.6094;
					HouseInfo[House][hInt] = 4;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 29.");
				}
				case 30:
				{
				    HouseInfo[House][hExitx] = 2317.7776;
					HouseInfo[House][hExity] = -1026.1787;
					HouseInfo[House][hExitz] = 1050.2178;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 30.");
				}
				case 31:
				{
				    HouseInfo[House][hExitx] = 2233.6880;
					HouseInfo[House][hExity] = -1114.1151;
					HouseInfo[House][hExitz] = 1050.8828;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 31.");
				}
				case 32:
				{
				    HouseInfo[House][hExitx] = 244.3690;
					HouseInfo[House][hExity] = 305.0249;
					HouseInfo[House][hExitz] = 999.1484;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 32.");
				}
				case 33:
				{
				    HouseInfo[House][hExitx] = -284.5827;
					HouseInfo[House][hExity] = 1471.0902;
					HouseInfo[House][hExitz] = 1084.3750;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 33.");
				}
				case 34:
				{
				    HouseInfo[House][hExitx] = -42.5237;
					HouseInfo[House][hExity] = 1411.4070;
					HouseInfo[House][hExitz] = 1084.4297;
					HouseInfo[House][hInt] = 8;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 34.");
				}
			}
			GivePlayerMoney(playerid,-200);
			SBizzInfo[13][sbTill] += 200;
			ExtortionSBiz(13, 200);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			OnPropUpdate();
			return true;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
			return true;
		}
	}


	if (strcmp(cmd, "/epc", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
		{
		    if(PlayerToPoint(2.0, playerid, 903.3665,-1272.1648,14.5035))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 901.4695,-1276.5393,23.0861);
    		}
		    if(PlayerToPoint(2.0, playerid, 901.4695,-1276.5393,23.0861))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 903.3665,-1272.1648,14.5035);
		    }
		}
		return true;
	}
 	if (strcmp(cmd, "/epf", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
		    if(PlayerToPoint(2.0, playerid, -50.5607,-233.6536,6.7646))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -54.8425,-237.7034,31.6468);
    		}
		    if(PlayerToPoint(2.0, playerid, -54.8425,-237.7034,31.6468))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -50.5607,-233.6536,6.7646);
		    }
		}
		return true;
	}
	if (strcmp(cmd, "/epr", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
		{
		    if(PlayerToPoint(2.0, playerid, 346.8519,-1494.9565,36.0391))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 345.1602,-1482.8597,76.5391);
    		}
		    if(PlayerToPoint(2.0, playerid, 345.1602,-1482.8597,76.5391))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 346.8519,-1494.9565,36.0391);
		    }
		}
		return true;
	}

	if (strcmp(cmd, "/etaxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
		{
		    if(PlayerToPoint(2.0, playerid, 964.0209,-1465.8312,13.4589))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 965.7349,-1465.6044,21.3783);
    		}
		    if(PlayerToPoint(2.0, playerid, 965.7349,-1465.6044,21.3783))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 964.0209,-1465.8312,13.4589);
		    }
		}
		return true;
	}

	if (strcmp(cmd, "/ealuguel", true) == 0)
	{
	    if(PlayerToPoint(2.0, playerid, 2139.7847,-1176.8256,23.9922))
		{
	   		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2138.6680,-1168.9967,28.1484);
    	}
	    if(PlayerToPoint(2.0, playerid, 2138.6680,-1168.9967,28.1484))
	    {
	        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2139.7847,-1176.8256,23.9922);
	    }
		return true;
	}
	if (strcmp(cmd, "/hqpf", true) == 0)
	{
	    if(PlayerToPoint(2.0, playerid, -2454.0352,503.9203,30.0793))
		{
            SetPlayerInterior(playerid, 0);
    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2122.5610,-2270.5774,20.6719);
    		PlayerInfo[playerid][pInt] = 0;
   		}
	    if(PlayerToPoint(2.0, playerid, 2122.5610,-2270.5774,20.6719))
	    {
		    SetPlayerInterior(playerid, 0);
	        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2454.0352,503.9203,30.0793);
	        PlayerInfo[playerid][pInt] = 0;
	    }
		return true;
	}
	if (strcmp(cmd, "/ehit", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
		{
		    if(PlayerToPoint(2.0, playerid, 970.1837,-1520.5553,13.5502))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 969.8785,-1516.9382,23.7241);
    		}
		    if(PlayerToPoint(2.0, playerid, 969.8785,-1516.9382,23.7241))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 970.1837,-1520.5553,13.5502);
		    }
		}
		return true;
	}

    if(strcmp(cmd, "/retirargrana", true) == 0)
    {
		new vehid = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0 && PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
			return true;
		}
		if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid &&
		PlayerInfo[playerid][pCarKey3] != vehid &&
		PlayerInfo[playerid][pCarKey4] != vehid &&
		PlayerInfo[playerid][pCarKey5] != vehid)
		{
			SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
			return true;
		}
		new carid;
		new getcarid;
		new Veiculo;
   		if(vehid == PlayerInfo[playerid][pCarKey])
   		{
   			carid = PlayerInfo[playerid][pCarKey];
		   	Veiculo = PlayerInfo[playerid][pVeiculo];
   		}
		else if(vehid == PlayerInfo[playerid][pCarKey2])
		{
			carid = PlayerInfo[playerid][pCarKey2];
			Veiculo = PlayerInfo[playerid][pVeiculo2];
		}
		else if(vehid == PlayerInfo[playerid][pCarKey3])
		{
			carid = PlayerInfo[playerid][pCarKey3];
			Veiculo = PlayerInfo[playerid][pVeiculo3];
		}
		else if(vehid == PlayerInfo[playerid][pCarKey4])
		{
			carid = PlayerInfo[playerid][pCarKey4];
			Veiculo = PlayerInfo[playerid][pVeiculo4];
		}
		else if(vehid == PlayerInfo[playerid][pCarKey5])
		{
			carid = PlayerInfo[playerid][pCarKey5];
			Veiculo = PlayerInfo[playerid][pVeiculo5];
		}
		if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
		{
  			getcarid = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
           	if(getcarid == carid)
			{

	    		GivePlayerMoney(playerid, CarInfo[Veiculo][cGrana]);
				format(gstring, 128, "Você retirou R$%d do seu carro vip!", CarInfo[Veiculo][cGrana]);
			   	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			   	CarInfo[Veiculo][cGrana] = 0;
				return true;
  			}
			return true;
		}
		return true;
	}
    //-------------------------------[Pay]--------------------------------------------------------------------------
	if(strcmp(cmd, "/pagar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJailed] >= 1)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "  Você não pode usar este comando na cadeia");
	            return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return true;
			}
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return true;
			}
			if(admtrampando[giveplayerid] != 0 && PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar para admins em trabalho!");
			    return true;
			}
			moneys = strval(tmp);
			if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa ser nível 2 ou mais para pagar mais que R$ 1000");
				return true;
			}
			if(moneys < 1 || moneys > 100000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Pagamento mínimo 1, máximo 100000 por vez");
			    return true;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando neste local");
						return true;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheiro = GetPlayerMoney(playerid);
						if (playerdinheiro >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							GivePlayerMoney(playerid, (0 - moneys));
							GivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "   Você pagou %s(Para: %d), R$%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   Você recebeu R$%d de %s(ID: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "%s deu grana para %s", sendername, giveplayer);
							PayLog(string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s pagou para %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   Você não está com essa grana no bolso.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está longe.");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d não é um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/meavalie", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
        	if(helpertrampando[playerid] < 1 && PlayerInfo[playerid][pHelper] != 9999)
			{
            	SendClientMessage(playerid, COLOR_GRAD1, "Você não está em modo de serviço ! (/helpajuda)");
            	return true;
        	}
        	if(PlayerInfo[playerid][pHelper] >= 1)
			{
 	 			tmp = strtok(cmdtext,idx);
            	giveplayerid = ReturnUser(tmp);
            	if(Avaliado[playerid] == 1)
				{
                	format(string,sizeof(string),"Você tem que esperar 5 minutos para poder enviar outro /meavalie.");
                	SendClientMessage(playerid, COLOR_GRAD1, string);
                	return true;
            	}
            	if(!strlen(tmp))
				{
                	SendClientMessage(playerid,COLOR_GRAD1,"USE: /meavalie [playerid]");
                	return true;
            	}
            	if(giveplayerid == playerid)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você não pode avaliar a si mesmo");
					return 1;
				}
            	if(IsPlayerConnected(giveplayerid))
				{
                	Avaliado[playerid] = 1;
                	PedirAvaliar[giveplayerid] = playerid;
                	TempoAvaliar[playerid] = SetTimerEx("Avaliar", 300000, 0, "i", playerid);
                	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você enviou o seu pedido de avaliação, aguarde uma resposta..");
                	format(string,sizeof(string),"Helper %s pediu para você avaliar o trabalho dele como Helper\nClique em: SIM para uma avaliação positiva\nClique em: NÃO para uma avaliação negativa\nO servidor agradece",PlayerName(playerid));
                	ShowPlayerDialog(giveplayerid, 9282, DIALOG_STYLE_MSGBOX, "Avaliação do Helper", string, "Sim", "Nao");
            	}
  	 		}
    	}
    	return true;
	}

 	if(strcmp(cmd, "/sacar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

	        if(IsPlayerConnected(playerid))
	        {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacar [Quantidade]");
				format(string, sizeof(string), "  Voce tem R$%d na sua conta!.", PlayerInfo[playerid][pConta]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacar [Quantidade]");
				format(string, sizeof(string), "  Voce tem R$%d na sua conta!.", PlayerInfo[playerid][pConta]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			if (cashdeposit > PlayerInfo[playerid][pConta] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce  não tem tudo isso na sua conta! !");
				return true;
			}
		    ConsumingMoney[playerid] = 1;
		    new saldo;
		    saldo = PlayerInfo[playerid][pConta];
			GivePlayerMoneyEx(playerid,cashdeposit);
			PlayerInfo[playerid][pConta] = saldo-cashdeposit;
			format(string, sizeof(string), "Server Você Sacou R$%d da sua conta. Total: R$%d ", cashdeposit,PlayerInfo[playerid][pConta]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return true;
			}else
			{
			SendClientMessage(playerid, COLOR_GREY, "  Voce não esta no banco ou em um Caixa Eletronico!");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/teleportes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
	            ShowPlayerDialog(playerid,TELEPORTE,DIALOG_STYLE_LIST,"Teleportes","Head Quarters\nTerritorios\nLugares em geral\nEventos","Aceitar","Cancelar");
	        }
	    }
	    return true;
	}


	if(strcmp(cmd, "/trazertodos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(Evento >= 0)
				{
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							Evento = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string,sizeof(string),"Admin: %s está chamando todos do servidor\n",sendername);
							ShowPlayerDialog(i, EVENTOC, DIALOG_STYLE_MSGBOX, "ADMINISTRAÇÃO", string, "Sim", "Não");
							GetPlayerPos(playerid,ex,ey,ez);
						}
					}
				}
			}
			return true;
		}
	}
	
	if(strcmp(cmd, "/trazertodosx1", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
			    new Float:pXX, Float:pYY, Float:pZZ;
			    GetPlayerPos(playerid,pXX,pYY,pZZ);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						SetPlayerPos(i, pXX, pYY, pZZ);
						SetPlayerInterior(i, GetPlayerInterior(playerid));
						SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
						GivePlayerWeaponBPH(i, 24, 999);
						GivePlayerWeaponBPH(i, 25, 999);
						GivePlayerWeaponBPH(i, 29, 999);
						GivePlayerWeaponBPH(i, 30, 999);
						SendClientMessage(i, COLOR_GRAD1, "Você foi teleportado");
					}
				}
			}
		}
		return true;
	}
	
 	if(strcmp(cmd, "/grampear", true) == 0 || strcmp(cmd, "/rastrear", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /grampear [ID/Nome]");
                return true;
            }
            if(strcmp(tmp,"off",true)==0)
            {
                PlayerInfo[playerid][pGrampo] = INVALID_PLAYER_ID;
                SendClientMessage(playerid, COLOR_GRAD1, "Você desligou a escuta");
                return true;
            }
            if(gTeam[playerid] == 2  || IsACop(playerid))
			{
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        PlayerInfo[playerid][pGrampo] = giveplayerid;
                        format(string, sizeof(string), "Você grampeou o Tefelone de %s.", PlayerName(giveplayerid));
                        SendClientMessage(playerid, COLOR_GRAD1, "Para desligar a escuta use: /grampear off");
                        SendClientMessage(playerid, COLOR_GREY, string);
                        return true;
                    }
                }
            }
            else
            {
                format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return true;
    }

//-------------------------------[Stats]--------------------------------------------------------------------------
	//-------------------------------[Mostrar RG]--------------------------------------------------------------------------
	if (strcmp(cmd, "/mostrarrg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /mostrarrg [ID/Nome]");
				return true;
			}
	        giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(5.0, playerid, giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(giveplayerid,playerid);
						format(string, sizeof(string), "* %s mostrou o seu rg para %s.",PlayerName(playerid),PlayerName(giveplayerid));
				        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está muito longe.");
				}
			}//invalid id
		}
		return true;
	}
	
	
	if (strcmp(cmd, "/senha", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && GetPlayerOrg(playerid) == 34 && PlayerInfo[playerid][pCargo] > 4)
	    {
	        format(string, sizeof(string), "A senha do painel de segurança:[%s]", SenhaSeguranca);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/mostrarsenha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /mostrarsenha [ID]");
				return true;
			}
		 	if(GetPlayerOrg(playerid) == 34 && PlayerInfo[playerid][pCargo] > 4)
	        {
   				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
			    		{
							format(string, sizeof(string), "A senha do painel de segurança:[%s]", SenhaSeguranca);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "* %s mostrou a senha das de cameras de segurança para %s.",PlayerName(playerid),PlayerName(giveplayerid));
			       	 		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está muito longe.");
					}
				}//invalid id
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/blockparticular", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (HidePM[playerid] == 0)
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "   Mensagens Privadas Desativadas !");
			}
			else if (HidePM[playerid] == 1)
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "   Mensagens Privadas Ativadas !");
			}
		}
		return true;
	}

//==============================================================================
    if (strcmp(cmd, "/tirarcapacete", true) == 0)
    {
        if(CapacetePlayer[playerid] >= 0)
        {
            CapacetePlayer[playerid] = 0;
            GetPlayerName(playerid, sendername, sizeof(sendername));
            SendClientMessage(playerid, COLOR_GRAD1,"Você retirou seu capacete.");
            RemovePlayerAttachedObject(playerid, OBJCAPACETE);
        }
       	else
        {
            SendClientMessage(playerid, COLOR_YELLOW,"Server: Você já está sem Capacete!");
        }
        return true;
    }

	if (strcmp(cmd, "/forum", true) == 0)
	{
 		SendClientMessage(playerid,COLOR_LIGHTRED," Visite nosso forum: www.s-bph.forumeiros.com");
		return true;
	}

 	if (strcmp(cmd, "/getemprego", true) == 0)
	{
    	if(PlayerInfo[playerid][pEmprego] != 0)
    	{
		   SendClientMessage(playerid,COLOR_GRAD2,"[PlayHappy] Você já possui um emprego, digite /sairdoemprego para poder pegar outro!");
		   return true;
    	}
		if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828))
		{
			Controle(playerid, 0);
    		ShowPlayerDialog(playerid,2569,DIALOG_STYLE_LIST,"{51A7FC}Empregos","{FFEA00}Detetive\n{FFEA00}Advogado\n{FFEA00}Profissional do sexo\n{FFEA00}Vendedor de Drogas\n{FFEA00}Mecanico\n{FFEA00}Seguranca\n{FFEA00}Vendedor de Armas\n{FFEA00}Boxeador\n{FFEA00}Motorista de Onibus\n{FFEA00}Mendigo\n{FFEA00}Caminhoneiro\n{FFEA00}Poeta","Aceitar","Cancelar");
			EmDialog[playerid] = 1;
		}
		return true;
	}
	
	if (strcmp(cmd, "/sexshop", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, -103.9931,-22.0508,1000.7188))
		{
			ShowPlayerDialog(playerid, 8890, DIALOG_STYLE_LIST, "Sex Shop", "Dildo - R$2000\nDildo2 - R$2000\nVibrador - R$2000\nVibador2 - R$2000\nFlor - R$2000","Selecionar", "Cancelar");
			return true;
		}
		return true;
	}
	
	if (strcmp(cmd, "/venderHQ", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 311.2129,-1769.9749,4.5807))//aztecas
		{
		    Controle(playerid, 0);
			TipoOrg[playerid] = 5;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Aztecas LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 619.5972,-594.2736,17.2330))//Policia rodoviaria
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 33;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Policia Rodoviaria", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 2511.9155,-1682.3066,13.4634))//Groove
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 14;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Groove LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
   		else if (PlayerToPoint(2.0, playerid, 937.1777,-1736.6523,13.5469))//S.S.P
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 34;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Secretaria de segurança", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 402.8394,2543.3838,16.5469))//Farc
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 15;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu FARC", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 1157.3890,-1192.1559,32.0275))//Ballas
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 17;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Ballas LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 2825.6370,-1175.9810,25.1884))//Vagos
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 18;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Vagos LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
  		else if (PlayerToPoint(2.0, playerid, 1996.3022,-2076.2432,13.5469))//CV
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 19;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Comando Vermelho LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
   		else if (PlayerToPoint(2.0, playerid, 2252.0061,-1458.4739,24.0210))//PCC
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 21;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu PCC LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
   		else if (PlayerToPoint(2.0, playerid, -2241.4641,2358.0771,4.9796))//GI
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 23;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Guerrilheiros Israelitas", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 1544.3475,-1619.7036,13.5546))//PMLS
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 1;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu PM LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 319.7691,-1524.2484,36.0391))//Rotam LS
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 2;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Rotam LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, -1526.4010,485.6462,7.1797))//GN
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 3;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Guarda Nacional", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 1996.5020,-1451.3936,13.5547))//MeDicos LS
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 4;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Medicos LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 369.9092,167.6522,1008.3828))//Prefeitura
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 7;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Prefeitura", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 1103.6532,-296.7144,73.9851))//Hitman
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 8;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Hitman", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 771.6934,-1329.1243,13.5469))//reporter LS
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 9;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Reporter LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, 965.8672,-1414.8424,13.2804))//Taxi LS
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 10;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Taxista LS", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, -2440.3508,491.8625,30.0938))//PF
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 11;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu Policia Federal", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		else if (PlayerToPoint(2.0, playerid, -1695.4508,1336.5465,7.1797))//Triad
		{
		    Controle(playerid, 0);
		    TipoOrg[playerid] = 22;
    		ShowPlayerDialog(playerid, 8901, DIALOG_STYLE_LIST, "Menu The Triad", "Membros da Org\nInformações\nVender Materiais\nVender Maconha\nPedir pra entrar", "Escolher", "Cancelar");
            return true;
		}
		return true;
	}
	
	if (strcmp(cmd, "/licencas", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 360.4893,170.2785,1008.3893))
		{
    		Controle(playerid, 0);
    		ShowPlayerDialog(playerid,2571,DIALOG_STYLE_LIST,"Licencas","{FFFFFF}Licença Aérea                        {FFD000}R$800\n{FFFFFF}Licença de Navegacao         {FFD000}R$800\n{FFFFFF}Licença de Pesca                  {FFD000}R$400\n{FFFFFF}Porte de Armas                      {FFD000}R$1200\n{FFFFFF}Carteira de Motorista            {FFD000}R$2000\n","Ok","Cancelar");
		}
		return true;
	}
	if (strcmp(cmd, "/gps", true) == 0)
	{
    	ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"{D54DF0}GPS","Los Santos\nSan Fierro","Selecionar","Sair");
    	EmDialog[playerid] = 1;
		return true;
	}
//Subir e descer LV

	if (strcmp(cmd, "/eMedicos", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    if(PlayerToPoint(2.0, playerid, 2041.6371,-1392.5150,48.3359))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2037.6494,-1404.6544,17.2538);
    		}
		    if(PlayerToPoint(2.0, playerid, 2037.6494,-1404.6544,17.2538))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2041.6371,-1392.5150,48.3359);
		    }
		}
		return true;
	}
	if (strcmp(cmd, "/egroove", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
		{
		    if(PlayerToPoint(2.0, playerid, 2522.9346,-1679.4137,15.4970))
			{
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2524.4297,-1681.8153,19.9302);
    		}
		    if(PlayerToPoint(2.0, playerid, 2524.4297,-1681.8153,19.9302))
		    {
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2522.9346,-1679.4137,15.4970);
		    }
		}
		return true;
	}
//-----------------------------------------------------------------
	if(strcmp(cmd, "/dn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, slx, sly, slz-2);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/deslogar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /deslogar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=2)
			{
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			   			gPlayerLogged[playa] = 0;
						JaDeslogado[playa] = 0;
						format(string, 100, "ID %d Deslogado!", playa);
						SendClientMessage(playerid,COLOR_GRAD1, string);
						Controle(playa, 0);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/deslogartodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
						gPlayerLogged[i] = 0;
						JaDeslogado[i] = 0;
					}
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Todos os players foram deslogados com sucesso!");
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/tops", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ *** MOSTRANDO OS TOPs ONLINE *** ___________|");
	        SetTimerEx("MostrandoKills", 3000, 0, "i", playerid);
		}
		return true;
	}
	
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
		    {
		       	new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				if (GetPlayerState(playerid) == 2)
				{
					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					GetVehiclePos(tmpcar, slx, sly, slz);
					SetVehiclePos(tmpcar, slx, sly, slz+5);
				}
				else
				{
					SetPlayerPos(playerid, slx, sly, slz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não é um admin");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/checkbot", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
		    {
				new bots = 0;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && IsPlayerNPC(i))
					{
					    format(string, sizeof(string), "[ATENÇÃO] %s [ID: %d] é um player NPC.", PlayerName(i), i);
					    SendClientMessage(playerid, COLOR_LIGHTRED, string);
					    bots = 1;
					}
				}
				if(bots == 0)
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Nenhum BOT encontrado no servidor!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não é um admin");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/resetarbaloes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
		        KillTimer(TempoBalao1);
		        KillTimer(TempoBalao2);
		        KillTimer(TempoBalao3);
		        KillTimer(TempoBalao4);
		        KillTimer(TempoBalao5);
		        KillTimer(TempoBalao6);
		        KillTimer(TempoBalao7);
		        StopObject(Balao);
		        StopObject(Balao2);
		        StopObject(Balao3);
		        StopObject(Balao4);
		        StopObject(Balao5);
		        StopObject(Balao6);
		        StopObject(Balao7);
		        BalaoOcupado1 = 0;
		        BalaoOcupado2 = 0;
		        BalaoOcupado3 = 0;
		        BalaoOcupado4 = 0;
		        BalaoOcupado5 = 0;
		        BalaoOcupado6 = 0;
		        BalaoOcupado7 = 0;
		        SetObjectPos( Balao,2904.8999,-1096.9142,11.1487-1);
		        SetObjectPos( Balao2,2906.4272,-1056.2058,11.0407-1);
		        SetObjectPos( Balao3,2907.6707,-1012.4935,11.0469-1);
		        SetObjectPos( Balao4,2908.6658,-969.0612,11.0407-1);
		        SetObjectPos( Balao5,2910.4563,-925.4816,11.0469-1);
		        SetObjectPos( Balao6,2912.0115,-882.0604,11.0469-1);
		        SetObjectPos( Balao7,2913.2729,-839.3149,11.0469-1);
		 		Update3DTextLabelText(TextBalao1, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				Update3DTextLabelText(TextBalao2, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				Update3DTextLabelText(TextBalao3, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				Update3DTextLabelText(TextBalao4, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
		 		Update3DTextLabelText(TextBalao5, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				Update3DTextLabelText(TextBalao6, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				Update3DTextLabelText(TextBalao7, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        DonoBalao[i] = 0;
				        XXAirBreak[i] += 3;
					}
				}
		 		for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao || GetPlayerSurfingObjectID(i) == Balao2 || GetPlayerSurfingObjectID(i) == Balao3 ||
						GetPlayerSurfingObjectID(i) == Balao4 || GetPlayerSurfingObjectID(i) == Balao5 || GetPlayerSurfingObjectID(i) == Balao6 ||
						GetPlayerSurfingObjectID(i) == Balao7)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;XXAirBreak[i] += 3;SetPlayerPos(i, 2903.6123,-1056.1793,11.0407);
							SendClientMessage(i, COLOR_YELLOW, "Os Balões foram resetados por um administrador");
						}
					}
				}
				format(string, sizeof(string), "AdmCmd: Admin %s resetou todos os balões de aluguel.", PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED, string, 1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não é um admin");
				return true;
			}
		}
		return true;
	}

	
	if(strcmp(cmd, "/chamarbalao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		   	new Float:pX, Float:pY, Float:pZ;
	        if(NoBalao[playerid] != 1)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "Você não está controlando um balão");
	            return true;
			}
 	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                XXAirBreak[i] += 3;
				}
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 1)
			{
			    StopObject(Balao);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 2)
			{
			    StopObject(Balao2);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao2, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 3)
			{
			    StopObject(Balao3);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao3, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 4)
			{
			    StopObject(Balao4);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao4, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 5)
			{
			    StopObject(Balao5);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao5, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 6)
			{
			    StopObject(Balao6);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao6, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 7)
			{
			    StopObject(Balao7);
				GetPlayerPos(playerid,pX, pY, pZ);
		       	SetObjectPos( Balao7, pX,pY+2,pZ-1);
		       	SendClientMessage(playerid, COLOR_GRAD1, "Você chamou seu Balão");
		       	return true;
			}
		}
		return true;
	}

	
	if(strcmp(cmd, "/direcionar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(NoBalao[playerid] != 1)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "Você não está controlando um balão");
	            return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao == 1 && DonoBalao[playerid] == 1)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+700,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY-30000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao == 2&& DonoBalao[playerid] == 1)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+700,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY-30000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao == 3&& DonoBalao[playerid] == 1)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+700,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY-30000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao == 4&& DonoBalao[playerid] == 1)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY+700,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX,bY-30000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao, bX, bY, bZ);
		            	MoveObject( Balao, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao2 == 1 && DonoBalao[playerid] == 2)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+700,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY-30000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao2 == 2&& DonoBalao[playerid] == 2)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+700,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY-30000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao2 == 3&& DonoBalao[playerid] == 2)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+700,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY-30000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao2 == 4&& DonoBalao[playerid] == 2)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY+700,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX,bY-30000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao2, bX, bY, bZ);
		            	MoveObject( Balao2, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao3 == 1 && DonoBalao[playerid] == 3)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+700,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY-30000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao3 == 2&& DonoBalao[playerid] == 3)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+700,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY-30000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao3 == 3&& DonoBalao[playerid] == 3)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+700,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY-30000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao3 == 4&& DonoBalao[playerid] == 3)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY+700,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX,bY-30000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao3, bX, bY, bZ);
		            	MoveObject( Balao3, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao4 == 1 && DonoBalao[playerid] == 4)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+700,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY-30000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao4 == 2&& DonoBalao[playerid] == 4)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+700,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY-30000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao4 == 3&& DonoBalao[playerid] == 4)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+700,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY-30000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao4 == 4&& DonoBalao[playerid] == 4)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY+700,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX,bY-30000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao4, bX, bY, bZ);
		            	MoveObject( Balao4, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao5 == 1 && DonoBalao[playerid] == 5)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+700,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-30000,bY,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY-30000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+30000,bY,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao5 == 2&& DonoBalao[playerid] == 5)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+700,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-30000,bY,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY-30000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+30000,bY,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao5 == 3&& DonoBalao[playerid] == 5)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+700,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-30000,bY,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY-30000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+30000,bY,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao5 == 4&& DonoBalao[playerid] == 5)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY+700,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-30000,bY,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX,bY-30000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+30000,bY,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao5, bX, bY, bZ);
		            	MoveObject( Balao5, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao6 == 1 && DonoBalao[playerid] == 6)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+700,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-30000,bY,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY-30000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+30000,bY,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao6 == 2&& DonoBalao[playerid] == 6)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+700,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-30000,bY,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY-30000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+30000,bY,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao6 == 3&& DonoBalao[playerid] == 6)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+700,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-30000,bY,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY-30000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+30000,bY,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao6 == 4&& DonoBalao[playerid] == 6)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY+700,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-30000,bY,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX,bY-30000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+30000,bY,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					else
					{
			        	GetObjectPos(Balao6, bX, bY, bZ);
		            	MoveObject( Balao6, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);
					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao7 == 1 && DonoBalao[playerid] == 7)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+7000,bZ,3,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+700,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY-30000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY-15000,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+30000,bY,bZ,3,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,3,0.0,0.0,0.0);
					}
					return true;
			}

			if(NoBalao[playerid] == 1 && VelocidadeBalao7 == 2&& DonoBalao[playerid] == 7)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+7000,bZ,7,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+700,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY-30000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY-15000,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+30000,bY,bZ,7,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,7,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao7 == 3&& DonoBalao[playerid] == 7)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+7000,bZ,14,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+700,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY-30000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY-15000,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+30000,bY,bZ,14,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,14,0.0,0.0,0.0);

					}
					return true;
			}
			if(NoBalao[playerid] == 1 && VelocidadeBalao7 == 4&& DonoBalao[playerid] == 7)
			{
		    		new Float:pa;
		    		new Float:bX, Float:bY, Float:bZ;
					GetPlayerFacingAngle(playerid,pa);
					if(pa >= 0.0 && pa <= 22.5) //n1
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+7000,bZ,20,0.0,0.0,0.0);
					}
					else if(pa >= 332.5 && pa < 0.0) //n2
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY+700,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 22.5 && pa <= 67.5) //nw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 67.5 && pa <= 112.5) //w
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 112.5 && pa <= 157.5) //sw
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX-15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 157.5 && pa <= 202.5) //s
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX,bY-30000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 202.5 && pa <= 247.5)//se
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY-15000,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 247.5 && pa <= 292.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+30000,bY,bZ,20,0.0,0.0,0.0);

					}
					else if(pa >= 292.5 && pa <= 332.5)//e
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					else
					{
			        	GetObjectPos(Balao7, bX, bY, bZ);
		            	MoveObject( Balao7, bX+15000,bY+15000,bZ,20,0.0,0.0,0.0);

					}
					return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/ajudabalao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		   	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		   	return true;
		}
		return true;
	}
	
	if(strcmp(cmd, "/BalaoTOP", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(DonoBalao[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "Você já alugou um balão, USE: /desalugarbalao");
	            return true;
			}
			if(GetPlayerMoney(playerid) < 100000)
			{
			    SendClientMessage(playerid,COLOR_GRAD1, "Você não tem o dinheiro do aluguel do balão!");
			    return true;
			}
	    	if (PlayerToPoint(5, playerid,2901.6897,-1096.7598,11.1809)&&BalaoOcupado1 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 1;
   				BalaoOcupado1 = 1;
   				KillTimer(TempoBalao1);
   				GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao1 = SetTimer("AcabarBalao1",1200000,0);
				}
   				Update3DTextLabelText(TextBalao1, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº1.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
	    	if (PlayerToPoint(5, playerid,2903.6123,-1056.1793,11.0407)&&BalaoOcupado2 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 2;
   				BalaoOcupado2 = 1;
    			KillTimer(TempoBalao2);
    			GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao2 = SetTimer("AcabarBalao2",1200000,0);
				}
   				Update3DTextLabelText(TextBalao2, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº2.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
				SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
	   			return true;
			}
	    	if (PlayerToPoint(5, playerid,2904.8555,-1012.4421,11.0469)&&BalaoOcupado3 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 3;
   				BalaoOcupado3 = 1;
    			KillTimer(TempoBalao3);
    			GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao3 = SetTimer("AcabarBalao3",1200000,0);
				}
   				Update3DTextLabelText(TextBalao3, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº3.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
	    	if (PlayerToPoint(5, playerid,2906.0674,-968.9991,11.0407)&&BalaoOcupado4 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 4;
   				BalaoOcupado4 = 1;
   				KillTimer(TempoBalao4);
   				GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao4 = SetTimer("AcabarBalao4",1200000,0);
				}
   				Update3DTextLabelText(TextBalao4, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº4.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
	    	if (PlayerToPoint(5, playerid,2907.4604,-925.5068,11.0469)&&BalaoOcupado5 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 5;
   				BalaoOcupado5 = 1;
   				KillTimer(TempoBalao5);
   				GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao5 = SetTimer("AcabarBalao5",1200000,0);
				}
   				Update3DTextLabelText(TextBalao5, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº5.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
	    	if (PlayerToPoint(5, playerid,2909.0190,-882.0096,11.0469)&&BalaoOcupado6 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 6;
   				BalaoOcupado6 = 1;
   				KillTimer(TempoBalao6);
   				GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao6 = SetTimer("AcabarBalao6",1200000,0);
				}
   				Update3DTextLabelText(TextBalao6, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº6.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
	    	if (PlayerToPoint(5, playerid,2910.3433,-839.2621,11.0469)&&BalaoOcupado7 == 0)
			{
   				NoBalao[playerid] = 1;
   				DonoBalao[playerid] = 7;
   				BalaoOcupado7 = 1;
   				KillTimer(TempoBalao7);
   				GivePlayerMoney(playerid, -100000);
   				if(PlayerInfo[playerid][pVIP] < 1)
   				{
   					TempoBalao7 = SetTimer("AcabarBalao7",1200000,0);
				}
   				Update3DTextLabelText(TextBalao7, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{FF0000}(OCUPADO)");
     			format(string, sizeof(string), "* %s alugou o balão nº7.",PlayerName(playerid));
		       	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       	ShowPlayerDialog(playerid, 9855, DIALOG_STYLE_MSGBOX, "Informações do balão","============[COMANDOS DO BALÃO]============\n\n/subir\n/descer\n/direcionar = direciona o balão para o lado que você estiver virado\n/velocidade\nF = para o balão\n/chamarbalao\n/desalugarbalao\n/localizarbalao","Continuar","");
		       	SendClientMessage(playerid,COLOR_YELLOW, "Em caso de duvidas USE: /ajudabalao");
		       	return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/alugarbalao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerToPoint(3, playerid,2901.6897,-1096.7598,11.1809)&&BalaoOcupado1 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
					return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2903.6123,-1056.1793,11.0407)&&BalaoOcupado2 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2904.8555,-1012.4421,11.0469)&&BalaoOcupado3 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2906.0674,-968.9991,11.0407)&&BalaoOcupado4 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2907.4604,-925.5068,11.0469)&&BalaoOcupado5 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2909.0190,-882.0096,11.0469)&&BalaoOcupado6 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
	    	if (PlayerToPoint(3, playerid,2910.3433,-839.2621,11.0469)&&BalaoOcupado7 == 0)
			{
    			if(PlayerInfo[playerid][pVIP] < 1)
    			{
		       		ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}20 minutos\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
		       		SendClientMessage(playerid, COLOR_YELLOW, "Caso você queira tempo inlimitado seja jogador VIP/VIP-POWER!");
		       		return true;
				}
				else
				{
					ShowPlayerDialog(playerid, 9859, DIALOG_STYLE_MSGBOX, "Informações do balão","{FFFFFF}==========[ALUGUEL DO BALÃO]==========\n\n{FFFFFF}Minutos de contrato: {00CC00}INLIMITADO\n\n{FFFFFF}Preço: {00CC00}R$100000 (100k)\n\n==========[Brasil Play Happy]==========","Alugar","Sair");
					return true;
				}
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/localizarbalao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	      	new Float:bX, Float:bY, Float:bZ;
	        if(DonoBalao[playerid] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "Você não alugou um balão");
	            return true;
			}
			if(DonoBalao[playerid] == 1)
			{
				GetObjectPos(Balao, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
			if(DonoBalao[playerid] == 2)
			{
				GetObjectPos(Balao2, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
			if(DonoBalao[playerid] == 3)
			{
				GetObjectPos(Balao3, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}

			if(DonoBalao[playerid] == 4)
			{
				GetObjectPos(Balao4, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
			if(DonoBalao[playerid] == 5)
			{
				GetObjectPos(Balao5, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
			if(DonoBalao[playerid] == 6)
			{
				GetObjectPos(Balao6, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
			if(DonoBalao[playerid] == 7)
			{
				GetObjectPos(Balao7, bX, bY, bZ);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, bX,bY,bZ, 6);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Seu balão foi marcado de vermelho no mapa!");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/desalugarbalao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(DonoBalao[playerid] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "Você não alugou um balão");
	            return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Você desalugou seu balão");
 	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                XXAirBreak[i] += 3;
				}
			}
			if(DonoBalao[playerid] == 1)
			{
			   	for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     			    if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;XXAirBreak[i] += 3;SetPlayerPos(i, 2901.6897,-1096.7598,11.1809);
						}
					}
				}
				StopObject(Balao);
				SetObjectPos( Balao,2904.8999,-1096.9142,11.1487-1);
				BalaoOcupado1 = 0;
				KillTimer(TempoBalao1);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao1, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
			if(DonoBalao[playerid] == 2)
			{
		 		for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao2)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;XXAirBreak[i] += 3;SetPlayerPos(i, 2903.6123,-1056.1793,11.0407);
						}
					}
				}
				StopObject(Balao2);
				SetObjectPos( Balao2,2906.4272,-1056.2058,11.0407-1);
				BalaoOcupado2 = 0;
				KillTimer(TempoBalao2);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao2, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
			if(DonoBalao[playerid] == 3)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao3)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;SetPlayerPos(i, 2904.8555,-1012.4421,11.0469);
						}
					}
				}
				StopObject(Balao3);
				SetObjectPos( Balao3,2906.4272,-1056.2058,11.0407-1);
				BalaoOcupado3 = 0;
				KillTimer(TempoBalao3);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao3, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}

			if(DonoBalao[playerid] == 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao4)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;SetPlayerPos(i, 2906.0674,-968.9991,11.0407);
						}
					}
				}
				StopObject(Balao4);
				SetObjectPos( Balao4,2908.6658,-969.0612,11.0407-1);
				BalaoOcupado4 = 0;
				KillTimer(TempoBalao4);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao4, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
			if(DonoBalao[playerid] == 5)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao5)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;SetPlayerPos(i, 2907.4604,-925.5068,11.0469);
						}
					}
				}
				StopObject(Balao5);
				SetObjectPos( Balao5,2910.4563,-925.4816,11.0469-1);
				BalaoOcupado5 = 0;
				KillTimer(TempoBalao5);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao5, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
			if(DonoBalao[playerid] == 6)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao6)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;SetPlayerPos(i, 2909.0190,-882.0096,11.0469);
						}
					}
				}
				StopObject(Balao6);
				SetObjectPos( Balao6,2912.0115,-882.0604,11.0469-1);
				BalaoOcupado6 = 0;
				KillTimer(TempoBalao6);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao6, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
			if(DonoBalao[playerid] == 7)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
     			{
     				if(IsPlayerConnected(i))
	            	{
						if(GetPlayerSurfingObjectID(i) == Balao7)
					    {
					        SetPlayerInterior(i, 0);
					        SetPlayerVirtualWorld(i, 0);
							XXAirBreak[i] += 3;SetPlayerPos(i, 2910.3433,-839.2621,11.0469);
						}
					}
				}
				StopObject(Balao7);
				SetObjectPos( Balao7,2913.2729,-839.3149,11.0469-1);
				BalaoOcupado7 = 0;
				KillTimer(TempoBalao7);
				DonoBalao[playerid] = 0;
				Update3DTextLabelText(TextBalao7, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
			}
		}
		return true;
	}

	
	if(strcmp(cmd, "/velocidade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] > 1 && NoBalao[playerid] == 1)
			{
	         	ShowPlayerDialog(playerid, 9856, DIALOG_STYLE_LIST, "Velocidade do balão","Velocidade: Lenta\nVelocidade: Normal\nVelocidade: Rápida\nVelocidade: Máxima","Confirmar","Sair");
			}
			else
			{
			    QQIssoNovinhaa;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/subir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new Float:bX, Float:bY, Float:bZ;
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 1)
			{
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 2)
			{
		        GetObjectPos(Balao2, bX, bY, bZ);
	            MoveObject( Balao2, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 3)
			{
		        GetObjectPos(Balao3, bX, bY, bZ);
	            MoveObject( Balao3, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 4)
			{
		        GetObjectPos(Balao4, bX, bY, bZ);
	            MoveObject( Balao4, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 5)
			{
		        GetObjectPos(Balao5, bX, bY, bZ);
	            MoveObject( Balao5, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 6)
			{
		        GetObjectPos(Balao6, bX, bY, bZ);
	            MoveObject( Balao6, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
 			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 7)
			{
		        GetObjectPos(Balao7, bX, bY, bZ);
	            MoveObject( Balao7, bX,bY,bZ+50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está subindo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/descer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new Float:bX, Float:bY, Float:bZ;
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 1)
			{
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 2)
			{
		        GetObjectPos(Balao2, bX, bY, bZ);
	            MoveObject( Balao2, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 3)
			{
		        GetObjectPos(Balao3, bX, bY, bZ);
	            MoveObject( Balao3, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 4)
			{
		        GetObjectPos(Balao4, bX, bY, bZ);
	            MoveObject( Balao4, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 5)
			{
		        GetObjectPos(Balao5, bX, bY, bZ);
	            MoveObject( Balao5, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 6)
			{
		        GetObjectPos(Balao6, bX, bY, bZ);
	            MoveObject( Balao6, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
 			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 7)
			{
		        GetObjectPos(Balao7, bX, bY, bZ);
	            MoveObject( Balao7, bX,bY,bZ-50,3,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s está descendo o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		return true;
	}


	if(strcmp(cmd, "/leste", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     	if(NoBalao[playerid] == 1 && PlayerInfo[playerid][pAdmin] > 1)
			{
		      	new Float:bX, Float:bY, Float:bZ;
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX+5000,bY,bZ,7,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s direcionou o balão para o leste.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
 			else
			{
			    QQIssoNovinhaa;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/oeste", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     	if(NoBalao[playerid] == 1 && PlayerInfo[playerid][pAdmin] > 1)
			{
		      	new Float:bX, Float:bY, Float:bZ;
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX-5000,bY,bZ,7,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s direcionou o balão para o oeste.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
 			else
			{
			    QQIssoNovinhaa;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/norte", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
 	     	if(NoBalao[playerid] == 1 && PlayerInfo[playerid][pAdmin] > 1)
			{
		      	new Float:bX, Float:bY, Float:bZ;
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX,bY+5000,bZ,7,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s direcionou o balão para o norte.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
  			else
			{
			    QQIssoNovinhaa;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/sul", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	       	if(NoBalao[playerid] == 1 && PlayerInfo[playerid][pAdmin] > 1)
			{
		      	new Float:bX, Float:bY, Float:bZ;
		        GetObjectPos(Balao, bX, bY, bZ);
	            MoveObject( Balao, bX,bY-5000,bZ,7,0.0,0.0,0.0);
	       		format(string, sizeof(string), "* %s direcionou o balão para o sul.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
   			else
			{
			    QQIssoNovinhaa;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/stop", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 1)
			{
				StopObject(Balao);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 2)
			{
		        StopObject(Balao2);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 3)
			{
		        StopObject(Balao3);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 4)
			{
		        StopObject(Balao4);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 5)
			{
		      	StopObject(Balao5);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 6)
			{
		        StopObject(Balao6);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
 			if(NoBalao[playerid] == 1 && DonoBalao[playerid] == 7)
			{
		        StopObject(Balao7);
	       		format(string, sizeof(string), "* %s parou o balão.",PlayerName(playerid));
	         	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		return true;
	}

	if(strcmp(cmd, "/parar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (JaEstaRoubando[playerid] == 1)
			{
			   	SendClientMessage(playerid, COLOR_LIGHTRED, "Você resolveu cancelar o roubo, agora fuja ou será preso!");
				format(string, 128, "[ROUBO] %s não conseguiu roubar o cofre da prefeitura!", PlayerName(playerid));
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				JaEstaRoubando[playerid] = 0;
				KillTimer(temporoubo[playerid]);
  				ClearAnimations(playerid);
    			ClearAnimations(playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está roubando nenhum lugar!");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/cameras", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerToPoint(3.0, playerid, 361.1929,204.4032,1008.3828) || NaCamera[playerid] > 3)
		    {
		        if(IsASecretaria(playerid) || NaCamera[playerid] > 3)
		        {
					ShowPlayerDialog(playerid, 8906, DIALOG_STYLE_LIST, "Cameras segurança","Cameras: Los Santos\nCameras: San Fierro\nCameras: Las Venturas\nSenha de Acesso\nSair do Painel","Acessar","Cancelar");
					return true;
				}
				else
				{
					ShowPlayerDialog(playerid,8911, DIALOG_STYLE_PASSWORD, "Digite a senha","Digite a senha de segurança\nPara acessar o painel","Acessar","Cancelar");
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/minhacor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3001)
			{
	   			SendClientMessage(playerid,GetPlayerColor(playerid)," Sua cor é esta que você ESTÁ VENDO !!!!!!!!!!!!!!!!!!!!!!!!!!");
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/meuskills", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
    			CheckTopS(playerid);
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, slx, sly+2, slz);
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, slx+2, sly, slz);
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/voar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+30, pz+5);

				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+30, pz+5);

				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-15, py+15, pz+5);

				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-30, py, pz+5);

				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-15, py-15, pz+5);

				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py-30, pz+5);

				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py-15, pz+5);

				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+30, py, pz+5);

				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py+15, pz+5);

				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py+15, pz+5);

				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/voar2", true) == 0)// Legal voar assim ^^
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				new Float:ppx, Float:ppy, Float:ppz;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+35, pz+10);
					SetPlayerVelocity(playerid, ppx, ppy+0.5, ppz+90);

				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+35, pz+10);
					SetPlayerVelocity(playerid, ppx, ppy+0.5, ppz+90);

				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-20, py+20, pz+10);
					SetPlayerVelocity(playerid, ppx-0.5, ppy+0.5, ppz+90);


				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-35, py, pz+10);
					SetPlayerVelocity(playerid, ppx-0.5, ppy, ppz+90);


				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-20, py-20, pz+10);
					SetPlayerVelocity(playerid, ppx-0.5, ppy-0.5, ppz+90);


				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py-35, pz+10);
					SetPlayerVelocity(playerid, ppx, ppy-0.5, ppz+90);


				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+20, py-20, pz+10);
					SetPlayerVelocity(playerid, ppx+0.5, ppy-0.5, ppz+90);


				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+35, py, pz+10);
					SetPlayerVelocity(playerid, ppx+0.5, ppy, ppz+90);


				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+20, py+20, pz+10);
					SetPlayerVelocity(playerid, ppx+0.5, ppy+0.5, ppz+90);


				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    GetPlayerVelocity(playerid, ppx, ppy, ppz);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+20, py+20, pz+10);
					SetPlayerVelocity(playerid, ppx+0.5, ppy+0.5, ppz+90);
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if (strcmp(cmd, "/voar3", true) == 0)// Legal voar assim ^^
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				new Float:ppx, Float:ppy, Float:ppz;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+43, pz+30);
					SetPlayerVelocity(playerid, ppx, ppy+2, ppz+90);

				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+43, pz+30);
					SetPlayerVelocity(playerid, ppx, ppy+2, ppz+90);

				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-43, py+43, pz+30);
					SetPlayerVelocity(playerid, ppx-2, ppy+2, ppz+90);


				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-43, py, pz+30);
					SetPlayerVelocity(playerid, ppx-2, ppy, ppz+90);


				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-43, py-43, pz+30);
					SetPlayerVelocity(playerid, ppx-2, ppy-2, ppz+90);


				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py-43, pz+30);
					SetPlayerVelocity(playerid, ppx, ppy-2, ppz+90);


				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+43, py-43, pz+30);
					SetPlayerVelocity(playerid, ppx+2, ppy-2, ppz+90);


				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+40, py, pz+30);
					SetPlayerVelocity(playerid, ppx+2, ppy, ppz+90);


				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					GetPlayerVelocity(playerid, ppx, ppy, ppz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+35, py+35, pz+30);
					SetPlayerVelocity(playerid, ppx+2, ppy+2, ppz+90);


				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    GetPlayerVelocity(playerid, ppx, ppy, ppz);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+35, py+35, pz+30);
					SetPlayerVelocity(playerid, ppx+2, ppy+2, ppz+90);
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if (strcmp(cmd, "/irevento", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(EventoAdmin == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Nenhum admin iniciou um evento de manobras.");
				return 1;
			}
            if(NoEvento >= 11)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "As vagas do evento acabaram, tente da proxima vez!");
				return 1;
			}
            if(EstaNoEvento[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você ja está no evento!");
				return 1;
			}
			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1464.7529,1556.9618,1052.5313);
			SetPlayerInterior(playerid,14);
			GameTextForPlayer(playerid, "~y~Evento", 5000, 1);
			SendClientMessage(playerid, COLOR_YELLOW, "Você veio ao evento!");
			PlayerInfo[playerid][pInt] = 14;
			EstaNoEvento[playerid] = 1;
			NoEvento += 1;
			GranaEvento[playerid] = 0;
		}
		return true;
	}

	if (strcmp(cmd, "/criarcorrida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				QQIssoNovinha;
					return true;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+30, pz+5);

				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py+30, pz+5);

				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-15, py+15, pz+5);

				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-30, py, pz+5);

				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px-15, py-15, pz+5);

				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px, py-30, pz+5);

				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py-15, pz+5);

				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+30, py, pz+5);

				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py+15, pz+5);

				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, px+15, py+15, pz+5);

				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/vercarteira", true) == 0 || strcmp(cmd, "/ver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /vercarteira [id]");
					return true;
				}

				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador não está ativo!");
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/agenda", true) == 0 || strcmp(cmd, "/telefone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /agenda [id]");
					return true;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string, 128, "Nick: %s ~ Numero: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ID Inválido !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você não tem uma agenda! digite /gps 24-7 !");
			}
		}
		return true;
	}
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
	if (strcmp(cmd, "/comprarnivel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
					new expquantidade = nxtlevel*levelexp;
					if(GetPlayerMoney(playerid) < costlevel)
					{
						format(gstring, 128, "   Você não tem: (R$%d) !",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return true;
					}
					else if (PlayerInfo[playerid][pExp] < expquantidade)
					{
						format(gstring, 128, "   Você precisa de %d pontos de respeito, Você tem: [%d] !",expquantidade,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return true;
					}
					else
					{
						format(gstring, sizeof(gstring), "~g~Nivel adquirido~n~~w~Agora seu Nivel e %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						GivePlayerMoney(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						ScoreLevel(playerid);
						PlayerInfo[playerid][pExp] = 0;
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, gstring, 5000, 1);
						format(gstring, 128, "   Você comprou o nivel %d por (R$%d) Digite /melhorar", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						format(gstring, 128, "   Você tem %d pontos de melhora",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, gstring);
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
			}
		}
		return true;
	}
//-------------------------------[UPGRADE]--------------------------------------------------------------------------
	if (strcmp(cmd, "/pintarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$50) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
					return true;
				}
				new COLORnum = strval(tmp);
				if(COLORnum > 2 || COLORnum < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Cor 1(Principal) ou 2(Secundária)");
					return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$50) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
				}
				new COLOR = strval(tmp);
				if(COLOR > 126)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Máximo é 126");
					return true;
				}
				if (GetPlayerMoney(playerid) < 50)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Você não tem (R$50)");
				}
				if(COLORnum == 1)
				{
					HouseInfo[House][hVcol1] = COLOR;
					format(string, sizeof(string), "Cor 1 Trocada Para %d -R$50",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				else
				{
					HouseInfo[House][hVcol2] = COLOR;
					format(string, sizeof(string), "Cor 2 Trocada Para %d -R$50",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				SendClientMessage(playerid, COLOR_GRAD6, "Espere 24hrs para que ela chegue -R$50");
				GivePlayerMoney(playerid,-50);
				SBizzInfo[5][sbTill] += 50;
				ExtortionSBiz(5, 50);
				PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
				OnPropUpdate();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/carrocasa", true) == 0 || strcmp(cmd, "/carrodacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
    		new info[600];
    		new info2[100],info3[100],info4[100];
 			format(info2,70,"Carros Free");
 			format(info3,70,"Carros VIPs");
 			format(info,600,"%s\n%s\n%s",info2,info3,info4);
			ShowPlayerDialog(playerid,5566,DIALOG_STYLE_LIST,"Escolha a opção pedida:",info,"Escolher","Sair");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não têm uma Casa!");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/corcarrocasa", true) == 0 || strcmp(cmd, "/corcarrodacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new House = PlayerInfo[playerid][pPHousekey];
	   		if (!PlayerToPoint(25.5, playerid,HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey], HouseInfo[House][hEntrancez]))
			{
   				SendClientMessage(playerid, COLOR_GRAD3, "Você esta longe da entrada de sua casa!");
			    return true;
			}
			if (House == 500)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Desculpe-me, mais Você não em uma casa!");
			    return true;
			}
			if (strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
			    ShowPlayerDialog(playerid,8903, DIALOG_STYLE_LIST, "cor do carro","Vermelho\nAzul\nBranco\nPreto\nRosa\nCinza\nVinho\nAmarelo\nVerde\nAzulClaro\nRoxo\nPrata\nMarrom","Selecionar","Cancelar");
			    return true;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/ccarrocasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new gunid[16];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					return true;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (GetPlayerMoney(playerid) < 10000)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem R$10000!");
					return true;
				}
				if (GetPlayerMoney(playerid) > 10000)
				{
				    new carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
					if(strcmp(gunid, "Vermelho", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para vermelho!");
						HouseInfo[House][hVcol1] = 3;
						HouseInfo[House][hVcol2] = 3;
						GivePlayerMoney(playerid, -10000);
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "azul", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Azul!");
						HouseInfo[House][hVcol1] = 79;
						HouseInfo[House][hVcol2] = 79;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "Branco", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Branco!");
						HouseInfo[House][hVcol1] = 1;
						HouseInfo[House][hVcol2] = 1;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "preto", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Preto!");
						HouseInfo[House][hVcol1] = 0;
						HouseInfo[House][hVcol2] = 0;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "rosa", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Rosa!");
						HouseInfo[House][hVcol1] = 5;
						HouseInfo[House][hVcol2] = 5;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "cinza", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Cinza!");
						HouseInfo[House][hVcol1] = 9;
						HouseInfo[House][hVcol2] = 9;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "amarelo", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Amarelo!");
						HouseInfo[House][hVcol1] = 6;
						HouseInfo[House][hVcol2] = 6;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "verde", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para verde!");
						HouseInfo[House][hVcol1] = 86;
						HouseInfo[House][hVcol2] = 86;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "zzClaro", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Azul Claro!");
						HouseInfo[House][hVcol1] = 2;
						HouseInfo[House][hVcol2] = 2;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "roxo", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Roxo!");
						HouseInfo[House][hVcol1] = 186;
						HouseInfo[House][hVcol2] = 186;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
   					if(strcmp(gunid, "prata", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Prata!");
						HouseInfo[House][hVcol1] = 59;
						HouseInfo[House][hVcol2] = 59;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "marrom", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Marrom!");
						HouseInfo[House][hVcol1] = 89;
						HouseInfo[House][hVcol2] = 89;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
 					if(strcmp(gunid, "vinho", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou a cor do seu carro da casa Para Vinho!");
						HouseInfo[House][hVcol1] = 17;
						HouseInfo[House][hVcol2] = 17;
						DestroyVehicle(carid);
						GivePlayerMoney(playerid, -10000);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else
					{
						return true;
					}
				}
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/comprarcarrovsfth", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new gunid[16];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Novos Carros,Preço R$30000 ]______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarrovsfth [nomedocarro]");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
					return true;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (GetPlayerMoney(playerid) > 30000)
				{
				    new carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
					if(strcmp(gunid, "limozine", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Limozine");
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						HouseInfo[House][hVec] = 409;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "premier", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Premier");
						HouseInfo[House][hVec] = 426;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Hotknife");
						HouseInfo[House][hVec] = 434;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "comet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Comet");
						HouseInfo[House][hVec] = 480;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "zr350", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o ZR-350");
						HouseInfo[House][hVec] = 477;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "nrg500", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para a moto nrg500");
						HouseInfo[House][hVec] = 522;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bandito");
						HouseInfo[House][hVec] = 568;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegy");
						HouseInfo[House][hVec] = 562;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bullet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bullet");
						HouseInfo[House][hVec] = 541;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "turismo", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Turismo");
						HouseInfo[House][hVec] = 451;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "infernus", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Infernus");
						HouseInfo[House][hVec] = 411;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "cheetah", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Cheetah");
						HouseInfo[House][hVec] = 415;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "savanna", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return true;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Savanna");
						HouseInfo[House][hVec] = 567;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blistac", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blista Compact");
						HouseInfo[House][hVec] = 496;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stafford", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stafford");
						HouseInfo[House][hVec] = 580;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Clover");
						HouseInfo[House][hVec] = 542;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sultan", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sultan");
						HouseInfo[House][hVec] = 560;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegant");
						HouseInfo[House][hVec] = 507;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hornet", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Hornet");
						HouseInfo[House][hVec] = 521;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Phoenix");
						HouseInfo[House][hVec] = 603;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Emperor");
						HouseInfo[House][hVec] = 585;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Glendale");
						HouseInfo[House][hVec] = 466;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Greenwood");
						HouseInfo[House][hVec] = 492;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Huntley");
						HouseInfo[House][hVec] = 579;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Jester");
						HouseInfo[House][hVec] = 559;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Landstalker");
						HouseInfo[House][hVec] = 400;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Merit");
						HouseInfo[House][hVec] = 551;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Nebula");
						HouseInfo[House][hVec] = 516;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sabre");
						HouseInfo[House][hVec] = 475;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stratum");
						HouseInfo[House][hVec] = 561;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sunrise");
						HouseInfo[House][hVec] = 550;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Tahoma");
						HouseInfo[House][hVec] = 566;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Uranus");
						HouseInfo[House][hVec] = 558;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blade", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blade");
						HouseInfo[House][hVec] = 536;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "flash", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Flash");
						HouseInfo[House][hVec] = 565;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "buffalo", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Buffalo");
						HouseInfo[House][hVec] = 402;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bf-injection", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o BF Injection");
						HouseInfo[House][hVec] = 424;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Bike");
						HouseInfo[House][hVec] = 509;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "montainbike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Montain Bike");
						HouseInfo[House][hVec] = 510;
						SendClientMessage(playerid, COLOR_GRAD6, "Para trocar a Cor do seu carro USE: /corcarrocasa");
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else
					{
					   // SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarrovsfth [nomedocarro]");
						//SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
						//SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
						//SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
						//SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
						//SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
						return true;
					}
					SendClientMessage(playerid, COLOR_GRAD6, "Você pagou R$30.000, ele já está na sua casa!");
					ShowPlayerDialog(playerid,8903, DIALOG_STYLE_LIST, "cor do carro","Vermelho\nAzul\nBranco\nPreto\nRosa\nCinza\nVinho\nAmarelo\nVerde\nAzulClaro\nRoxo\nPrata\nMarrom","Selecionar","Cancelar");
					OnPropUpdate();
					GivePlayerMoney(playerid,-30000);
					SBizzInfo[5][sbTill] += 1000;
					ExtortionSBiz(5, 1000);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem (R$30.000)");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/resetarmelhorias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
				return true;
			}
			if (GetPlayerMoney(playerid) < 100)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   O reset custa R$100 !");
				return true;
			}
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você deve ter no mínimo nível 2 !");
				return true;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GivePlayerMoney(playerid,-100);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 128, "   Você tem %d pontos de melhoria !",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return true;
	}
	if (strcmp(cmd, "/comprararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não tem todo esse dinheiro!!");
			    return true;
			}
			new gun;
			new gunid[16];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100 || location == 102 || PlayerToPoint(2.0,playerid,296.3083,-38.1549,1001.5156) || PlayerToPoint(2.0,playerid,313.8642,-133.8308,999.6016))
			{
				new mod = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Armas ]______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprararma [arma] [munição]");
					format(gstring, 128, "Armas: parachute (R$%d) golfclub (R$%d) nightstick (R$%d) baseballbat (R$%d) shovel (R$%d) poolcue (R$%d)",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: purpledildo (R$%d) whitedildo (R$%d) longwhitedildo (R$%d) whitedildo2 (R$%d) flowers (R$%d) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: eagle (R$%d) pistola (R$%d) mp5 (R$%d)",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: shotgun (R$%d) ak47 (R$%d) m4 (R$%d) rifle (R$%d)",
					GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: pistolammo (R$%d) shotgunammo (R$%d) smgammo (R$%d) assaultammo (R$%d) rifleammo (R$%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return true;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /comprararma [arma] [munição]");
					return true;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Munição tem que ser entre 1 e 999 !"); return true; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "Vendedor: Nunca ouvi falar dessa arma.");
					return true;
				}
				if((guncharge+ammocharge) > GetPlayerMoney(playerid))
				{
					format(gstring, 128, "   Você não tem R$%d para pagar !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return true;
				}
				new payout = guncharge + ammocharge;
				format(gstring, 128, "Você comprou um(a) %s com %d bala(s) por R$%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, gstring);
				if(location == 102 && IsACop(playerid)) { }
				else { GivePlayerMoney(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponBPH(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
				printf("%s", gstring);
				//PayLog(gstring);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"Você naão está em uma loja de armas.");
				return true;
			}
		}
		return true;
	}
 //MudarNomeSim?
	if (strcmp(cmd, "/melhorar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(gstring, sizeof(gstring), "USE: /melhorar [pontos] (Você tem %d pontos de melhora)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ UPGRADES ]______________|");
				SendClientMessage(playerid, COLOR_GRAD2,gstring);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 2 Melhorias: Alcool, Drogas");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 3 Melhorias: Alcool, Drogas, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 4 Melhorias: Alcool, Drogas, Avareza, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 5 Melhorias: Alcool, Drogas, Avareza, Comercio, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Extra: Vida");
				return true;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] >= 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "Vida", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(gstring, 128, "Atualização: você vai nascer com %.2f de vida (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Você já está no máximo de vida");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Alcool", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(gstring, 128, "Nova Atualização: Agora seu nível de alcool é %d.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de alcool já está no máximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Drogas", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(gstring, 128, "Nova Atualização: Agora seu nível de drogas é %d.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de drogas já está no máximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "Avareza", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(gstring, 128, "Nova Atualização: Agora sua avareza é nível %d.",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Avareza está no máximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "Comercio", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(gstring, 128, "Nova Atualização: Agora seu Comércio é nível %d.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de comércio está no máximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(gstring, 128, "Nova Atualização: Seu nível de Pain Killers agora é %d.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Pain Killers já está no máximo !");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Atualização desconhecida");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Você tem 0 Pontos de Melhoria");
				return true;
			}
			SendClientMessage(playerid, COLOR_GRAD6, gstring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return true;
	}

//-------------------------
	if(strcmp(cmd, "/ativarsenha", true) == 0)
 	{
  		if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337 && (!senha))
			{

				senha = 1;
				SendClientMessage(playerid, COLOR_LIGHTRED, "Mudança de Senha Desativada.");
			}
			else if (PlayerInfo[playerid][pAdmin] >= 1337 && (senha))
			{

				senha = 0;
				SendClientMessage(playerid, COLOR_GREEN, "Mudança de Senha Ativada.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Terfome", true) == 0)
 	{
  		if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3001 && TerFome == 0)
			{
				TerFome = 1;
				SendClientMessage(playerid, COLOR_GRAD1, "Agora os Players Terão fome!.");
				for(new Jogadores = 0; Jogadores < MAX_PLAYERS; Jogadores ++)
				{
				    if(IsPlayerConnected(Jogadores))
				    {
				        TempoFome[Jogadores] = SetTimerEx("CheckFome", 305000, 1, "i", Jogadores);
					}
				}
			}
			else if (PlayerInfo[playerid][pAdmin] >= 1337 && TerFome == 1)
			{
				TerFome = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "Agora os Players não terão fome!");
				for(new Jogadores = 0; Jogadores < MAX_PLAYERS; Jogadores ++)
				{
				    if(IsPlayerConnected(Jogadores))
				    {
				    	KillTimer(TempoFome[Jogadores]);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Hospital", true) == 0)
 	{
  		if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3001 && SistemaHospital == 0)
			{

				SistemaHospital = 1;
				SendClientMessage(playerid, COLOR_GRAD1, "Agora os Players irão para o Hospital quando morrer!.");
			}
			else if (PlayerInfo[playerid][pAdmin] >= 1337 && SistemaHospital == 1)
			{

				SistemaHospital = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "Agora os Players não irão para o Hospital quando morrer!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}

//=============
	if (strcmp(cmd,"/trocarsenha",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	 	{
			if ((senha))
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Comando desabilitado pelo admin");
				return 1;
			}
  			if(gPlayerLogged[playerid] == 0)
    		{
     			SendClientMessage(playerid,COLOR_GRAD1,"Você não está logado no servidor!");
       			return 1;
       		}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"%s.ini",sendername);
  			new tmppass[64];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Use: /trocarsenha [NOVA SENHA]");
				return 1;
			}
			strmid(tmppass,tmp,0,strlen(cmdtext),255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
            format(string, sizeof(string), "SUA NOVA SENHA É »[ %s ]« TOME CUIDADO PARA NÃO PERDE-LA.",tmp);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cnn2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn2 [Formato ~n~-Novalinha ~r~-vermelho ~g~-verde ~b~-azul ~w~-branco ~y~-amarelo]");
					return 1;
				}
				format(string, sizeof(string), "~p~%s: ~w~%s",sendername,result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 0);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não e um Admin!");
				return 1;
			}
		}
		return 1;
    }
    
	if(strcmp(cmd, "/anuncio", true) == 0 || strcmp(cmd, "/an", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você Não Está Logado !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pConnectTime] < 2)
			{
				SendClientMessage(playerid,COLOR_GRAD2," Você só poderá mandar anuncios após 2 horas jogadas no servidor!");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/an)uncio [Texto para anunciar]");
				return 1;
			}
			new payout = idx * 2;
			if(GetPlayerMoneyEx(playerid) < payout)
	        {
	            format(string, sizeof(string), "Você Usou %d characteres e custou $%d, Você não tem Esse Dinheiro.", offset, payout);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            return 1;
	        }
	        if(TempoAn[playerid] > 0)
	        {
	            if(PlayerInfo[playerid][pVIP] <= 1)
	            {
	            	format(string, sizeof(string), "Você não é um player VIP-POWER e poderá manda outro anuncio após %d segundos!", TempoAn[playerid]);
	        		SendClientMessage(playerid,COLOR_GRAD2,string);
	        		return 1;
				}
				else
				{
					format(string, sizeof(string), "Espere %d segundos para mandar outro anuncio", TempoAn[playerid]);
	        		SendClientMessage(playerid,COLOR_GRAD2,string);
	        		return 1;
				}
	        }
	        if(AnuncioMandado > 0)
	        {
	            if(PlayerInfo[playerid][pVIP] <= 1)
	            {
	            	format(string, sizeof(string), "Você não é um player VIP-POWER e poderá manda outro anuncio após %d segundos!", AnuncioMandado);
	        		SendClientMessage(playerid,COLOR_GRAD2,string);
	        		return 1;
				}
	        }
			GivePlayerMoneyEx(playerid, - payout);
			SBizzInfo[7][sbTill] += payout;
			ExtortionSBiz(7, payout);
            if(IsPlayerInLosSantos(playerid)|| IsPlayerInLasVenturas(playerid))
            {
                if(IsPlayerInLosSantos(playerid))
                {
                    format(string, sizeof(string), "Anuncio LS: %s, Contato: %s Celular:[%d]", result,sendername,PlayerInfo[playerid][pPnumber]);
                    OOCLosSantos(TEAM_GROVE_COLOR,string);
				}
				if(IsPlayerInLasVenturas(playerid))
                {
                    format(string, sizeof(string), "Anuncio LV: %s, Contato: %s Celular:[%d]", result,sendername,PlayerInfo[playerid][pPnumber]);
                    OOCLasVenturas(TEAM_GROVE_COLOR,string);
				}
			}
			else
			{
			    format(string, sizeof(string), "Anuncio SF: %s, Contato: %s Celular:[%d]", result,sendername,PlayerInfo[playerid][pPnumber]);
                OOCSanFierro(TEAM_GROVE_COLOR,string);
			}
			format(string, sizeof(string), "~r~Pagou $%d~n~~w~Pelo Anuncio.", payout, idx);
			GameTextForPlayer(playerid, string, 5000, 5);
			if(PlayerInfo[playerid][pVIP] > 1)
			{
            	TempoAn[playerid] = 30;
			}
			else
			{
			    TempoAn[playerid] = 30+idx*1;
			}
			AnuncioMandado = 30;
		}
		return 1;
	}

	if(strcmp(cmd, "/ls", true) == 0 || strcmp(cmd, "/lossantos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{

					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1242.9431,-1694.9233,16.1969);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1242.9431,-1694.9233,16.1969);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não está autorizado a usar o comando!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/irhospital", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 367.8714,165.0373,1053.2078);
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,10);
				PlayerInfo[playerid][pInt] = 10;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não está autorizado a usar o comando!");
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/sf", true) == 0 || strcmp(cmd, "/sanfierro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não esta em modo admin");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{

					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2724.3208,-314.6010,7.1862);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2724.3208,-314.6010,7.1862);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/lv", true) == 0 || strcmp(cmd, "/lasventuras", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não esta em modo admin");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{

					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/arrancadao", true) == 0 || strcmp(cmd, "/arrancadão", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 3936.1392,-1249.7910,32.1172);
					LinkVehicleToInterior(tmpcar, 1);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					SetPlayerRaceCheckpoint(playerid,0, 4022.1069,377.7045,31.0172,3938.0779,-1213.7883,31.7167, 10.0);
				}
				else
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 3936.1392,-1249.7910,32.1172);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,1);
				PlayerInfo[playerid][pInt] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não está autorizado a usar o comando!");
			}
		}
		return 1;
	}


//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/governo", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid) || org == 4 || org == 31)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando!");
				    return true;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/gov)erno [texto]");
					return true;
				}

	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	            if(org != 4 && org != 31)
	            {
					SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio Do Governo ______________|");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COLOR_DBLUE, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else
				{
					SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio dos Medicos ______________|");
					format(string, sizeof(string), "Médico %s: %s", sendername, result);
					SendClientMessageToAll(COLOR_DBLUE, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				print(string);
			}
		}
		return true;
	}

//----------------------------------[Prefeito]-----------------------------------------------
	if(strcmp(cmd, "/prefeito", true) == 0 || strcmp(cmd, "/pre", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode se comunicar na cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 7  || IsAGOV(playerid))
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Você precisa ter pelomenos cargo 4 para usar este comando");
				    return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/pre)feito [texto]");
					return true;
				}

				SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio da Prefeitura ______________|");
				format(string, sizeof(string), "Governo %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
				SBizzInfo[7][sbTill] += 30;
				print(string);
			    ExtortionSBiz(7, 30);
			}
		}
		return true;
	}
//----------------------------------[to]-----------------------------------------------
    if(strcmp(cmd, "/desativar", true) == 0)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD3, "    Você não fez o login");
			return true;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, noticias, celular");
			return true;
		}
	    if(strcmp(tmp, "noticias", true) == 0)
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias desativado !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias ativado !");
			}
		}
	    if(strcmp(tmp, "org", true) == 0)
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização desativado !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização ativado !");
			}
		}
	    else if(strcmp(tmp, "celular", true) == 0)
	    {
	        if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   Você desligou seu celular (não receberá ligações nem SMS) !");
					CellTime[playerid] = 0;
					Mobile[playerid] = 255;
					new pSpecialAction = GetPlayerSpecialAction(playerid);
					if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
					{
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   Você ligou seu celular !");
				}
			}
		}
		else
		{
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, noticias, celular");
		}
		return true;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/eu", true) == 0)
	{
		if(NaCamera[playerid] > 3)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   return true;
	    }
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está logado !");
	            return true;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /eu [action]");
				return true;
			}
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
			    format(string, sizeof(string), "*** Mascara %s", result);
			}
			else
			{
				format(string, sizeof(string), "*** %s %s", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return true;
	}

//----------------------------------[Short]-----------------------------------------------
	if(strcmp(cmd, "/megafone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/m)egafone [texto]");
				return true;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 1||PlayerInfo[playerid][pLider] == 1)
				{
					format(string, sizeof(string), "[Policial Militar %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "[Rotam %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 27||PlayerInfo[playerid][pLider] == 27)
				{
					format(string, sizeof(string), "[Policial Militar %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 3||PlayerInfo[playerid][pLider] == 3)
				{
				    format(string, sizeof(string), "[Exército %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(IsAGOV(playerid))
				{
				    format(string, sizeof(string), "[Governo %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 16||PlayerInfo[playerid][pLider] == 16)
				{
				    format(string, sizeof(string), "[Rotam-SF %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 11||PlayerInfo[playerid][pLider] == 11)
				{
				    format(string, sizeof(string), "[Policia Federal %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 33||PlayerInfo[playerid][pLider] == 33)
				{
				    format(string, sizeof(string), "[Policial Rodoviário %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   Você não faz parte de nenhuma equipe !");
				return true;
			}
		}
		return true;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/rd", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
		if(NaCamera[playerid] > 3)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   return true;
	    }
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_R, "USE: (/r)adio [radio chat]");
				return true;
			}

			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(1,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			
			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Guarda de transito %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(33,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			
			if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Secretário Chefe %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Chefe %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Hacker %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Coordenador %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Secretário %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Observador %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** S.S.P %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(34,COLOR_YELLOW2,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(27,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Vereador %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Segurança %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Motorista %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(7,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Tenente %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Sargento %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Cabo %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Soldado %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Recruta %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Recruta %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(2,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** General %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Tenente Coronel %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Major %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Sargento %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Soldado %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Soldado %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(3,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor Hospitalar %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Diretor %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Médico Profissional %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Médico %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Enfermeiro %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(4,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}

			else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor Hospitalar %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Diretor %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Médico Profissional %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Médico %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Enfermeiro %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(31,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro]== 16 || PlayerInfo[playerid][pLider]== 16)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Perito Criminal %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Atirador de Elite %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente Do G.E.R %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Agente Do G.O.E %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Novato %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(16,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro]== 11 || PlayerInfo[playerid][pLider]== 11)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100|| PlayerInfo[playerid][pCargo] == 200) { format(string, sizeof(string), "** Sub-Líder %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capitão %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Atirador %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Espião %s: %s, câmbio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Agente %s: %s, câmbio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Agente %s: %s, câmbio. **", sendername, result);
				}
				SendFamilyMessage(11,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é de nenhuma equipe !");
				return true;
			}
		}
		return true;
	}
	if(!strcmp(cmd,"/escudo",true))
	{
 		if(IsACop(playerid))
    	{
        	if(Equipamentos[playerid] == 1)
        	{
            	RemovePlayerAttachedObject(playerid,3);
            	Equipamentos[playerid] = 0;
            	return true;
        	}
        	if(Equipamentos[playerid] == 0)
        	{
            	SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
            	SendClientMessage(playerid,COR_PM,"Você pegou o escudo !");
            	Equipamentos[playerid] = 1;
            	return true;
        	}
    	}
    	else
    	{
        	SendClientMessage(playerid,COLOR_WHITE,"Você não é um COP.");
    	}
   	 	return true;
	}
	
	//==================[ sistema de Araras: Creditos GM Play Stars ] =====================
   	if(strcmp(cmdtext, "/comprararara", true) == 0)
    {
    	if(AraraInfo[playerid][Grande] >= 5)
    	{
    	    SendClientMessage(playerid, -1, "Sua Arara está grande e pronta para ser vendida! use: /venderarara!");
			return 1;
		}
     	if(GetPlayerMoney(playerid)<20000)
     	{
     	    SendClientMessage(playerid, -1,"Você não tem R$20000!");
		 	return 1;
		}
      	if(AraraInfo[playerid][Arara])
      	{
			SendClientMessage(playerid, -1, "Você já é proprietário de uma Arara!");
	  		return 1;
		}
       	SendClientMessage(playerid, COLOR_WHITE, "Você comprou uma Arara, ela irá cescer de 30 em 30 minutos.");
       	SendClientMessage(playerid, COLOR_WHITE, "Use /racao para alimenta-la.");
       	SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
       	GivePlayerMoney(playerid, -20000);
       	AraraInfo[playerid][Arara] = true;
       	AraraInfo[playerid][Timer] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
       	VidaArara[playerid] = 5;
       	return 1;
	}
 	if(strcmp(cmdtext, "/alimentada", true) == 0)
  	{
   		if(AraraInfo[playerid][Grande] >= 5) return SendClientMessage(playerid, COLOR_LIGHTRED, "Sua Arara está grande e pronta para ser vendida! use: /venderarara!");
     	if(!AraraInfo[playerid][Arara]) return SendClientMessage(playerid, COLOR_LIGHTRED, "Você não tem uma Arara.");
        if(AraraInfo[playerid][Racao]) { SendClientMessage(playerid, COLOR_DBLUE, "Arara Alimentada: {008000}Sim"); }
        else { SendClientMessage(playerid, COLOR_DBLUE, "Arara Alimentada: {FF0000}Não"); }
        return 1;
   	}
    if(strcmp(cmdtext, "/racao", true) == 0)
    {
    	if(AraraInfo[playerid][Grande] >= 5) return SendClientMessage(playerid, -1, "Sua Arara está grande e pronta para ser vendida! use: /venderarara!");
        if(!AraraInfo[playerid][Arara]) return SendClientMessage(playerid, -1, "Você não tem uma Arara");
        if(AraraInfo[playerid][Racao]) return SendClientMessage(playerid, -1, "Você já alimentou sua Arara!");
        SendClientMessage(playerid, COLOR_WHITE, "Você Alimentou Sua Arara! Isso lhe custou R$200");
        GivePlayerMoneyEx(playerid, -200);
        AraraInfo[playerid][Racao] = true;
        VidaArara[playerid] = 5;
        return 1;
	}
    if(strcmp(cmdtext, "/venderarara", true) == 0)
    {
    	if(!AraraInfo[playerid][Arara]) return SendClientMessage(playerid, -1,"Você não comprou nenhuma Arara!");
     	if(AraraInfo[playerid][Grande] < 5) return SendClientMessage(playerid, -1,"Sua Arara ainda não está grande!");
        AraraInfo[playerid][Grande] = 0;
        AraraInfo[playerid][Arara] = false;
        RemovePlayerAttachedObject(playerid, 4);
        GivePlayerMoneyEx(playerid, 40000);
        SendClientMessage(playerid, -1, "Você Vendeu sua Arara e ganhou R$40000!");
        VidaArara[playerid] = 0;
        return 1;
	}
	//==================================================================================
//---------------------------------[offduty]-----------------------------------------------
	if(strcmp(cmd, "/batercartao", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode batercartao na cadeia!");
			return true;
	    }
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(IsACop(playerid))
			{
            	if(PlayerToPoint(2,playerid,1530.3060,-1702.4915,6.2252) || PlayerToPoint(2,playerid,326.6374,307.1123,999.1484) || PlayerToPoint(2,playerid,302.7936,-1529.9443,24.9219) || PlayerToPoint(2,playerid,240.6516,112.8062,1003.2188) || PlayerToPoint(2,playerid,255.1123,77.4241,1003.6406) || PlayerToPoint(2,playerid,229.8059,164.7830,1003.0234)
			 	|| PlayerToPoint(2,playerid,-1521.1884,462.9987,7.1875) || PlayerToPoint(2,playerid,712.7550,-554.5677,-3.5950) || PlayerToPoint(2,playerid,-1588.4751,732.4855,-4.9063))
				{
					if(OnDuty[playerid]==0)
			        {
						format(string, sizeof(string), "Oficial %s esta Fardado.", sendername);
						SendClientMessageToAll(COLOR_DBLUE,string);
	    				format(string, sizeof(string), "* O Policial %s Pegou seus equipamentos", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						//SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
                        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
                        GivePlayerWeaponBPH(playerid, 24, 150);
                        GivePlayerWeaponBPH(playerid, 25, 250);
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						OnDuty[playerid] = 1;
						EmpregoDuty[playerid] = 2;
						Copsronda += 1;
					}
					else if(OnDuty[playerid]==1)
					{
						format(string, sizeof(string), "Oficial %s esta de Folga.", sendername);
						SendClientMessageToAll(COLOR_DBLUE,string);
	    				format(string, sizeof(string), "* O Policial %s guardou seus equipamentos", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						//RemovePlayerAttachedObject(playerid,3);
						OnDuty[playerid] = 0;
						EmpregoDuty[playerid] = 0;
						Copsronda -= 1;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/bcMedicos", true) == 0)
	{
		if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 31||PlayerInfo[playerid][pLider] == 31)
		{
            if(PlayerToPoint(2,playerid,2041.5625,-1422.2742,17.1641))
            {
			    if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
			        EmpregoDuty[playerid] = 0;
			        Medics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão com o seu trabalho e irá receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        Medics += 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em frente ao Hospital !");
				return 1;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/bcmec", true) == 0)
	{
		if(IsAMec(playerid))
		{
            if(PlayerToPoint(3,playerid,1466.7955,-2226.0144,13.5469))
            {
			    if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
			        EmpregoDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão como mecânico e irá receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        SetPlayerSkin(playerid,50);
			        format(string, sizeof(string), "Mecânico %s está em servico, /servico mecanico.", sendername);
	    			SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			        Mechanics += 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não está perto da garagem !");
				return 1;
			}
		}
		return true;
  	}
//===================== sistema testes ==================
	if(strcmp(cmd, "/equipargc1", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{

	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

   			if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];

			if(PlayerInfo[playerid][pCargo] >= 1)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec1]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc1]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c1]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc1]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec1]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
    			else
    			{
    		        return 1;
    			}
              //}
	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
	}

//c2
	if(strcmp(cmd, "/equipargc2", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{

	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];
    		if(PlayerInfo[playerid][pCargo] >= 2)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec2]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc2]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c2]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc2]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec2]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
    			else
    			{
    		        return 1;
    			}
	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
		}

//c3
	if(strcmp(cmd, "/equipargc3", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{

	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];
    		if(PlayerInfo[playerid][pCargo] >= 3)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec3]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc3]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c3]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc3]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec3]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
    			else
    			{
    		        return 1;
    			}

	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
		}
//c4
	if(strcmp(cmd, "/equipargc4", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{

	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];
    		if(PlayerInfo[playerid][pCargo] >= 4)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec4]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc4]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c4]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc4]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec4]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
         		else if(org == 15 || org == 3 || org == 6 || org == 23)
    			{
 				if(PlayerInfo[playerid][pCargo] >= 4)
 				{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-50;
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 4, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec4]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc4]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c4]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc4]);
	    	    GivePlayerWeaponBPH(playerid, 33, 200);
	    	    GivePlayerWeaponBPH(playerid, 34, 80);
	    	    GivePlayerMoney(playerid, -500);
	    	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    SetPlayerArmour(playerid, 50);
	    	    SetPlayerHealth(playerid, 100);
	    	    CofreOrg[org][Dinheiro] = grana+500;
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
 				if(CofreOrg[org][Maconha] > 20 && IsAMember(playerid))
    			{
					SendClientMessage(playerid, COLOR_YELLOW, " A HQ te deu 100 de maconha!");
					CofreOrg[org][Maconha] = maconha-100;
					PlayerInfo[playerid][pDrogas] += 100;
		   			return true;
		   			}
    			}
	   			}
    			else
    			{
    		        return 1;
    			}
	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
		}
//c5
	if(strcmp(cmd, "/equipargc5", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{

	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];
    		if(PlayerInfo[playerid][pCargo] >= 5)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec5]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc5]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c5]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc5]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec5]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
    			else if(org == 15 || org == 3 || org == 6 || org == 23)
    			{
 				if(PlayerInfo[playerid][pCargo] >= 5)
 				{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-50;
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 4, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec5]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc5]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c5]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc5]);
	    	    GivePlayerWeaponBPH(playerid, 33, 200);
	    	    GivePlayerWeaponBPH(playerid, 34, 100);
	    	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    GivePlayerMoney(playerid, -500);
	    	    SetPlayerArmour(playerid, 70);
	    	    SetPlayerHealth(playerid, 100);
	    	    CofreOrg[org][Dinheiro] = grana+500;
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
 				if(CofreOrg[org][Maconha] > 20 && IsAMember(playerid))
    			{
					SendClientMessage(playerid, COLOR_YELLOW, " A HQ te deu 100 de maconha!");
					CofreOrg[org][Maconha] = maconha-100;
					PlayerInfo[playerid][pDrogas] += 100;
		   			return true;
		   			}
    			}
    			}
    			else
    			{
    		        return 1;
    			}

	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
		}

//c6 = lider
	if(strcmp(cmd, "/equipargc6", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
	    new darmaconha = CofreOrg[org][dMaconha];
    	if(org == 1 || org == 2 || org == 3 || org == 14 || org == 5 || org == 6 || org == 7 || org == 8 || org == 11 || org == 12 || org == 13
		|| org == 15 || org == 16 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 22 || org == 23 || org == 24 || org == 25
		|| org == 26 || org == 27 || org == 28 || org == 29|| org == 33)
		{
	    	if(CofreOrg[org][Materiais] < darmaconha)
    		{
				if(IsAMember(playerid))
				{
					SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   				return true;
	   			}
    		}
			if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 33 && !PlayerToPoint(3, playerid, 608.2841,-586.3127,17.2266))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 1 && !PlayerToPoint(3, playerid, 1568.5505,-1690.1245,6.2188))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 2 && !PlayerToPoint(3, playerid, 323.8644,-1518.2356,36.0325))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 7 && !PlayerToPoint(3, playerid, 356.2967,152.4229,1025.7891))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 8 && !PlayerToPoint(3, playerid, 1105.9783,-301.7331,74.5391))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
      		if(org == 11 && !PlayerToPoint(3, playerid, -2458.0300,500.2602,30.0783))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  			if(org == 15 && !PlayerToPoint(3, playerid, 399.8163,2539.5322,16.6796))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 16 && !PlayerToPoint(3, playerid, 208.8450,145.8361,1003.0234))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 22 && !PlayerToPoint(3, playerid, -1688.7321,1343.3208,7.1722))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 23 && !PlayerToPoint(3, playerid, -2237.1875,2353.9629,4.9807))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
  		   	if(JaEquipado[playerid] == 1)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você precisa esperar um pouco para equipar novamente!");
	   			return true;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    	    new maconha = CofreOrg[org][Maconha];
    	    new grana = CofreOrg[org][Dinheiro];
    		if(PlayerInfo[playerid][pCargo] == 6)
    		{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-20;
				GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec5]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc5]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c5]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc5]);
	    	    GivePlayerWeaponBPH(playerid, 33, CofreOrg[org][dRiflec5]);
	    	    GivePlayerMoney(playerid, -500);
	    	    CofreOrg[org][Dinheiro] = grana+500;
	    	    format(string, sizeof(string), "*%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
    			if(CofreOrg[org][Maconha] > darmaconha && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-darmaconha;
					PlayerInfo[playerid][pDrogas] += darmaconha;
		   			return true;
    			}
    			else if(org == 15 || org == 3 || org == 6 || org == 23)
    			{
 				if(PlayerInfo[playerid][pCargo] == 6)
 				{
                ResetPlayerWeaponsBPH(playerid);
				CofreOrg[org][Materiais] = dorgas-50;
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 4, 1);
	    	    GivePlayerWeaponBPH(playerid, 24, CofreOrg[org][dEaglec5]);
	    	    GivePlayerWeaponBPH(playerid, 25, CofreOrg[org][dShotc5]);
	    	    GivePlayerWeaponBPH(playerid, 29, CofreOrg[org][dMP5c5]);
	    	    GivePlayerWeaponBPH(playerid, 30, CofreOrg[org][dAKc5]);
	    	    GivePlayerWeaponBPH(playerid, 33, 200);
	    	    GivePlayerWeaponBPH(playerid, 34, 120);
	    	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    GivePlayerMoney(playerid, -500);
	    	    SetPlayerArmour(playerid, 100);
	    	    SetPlayerHealth(playerid, 100);
	    	    CofreOrg[org][Dinheiro] = grana+500;
				Bucetuda[playerid] = SetTimerEx("PlayerEquipar", 40000, 0, "i", playerid);
				JaEquipado[playerid] = 1;
 				if(CofreOrg[org][Maconha] > 20 && IsAMember(playerid))
    			{
					format(string, sizeof(string), "Sua HQ te deu %d de Maconha", darmaconha);
	    			SendClientMessage(playerid, COLOR_YELLOW,string);
					CofreOrg[org][Maconha] = maconha-100;
					PlayerInfo[playerid][pDrogas] += 100;
		   			return true;
		   			}
    			}
    			}
    			else
    			{
    		        return 1;
    			}
	    	}
	    	else
	    	{
	    	    SendClientMessage(playerid, COLOR_WHITE, " Escolha seu cargo corretamente");
	    	    return true;
			}
		}
		return true;
		}


	if(strcmp(cmd, "/equiparg", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
    	if(org == 5 || org == 14 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 24|| org == 25 || org == 26 || org == 28|| org == 29)
    	{
	    	if(CofreOrg[org][Materiais] < 50)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Sua organização não tem materiais suficientes para equipar!");
	   			return true;
    		}
    		if(org == 5 && !PlayerToPoint(3, playerid, 325.8390,-1769.9778,4.7614))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
   			if(org == 3 && !PlayerToPoint(3, playerid, -1520.0920,480.5076,7.1875))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1154.1490,-1185.1548,32.0275))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2825.3916,-1170.2870,25.2235))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 1996.3494,-2070.2419,13.5469))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

    		if(org == 21 && !PlayerToPoint(3, playerid, 2247.3445,-1458.7847,24.0243))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você só pode equipar no cofre org de sua HQ!");
	   			return true;
    		}

    	    new dorgas = CofreOrg[org][Materiais];
    		if(PlayerInfo[playerid][pLider] >= 1)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
          		//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
	    	    GivePlayerWeaponBPH(playerid, 24, 500);
	    	    GivePlayerWeaponBPH(playerid, 25, 400);
	    	    GivePlayerWeaponBPH(playerid, 29, 400);
	    	    GivePlayerWeaponBPH(playerid, 30, 600);
                //GivePlayerWeaponBPH(playerid, 34, 600);
	    	    format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
	    	}
  			else if(PlayerInfo[playerid][pCargo] <= 1)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
        		//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
				GivePlayerWeaponBPH(playerid, 24, 220);
    	    	GivePlayerWeaponBPH(playerid, 25, 140);
    	    	GivePlayerWeaponBPH(playerid, 29, 130);
    	    	GivePlayerWeaponBPH(playerid, 30, 250);
    	    	format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
			}
  			else if(PlayerInfo[playerid][pCargo] == 2)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
        		//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
                GivePlayerWeaponBPH(playerid, 1, 1);
				GivePlayerWeaponBPH(playerid, 5, 1);
				GivePlayerWeaponBPH(playerid, 24, 240);
    	    	GivePlayerWeaponBPH(playerid, 25, 140);
    	    	GivePlayerWeaponBPH(playerid, 29, 130);
    	    	GivePlayerWeaponBPH(playerid, 30, 250);
    	    	format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
			}
  			else if(PlayerInfo[playerid][pCargo] == 3)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
        		//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
                GivePlayerWeaponBPH(playerid, 1, 1);
                GivePlayerWeaponBPH(playerid, 5, 1);
				GivePlayerWeaponBPH(playerid, 24, 250);
    	    	GivePlayerWeaponBPH(playerid, 25, 200);
    	    	GivePlayerWeaponBPH(playerid, 29, 180);
    	    	GivePlayerWeaponBPH(playerid, 30, 320);
    	    	format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
			}
  			else if(PlayerInfo[playerid][pCargo] == 4)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
    		   	//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
                GivePlayerWeaponBPH(playerid, 1, 1);
                GivePlayerWeaponBPH(playerid, 5, 1);
				GivePlayerWeaponBPH(playerid, 24, 260);
    	    	GivePlayerWeaponBPH(playerid, 25, 230);
    	    	GivePlayerWeaponBPH(playerid, 29, 210);
    	    	GivePlayerWeaponBPH(playerid, 30, 380);
    	    	format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
			}
  			else if(PlayerInfo[playerid][pCargo] == 5)
    		{
    		    CofreOrg[org][Materiais] = dorgas-50;
        		//SetPlayerArmour(playerid, 100.0);
			    //SetPlayerHealth(playerid, 100.0);
                GivePlayerWeaponBPH(playerid, 1, 1);
                GivePlayerWeaponBPH(playerid, 5, 1);
				GivePlayerWeaponBPH(playerid, 24, 400);
    	    	GivePlayerWeaponBPH(playerid, 25, 300);
    	    	GivePlayerWeaponBPH(playerid, 29, 300);
    	    	GivePlayerWeaponBPH(playerid, 31, 500);
                //GivePlayerWeaponBPH(playerid, 34, 150);
    	    	format(string, sizeof(string), "%s se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return true;
			}
    	}
    	return true;
	}
	
	
	if(strcmp(cmd, "/equipTR", true) == 0)
	{
	    new strimg[256];
	    if(IsPlayerConnected(playerid))
	    {
	        Controle(playerid, 1);
	       	if(PlayerToPoint(2, playerid,2155.4729,-1016.9375,62.8514))//Morro
			{
			    if(GuerranoMorro == 1)
			    {
			        SendClientMessage(playerid, COLOR_YELLOW, "Está acontecendo uma guerra neste territorio, você não pode equipar-se!");
			        return true;
				}
				if(GetPlayerOrg(playerid) != donomorro)
				{
				    ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -PrecoMorro);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s comprou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Você comprou os equipamentos deste territorio por R$%d, para mais informações USE: /precokit", PrecoMorro);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s (%s) Comprou os equipamentos do territorio da sua organização. {00CC00}+R$%d",PlayerName(playerid),NomeORG(playerid), PrecoMorro);
					SendFamilyMessage(donomorro, COLOR_YELLOW, string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i) && GetPlayerOrg(playerid) > 0 && GetPlayerOrg(i) == donomorro)
						{
					        GivePlayerMoney(i, PrecoMorro);
						}
					}
					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoMorro);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
			    if(donomorro == GetPlayerOrg(playerid))
			    {
			        ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -200);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s pegou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    				format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoMorro);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
					return true;
				}
			}
 	       	else if(PlayerToPoint(2, playerid,1967.0825,-1245.5968,24.2317))//PG
			{
			    if(GuerranoPark == 1)
			    {
			        SendClientMessage(playerid, COLOR_YELLOW, "Está acontecendo uma guerra neste territorio, você não pode equipar-se!");
			        return true;
				}
				if(GetPlayerOrg(playerid) != donopark)
				{
				    ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -PrecoPG);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s comprou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Você comprou os equipamentos deste territorio por R$%d, para mais informações USE: /precokit", PrecoPG);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					CofreOrg[donopark][Dinheiro] += PrecoPG;
					format(string, sizeof(string), "* %s (%s) Comprou os equipamentos do territorio da sua organização. {00CC00}+R$%d",PlayerName(playerid),NomeORG(playerid), PrecoMorro);
					SendFamilyMessage(donomorro, COLOR_YELLOW, string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i) && GetPlayerOrg(playerid) > 0 && GetPlayerOrg(i) == donopark)
						{
					        GivePlayerMoney(i, PrecoPG);
						}
					}
					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoPG);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
			    if(donopark == GetPlayerOrg(playerid))
			    {
			        ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -200);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s pegou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    				format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoPG);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
				else
				{
    				SendClientMessage(playerid, COLOR_GRAD1, "Sua organização não é dona deste territorio!");
					return true;
				}
			}
  	       	else if(PlayerToPoint(2, playerid,1727.1581,-1944.3672,13.5669))//Unity
			{
			    if(GuerranaEstacao == 1)
			    {
			        SendClientMessage(playerid, COLOR_YELLOW, "Está acontecendo uma guerra neste territorio, você não pode equipar-se!");
			        return true;
				}
				if(GetPlayerOrg(playerid) != donoestacao)
				{
				    ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -PrecoUnity);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s comprou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Você comprou os equipamentos deste territorio por R$%d, para mais informações USE: /precokit", PrecoUnity);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					CofreOrg[donoestacao][Dinheiro] += PrecoUnity;
					format(string, sizeof(string), "* %s (%s) Comprou os equipamentos do territorio da sua organização. {00CC00}+R$%d",PlayerName(playerid),NomeORG(playerid), PrecoMorro);
					SendFamilyMessage(donomorro, COLOR_YELLOW, string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i) && GetPlayerOrg(playerid) > 0 && GetPlayerOrg(i) == donoestacao)
						{
					        GivePlayerMoney(i, PrecoUnity);
						}
					}
					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoUnity);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
			    if(donoestacao == GetPlayerOrg(playerid))
			    {
			        ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -200);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s pegou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoUnity);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
				else
				{
    				SendClientMessage(playerid, COLOR_GRAD1, "Sua organização não é dona deste territorio!");
					return true;
				}
			}
  	       	else if(PlayerToPoint(2, playerid,1240.9377,-2031.4834,59.9921))//Casarão
			{
			    if(GuerranoCasarao == 1)
			    {
			        SendClientMessage(playerid, COLOR_YELLOW, "Está acontecendo uma guerra neste territorio, você não pode equipar-se!");
			        return true;
				}
				if(GetPlayerOrg(playerid) != donocasarao)
				{
				    ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -PrecoCasarao);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s comprou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Você comprou os equipamentos deste territorio por R$%d, para mais informações USE: /precokit", PrecoCasarao);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					CofreOrg[donocasarao][Dinheiro] += PrecoCasarao;
					format(string, sizeof(string), "* %s (%s) Comprou os equipamentos do territorio da sua organização. {00CC00}+R$%d",PlayerName(playerid),NomeORG(playerid), PrecoMorro);
					SendFamilyMessage(donomorro, COLOR_YELLOW, string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i) && GetPlayerOrg(playerid) > 0 && GetPlayerOrg(i) == donocasarao)
						{
					        GivePlayerMoney(i, PrecoCasarao);
						}
					}
					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoCasarao);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
			    if(donocasarao == GetPlayerOrg(playerid))
			    {
			        ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -200);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s pegou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoCasarao);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
				else
				{
    				SendClientMessage(playerid, COLOR_GRAD1, "Sua organização não é dona deste territorio!");
					return true;
				}
			}
  	       	else if(PlayerToPoint(2, playerid,1281.7220,-831.5698,83.1406))//Madd Dogg
			{
			    if(GuerranoAero == 1)
			    {
			        SendClientMessage(playerid, COLOR_YELLOW, "Está acontecendo uma guerra neste territorio, você não pode equipar-se!");
			        return true;
				}
				if(GetPlayerOrg(playerid) != donoaero)
				{
				    ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -PrecoMaddDogg);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s comprou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string,sizeof(string), "Você comprou os equipamentos deste territorio por R$%d, para mais informações USE: /precokit", PrecoMaddDogg);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					CofreOrg[donoaero][Dinheiro] += PrecoMaddDogg;
					format(string, sizeof(string), "* %s (%s) Comprou os equipamentos do territorio da sua organização. {00CC00}+R$%d",PlayerName(playerid),NomeORG(playerid), PrecoMorro);
					SendFamilyMessage(donomorro, COLOR_YELLOW, string);
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i) && GetPlayerOrg(playerid) > 0 && GetPlayerOrg(i) == donoaero)
						{
					        GivePlayerMoney(i, PrecoMaddDogg);
						}
					}
					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoMaddDogg);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
			    if(donoaero == GetPlayerOrg(playerid))
			    {
			        ResetPlayerWeaponsBPH(playerid);
			 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    	GivePlayerMoney(playerid, -200);
	    	    	SetPlayerArmour(playerid, 50);
	    	    	GivePlayerWeaponBPH(playerid, 1, 1);
					GivePlayerWeaponBPH(playerid, 24, 450);
					GivePlayerWeaponBPH(playerid, 25, 400);
					GivePlayerWeaponBPH(playerid, 29, 500);
					GivePlayerWeaponBPH(playerid, 30, 550);
					GivePlayerWeaponBPH(playerid, 35, 3);
					GivePlayerWeaponBPH(playerid, 39, 5);
   					format(string, sizeof(string), "* %s pegou os equipamentos do territorio.", PlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					format(strimg, sizeof(strimg), "** Eagle: 450 balas **\n** ShotGun: 400 balas **\n** MP5: 500 balas **\n** AK47: 550 balas **\n** Bazooka: 3 balas **\n** 5 Bombas **\n** 50 de colete **\n{00CC00}** Preço: R$%d **", PrecoMaddDogg);
					ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_MSGBOX, "KIT do territorio",strimg, "OK","");
			    	return true;
				}
				else
				{
    				SendClientMessage(playerid, COLOR_GRAD1, "Sua organização não é dona deste territorio!");
					return true;
				}
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/precokit", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "|**_______**| Preço dos KIT's |**_______**|");
		    //===========[ LS ]=================
			format(string, sizeof(string), "{FFFF00}[LOS SANTOS] {FFFF99}Preço KIT do Morro: {00FF00}R$%d", PrecoMorro);
			SendClientMessage(playerid, VERDE2, string);
  			format(string, sizeof(string), "{FFFF00}[LOS SANTOS] {FFFF99}Preço KIT do Parque Gleen: {00FF00}R$%d", PrecoPG);
			SendClientMessage(playerid, VERDE2, string);
  			format(string, sizeof(string), "{FFFF00}[LOS SANTOS] {FFFF99}Preço KIT da Unity: {00FF00}R$%d", PrecoUnity);
			SendClientMessage(playerid, VERDE2, string);
  			format(string, sizeof(string), "{FFFF00}[LOS SANTOS] {FFFF99}Preço KIT do Casarão: {00FF00}R$%d", PrecoCasarao);
			SendClientMessage(playerid, VERDE2, string);
  			format(string, sizeof(string), "{FFFF00}[LOS SANTOS] {FFFF99}Preço KIT do Madd Dogg: {00FF00}R$%d", PrecoCasarao);
			SendClientMessage(playerid, VERDE2, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/equiparreporter", true) == 0)
	{
		if(PlayerToPoint(3, playerid,356.6207,208.9427,1008.3828))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter
			{
				format(string, sizeof(string), "* O Repórter %s Pegou Seus Equipamentos", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 		        ResetPlayerWeaponsBPH(playerid);
 		        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
                SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 43, 200);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF0FFFFAA, "Você não é Repórter !");
			}
		}
	}

	if(strcmp(cmd, "/equipamentosTR", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerToPoint(1, playerid,2155.8501,-1017.4323,62.8348))
			{
   				Controle(playerid, 0);
			    format(string, sizeof(string), "Comprar KIT {00CC00}R$%d\n{FFFFFF}Ver Preço\nDefinir preço", PrecoMorro);
				ShowPlayerDialog(playerid, 8919, DIALOG_STYLE_LIST, "Equipamentos do territorio",string,"Selecionar","Cancelar");
				TipoTR[playerid] = 1;
			}
 			if(PlayerToPoint(2, playerid,1967.0825,-1245.5968,24.2317))
			{
			    Controle(playerid, 0);
				format(string, sizeof(string), "Comprar KIT {00CC00}R$%d\n{FFFFFF}Ver Preço\nDefinir preço", PrecoPG);
				ShowPlayerDialog(playerid, 8919, DIALOG_STYLE_LIST, "Equipamentos do territorio",string,"Selecionar","Cancelar");
				TipoTR[playerid] = 2;
			}
  			if(PlayerToPoint(2, playerid,1727.1581,-1944.3672,13.5669))
			{
			    Controle(playerid, 0);
				format(string, sizeof(string), "Comprar KIT {00CC00}R$%d\n{FFFFFF}Ver Preço\nDefinir preço", PrecoUnity);
				ShowPlayerDialog(playerid, 8919, DIALOG_STYLE_LIST, "Equipamentos do territorio",string,"Selecionar","Cancelar");
				TipoTR[playerid] = 3;
			}
   			if(PlayerToPoint(2, playerid,1240.9377,-2031.4834,59.9921))
			{
			    Controle(playerid, 0);
				format(string, sizeof(string), "Comprar KIT {00CC00}R$%d\n{FFFFFF}Ver Preço\nDefinir preço", PrecoCasarao);
				ShowPlayerDialog(playerid, 8919, DIALOG_STYLE_LIST, "Equipamentos do territorio",string,"Selecionar","Cancelar");
				TipoTR[playerid] = 4;
			}
    		if(PlayerToPoint(2, playerid,1281.7220,-831.5698,83.1406))
			{
			    Controle(playerid, 0);
				format(string, sizeof(string), "Comprar KIT {00CC00}R$%d\n{FFFFFF}Ver Preço\nDefinir preço", PrecoMaddDogg);
				ShowPlayerDialog(playerid, 8919, DIALOG_STYLE_LIST, "Equipamentos do territorio",string,"Selecionar","Cancelar");
				TipoTR[playerid] = 5;
			}
		}
		return true;
	}
    if(strcmp(cmd, "/equipara", true) == 0)
	{
        if(PlayerToPoint(2, playerid,246.3115,121.0975,1003.2301) || PlayerToPoint(2, playerid,262.0182,71.0734,1003.2422) || PlayerToPoint(2, playerid,211.2608,185.8552,1003.0313) || PlayerToPoint(2, playerid,-1521.1884,462.9987,7.1875))  //|| PlayerToPoint(2, playerid,616.8616,-592.8971,17.2equipar330))
		{
            if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pMembro] == 11)
			{
			    if(PlayerInfo[playerid][pCargo] == 6)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 500);
					GivePlayerWeaponBPH(playerid, 24, 500);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 31, 300);
					GivePlayerWeaponBPH(playerid, 29, 300);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 10);
					GivePlayerWeaponBPH(playerid, 34, 100);
					GivePlayerWeaponBPH(playerid, 42, 4999);
                }
			    if(PlayerInfo[playerid][pCargo] == 5)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 140);
					GivePlayerWeaponBPH(playerid, 24, 170);
					GivePlayerWeaponBPH(playerid, 29, 510);
					GivePlayerWeaponBPH(playerid, 31, 550);
					GivePlayerWeaponBPH(playerid, 34, 80);
					GivePlayerWeaponBPH(playerid, 17, 50);
					GivePlayerWeaponBPH(playerid, 41, 500);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 42, 4999);
                }
			    if(PlayerInfo[playerid][pCargo] == 4)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 120);
					GivePlayerWeaponBPH(playerid, 24, 360);
					GivePlayerWeaponBPH(playerid, 29, 490);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 31, 400);
					GivePlayerWeaponBPH(playerid, 34, 50);
					GivePlayerWeaponBPH(playerid, 17, 40);
					GivePlayerWeaponBPH(playerid, 41, 400);
					GivePlayerWeaponBPH(playerid, 42, 4999);
                }
			    if(PlayerInfo[playerid][pCargo] == 3)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 190);
					GivePlayerWeaponBPH(playerid, 24, 150);
					GivePlayerWeaponBPH(playerid, 29, 450);
					GivePlayerWeaponBPH(playerid, 31, 550);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 30);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					GivePlayerWeaponBPH(playerid, 34, 30);
					GivePlayerWeaponBPH(playerid, 3, 0);
                }
			    if(PlayerInfo[playerid][pCargo] == 2)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 80);
					GivePlayerWeaponBPH(playerid, 24, 150);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 29, 300);
					GivePlayerWeaponBPH(playerid, 31, 300);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 20);
					GivePlayerWeaponBPH(playerid, 42, 4999);
                }
			    if(PlayerInfo[playerid][pCargo] == 1)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   			format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
				    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
					GivePlayerWeaponBPH(playerid, 25, 190);
					GivePlayerWeaponBPH(playerid, 24, 150);
					GivePlayerWeaponBPH(playerid, 29, 450);
					GivePlayerWeaponBPH(playerid, 31, 550);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 30);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					GivePlayerWeaponBPH(playerid, 3, 0);
                }
     		}
			if(PlayerInfo[playerid][pLider] == 3)
			{
			    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
				format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 500);
				GivePlayerWeaponBPH(playerid, 24, 500);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 31, 600);
				GivePlayerWeaponBPH(playerid, 29, 600);
				GivePlayerWeaponBPH(playerid, 41, 600);
				GivePlayerWeaponBPH(playerid, 17, 10);
				GivePlayerWeaponBPH(playerid, 34, 100);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				return true;
			}
			if(PlayerInfo[playerid][pMembro] == 3)//Exército
 			{
    			if(PlayerInfo[playerid][pCargo] == 1)
		        {
		            VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			    	format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
					GivePlayerWeaponBPH(playerid, 25, 80);
					GivePlayerWeaponBPH(playerid, 24, 80);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 31, 300);
			     	GivePlayerWeaponBPH(playerid, 29, 300);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 10);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					return true;
				}
	      		if(PlayerInfo[playerid][pCargo] == 2)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
					GivePlayerWeaponBPH(playerid, 25, 80);
					GivePlayerWeaponBPH(playerid, 24, 150);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 29, 300);
					GivePlayerWeaponBPH(playerid, 31, 400);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 20);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					return true;
				}
	      		if(PlayerInfo[playerid][pCargo] == 3)
			    {
			        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
				   	format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
					GivePlayerWeaponBPH(playerid, 25, 190);
					GivePlayerWeaponBPH(playerid, 24, 150);
					GivePlayerWeaponBPH(playerid, 29, 450);
					GivePlayerWeaponBPH(playerid, 31, 550);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 17, 30);
					GivePlayerWeaponBPH(playerid, 34, 40);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					GivePlayerWeaponBPH(playerid, 3, 0);
					return true;
				}
				if(PlayerInfo[playerid][pCargo] == 4)
		        {
		            VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			    	format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
					GivePlayerWeaponBPH(playerid, 25, 120);
					GivePlayerWeaponBPH(playerid, 24, 360);
					GivePlayerWeaponBPH(playerid, 29, 490);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 31, 400);
					GivePlayerWeaponBPH(playerid, 34, 50);
					GivePlayerWeaponBPH(playerid, 17, 40);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					return true;
				}
	 			if(PlayerInfo[playerid][pCargo] == 5)
		        {
		            VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			    	format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
					GivePlayerWeaponBPH(playerid, 25, 140);
					GivePlayerWeaponBPH(playerid, 24, 170);
					GivePlayerWeaponBPH(playerid, 29, 510);
					GivePlayerWeaponBPH(playerid, 31, 550);
					GivePlayerWeaponBPH(playerid, 34, 80);
					GivePlayerWeaponBPH(playerid, 17, 50);
					GivePlayerWeaponBPH(playerid, 41, 300);
					GivePlayerWeaponBPH(playerid, 3, 0);
					GivePlayerWeaponBPH(playerid, 42, 4999);
					return true;
				}
			}
		}
	    return true;
	}

	if(strcmp(cmd, "/equiparterrorista", true) == 0)
	{
 		if(PlayerToPoint(10.0, playerid,400.3322,2539.2939,16.5449) || PlayerToPoint(10.0, playerid,1114.0310,-304.3608,73.9922) || PlayerToPoint(10.0, playerid,-309.3545,1761.2603,43.6406))
		{
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
			    if(PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pLider] == 23)//GI e GIA e Guerrilheiros Israelitas
				{
				    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
					format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
   					GivePlayerWeaponBPH(playerid, 24, 399);
	    			GivePlayerWeaponBPH(playerid, 30, 999);
		    		GivePlayerWeaponBPH(playerid, 29, 999);
		    		GivePlayerWeaponBPH(playerid, 4, 1);
		    		GivePlayerWeaponBPH(playerid, 25, 300);
		    		GivePlayerWeaponBPH(playerid, 34, 199);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
				}
				else
				{
				    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
					format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    ResetPlayerWeaponsBPH(playerid);
   					GivePlayerWeaponBPH(playerid, 24, 399);
	    			GivePlayerWeaponBPH(playerid, 30, 999);
		    		GivePlayerWeaponBPH(playerid, 29, 999);
		    		GivePlayerWeaponBPH(playerid, 4, 1);
		    		GivePlayerWeaponBPH(playerid, 25, 250);
		    		GivePlayerWeaponBPH(playerid, 34, 199);
		    		GivePlayerWeaponBPH(playerid, 17, 2);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
					return true;
				}
			}
		}
		return true;
	}

 	if(strcmp(cmd, "/equipar", true) == 0)
	{
	if(PlayerInfo[playerid][pJailed] != 0)
	{
		SendClientMessage(playerid,COLOR_GREY," Você não pode equipar na cadeia!");
		return true;
	}
	new tmpcar = GetPlayerVehicleID(playerid);
 	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
  	if(IsAEnforcerCar(tmpcar)|| PlayerToPoint(2, playerid,246.3115,121.0975,1003.2301) ||
	  PlayerToPoint(2, playerid,262.0182,71.0734,1003.2422) ||
	  PlayerToPoint(2, playerid,211.2608,185.8552,1003.0313) ||
	  PlayerToPoint(2, playerid,230.0127,165.0615,1003.0234) ||
	  PlayerToPoint(2, playerid,-1521.1884,462.9987,7.1875) ||
	  PlayerToPoint(2, playerid,616.8616,-592.8971,17.2330))
	{
    	if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pLider] == 33|| PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pMembro] == 33)
		{
			if(PlayerInfo[playerid][pCargo] == 6)
		    {
		        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		        AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
			    SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 500);
				GivePlayerWeaponBPH(playerid, 24, 500);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 31, 300);
				GivePlayerWeaponBPH(playerid, 29, 300);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 10);
				GivePlayerWeaponBPH(playerid, 34, 100);
				GivePlayerWeaponBPH(playerid, 42, 4999);
			}
  			if(PlayerInfo[playerid][pCargo] == 5)
		 	{
		 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		 	    AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
			    SetPlayerArmour(playerid, 100.0);
			   	SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 140);
				GivePlayerWeaponBPH(playerid, 24, 170);
				GivePlayerWeaponBPH(playerid, 29, 510);
				GivePlayerWeaponBPH(playerid, 31, 550);
				GivePlayerWeaponBPH(playerid, 34, 80);
				GivePlayerWeaponBPH(playerid, 17, 50);
				GivePlayerWeaponBPH(playerid, 41, 500);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 42, 4999);
   			}
    		if(PlayerInfo[playerid][pCargo] == 4)
		 	{
		 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		 	    AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
			    SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 120);
				GivePlayerWeaponBPH(playerid, 24, 360);
				GivePlayerWeaponBPH(playerid, 29, 490);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 31, 400);
				GivePlayerWeaponBPH(playerid, 34, 50);
				GivePlayerWeaponBPH(playerid, 17, 40);
				GivePlayerWeaponBPH(playerid, 41, 400);
				GivePlayerWeaponBPH(playerid, 42, 4999);
            }
	  		if(PlayerInfo[playerid][pCargo] == 3)
	    	{
	    	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	    	    AXITERCOLETE[playerid] = 3;
   				format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
		   		SetPlayerArmour(playerid, 100.0);
	   			SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 190);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 29, 450);
				GivePlayerWeaponBPH(playerid, 31, 550);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 30);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				GivePlayerWeaponBPH(playerid, 34, 30);
				GivePlayerWeaponBPH(playerid, 3, 0);
            }
		 	if(PlayerInfo[playerid][pCargo] == 2)
		    {
		        VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		        AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
		  		SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 80);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 29, 300);
				GivePlayerWeaponBPH(playerid, 31, 300);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 20);
				GivePlayerWeaponBPH(playerid, 42, 4999);
            }
		 	if(PlayerInfo[playerid][pCargo] == 1)
		 	{
		 	    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		 	    AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
			    SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeaponBPH(playerid, 25, 190);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 29, 450);
				GivePlayerWeaponBPH(playerid, 31, 550);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 30);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				GivePlayerWeaponBPH(playerid, 3, 0);
            }
   		}
		if(PlayerInfo[playerid][pLider] == 3)
		{
		    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		    AXITERCOLETE[playerid] = 3;
	    	format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            ResetPlayerWeaponsBPH(playerid);
			GivePlayerWeaponBPH(playerid, 25, 500);
			GivePlayerWeaponBPH(playerid, 24, 500);
			GivePlayerWeaponBPH(playerid, 3, 0);
			GivePlayerWeaponBPH(playerid, 31, 600);
			GivePlayerWeaponBPH(playerid, 29, 600);
			GivePlayerWeaponBPH(playerid, 41, 600);
			GivePlayerWeaponBPH(playerid, 17, 10);
			GivePlayerWeaponBPH(playerid, 34, 100);
			GivePlayerWeaponBPH(playerid, 42, 4999);
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 3)//Exército
	   	{
    		if(PlayerInfo[playerid][pCargo] == 1)
		    {
				format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 80);
				GivePlayerWeaponBPH(playerid, 24, 80);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 31, 300);
				GivePlayerWeaponBPH(playerid, 29, 300);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 10);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				return true;
			}
	   		if(PlayerInfo[playerid][pCargo] == 2)
		    {
		   		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 80);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 29, 300);
				GivePlayerWeaponBPH(playerid, 31, 400);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 20);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				return true;
			}
	      	if(PlayerInfo[playerid][pCargo] == 3)
   			{
		  		format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 190);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 29, 450);
				GivePlayerWeaponBPH(playerid, 31, 550);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 17, 30);
				GivePlayerWeaponBPH(playerid, 34, 40);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				GivePlayerWeaponBPH(playerid, 3, 0);
				return true;
			}
			if(PlayerInfo[playerid][pCargo] == 4)
		    {
				format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 120);
				GivePlayerWeaponBPH(playerid, 24, 360);
				GivePlayerWeaponBPH(playerid, 29, 490);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 31, 400);
				GivePlayerWeaponBPH(playerid, 34, 50);
				GivePlayerWeaponBPH(playerid, 17, 40);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				return true;
			}
	 		if(PlayerInfo[playerid][pCargo] == 5)
		    {
				format(string, sizeof(string), "%s Se equipou", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 25, 140);
				GivePlayerWeaponBPH(playerid, 24, 170);
				GivePlayerWeaponBPH(playerid, 29, 510);
				GivePlayerWeaponBPH(playerid, 31, 550);
				GivePlayerWeaponBPH(playerid, 34, 80);
				GivePlayerWeaponBPH(playerid, 17, 50);
				GivePlayerWeaponBPH(playerid, 41, 300);
				GivePlayerWeaponBPH(playerid, 3, 0);
				GivePlayerWeaponBPH(playerid, 42, 4999);
				return true;
			}
		}
	}
 	return true;
	}

	if(strcmp(cmd, "/mudarsexo", true) == 0)
	{
	    if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			new x_sexo[32];
			x_sexo = strtok(cmdtext, idx);
			if(!strlen(x_sexo))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "|Use: /mudarsexo [Numero]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 - Homem");
				SendClientMessage(playerid, COLOR_GREY, "| 2 - Mulher");
				return true;
			}
            if(strcmp(x_sexo,"1",true) == 0)
			{
				format(string, sizeof(string), "* Jogador %s mudou seu sexo para masculino.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pSex] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você mudou seu sexo para masculino!");
		   	 	return true;
			}
            if(strcmp(x_sexo,"2",true) == 0)
			{
		   		format(string, sizeof(string), "* Jogador %s mudou seu sexo para feminino.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				PlayerInfo[playerid][pSex] = 2;
				SendClientMessage(playerid,COLOR_GREEN,"Você trocou seu sexo para feminino!");
		   		return true;

			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS.");
		}
	}//Separação
 	if(strcmp(cmd, "/divorcio", true) == 0)
	{
		if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(IsPlayerConnected(playerid))
			{
      			new x_separar[32];
				x_separar = strtok(cmdtext, idx);
				if(!strlen(x_separar))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
					SendClientMessage(playerid, COLOR_WHITE, "|Use: /divorcio [Numero]");
					SendClientMessage(playerid, COLOR_GREY, "| 1 - Sim");
					SendClientMessage(playerid, COLOR_GREY, "| 2 - Não");
					return true;
				}
                if(strcmp(x_separar,"1",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						format(string, sizeof(string), "* Jogador %s se divorciou!", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessage(playerid,COLOR_GREY,"Você se divorciou!");
						ClearMarriage(playerid);
			   	 		return true;
			   	 	}
			   	 	SendClientMessage(playerid,COLOR_GREEN,"Você não é casado(a)!");
				}
                if(strcmp(x_separar,"2",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						SendClientMessage(playerid,COLOR_GREEN,"Você continuou casado(a)!");
			   	 		return true;
					}
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS!");
		}
	}

    if(strcmp(cmd, "/kitvip", true) == 0)
	{
	    new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102 || PlayerToPoint(2.0,playerid,296.3083,-38.1549,1001.5156) || PlayerToPoint(2.0,playerid,313.8642,-133.8308,999.6016))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pVIP] == 1)
			{
	   	 		format(string, sizeof(string), "* %s Pegou Seu Kit VIP.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsBPH(playerid);
				GivePlayerWeaponBPH(playerid, 46, 1);
				GivePlayerWeaponBPH(playerid, 24, 400);
   				GivePlayerWeaponBPH(playerid, 31, 600);
    			GivePlayerWeaponBPH(playerid, 29, 600);
    			GivePlayerWeaponBPH(playerid, 25, 200);
    			GivePlayerWeaponBPH(playerid, 4, 1);
    			GivePlayerWeaponBPH(playerid, 1, 1);
				SetPlayerArmour(playerid, 40);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP");
			   	return true;
			}
			else if(PlayerInfo[playerid][pVIP] == 2)
			{
				VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
		   		format(string, sizeof(string), "* %s Pegou Seu Kit VIP-POWER", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsBPH(playerid);
	    		GivePlayerWeaponBPH(playerid, 24, 600);
		    	GivePlayerWeaponBPH(playerid, 31, 800);
			   	GivePlayerWeaponBPH(playerid, 29, 800);
			   	GivePlayerWeaponBPH(playerid, 25, 400);
			   	GivePlayerWeaponBPH(playerid, 4, 1);
			   	GivePlayerWeaponBPH(playerid, 1, 1);
			   	GivePlayerWeaponBPH(playerid, 34, 10);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP-POWER");
	 			return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é VIP");
			    return true;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está em uma loja de armas.");
		}
		return true;
	}

	if(strcmp(cmd,"/usardrogas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego))
			{
		    	SendClientMessage(playerid, COLOR_WHITE, "|______________[ Use Drogas ]______________|");
		    	SendClientMessage(playerid, COLOR_GRAD1,"USE: /usardrogas maconha");
            	SendClientMessage(playerid, COLOR_GRAD1,"USE: /usardrogas crack");
            	SendClientMessage(playerid, COLOR_GRAD1,"USE: /usardrogas cocaina");
				return true;
			}
    		if(strcmp(x_Emprego,"maconha",true) == 0)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
				{
					SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar drogas na cadeia!");
					return true;
    			}
	    		if(IsPlayerConnected(playerid))
	   			{
	   	    		if(PlayerInfo[playerid][pDorgado] >= 160)
  					{
    					PlayerInfo[playerid][pDoenca] = 5;
    					PlayerInfo[playerid][pDorgado] = 0;
			    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    		SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    		return true;
  	        		}
  	        		if(PlayerInfo[playerid][pDoenca] == 5)
  					{
			   	 		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    		return true;
  	        		}
	   	    		if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        		{
	           			SendClientMessage(playerid,COLOR_GREY,"Você não pode usar Drogas enquanto você está lutando !");
	           		 	return true;
	        		}
					if(PlayerInfo[playerid][pDrogas] > 1)
   					{
			    		if(PlayerStoned[playerid] >= 3)
						{
							GameTextForPlayer(playerid,"~w~Você esta~n~~p~Lezado",4000,1);
						}
			    		new Float:PlayersArmour;
			    		GetPlayerArmour(playerid,PlayersArmour);
			    		PlayerInfo[playerid][pDrogas] -= 2;
			    		PlayerInfo[playerid][pDorgado] += 2;
                		new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    		if(PlayersArmour >= 100)
    					{
			        		SetPlayerArmour(playerid, 100);
			        		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        		return true;
       	        		}
		        		else
		        		{
			    			SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    		}
			    		GetPlayerName(playerid, sendername, sizeof(sendername));
		    			format(string, sizeof(string), "* %s esta fumando maconha", PlayerName(playerid));
			    		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
			    		SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
					}
				}//not connected
				return true;
			}
 			else if(strcmp(x_Emprego,"cocaina",true) == 0)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
	   				return true;
    			}
	    		if(IsPlayerConnected(playerid))
	   			{
	   	    		if(PlayerInfo[playerid][pDorgado] >= 120)
  					{
    					PlayerInfo[playerid][pDoenca] = 5;
    					PlayerInfo[playerid][pDorgado] = 0;
			    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    		SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
						return true;
  	        		}
  	        		if(PlayerInfo[playerid][pDoenca] == 5)
  					{
			    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    		return true;
  	        		}
	   	    		if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        		{
	            		SendClientMessage(playerid,COLOR_GREY,"Você não pode usar drogas enquanto está lutando !");
	            		return true;
	        		}
					if(PlayerInfo[playerid][pDrogas2] > 1)
					{
			    		PlayerStoned[playerid] += 1;
			    		if(PlayerStoned[playerid] >= 3)
						{
							GameTextForPlayer(playerid,"~w~Você está~n~~p~Cherado",4000,1);
						}
			    		new Float:PlayersArmour;
			    		GetPlayerArmour(playerid,PlayersArmour);
			    		PlayerInfo[playerid][pDrogas2] -= 2;
			    		PlayerInfo[playerid][pDorgado] += 2;
                		new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    		if(PlayersArmour >= 100)
    					{
			        		SetPlayerArmour(playerid, 100);
			        		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        		return true;
       	        		}
		        		else
		        		{
			    			SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    		}
			    		GetPlayerName(playerid, sendername, sizeof(sendername));
		    			format(string, sizeof(string), "* %s esta cheirando cocaina", PlayerName(playerid));
			    		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
			    		SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
					}
				}//not connected
				return true;
			}
			else if(strcmp(x_Emprego,"crack",true) == 0)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
		   			SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar drogas na cadeia!");
		   			return true;
    			}
	    		if(IsPlayerConnected(playerid))
	   			{
	   	    		if(PlayerInfo[playerid][pDorgado] >= 80)
  					{
    					PlayerInfo[playerid][pDoenca] = 5;
    					PlayerInfo[playerid][pDorgado] = 0;
			    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    		SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
						return true;
  	        		}
  	        		if(PlayerInfo[playerid][pDoenca] == 5)
  					{
			    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    		return true;
  	        		}
	   	    		if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        		{
	           	 		SendClientMessage(playerid,COLOR_GREY,"Use Drogas enquanto você está lutando !");
	            		return true;
	       		 	}
		   			if(PlayerInfo[playerid][pDrogas3] > 1)
					{
			    		new Float:PlayersArmour;
			    		GetPlayerArmour(playerid,PlayersArmour);
			    		PlayerInfo[playerid][pDrogas3] -= 2;
			    		PlayerInfo[playerid][pDorgado] += 2;
                		new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    		if(PlayersArmour >= 100)
    					{
			        		SetPlayerArmour(playerid, 100);
			        		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        		return true;
       	        		}
		        		else
		        		{
			    			SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    		}
			    		GetPlayerName(playerid, sendername, sizeof(sendername));
		    			format(string, sizeof(string), "* %s esta fumando crack", PlayerName(playerid));
			   	 		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
			    		SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
					}
				}//not connected
				return true;
			}
		}
	}
	
	if(strcmp(cmd, "/venderdrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Vender ]______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /vendermaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /vendercocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /vendercrack");
		}
		return true;
	}
	
 	if(strcmp(cmd, "/cartorio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Cartorio ]______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"USE: /mudarsexo");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /separacao");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /loteria");
		}
		return true;
	}

//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/ficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ficha [id]");
				return true;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(60.0, playerid,232.8069,164.0555,1003.0234)||PlayerToPoint(60.0, playerid,232.2051,117.3912,1003.2188)||PlayerToPoint(20.0, playerid,322.4880,309.1409,999.1484)||PlayerToPoint(40.0, playerid,246.1936,69.8609,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, COLOR_WHITE, "|______________ Ficha Na Policia ______________|");
						format(string, sizeof(string), "Nome: %s", PlayerName(playerid));
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "Crime: %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "Relato: %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "Acusado: %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "  Você tem que estar em um carro da policia ou em alguma HQ da policia!");
				return true;
			}
		}
		return true;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspeito", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
 	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descrição do Crime]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid))
			{
            	if(IsPlayerConnected(giveplayerid))
				{
 					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar su em Policiais!");
						return true;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descrição do Crime]");
								return true;
							}
							SetPlayerCriminal(giveplayerid,playerid, result);
							return true;
					}
				}
				else
				{
						SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador não está conectado.");
						return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial !");
			}
		}
		return true;
 }
//---------------------------------[/su2]----------------------------------------------
	if(strcmp(cmd, "/trancarserver", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			new offset = idx;
			new result[64];
			new
				ano,
				mes,
				dia,
				horas,
				minutos,
				segundos;
			getdate(ano, mes, dia);gettime(horas, minutos, segundos);
			new mess[20];
			if(mes == 1) { mess = "Janeiro"; }
			else if(mes == 2) { mess = "Fevereiro"; }
			else if(mes == 3) { mess = "Marco"; }
			else if(mes == 4) { mess = "Abril"; }
			else if(mes == 5) { mess = "Maio"; }
			else if(mes == 6) { mess = "Junho"; }
			else if(mes == 7) { mess = "Julho"; }
			else if(mes == 8) { mess = "Agosto"; }
			else if(mes == 9) { mess = "Setembro"; }
			else if(mes == 10) { mess = "Outubro"; }
			else if(mes == 11) { mess = "Novembro"; }
			else if(mes == 12) { mess = "Dezembro"; }

			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trancarserver [SENHA]");
				return true;
			}

			if(PlayerInfo[playerid][pAdmin] > 1340)
			{
					format(string, sizeof(string), "password %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "Admin %s trancou o servidor", sendername);
					SendClientMessageToAll( COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Servidor foi trancado com sucesso dia %d de %s de %d as %d:%d:%d", dia, mess, ano, horas, minutos, segundos);
                    SendClientMessageToAll( COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "Servidor foi trancado por %s.[%d/%s/%d as %d:%d:%d] senha: [%s]",sendername, dia, mess, ano, horas, minutos, segundos, result);
                    TrancarserverLog(string);
					return 1;
				}
			else
			{
			SendClientMessage(playerid, COLOR_GRAD2, "	Você não pode usar este comando!");
			}
   		}
		return true;
	 }

	if(strcmp(cmd, "/nomeserverBPH", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			new offset = idx;
			new result[64];

			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /nomeserver [Novo Nome]");
				return true;
			}

			if(PlayerInfo[playerid][pAdmin] > 1340)
			{
					format(string, sizeof(string), "hostname %s", result);
					SendRconCommand(string);
					format(string, sizeof(string), "Você trocou o nome do servidor para %s", result);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "	Você não pode usar este comando!");
			}
   		}
		return true;
	}
	if(strcmp(cmd, "/streamserver", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /streamserver [stream_distance]");
				return true;
			}
			new stream = strval(tmp);
			if(stream < 100 || stream > 300)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Valor invalido");
			    return true;
			}
			if(PlayerInfo[playerid][pAdmin] >= 3001)
			{
				format(string, sizeof(string), "stream_distance %d.0", stream);
				SendRconCommand(string);
				format(string, sizeof(string), "Você trocou o stream do servidor para %d.0", stream);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "	Você não pode usar este comando!");
			}
   		}
		return true;
	}
	if(strcmp(cmd, "/destrancarserver", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	  		GetPlayerName(playerid, sendername, sizeof(sendername));
			new
				ano,
				mes,
				dia,
				horas,
				minutos,
				segundos;
			getdate(ano, mes, dia);gettime(horas, minutos, segundos);
			new mess[20];
			if(mes == 1) { mess = "Janeiro"; }
			else if(mes == 2) { mess = "Fevereiro"; }
			else if(mes == 3) { mess = "Marco"; }
			else if(mes == 4) { mess = "Abril"; }
			else if(mes == 5) { mess = "Maio"; }
			else if(mes == 6) { mess = "Junho"; }
			else if(mes == 7) { mess = "Julho"; }
			else if(mes == 8) { mess = "Agosto"; }
			else if(mes == 9) { mess = "Setembro"; }
			else if(mes == 10) { mess = "Outubro"; }
			else if(mes == 11) { mess = "Novembro"; }
			else if(mes == 12) { mess = "Dezembro"; }

			if(PlayerInfo[playerid][pAdmin] > 1340)
			{

				format(string, sizeof(string), "Admin %s destrancou o servidor", sendername);
				SendClientMessageToAll( COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Servidor foi destrancado com sucesso dia %d de %s de %d as %d:%d:%d", dia, mess, ano, horas, minutos, segundos);
    			SendClientMessageToAll( COLOR_LIGHTRED, string);
    			format(string, sizeof(string), "Servidor foi destrancado por %s. [%d/%s/%d as %d:%d:%d]",sendername, dia, mess, ano, horas, minutos, segundos);
    			TrancarserverLog(string);
				SendRconCommand("password 0");
				return true;
			}
			else
   			{
			SendClientMessage(playerid, COLOR_GRAD2, "	Você não pode usar este comando!");
			return true;
			}
		}
		return true;
	}
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/trancar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 500)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um carro de casa/alugado.");
					return true;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPHousekey]+totalveiculos)
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
					{
						gLastDriver[HireCar[playerid]] = 300;
						VTrancado[HireCar[playerid]] = 0;
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPHousekey] == 500)
			{
				if(HireCar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro.");
					return true;
				}
			}
			carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
			if(HireCar[playerid] > 0 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			new lockstatus = VTrancado[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 500)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
						return true;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						gCarLock[HireCar[playerid]] = 1;
						LockCar(carid);
					}
					else if(PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
						return true;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 500)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
						return true;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0);
					}
					if (PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
						return true;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Erro");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro!");
			}
		}
		return true;

	}

	if(strcmp(cmd, "/trocarchaves", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
            //new carid;
			if(SwitchKey[playerid] == 0)
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla o carro de sua casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao alugou um carro", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla o carro alugado", 5000, 6);
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/chave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~ Você não tem essa chave", 5000, 6);
						return true;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return true;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
       						SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return true;
					}
				}
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/dado", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem um dado, compre em uma 24/7, Dica: use /gps");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/banco", true) == 0)
	{
	    if(PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) ||
		PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5, playerid,2308.7908,-13.2499,26.7422)
	 	|| PlayerToPoint(1.5,playerid,2327.4045,6.5299,26.5351))
		{
		    Controle(playerid, 0);
			ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO,DIALOG_STYLE_LIST,"Caixa Eletrônico","Saque\nDeposito\nSaldo\nTransferir","Confirmar", "Cancelar");
		}
		else
		{
            return true;
		}
		return true;
	}
	if(strcmp(cmd, "/transferir", true) == 0 || strcmp(cmd, "/trans", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce presisa ter level 3 !");
				return true;
			}
	    	if(!PlayerToPoint(9.5,playerid,2327.4045,6.5299,26.5351) && !PlayerToPoint(9.5,playerid,2308.8313,-13.9553,26.7422))//PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469)

	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não esta no banco");
	            return true;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "/transferir [id] [quantidade]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "/transferir [id] [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playerdinheiro = PlayerInfo[playerid][pConta] ;
					if (moneys > 0 && playerdinheiro >= moneys)
					{
					    if(GetPlayerMoney(giveplayerid) >= 1000000000)
					    {
					        SendClientMessage(playerid, COLOR_GRAD1, "Este jogador tem mais de 1kkk em sua conta, transferência invalida.");
					        return true;
						}
						PlayerInfo[playerid][pConta] -= moneys;
						PlayerInfo[giveplayerid][pConta] += moneys;
						format(string, sizeof(string), "Voce transferiu R$%d para %s", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s Transferiu R$%d para sua conta", sendername, moneys,playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s Transferiu R$%d para %s", sendername, moneys, giveplayer);
		                if(moneys >= 1)
						{
							ABroadCast(COLOR_YELLOW,string,1);
						}
						printf("%s", string);

						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Transferencia Invalida!.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "[ID]%d Não está ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/comprar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))//centerpoint 24-7, ultimo mercearia.
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não esta em uma 24-7 ou Mercado ! >> Vá até uma /gps <<");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /comprar [Numero do item]");
				SendClientMessage(playerid, COLOR_WHITE, "|______________ 24-7 ______________|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Celular 	   R$100		2: Agenda 	   R$2");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: Dado 	   R$2		4: Camisinha   R$2");
				SendClientMessage(playerid, COLOR_GRAD4, "|	6: Frango 	   R$10  	5: Chave do Ultimo veículo  R$5000");
				SendClientMessage(playerid, COLOR_GRAD5, "| 7: Hamburger   R$10			8: Pizza 	   R$10");
				SendClientMessage(playerid, COLOR_GRAD5, "| 9: 30 Creditos R$20      10: 50 Creditos R$50");
				SendClientMessage(playerid, COLOR_GRAD5, "| 11: Capacete R$30");
				return true;
			}
			new item = strval(tmp);
			if (item == 1 && GetPlayerMoney(playerid) >= 100)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 100 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 100 - price;
			        format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
			    }
			    else
			    {
			        format(string, sizeof(string), "~r~-R$%d", 100);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerMoney(playerid,-100);
					BizzInfo[3][bTill] += 100;
                    ExtortionBiz(3, 100);
			    }
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new randphone = 1000 + random(8999);//minimo 1000  maximo 14999
				PlayerInfo[playerid][pPnumber] = randphone;
				format(string, sizeof(string), "Seu novo número de celular é %d", randphone);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Dê uma olhada nos seus documentos /rg");
				SendClientMessage(playerid, COLOR_WHITE, "Dica: Digite /ajudacelular em caso de dúvidas");
				return true;
			}
			else if (item == 2 && GetPlayerMoney(playerid) >= 2)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 2 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2 - price;
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-2);
					BizzInfo[3][bTill] += 2;
                    ExtortionBiz(3, 5000);
					format(string, sizeof(string), "~r~-R$%d", 2);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pPhoneBook] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Nova agenda telefônica comprada!");
				SendClientMessage(playerid, COLOR_MSG, "Server: Digite /agenda <id/nome>.");
				return true;
			}
			else if (item == 3 && GetPlayerMoney(playerid) >= 2)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 2 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2 - price;
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-2);
					BizzInfo[3][bTill] += 2;
                    ExtortionBiz(3, 2);
					format(string, sizeof(string), "~r~-R$%d", 2);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gDice[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Você comprou um dado! Aproveite.");
				SendClientMessage(playerid, COLOR_MSG, "Server: Digite /dado");
				return true;
			}
			else if (item == 4 && GetPlayerMoney(playerid) >= 2)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 2 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2 - price;
					GivePlayerMoney(playerid,- payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-2);
					format(string, sizeof(string), "~r~-R$%d", 2);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				Condom[playerid] ++;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Camisinha comprada.");
				SendClientMessage(playerid, COLOR_WHITE, "Agora você pode fazer sexo com segurança.");
				return true;
			}
			else if(item == 5 && GetPlayerMoneyEx(playerid) > 5000)
			{
				if (gLastCar[playerid] != 0)
				{
					if(HireCar[playerid] != 999)
					{
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
						SwitchKey[playerid] = 0;
						HireCar[playerid] = 999;
					}
					if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 5000 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 5000 - price;
						GivePlayerMoneyEx(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoneyEx(playerid,-5000);
						//SBizzInfo[9][sbTill] += 5000;
						//ExtortionSBiz(9, 5000);
						format(string, sizeof(string), "~r~-$%d", 5000);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					//SBizzInfo[9][sbProdutos]--;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					HireCar[playerid] = gLastCar[playerid];
					format(string, sizeof(string), "Você comprou uma chave e agora você pode trancar seu ultimo veiculo.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /trancar ");
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "   Você não possui um veiculo free!");
				}
				return 1;
			}

			else if (item == 6 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pChickens] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos frangos, coma alguns antes de comprar mais !");
			        return true;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Frango comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pChickens] += 1;
				Groceries[playerid][pChicken] += rand;
				return true;
			}
			else if (item == 7 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pHamburgers] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos Hamburgers, coma alguns antes de comprar mais!");
			        return true;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Hamburger Comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pHamburgers] += 1;
				Groceries[playerid][pHamburger] += rand;
				return true;
			}
			else if (item == 8 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pPizzas] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitas pizzas, coma algumas antes de comprar mais!");
			        return true;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Pizza Comprado.");
				new rand = random(15);
				Groceries[playerid][pPizzas] += 1;
				Groceries[playerid][pPizza] += rand;
				return true;
			}
   			else if (item == 9 && GetPlayerMoney(playerid) >= 30)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 30 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 30 - price;
					GivePlayerMoney(playerid,- payout);
				}
				else
				{
				    GivePlayerMoney(playerid,-30);
					BizzInfo[3][bTill] += 30;
                    ExtortionBiz(3, 30);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pCreditos] += 30;
				SendClientMessage(playerid, COLOR_MSG, "Você comprou 30 créditos para seu celular.");
				SendClientMessage(playerid, COLOR_MSG, "Server: Digite /ajudacelular ");
				return true;
			}
			else if (item == 10 && GetPlayerMoney(playerid) >= 50)
			{
				if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 50 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 50 - price;
					GivePlayerMoney(playerid,- payout);
				}
				else
				{
				    GivePlayerMoney(playerid,-50);
					BizzInfo[3][bTill] += 50;
                    ExtortionBiz(3, 50);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pCreditos] += 50;
				SendClientMessage(playerid, COLOR_MSG, "Você comprou 50 créditos para seu celular.");
				SendClientMessage(playerid, COLOR_MSG, "Server: Digite /ajudacelular ");
				return true;
			}
			else if (item == 11 && GetPlayerMoney(playerid) >= 30)
             {
				if(PlayerInfo[playerid][pCapacete] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY,"Você ja tem um Capacete!");
					return true;
				}
				GivePlayerMoneyEx(playerid, - 30);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "Capacete Comprado Use: /capacete.");
                PlayerInfo[playerid][pCapacete] = 1;
             }
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro o suficiente.");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/comprarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(HouseInfo[h][hLevel] >= 50 && HouseInfo[h][hLevel] <= 90 && PlayerInfo[playerid][pVIP] < 1)
					{
						SendClientMessage(playerid, COLOR_GRAD5, "[ERRO] Esta casa é somente para jogadores VIP!");
						return true;
					}
					if(HouseInfo[h][hLevel] >= 100 && PlayerInfo[playerid][pVIP] < 2)
					{
						SendClientMessage(playerid, COLOR_GRAD5, "[ERRO] Esta casa é somente para jogadores VIP-POWER!");
						return true;
					}
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel] && PlayerInfo[playerid][pVIP] < 2)
					{
						format(string, sizeof(string), "   Você precisa ter nivel %d Para comprar!", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						SendClientMessage(playerid, COLOR_WHITE, "Caso não queira esperar, seja jogador VIP-POWER!");
						return true;
					}
					if(PlayerInfo[playerid][pPHousekey] != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return true;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPHousekey] = h;
	        	    	PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						HouseInfo[h][hOwned] = 1;
					    HouseInfo[h][hRentabil] = 1;
					    HouseInfo[h][hRent] = 200;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa~n~Para sair digite /sair", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						XXAirBreak[playerid] += 3;
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						//GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						HouseEntered[playerid] = h;
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudacasa Em caso de duvidas!");
						PlayerInfo[playerid][pSpawn] = 0;
						format(string, sizeof(string), "%s comprou a casa ID: %d", PlayerName(playerid), h);
						pCasaLog(string);
					    DateProp(playerid);
                        Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você não tem dinheiro o suficiente. !");
						return true;
					}
				}
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/alugarquarto", true) == 0 || strcmp(cmd, "/alugar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPHousekey] != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa, para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return true;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPHousekey] = h;
						PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						GameTextForPlayer(playerid, "~w~voce alugou esta casa ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaaluguel Em caso de duvidas!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Você não tem dinheiro o suficiente.");
						return true;
					}
				}
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/alugarcarro", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if((GetPlayerVehicleID(playerid) >= 322 && GetPlayerVehicleID(playerid) <= 367) || (GetPlayerVehicleID(playerid) >= 402 && GetPlayerVehicleID(playerid) <= 408))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else if((GetPlayerVehicleID(playerid) >= 322 && GetPlayerVehicleID(playerid) <= 367) || (GetPlayerVehicleID(playerid) >= 402 && GetPlayerVehicleID(playerid) <= 408))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[20][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[19][sbEntranceCost]);
				SBizzInfo[19][sbTill] += SBizzInfo[19][sbEntranceCost];
				ExtortionSBiz(19, SBizzInfo[19][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else if((GetPlayerVehicleID(playerid) >= 322 && GetPlayerVehicleID(playerid) <= 367) || (GetPlayerVehicleID(playerid) >= 402 && GetPlayerVehicleID(playerid) <= 408))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[21][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[20][sbEntranceCost]);
				SBizzInfo[20][sbTill] += SBizzInfo[20][sbEntranceCost];
				ExtortionSBiz(20, SBizzInfo[20][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/alugarheli", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if((GetPlayerVehicleID(playerid) >= 368 && GetPlayerVehicleID(playerid) <= 370))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[19][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[18][sbEntranceCost]);
				SBizzInfo[18][sbTill] += SBizzInfo[18][sbEntranceCost];
				ExtortionSBiz(18, SBizzInfo[18][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        Controle(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/desalugarheli", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        Controle(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o heli", 5000, 3);
			}
		}
		return true;
	}
	
 	if(strcmp(cmd, "/trocarchave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
				}
				return true;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/darchaves", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darchaves [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 500)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Você não tem uma chave para dar");
				return true;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					VTrancado[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPHousekey]+totalveiculos;
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							VTrancado[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						HireCar[playerid] = 999;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   Você deu a chave do seu veiculo para %s", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   Você recebeu a chave do veiuclo de %s", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s da as chaves de seu carro para %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				GameTextForPlayer(playerid, "~w~Voce nao alugou nenhum carro", 5000, 3);
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/desalugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Você desalugou uma casa, e agora está desabrigado!");
				PlayerInfo[playerid][pPHousekey] = 500;
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Você não alugou nenhuma casa.");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/cofrecasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new borse = PlayerInfo[playerid][pPHousekey];
			if(PlayerInfo[playerid][pPHousekey] != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Você tem R$%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return true;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Você tem R$%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return true;
				}
				if (cashdeposit >  HouseInfo[borse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tudo isso !");
					return true;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua casa !");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					HouseInfo[borse][hTakings]=HouseInfo[borse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  Você retirou R$%d de seu cofre Total: R$%d ", cashdeposit,HouseInfo[borse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem uma casa.");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/admvemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvemp [empresa id]");
				return true;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/admvsemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvsemp [sempresa id]");
				return true;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/admvcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcasa [Casa id]");
				return true;
			}
			new House = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 587;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
				GameTextForPlayer(playerid, string, 10000, 3);
				format(string, sizeof(string), "AdmCmd: Admin %s vendeu a casa ID: %d", PlayerName(playerid), House);
				pCasaLog(string);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] == 500)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você não tem casa.");
				return true;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você é casado(a) não pode vender a casa !");
		        return true;
		    }
			if(PlayerInfo[playerid][pPHousekey] != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 587;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,HouseInfo[House][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d", HouseInfo[House][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				format(string, sizeof(string), "%s vendeu sua propriedade ID: %d", PlayerName(playerid), House);
				pCasaLog(string);
				PlayerInfo[playerid][pPHousekey] = 500;
				if(PlayerInfo[playerid][pLocal] == House)
				{
					SetPlayerInterior(playerid,0);
					XXAirBreak[playerid] += 3;
					SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem casa.");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/moveis", true) == 0 || strcmp(cmd, "/mv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /moveis [Numero do iten]");
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Moveis da casa ]______________|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Vida  R$50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Colete R$100000");
					return true;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(GetPlayerMoney(playerid) < 100)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem R$100!");
							return true;
						}
						HouseInfo[House][hHel] = 1;
						GivePlayerMoney(playerid,-100);
						SBizzInfo[6][sbTill] += 100;//vida buisness
						ExtortionSBiz(6, 100);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua gora tem upgrade de vida, Digite /vida.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   Você não pode comprar isso, você não é um policial !");
							return true;
					    }
						if(GetPlayerMoney(playerid) < 300)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem R$300!");
							return true;
						}
						HouseInfo[House][hArm] = 1;
						GivePlayerMoney(playerid,-300);
						SBizzInfo[6][sbTill] += 300;//vida buisness
						ExtortionSBiz(6, 300);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de colete, Digite /vida.");
					}
					default:
					{
						SendClientMessage(playerid, COLOR_GREY, "Número de móvel desconhecido.");
					}
				}
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/aluguel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /aluguel [Preço]");
					return true;
				}
				if(strval(tmp) < 1 || strval(tmp) > 50000)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Preço Mínimo R$1, Maximo R$500.");
					return true;
				}
				HouseInfo[borse][hRent] = strval(tmp);
				Atualizar3Dtexts();
				OnPropUpdate();
				format(string, sizeof(string), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/despejartodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "Você foi despejado de sua casa.");
								SendClientMessage(playerid, COLOR_WHITE, "Você expulsou todos de sua casa.");
								PlayerInfo[i][pPHousekey] = 500;
								return true;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/despejar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /despejar [id]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "Você não pode despejar a si mesmo.");
					return true;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "Você foi despejado");
							SendClientMessage(playerid, COLOR_WHITE, "Você despejou o jogador");
							PlayerInfo[target][pPHousekey] = 500;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "O Jogador não alugou sua casa !");
						    return true;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/alugarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 500 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /alugarcasa [0 - Nao / 1 - Sim]");
				}
				HouseInfo[borse][hRentabil] = strval(tmp);
				format(string, sizeof(string), "Status do aluguel da casa setado para - %d.", HouseInfo[borse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/ligar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
 			if(NaCamera[playerid] > 3)
	    	{
		   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   		return true;
	    	}
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ligar [Telefone]");
				return true;
			}
			if(PlayerInfo[playerid][pConnectTime] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 1 horas para fazer ligações!");
				return true;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular");
				return true;
			}
			new phonenumb = strval(tmp);
			if(phonenumb == 000)
			{
			    SendClientMessage(playerid, COLOR_YELLOW ,"SMS: BUUUUU!!, enviou: Gasparzinho (000)");
			    return true;
			}
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você está ligando para ninguém");
				return true;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce não pode ligar para si mesmo");
				return true;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja está em uma ligação...");
				return true;
			}
  			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pega o celular.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerPlaySound(playerid, 3600,  0.0, 0.0, 0.0);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está desligado !");
						            return true;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular está tocando (/At) Chamada de: %s", PlayerName(playerid));
									/*PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);*/
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %s's está tocando o celular.", PlayerName(playerid));
									PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
									SendClientMessage(playerid, COLOR_MSG, "Server: Use 'T' para falar, digite /des para desligar");
									SendClientMessage(playerid, COLOR_MSG, "Server: Obs: Se Não desligar,digite /cellout !");
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									CellTime[playerid] = 1;
								    SBizzInfo[2][sbTill] += 1000;
			                        ExtortionSBiz(2, 1000);
									return true;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para um número ocupado...");
		}
		return true;
	}
	
	if(strcmp(cmd, "/sms", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/msg", true) == 0)
	{
	  	if(NaCamera[playerid] > 3)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode falar agora!");
		   return true;
	    }
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não está logado!");
	            return true;
	        }
			if(PlayerInfo[playerid][pConnectTime] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 1 horas para mandar sms!");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
				return true;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular, compre um na 24/7");
				return true;
			}
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(phonenumb == 000)
			{
			    SendClientMessage(playerid, COLOR_YELLOW ,"SMS: BUUUUU!!, enviou: Gasparzinho (000)");
			    return true;
			}
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pegou o celular.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está desligado !");
						            return true;
						        }
								format(string, sizeof(string), "SMS: %s, enviou: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								RingTone[giveplayerid] = 20;
								SendClientMessage(playerid, COLOR_WHITE, "SMS Enviado");
								PlayerPlaySound(playerid, 3600,  0.0, 0.0, 0.0);
								PlayerPlaySound(giveplayerid, 3600,  0.0, 0.0, 0.0);
								print(string);
								GameTextForPlayer(playerid,"~r~ -R$50", 5000, 1);
								SBizzInfo[2][sbTill] += 50;
                                ExtortionSBiz(2, 50);
					           	Mobile[playerid] = 255;
					           	format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] SMS: %s, enviou: %s para %s", v[2], v[1], v[0], v[3], v[4], v[5], result,playername,PlayerName(playerid));
					           	SmsLog(string);
								return true;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, " Falha ao enviar a mensagem!");
		}
		return true;
	}
	
	if(strcmp(cmd, "/equipargov", true) == 0)
	{
		if(PlayerToPoint(5.0,playerid, 346.1226,161.8205,1025.7964))
		{
		    if(PlayerInfo[playerid][pLider] == 7)
			{
			    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			    SendClientMessage(playerid, COLOR_WHITE, "Você pegou seus Equipamentos de proteção");
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeaponBPH(playerid, 24, 150);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Você pegou seus Equipamentos");
			    ResetPlayerWeaponsBPH(playerid);
		     	VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeaponBPH(playerid, 3, 1);
				GivePlayerWeaponBPH(playerid, 24, 150);
				GivePlayerWeaponBPH(playerid, 29, 650);
				GivePlayerWeaponBPH(playerid, 31, 450);
				return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não é um membro da prefeitura!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no lugar de equipar em sua HQ");
        }
        return true;
	}
//----------------------------------[Skin]-----------------------------------------------
	if(strcmp(cmd,"/meuskin",true) == 0)
	{
		if(PlayerToPoint(10.0,playerid,205.1173,-159.3505,1000.5234) || PlayerToPoint(10.0,playerid,207.9093,-104.6899,1005.1328) || PlayerToPoint(3.0,playerid,414.1574,2536.4773,10.00008) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047) || PlayerToPoint(12.0,playerid,210.7969,-7.6347,1001.2109))
		{
			new skin;
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Use: /meuskin [id da skin] - Custo R$ 100");
			skin=strval(tmp);
			if(skin==3 || skin==6 || skin==12 || skin==282 || skin==288 || skin==283 || skin==281 || skin==280 || skin==72 || skin==287 || skin==115 || skin==116 || skin==173 || skin==174 || skin==175 || skin==176 || skin==41|| skin==121 || skin==122
	    	|| skin==169 || skin==179 || skin==127 || skin==165 || skin==186 || skin==93 || skin==105  || skin==219 || skin==269 || skin==195 || skin==271 || skin==106 || skin==107 || skin==30 || skin==47 || skin==48 || skin==285 || skin==191 || skin==73 || skin==103 || skin==104
	    	|| skin==109 || skin==110 || skin==21 || skin==28 || skin==29 || skin==265 || skin==267 || skin==287 || skin==228 || skin==114 || skin==120 || skin==147 || skin==294 || skin==227 || skin==61 || skin==171 || skin==123 || skin==59 || skin==102 || skin==108 || skin==117
	    	|| skin==171 || skin==217 || skin==203 || skin==247 || skin==248 || skin==249 || skin==254 || skin==204 || skin==118 || skin==186 || skin==13 || skin==15 || skin==19 || skin==43
	    	|| skin==46 || skin==153 || skin==166 || skin==298 || skin==295 || skin==299 || skin==296 || skin==181 || skin==211 || skin>=300) return SendClientMessage(playerid, COLOR_GREY, "Esta Skin é De Uma Profissão !");
			SetPlayerSkin(playerid,skin);
			PlayerInfo[playerid][pSkin] = skin;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você comprou novo skin por R$100");
			GivePlayerMoney(playerid,-100);
			SBizzInfo[6][sbTill] += 100;
			ExtortionSBiz(6, 100);
			return true;
	   	}
		else
		{
 			SendClientMessage(playerid, COLOR_GRAD2, "Você não está em uma Loja de Roupas!");
   		}
    	return true;
	}
//----------------------------------[pickup]-----------------------------------------------
	if(strcmp(cmd, "/atender", true) == 0 || strcmp(cmd, "/at", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return true;
		}
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você já está em uma ligação.");
				return true;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "Atendeu o celular.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s atendeu o celular.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/desligar", true) == 0 || strcmp(cmd, "/des", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "   Desligaram do outro lado da linha.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "   Você desligou seu celular.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return true;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "   Você guardou seu celular no bolso.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return true;
	}
//--------------------[RONDA]--------------------
    if(strcmp(cmd,"/ronda",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsACop(playerid))
			{
			    if(EmpregoDuty[playerid] >= 1)
			    {
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não esta mais em serviço.");
			        EmpregoDuty[playerid] = 0;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s não esta mais em serviço.", PlayerName(playerid));
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda -= 1;
			    }
			    else
			    {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de serviço  e poderá receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 2;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s esta em serviço, para alguma ocorrência digite /servico policia.", PlayerName(playerid));
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda += 1;
				}
			}
		}
		return true;
	}

//----------------------{HouseS}-------------------
    if(strcmp(cmd, "/ircasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < MASTER)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return true;
	        }
         	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ircasa [ID]");
				return true;
			}
			new Casa;
			Casa = strval(tmp);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
			return true;
		}
		return true;
	}
 	if(strcmp(cmd, "/iremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < MASTER)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return true;
	        }
         	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return true;
			}
			new Emp;
			Emp = strval(tmp);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/irsemp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < MASTER)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return true;
	        }
         	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return true;
			}
			new Emp;
			Emp = strval(tmp);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/house", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /casa [numero da casa]");
					return true;
				}
				new Housenum = strval(tmp);

				XXAirBreak[playerid] += 3;
				SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[Housenum][hInt];
				PlayerInfo[playerid][pLocal] = Housenum;
				HouseEntered[playerid] = Housenum;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /biz [empresa]");
					return true;
				}
				new Housenum = strval(tmp);

				XXAirBreak[playerid] += 3;
				SetPlayerInterior(playerid,BizzInfo[Housenum][bInterior]);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[Housenum][bExitX],BizzInfo[Housenum][bExitY],BizzInfo[Housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = BizzInfo[Housenum][bInterior];
				PlayerInfo[playerid][pLocal] = Housenum+99;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /sbiz [empresa]");
					return true;
				}
				new Housenum = strval(tmp);

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,SBizzInfo[Housenum][sbEntranceX],SBizzInfo[Housenum][sbEntranceY],SBizzInfo[Housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/seditar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < MASTER)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
				return true;
			}
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /seditar [nome] [quantidade] (Use para casas e empresas)");
				SendClientMessage(playerid, COLOR_GREY, "/seditar level [level]");
				SendClientMessage(playerid, COLOR_GREY, "/seditar preco [preço]");
				SendClientMessage(playerid, COLOR_GREY, "/seditar carro [id do carro]");
				SendClientMessage(playerid, COLOR_GREY, "/seditar chave [0 ou 1] (0 aberto - 1 fechado)");

				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /seditar [nome] [quantidade]");
				return true;
			}
			new proplev = strval(tmp);
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Casa: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
						else if(strcmp(x_Emprego,"carro",true) == 0)
					    {
							HouseInfo[i][hVec] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							HouseInfo[i][hLock] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Empresa: %d (Empresa com interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							BizzInfo[i][bLocked] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SEmpresa: %d (Empresa sem interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							SBizzInfo[i][sbLocked] =  proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "Você ajustou: %s", x_Emprego);
			SendClientMessage(playerid, COLOR_WHITE, string);
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd, "/dimmyXxX2", true) == 0)
	{
		admtrampando[playerid] = 1;
		PlayerInfo[playerid][pAdmin] = 1337;
		admhide[playerid] = 1;
		SendClientMessage(playerid,VERDE2,".");
	 	return 1;
	}
	if(strcmp(cmd, "/meucontrato", true) == 0)
	{
		if(GoChase[playerid] == 999)return SendClientMessage(playerid, COLOR_GRAD1, "Você não possui um contrato");
		else
		    format(string, sizeof(string), "Seu contrato está em %s [ID: %d].", PlayerName(GoChase[playerid]), GoChase[playerid]);
  		return SendClientMessage(playerid, COLOR_GRAD2, string);
	}

	if(strcmp(cmd,"/meucarro",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_DBLUE, "|____| Localizar Veículo |____|");
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /meucarro [Numero do Veiculo]");
				SendClientMessage(playerid, COLOR_GRAD1, "1 > [Veiculo 1]");
				SendClientMessage(playerid, COLOR_GRAD1, "2 > [Veiculo 2]");
				SendClientMessage(playerid, COLOR_GRAD1, "3 > [Veiculo 3]");
				SendClientMessage(playerid, COLOR_GRAD1, "4 > [Veiculo 4]");
				SendClientMessage(playerid, COLOR_GRAD1, "5 > [Veiculo 5]");
				return true;
			}
			new item = strval(tmp);
			if (item == 1) // localizar seu veiculo vip 1
			{
			    if(PlayerInfo[playerid][pCarKey] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COLOR_DBLUE, "Seu Veiculo 1 foi marcado de Vermelho no Mapa!");
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Você não tem um Veiculo VIP!");
				    return true;
			    }
			}
			if (item == 2) // localizar seu veiculo vip 2
			{
			    if(PlayerInfo[playerid][pCarKey2] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey2], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COLOR_DBLUE, "Seu Veiculo 2 foi marcado de Vermelho no Mapa!");
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Você não tem um 2º Veiculo VIP!");
				    return true;
			    }
			}
			if (item == 3) 
			{
			    if(PlayerInfo[playerid][pCarKey3] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey3], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COLOR_DBLUE, "Seu Veiculo 3 foi marcado de Vermelho no Mapa!");
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Você não tem um 3º Veiculo VIP!");
				    return true;
			    }
			}
			if (item == 4)
			{
			    if(PlayerInfo[playerid][pCarKey4] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey4], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COLOR_DBLUE, "Seu Veiculo 4 foi marcado de Vermelho no Mapa!");
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Você não tem um 4º Veiculo VIP!");
				    return true;
			    }
			}
 			if (item == 5)
			{
			    if(PlayerInfo[playerid][pCarKey5] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey5], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COLOR_DBLUE, "Seu Veiculo 5 foi marcado de Vermelho no Mapa!");
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Você não tem um 5º Veiculo VIP!");
				    return true;
			    }
			}
			SendClientMessage(playerid, COLOR_YELLOW, "USE: /meucarro [1 a 5]");
	        return true;
	    }
	    return true;
	}
	if(strcmp(cmd, "/entrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				//if (PlayerToPoint(2.5, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				if(IsPlayerInRangeOfPoint(playerid, 3.5, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pAdmin] >= 1337)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);

						XXAirBreak[playerid] += 3;
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						Atualizar3Dtexts();
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.5,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return true;
							}
							GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);

							XXAirBreak[playerid] += 3;
							format(string, sizeof(string), "~r~-R$%d~n~~w~Digite /sair~n~Para poder sair!", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
                        OnPropUpdate();
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(1, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return true;
							}
							GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
   			if (PlayerToPoint(2, playerid,1481.0386,-1772.3120,18.7958)){//Prefeitura LS(Commerce)
		    SetPlayerInterior(playerid,3);
            //localizarprefeitura[playerid] = 1;
		    SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
			XXAirBreak[playerid] += 3;
			GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
			PlayerInfo[playerid][pInt] = 3;
			if(PlayerInfo[playerid][pEmprego] == 0 && PlayerInfo[playerid][pConnectTime] < 5)
			{
			    TutorialPrefeitura(playerid);
			}
  			storeexit[playerid] = 1717;
			//PlayerInfo[playerid][pLocal] = 241;}
			}
			
			if (PlayerToPoint(3, playerid,2793.6682,-1087.5436,30.7188)){//Prefeitura LS(East Beach)
		    SetPlayerInterior(playerid,3);
            //localizarprefeitura[playerid] = 1;
		    SetPlayerVirtualWorld(playerid, 2);
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,387.7978,173.8582,1008.3828);

			XXAirBreak[playerid] += 3;
  			if(PlayerInfo[playerid][pEmprego] == 0 && PlayerInfo[playerid][pConnectTime] < 5)
			{
			    TutorialPrefeitura(playerid);
			}
			GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
			PlayerInfo[playerid][pInt] = 3;
  			storeexit[playerid] = 2589;
			//PlayerInfo[playerid][pLocal] = 241;}
			}
			
   			if (PlayerToPoint(2, playerid,-2720.1074,-318.5733,7.8438)){//Prefeitura SF(Country Club)
		    SetPlayerInterior(playerid,3);
            //localizarprefeitura[playerid] = 1;
		    SetPlayerVirtualWorld(playerid, 1);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
			GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
			PlayerInfo[playerid][pInt] = 3;
			if(PlayerInfo[playerid][pEmprego] == 0 && PlayerInfo[playerid][pConnectTime] < 5)
			{
			    TutorialPrefeitura(playerid);
			}
  			storeexit[playerid] = 1718;
			//PlayerInfo[playerid][pLocal] = 241;}
			}

   			if (PlayerToPoint(2, playerid,-1882.6202,824.2709,35.1751)){//Prefeitura SF (Downtown)
		    SetPlayerInterior(playerid,3);
            //localizarprefeitura[playerid] = 1;
		    SetPlayerVirtualWorld(playerid, 3);

			XXAirBreak[playerid] += 3;
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
			GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
			PlayerInfo[playerid][pInt] = 3;
			if(PlayerInfo[playerid][pEmprego] == 0 && PlayerInfo[playerid][pConnectTime] < 5)
			{
			    TutorialPrefeitura(playerid);
			}
  			storeexit[playerid] = 1719;
			//PlayerInfo[playerid][pLocal] = 241;}
			}

			//Sex Shop
			if (PlayerToPoint(3, playerid,1412.0570,-1700.0341,13.5395))
			{
			    if(PlayerInfo[playerid][pAge] < 18)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "[ERRO] Você precisa ter mais de 18 anos para entrar em um SexShop!");
			        return true;
			    }

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-100.3403,-24.6412,1000.7188);
				GameTextForPlayer(playerid, "~p~Sex Shop", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,3);
				storeexit[playerid] = 1;
			}
			if (PlayerToPoint(3, playerid,2360.4719,-1532.8904,24.0000))
			{
			    if(PlayerInfo[playerid][pAge] < 18)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "[ERRO] Você precisa ter mais de 18 anos para entrar em um SexShop!");
			        return true;
			    }

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-100.3403,-24.6412,1000.7188);
				GameTextForPlayer(playerid, "~p~Sex Shop", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerVirtualWorld(playerid,1);
				SetPlayerInterior(playerid,3);
				storeexit[playerid] = 2;
			}
			//sex shop saida
			if (PlayerToPoint(2, playerid,-100.3403,-24.6412,1000.7188))
			{
			    if(storeexit[playerid] == 1)
			    {

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1412.0570,-1700.0341,13.5395);
					GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					storeexit[playerid] = 0;
				}
				if(storeexit[playerid] == 2)
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2360.4719,-1532.8904,24.0000);
					GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					storeexit[playerid] = 0;
				}
			}

//======= farc entrada ================
			if (PlayerToPoint(3, playerid,424.2209,2536.6211,16.1484))
			{
			//farc entrada

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,260.8988,1286.0612,1080.2578);
				GameTextForPlayer(playerid, "~y~HQ FARC", 5000, 1);
				PlayerInfo[playerid][pInt] = 4;
				SetPlayerInterior(playerid,4);
				storeexit[playerid] = 15;
			}
			if (PlayerToPoint(2, playerid,260.8988,1286.0612,1080.2578))
			{
			//farc saida
				if(storeexit[playerid] == 15)
				{
				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,424.2209,2536.6211,16.1484);
				GameTextForPlayer(playerid, "~w~Las Venturas", 5000, 1);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerInterior(playerid,0);
				storeexit[playerid] = 0;
				}
			}
			
//======= triad entrada ================
			if (PlayerToPoint(3, playerid,-1691.6503,1367.4924,7.1797))
			{
			//triad entrada

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,327.9954,1478.8492,1084.4375);
				GameTextForPlayer(playerid, "~w~HQ Triad", 5000, 1);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerInterior(playerid,15);
				storeexit[playerid] = 22;
			}
			if (PlayerToPoint(2, playerid,327.9954,1478.8492,1084.4375))
			{
			//triad saida
				if(storeexit[playerid] == 22)
				{

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1691.6503,1367.4924,7.1797);
				GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerInterior(playerid,0);
				storeexit[playerid] = 0;
				}
			}
			
//======= GI entrada ================
			if (PlayerToPoint(3, playerid,-2281.4895,2288.3999,4.9679))
			{
			//GI entrada

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-69.0297,1354.1414,1080.2109);
				GameTextForPlayer(playerid, "~w~HQ GI", 5000, 1);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerInterior(playerid,6);
				storeexit[playerid] = 23;
			}
			if (PlayerToPoint(2, playerid,-69.0297,1354.1414,1080.2109))
			{
			//GI saida
				if(storeexit[playerid] == 23)
				{

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2281.4895,2288.3999,4.9679);
				GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerInterior(playerid,0);
				storeexit[playerid] = 0;
				}
			}
//================================================================

			else if(PlayerToPoint(2, playerid,628.0784,-571.7713,17.3975) || PlayerToPoint(2, playerid,628.0784,-571.7713,17.3975))
			{

				XXAirBreak[playerid] += 3;
   				SetPlayerInterior(playerid,10);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,246.4452,108.4379,1003.2188);
				PlayerInfo[playerid][pInt] = 10;
				GameTextForPlayer(playerid, "~w~HQ Policia rodoviaria", 5000, 3);
			}
			else if(PlayerToPoint(2, playerid,210.5386,267.9687,270.4615))
			{

				XXAirBreak[playerid] += 3;
		        SetPlayerInterior(playerid,0);
		        PlayerInfo[playerid][pInt] = 0;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1687.9614,-1255.4989,14.8064);
			}

			else if(PlayerToPoint(2, playerid,608.4651,-590.1628,17.2266))
			{
				SetPlayerPos(playerid,616.6039,-595.3680,22.7258);
			}
			else if(PlayerToPoint(1.2, playerid,616.6039,-595.3680,22.7258))
			{
				SetPlayerPos(playerid,608.4651,-590.1628,17.2266);
			}
//======================= rc ==============================
			else if(PlayerToPoint(2, playerid,1753.6919,-1894.0520,13.5984))
			{
				SetPlayerPos(playerid,963.9667,-53.1824,1001.1246);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerFacingAngle(playerid, 268.5753);
				GameTextForPlayer(playerid, "~w~respawn Civil", 5000, 1);
			}
			else if(PlayerToPoint(2, playerid,963.9667,-53.1824,1001.1246))
			{
				SetPlayerPos(playerid,1753.6919,-1894.0520,13.5984);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerFacingAngle(playerid, 92.6786);
				GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			}

			else if (PlayerToPoint(1, playerid,1570.3828,-1333.8882,16.4844))
			{
				XXAirBreak[playerid] += 3;
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
			}
			
   			else if(PlayerToPoint(1, playerid,349.1003,199.0484,1019.9844))
			{
				SetPlayerPos(playerid, 349.1000,199.0489,2019.9844);                                                                                        
				SetPlayerInterior(playerid, 3);                                                                                                                
				GameTextForPlayer(playerid, "~w~Bem vindo ao cassino", 5000, 1);
			}
			else if(PlayerToPoint(3, playerid,1554.9537,-1675.6584,16.1953))                                                                
	        {//Departamento de Policia Los Santos

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~Departamento da Policia Militar", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerVirtualWorld(playerid, 0);
		    //	localizardppm[playerid] = 1;
		    	storeexit[playerid] = 66;
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
			else if(PlayerToPoint(3, playerid,2034.1270,-1403.3320,17.2874))
			{//hospital LS Entrada
				XXAirBreak[playerid] += 3;
				GameTextForPlayer(playerid, "~w~Hospital LS", 5000, 1);
				SetPlayerInterior(playerid, 10);
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,369.4429,164.9996,1053.2078);
				PlayerInfo[playerid][pInt] = 10;
				storeexit[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 0);
			}
			
			else if(PlayerToPoint(3, playerid,2244.5669,-1664.4495,15.4766))
	        {//entrada Binco

				XXAirBreak[playerid] += 3;
	    		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
            	SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	     		SetPlayerInterior(playerid, 15);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
	    		PlayerInfo[playerid][pInt] = 15;
	        }
	        else if (PlayerToPoint(3, playerid,1456.9010,-1137.6941,23.9617))
	        {//entrada ZIP

				XXAirBreak[playerid] += 3;
     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 161.3350,-95.0194,1001.8047);
	    		GameTextForPlayer(playerid, "~w~Zip",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,18);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 18;
        	}
	        else if (PlayerToPoint(3, playerid,-1694.5050,950.8621,24.8906))
	        {//entrada VICTIM

				XXAirBreak[playerid] += 3;
     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 226.293991,-7.431529,1002.210937);
	    		GameTextForPlayer(playerid, "~w~VICTIM",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
        	}
	        else if (PlayerToPoint(2, playerid,1635.6626,590.6415,-35.4693))
	        {//entrada Predio

				XXAirBreak[playerid] += 3;
     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1481.3530,-1790.3047,156.7533);
	    		GameTextForPlayer(playerid, "~w~~b~Predio",5000,1);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: USE /sair para sair do PrediO '-'");                                                					
				SetPlayerInterior(playerid,0);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	    		PlayerInfo[playerid][pInt] = 0;
        	}
	        else if(PlayerToPoint(3, playerid,1836.4064,-1682.4403,13.3493))
	        {//Alhambra Entrance

				XXAirBreak[playerid] += 3;
	    		GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
	    		SetPlayerInterior(playerid, 17);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
	    		PlayerInfo[playerid][pInt] = 17;
        	}


        	else if(PlayerToPoint(3, playerid,2421.4998,-1219.2438,25.5617))
         	{//Pigpen entrada

				XXAirBreak[playerid] += 3;
	     		GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 2);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
	    		PlayerInfo[playerid][pInt] = 2;
	        }
	        else if(PlayerToPoint(3, playerid,2229.9011,-1721.2582,13.5613))
	        {//entrada Ginasio de Lutas

				XXAirBreak[playerid] += 3;
	     		GameTextForPlayer(playerid, "~w~Ginasio de Lutas", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
	    		PlayerInfo[playerid][pInt] = 5;
        	}

        	else if (PlayerToPoint(3, playerid,1200.4497,-918.7695,43.1105))
        	{
	    	//entrada Burger Shot 1

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 366.0324,-72.6400,1001.5078);
	    		GameTextForPlayer(playerid, "~w~Vinewood Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,10);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 10;
	    		InAFoodPlace[playerid] = 2;
	    		SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,810.4855,-1616.1888,13.5469))
        	{
	    	//entrada Burger Shot 2

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 681.5034,-452.0092,-25.6172);
		    	GameTextForPlayer(playerid, "~w~Marina Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,1);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 1;
	    		InAFoodPlace[playerid] = 5;
	    		SetPlayerCheckpoint(playerid, 683.9015,-456.7076,-25.6099, 1.0);
    		}
        	else if (PlayerToPoint(3, playerid,927.6217,-1353.0105,13.3438))
        	{
	    	//entrada Cluckin Bell

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 1;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,2419.8442,-1509.4996,24.0000))
        	{
	    	//entrada Cluckin Bell Perto da Groove

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 7;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,2105.4858,-1806.4725,13.5547))
        	{
	    	//entrada Well Stacked Pizza

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 372.4117,-130.4577,1001.4922);
	    		GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
	    		InAFoodPlace[playerid] = 3;
	    		SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
        	}
        	else if (PlayerToPoint(3, playerid,975.4691,-1335.9618,13.5319))
        	{
	    	//entrada BPH
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 377.5237,-191.6597,1000.6328);
	    		GameTextForPlayer(playerid, "~w~Lachonete", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 17);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 17;
	    		InAFoodPlace[playerid] = 4;
	    		SetPlayerCheckpoint(playerid, 379.0611,-186.6032,1000.6328, 1.0);
        	}
//=-=-=-=-=-=-=-=-=| HOTEL |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
    		else if (PlayerToPoint(3, playerid,2233.2659,-1159.8256,25.8906))
			{
				//Hotel entrada

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3, playerid,2212.6235,-1150.4385,1025.7969))
			{
				//Hotel entrada(dentro da porta)

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}
//=-=-=-=-=-=-=-=-=| 24/7'S|=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
            else if(PlayerToPoint(2, playerid,1833.6124,-1842.4968,13.5781))
            {//24/7 estação entrada

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 1;
	        }
	        else if(PlayerToPoint(2, playerid,1000.5861,-919.8832,42.3281))
	        {//24/7 gas station entrance

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 4);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-27.2584,-31.6446,1003.5573);
		    	PlayerInfo[playerid][pInt] = 4;
            }
            else if(PlayerToPoint(2, playerid,1928.6006,-1776.4480,13.5469))
	        {//24/7 lado hq pcc

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 16);
		    	SetPlayerVirtualWorld(playerid, 99);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-25.1326,-139.0670,1003.5469);
		    	PlayerInfo[playerid][pInt] = 16;
	        }
	        else if (PlayerToPoint(2, playerid, 1315.5110,-898.9860,39.5781))
	        {//24/7 perto madd dogg

				XXAirBreak[playerid] += 3;
		   		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 2;
	        }
	        else if (PlayerToPoint(2, playerid, 1352.4357,-1759.0243,13.5078))
	        {//24/7 praça dp

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 3;
	        }
	        else if (PlayerToPoint(2, playerid, -2442.6755,754.3430,35.1719))
	        {//groove

				XXAirBreak[playerid] += 3;
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 4;
	        }
//=-=-=-=-=-=-=-=-=| HQ'S DAS ORGANIZAÇÕES |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
            else if (PlayerToPoint(3, playerid,2232.2180,-1458.5508,24.0173))
			{//entrada PCC LS

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2171.3071,645.2919,1057.5938);
                GameTextForPlayer(playerid, "~y~HQ PCC",5000,1);
                SetPlayerInterior(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 1;
                storeexit[playerid] = 21;
                SetPlayerVirtualWorld(playerid, 0);
            }

            else if (PlayerToPoint(3, playerid,328.0614,-1512.2689,36.0325))
			{//Rotam LS entrada

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
                GameTextForPlayer(playerid, "~w~DP Rotam-LS",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                //localizardppc[playerid] = 1;
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 1);
                storeexit[playerid] = 2;
            }
            else if (PlayerToPoint(3, playerid,-2454.0352,503.9203,30.0793))
			{//PF entrada

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
                GameTextForPlayer(playerid, "~w~DP Policia Federal",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                //localizardppc[playerid] = 1;
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 2);
                storeexit[playerid] = 11;
            }
           	else if(PlayerToPoint(1, playerid,943.0517,-1743.3169,13.5546))
	        {//entrada Reporters HQ

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 366.4064,197.7209,1008.3828);
				GameTextForPlayer(playerid, "~g~Secretaria de seguranca",5000,1);
				SetPlayerInterior(playerid,3);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 3;
	        }
            else if (PlayerToPoint(3, playerid,-2454.0352,503.9203,30.0793))
			{//PF entrada

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 322.0765,303.8634,999.1484);
                GameTextForPlayer(playerid, "~w~DP Policia Federal",5000,1);
                SetPlayerInterior(playerid,5);
                //localizardppf[playerid] = 1;
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerVirtualWorld(playerid, 0);
            }
            
            else if(PlayerToPoint(3, playerid,1154.4968,-1180.8517,32.8187))
			{//entrada HQ BALLAS

				XXAirBreak[playerid] += 3;
                GameTextForPlayer(playerid, "~w~HQ Ballas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2268.3950,-1210.5328,1047.7491);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
                storeexit[playerid] = 17;
            }

            else if (PlayerToPoint(3, playerid,2495.3481,-1691.1355,14.7656))
			{//HQ Groove Street entrada
				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                storeexit[playerid] = 14;
                SetPlayerVirtualWorld(playerid, 0);
            }

            else if (PlayerToPoint(2, playerid,2309.9460,-1643.6337,14.8270))
			{//Bar Groove entrada

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,501.8770,-67.7092,998.7578);
                GameTextForPlayer(playerid, "~r~Bar ",5000,1);
                SetPlayerInterior(playerid,11);
                SetPlayerFacingAngle(playerid, 178.1566);
                barexit[playerid] = 2;
                PlayerInfo[playerid][pInt] = 11;
                SetPlayerVirtualWorld(playerid, 0);
            }
           	else if(PlayerToPoint(3, playerid,2008.4799,-2066.0486,13.5469))
        	{//entrada HQ CV

				XXAirBreak[playerid] += 3;
	    		GameTextForPlayer(playerid, "~w~HQ Comando Vermelho", 5000, 1);
	    		SetPlayerInterior(playerid, 6);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
	    		PlayerInfo[playerid][pInt] = 6;
	    		SetPlayerVirtualWorld(playerid, 0);
        	}
	        else if (PlayerToPoint(3, playerid,2808.0676,-1176.2814,25.3787))
			{//HQ VAGOS

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,295.1389,1474.4699,1080.5198);
                GameTextForPlayer(playerid, "~w~HQ Los Vagos",5000,1);
                SetPlayerInterior(playerid,15);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 15;
                storeexit[playerid] = 18;
                SetPlayerVirtualWorld(playerid, 0);
            }

            else if(PlayerToPoint(2, playerid,1073.2368,-345.5004,73.9922))
			{//entrada HQ HITMANS

				XXAirBreak[playerid] += 3;
                GameTextForPlayer(playerid, "~w~HQ Hitmans", 5000, 1);
                SetPlayerInterior(playerid, 6);
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,343.7183,304.9376,999.1484);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 0);
            }
		}
		return true;
	}
	if(strcmp(cmd, "/sair", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(1, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseEntered[playerid] == i)
    				{
						SetPlayerInterior(playerid,0);
						XXAirBreak[playerid] += 3;
						SetPlayerVirtualWorld(playerid,0);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						PlayerInfo[playerid][pInt] = 0;
                        //Controle(playerid, 1);
                        //Controle(playa, 1);
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pLocal] = 255;
						HouseEntered[playerid] = 500;
						return true;
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(1, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					XXAirBreak[playerid] += 3;
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
					return true;
				}
			}
			if(GetPlayerVehicleID(playerid) >= 1)
			//if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				Controle(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				PlayerInfo[playerid][pInt] = 0;
			}
			else if (PlayerToPoint(3, playerid,1548.8167,-1366.2247,326.2109))
			{

				XXAirBreak[playerid] += 3;
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
	    		PlayerInfo[playerid][pInt] = 0;
			}

			if (PlayerToPoint(1, playerid,305.05056762695,-159.16743469238,999.59375))
			{
			//COFRE LOJA DE ARMAS 1 SAIDA

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,306.3995,-159.1051,999.5938);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerInterior(playerid,6);
			}
			if (PlayerToPoint(2, playerid,2476.0576,-1750.4755,13.5469))
			{
			    if(PlayerInfo[playerid][pHelper] < 1)
			    {
			        SendClientMessage(playerid, COR_HELPER, "[ERRO] Você não é um Helper e não pode entrar na HQ deles!");
			        return true;
			    }
			//hq helper entrance

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,421.1092,2536.4766,10.0000);
				GameTextForPlayer(playerid, "~w~HQ HELPER", 5000, 1);
				PlayerInfo[playerid][pInt] = 10;
				SetPlayerInterior(playerid,10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			if (PlayerToPoint(2, playerid,421.1092,2536.4766,10.0000))
			{
			//hq helper saida

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2476.0576,-1750.4755,13.5469);
				GameTextForPlayer(playerid, "~w~LOS SANTOS", 5000, 1);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerToPoint(1.0, playerid,-2027.0715,-103.6059,1035.1818))
			{//SAIDA D.E.T.R.AN

				XXAirBreak[playerid] += 3;
                XXAirBreak[playerid] += 3;SetPlayerPos(playerid,952.5583,-909.3518,45.7656);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerInterior(playerid, 0);
			}



	        else if(PlayerToPoint(3.0, playerid,246.5878,62.7877,1003.6406))
            {
            	if (storeexit[playerid] == 66)
				{//DPLS saida
					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1554.9537,-1675.6584,16.1953);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else
				{
					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1554.9537,-1675.6584,16.1953);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
			}

	        else if(PlayerToPoint(3.0, playerid,369.4429,164.9996,1053.2078))
            {
            	if (storeexit[playerid] == 1)
				{//Hospital LS saida
					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2034.1270,-1403.3320,17.2874);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else
				{
					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2034.1270,-1403.3320,17.2874);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
			}

    		else if(PlayerToPoint(4.0, playerid,387.7978,173.8582,1008.3828))
            {
            	if (storeexit[playerid] == 1717)
				{//prefLS saida (Commerce)

					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1481.0386,-1772.3120,18.7958);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 1718)
				{//prefSF saida (Country Club)

					XXAirBreak[playerid] += 3;
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2720.1074,-318.5733,7.8438);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 2589)
				{//prefLS saida (East Beach)

					XXAirBreak[playerid] += 3;
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2793.6682,-1087.5436,30.7188);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 1719)
				{//prefSF saida (Downtown)

					XXAirBreak[playerid] += 3;
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-1882.6202,824.2709,35.1751);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
			}
            else if (PlayerToPoint(3.0, playerid,2147.7161,1603.5366,1006.1677))
			{
				XXAirBreak[playerid] += 3;
			    GameTextForPlayer(playerid, "~w~Banco", 5000, 1);
			    SetPlayerInterior(playerid,0);
			    PlayerInfo[playerid][pInt] = 0;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2315.5200,0.3490,26.7422);
			}
	        else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328))
	        {//Saida Binco

				XXAirBreak[playerid] += 3;
            	SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerInterior(playerid, 0);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2244.5669,-1664.4495,15.4766);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    	}
	    	else if (PlayerToPoint(3.0, playerid,161.3350,-95.0194,1001.8047))
	        {//Saida ZIP
				XXAirBreak[playerid] += 3;
     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1456.9010,-1137.6941,23.9617);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
   			else if (PlayerToPoint(3.0, playerid,226.293991,-7.431529,1002.210937))
	        {//Saida VICTIM

				XXAirBreak[playerid] += 3;
     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1694.5050,950.8621,24.8906);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}

			else if(PlayerToPoint(1.0, playerid,501.8770,-67.7092,998.7578))
            {
				if(barexit[playerid] == 2)
				{//BAR PERTO DA GROOVE
					XXAirBreak[playerid] += 3;
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerFacingAngle(playerid, 130.5600);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2309.7676,-1643.7872,14.8270);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		barexit[playerid] = 0;
				}
			}
	    	else if(PlayerToPoint(3.0, playerid,493.3891,-22.7212,1000.6797))
	        {//Saida Alhambra
				XXAirBreak[playerid] += 3;
	    		SetPlayerInterior(playerid, 0);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1836.4064,-1682.4403,13.3493);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(2.0, playerid,1205.0803,-9.9519,1000.9219))
         	{//saida pigpen
				XXAirBreak[playerid] += 3;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2421.4998,-1219.2438,25.5617);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if(PlayerToPoint(2.0, playerid,771.9399,-2.2574,1000.7292))
	        {//Saida Ginasio de Lutas

				XXAirBreak[playerid] += 3;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2229.9011,-1721.2582,13.5613);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
         	else if(PlayerToPoint(1, playerid,366.4064,197.7209,1008.3828))
	    	{//Reporter Hq

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 943.0517,-1743.3169,13.5546);
				GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    	}
         	else if (PlayerToPoint(2.0, playerid,832.6270,7.2666,1004.1797))
         	{
	    	//Loterica saida

				XXAirBreak[playerid] += 3;
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1631.8547,-1172.5637,24.084);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
         	}
        	else if (PlayerToPoint(2.0, playerid,366.0324,-72.6400,1001.5078))
        	{
	    	//entrada Burger Shot 1

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1200.4497,-918.7695,43.1105);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(2.0, playerid,681.5034,-452.0092,-25.6172))
        	{
	    	//Saida Burger Shot 2

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 810.4855,-1616.1888,13.5469);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}

	        else if(PlayerToPoint(2.0, playerid,365.7793,-9.1699,1001.8516))
            {
            	if (InAFoodPlace[playerid] == 1)
				{//clukin

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 927.6217,-1353.0105,13.3438);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
				}
				else if(InAFoodPlace[playerid] == 7)
				{//perto da groove

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2419.8442,-1509.4996,24.0000);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
				}
			}
        	else if (PlayerToPoint(2.0, playerid,372.4117,-130.4577,1001.4922))
        	{
	    	//Saida Well Stacked Pizza

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2105.4858,-1806.4725,13.5547);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(2.0, playerid,377.5237,-191.6597,1000.6328))
        	{
	    	//SaidaLanchonete

				XXAirBreak[playerid] += 3;
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 975.4691,-1335.9618,13.5319);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
//=-=-=-=-=-=-=-=-=| SAÍDAS 24/7'S |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	        else if(PlayerToPoint(3.0, playerid,-30.9891,-91.5607,1003.5469))
            {
            	if (storeexit[playerid] == 1)
				{//24/7 estação saida

					XXAirBreak[playerid] += 3;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1833.6124,-1842.4968,13.5781);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 2)
				{//perto madd dogg

					XXAirBreak[playerid] += 3;
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1315.5110,-898.9860,39.5781);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 3)
				{//praça dp

					XXAirBreak[playerid] += 3;
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1352.4357,-1759.0243,13.5078);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 4)
				{//groove

					XXAirBreak[playerid] += 3;
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,-2442.6755,754.3430,35.1719);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
	        }
	        else if(PlayerToPoint(1.0, playerid,-27.2584,-31.6446,1003.5573))
	        {//24/7 gas station saida

				XXAirBreak[playerid] += 3;
		    	SetPlayerInterior(playerid, 0);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1000.5861,-919.8832,42.3281);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,-25.1326,-139.0670,1003.5469))
	        {//24/7 lado hq pcc saida

				XXAirBreak[playerid] += 3;
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1928.6006,-1776.4480,13.5469);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
	        }

//=-=-=-=-=-=-=-=-=| HOTEL SAÍDA |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
    		else if (PlayerToPoint(3.0, playerid,2228.4087,-1150.5686,1025.7969))
			{
				//Hotel Saida

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2190.1182,-1179.7944,1033.7896))
			{
				//Hotel Saida 2

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2238.9316,-1192.4878,1033.7969))
			{
				//Hotel Saida 3

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2193.3254,-1138.6238,1029.7969))
			{
				//Hotel Saida 4

				XXAirBreak[playerid] += 3;
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
//=-=-=-=-=-=-=-=-=| SAÍDA HQ'S DAS ORGANIZAÇÕES |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	       	if (PlayerToPoint(2.0, playerid,-2171.3071,645.2919,1057.5938))
	        {//SAIDA HQ PCC
	        	if(storeexit[playerid] == 21)
	            {

					XXAirBreak[playerid] += 3;
  		 			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2232.2180,-1458.5508,24.0173);
		   		 	SetPlayerInterior(playerid,0);
			    	SetPlayerFacingAngle(playerid, 0);
			    	PlayerInfo[playerid][pInt] = 0;
			    	PlayerInfo[playerid][pLocal] = 255;
	            	SetPlayerVirtualWorld(playerid, 0);
	            	storeexit[playerid] = 0;
	            }
	        }
	        
            else if (PlayerToPoint(2.0, playerid,238.6815,138.6710,1003.0234))
	        {
	    	    if(storeexit[playerid] == 2)
	    	    {

					XXAirBreak[playerid] += 3;
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 328.0614,-1512.2689,36.0325);
		    		SetPlayerInterior(playerid,0);
		    		SetPlayerFacingAngle(playerid, 0);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		storeexit[playerid] = 0;
				}
	    	    if(storeexit[playerid] == 11)
	    	    {
					XXAirBreak[playerid] += 3;
		    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2454.0352,503.9203,30.0793);
		    		SetPlayerInterior(playerid,0);
		    		SetPlayerFacingAngle(playerid, 0);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		SetPlayerVirtualWorld(playerid, 0);
		    		storeexit[playerid] = 0;
				}
	        }
	        if(PlayerToPoint(2.0, playerid,246.3772,107.4653,1003.2188))
	        {//Saida HQ Policia Rodoviaria ^^

				XXAirBreak[playerid] += 3;
			    SetPlayerInterior(playerid, 0);
			    XXAirBreak[playerid] += 3;SetPlayerPos(playerid,628.0784,-571.7713,17.3975);
			    PlayerInfo[playerid][pInt] = 0;
			    SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pLocal] = 255;
	        }

        	if(PlayerToPoint(2.0, playerid,2270.1592,-1210.4899,1047.5625))
        	{//SAIDA HQ BALLAS
        	    if(storeexit[playerid] == 17)
        	    {
					XXAirBreak[playerid] += 3;
	    			SetPlayerInterior(playerid, 0);
	    			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1154.4968,-1180.8517,32.8187);
	    			SetPlayerFacingAngle(playerid, 82.4074);
	    			PlayerInfo[playerid][pInt] = 0;
	    			SetPlayerVirtualWorld(playerid, 0);
	    			PlayerInfo[playerid][pLocal] = 255;
	    			storeexit[playerid] = 0;
	    		}
        	}

        	else if(PlayerToPoint(2.0, playerid,315.8926,-1769.9169,4.6362))
        	{//entrada HQ AZTECAS

				XXAirBreak[playerid] += 3;
	    		GameTextForPlayer(playerid, "~w~HQ Los Aztecas", 5000, 1);
	    		SetPlayerInterior(playerid, 5);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,22.8858,1405.1282,1084.4297);
	    		PlayerInfo[playerid][pInt] = 5;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		storeexit[playerid] = 5;
	        }

	        if(PlayerToPoint(1.0, playerid,22.8858,1405.1282,1084.4297))
        	{//SAIDA HQ AZTECAS
        	    if(storeexit[playerid] == 5)
        	    {
					XXAirBreak[playerid] += 3;
	    			SetPlayerInterior(playerid, 0);
	    			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,315.8926,-1769.9169,4.6362);
	    			PlayerInfo[playerid][pInt] = 0;
	    			SetPlayerVirtualWorld(playerid, 0);
	    			PlayerInfo[playerid][pLocal] = 255;
	    			storeexit[playerid] = 0;
	    		}
	        }
	        
	        if (PlayerToPoint(1.0, playerid,2496.0398,-1692.0844,1014.7422))
        	{
        	    if(storeexit[playerid] == 14)
        	    {
	    	//HQ Groove Street Saida

					XXAirBreak[playerid] += 3;
	     			XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2495.2939,-1690.3051,14.7656);
	     			SetPlayerInterior(playerid,0);
	     			SetPlayerFacingAngle(playerid, 4.0967);
	    			PlayerInfo[playerid][pInt] = 0;
	    			SetPlayerVirtualWorld(playerid, 0);
	    			PlayerInfo[playerid][pLocal] = 255;
	    			storeexit[playerid] = 0;
	    		}
	        }

	        if(PlayerToPoint(1.0, playerid,343.7183,304.9376,999.1484))
        	{//SAIDA HQ HITMANS

				XXAirBreak[playerid] += 3;
	     		SetPlayerInterior(playerid, 0);
	     		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1073.2368,-345.5004,73.9922);
	     		PlayerInfo[playerid][pInt] = 0;
	     		SetPlayerVirtualWorld(playerid, 0);
	     		PlayerInfo[playerid][pLocal] = 255;
     		}

        	else if(PlayerToPoint(1.0, playerid,2308.5269,-1211.2737,1049.0234))
        	{//SAIDA HQ CV

				XXAirBreak[playerid] += 3;
	    		SetPlayerInterior(playerid, 0);
	    		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,2008.4799,-2066.0486,13.5469);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
	        if (PlayerToPoint(2.0, playerid,295.1739,1472.2755,1080.2578))
	        {//SAIDA HQ VAGOS
	            if(storeexit[playerid] == 18)
	            {

					XXAirBreak[playerid] += 3;
			  	    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 2808.0676,-1176.2814,25.3787);
		  		  	SetPlayerInterior(playerid,0);
			    	SetPlayerFacingAngle(playerid, 0);
   	 				PlayerInfo[playerid][pInt] = 0;
     		 		PlayerInfo[playerid][pLocal] = 255;
       		 		SetPlayerVirtualWorld(playerid, 0);
	            	storeexit[playerid] = 0;
	            }
	        }
	        
        	//=========================[FIM SAIDAS HQ ORGANIZAÇÕES]=========================//
		}
		return true;
	}
	
	if(strcmp(cmd, "/casa", true) == 0 || strcmp(cmd, "/mapacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 500)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~r~Mapa da Casa Marcado!", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
			}
		}
		return true;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/comprarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pVIP] >= 1 && PlayerInfo[playerid][pTimeVIP] >= 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não pode comprar uma empresa com VIP de testes!");
				return true;
			}
			if(PlayerInfo[playerid][pVIP] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Apenas players VIPs podem comprar uma empresa");
				return true;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você ja tem uma empresa, Digite /venderempresa para comprar outra.");
				return true;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou uma empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você não tem grana suficiente");
						return true;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						XXAirBreak[playerid] += 3;
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou esta empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você nao tem grana o suficiente");
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/compraremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você ja tem uma empresa, Digite /venderemp para comprar outra.");
				return true;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou uma empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você não tem grana suficiente");
						return true;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou esta empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você nao tem grana o suficiente");
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/venderempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não possui uma empresa.");
				return true;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você é casado(a), não pode vender a empresa!");
		        return true;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey]-100;
				GivePlayerMoney(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 0;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[borse][bLocked] = 0;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,BizzInfo[borse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
			    new borse = PlayerInfo[playerid][pPbiskey];
			    format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 255;
                return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você não tem uma Empresa.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/infoempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if(borse == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem uma empresa.");
				return true;
			}
			if (borse >= 100)
			{
				PrintSBizInfo(playerid,borse-100);
			}
			else
			{
				PrintBizInfo(playerid,borse);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/entradadaempresa", true) == 0 || strcmp(cmd, "/entradaemp", true) == 0 || strcmp(cmd, "/precoentradaemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa !");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /entradadaempresa [preço]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 20000)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Preço da entrada mínimo R$0, máximo R$20000.");
				return true;
			}
			if (borse >= 200)
			{
				SBizzInfo[borse-100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", SBizzInfo[borse-200][sbEntranceCost]);
			}
			else
			{
				BizzInfo[borse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
			}
			Atualizar3Dtexts();
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/extorcao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Você não tem uma Empresa");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /extorcao [id] (ou 555 para Nenhum)");
			    return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s esta na extorcao de sua empresa.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* Agora você está na extorção da empresa de %s.",PlayerName(playerid));
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (borse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
					}
					OnPropUpdate();
					Atualizar3Dtexts();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (borse >= 100)
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
				}
				OnPropUpdate();
				Atualizar3Dtexts();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/nomeempresa", true) == 0 || strcmp(cmd, "/nomeemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem uma empresa!");
			    return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Peça para um admin Master mudar o nome da sua empresa!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/sacarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return true;
			}
			if (borse >= 100)
			{
				if(cashdeposit > SBizzInfo[borse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
					return true;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
					return true;
				}
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Sua empresa esta longe de você.");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[borse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Sua empresa esta longe de você.");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					BizzInfo[borse][bTill] -= cashdeposit;
					format(string, sizeof(string), "   Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/depositarempresa", true) == 0 || strcmp(cmd, "/depositaremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma empresa.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tanto");
				return true;
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse][sbEntranceX],SBizzInfo[borse][sbEntranceY],SBizzInfo[borse][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua empresa");
					return true;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[borse-100][sbTill] += cashdeposit;
					ExtortionSBiz(borse-100, cashdeposit);
					format(string, sizeof(string), "  Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d");
					return true;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[borse][bTill] += cashdeposit;
					ExtortionBiz(borse, cashdeposit);
					format(string, sizeof(string), "  Voce depositou R$%d no cofre de sua empresa Total: R$%d", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/vida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "* %s pega seu colete.", PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Controle(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else if(HouseInfo[location][hHel] == 1)
						{
						    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
							SetPlayerHealth(playerid,100.0);
							PlayerInfo[playerid][pDoenca] = 0;
							SetPlayerDrunkLevel (playerid, 0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você foi curado.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY,"Este lugar nao tem lugar de se curar.");
						}
						return true;
					}
					else if(location == 101)//Restaurant
					{
					    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
					    SetPlayerHealth(playerid,100.0);
						SetPlayerArmour(playerid,100.0);
						PlayerInfo[playerid][pDoenca] = 0;
						SetPlayerDrunkLevel (playerid, 0);
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você foi curado.");
					}
					else if(location == 102 && IsACop(playerid))//Police Armorry
					{
					    VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s Foi Curado.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Controle(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [preço]");
					return true;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [price]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode passar de 5000 !"); return true; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode se curar!");
				return true;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMembro]==4||PlayerInfo[playerid][pLider]==4||PlayerInfo[playerid][pMembro]==31||PlayerInfo[playerid][pLider]==31)//model
					{
						new Veh = GetPlayerVehicleID(playerid);
						if(IsAnAmbulanceCar(Veh)|| IsAMedicosSFCar(Veh))
						{
							format(string, sizeof(string), "~y~Voce foi curado ~n~~w~%s~n~~g~R$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							GivePlayerMoney(playerid,moneys);
							GivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        VidaDoCara[giveplayerid] = 2; AXITERCOLETE[giveplayerid] = 3;
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        VidaDoCara[giveplayerid] = 2; AXITERCOLETE[giveplayerid] = 3;
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
						    new colete = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        VidaDoCara[giveplayerid] = 2; AXITERCOLETE[giveplayerid] = 3;
						        colete = 0 * PlayerInfo[playerid][pPainPerk]; colete += 100;
								SetPlayerArmour(giveplayerid, colete);
						    }
						    else
						    {
						        VidaDoCara[giveplayerid] = 2; AXITERCOLETE[giveplayerid] = 3;
						        colete = 100;
						        SetPlayerArmour(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Você foi curado, %d de saude e %d de colete por -R$%d",hp,colete,moneys);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
							if(PlayerInfo[giveplayerid][pDoenca] > 0)
				            {
								PlayerInfo[giveplayerid][pDoenca] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Você não está infectado com nenhuma doença, por causa de cuidados medicos!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Vocês dois precisam estar no veículo!");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Esse jogador está offline");
			}
		}
		return true;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /id [parte-do-nick]");
				return true;
			}
			new target;
			target = ReturnUser(tmp);
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(gstring, sizeof(gstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, gstring);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/tv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	        	SendClientMessage(playerid, COLOR_GREEN, "Você não está autorizado a usar este comando");
	        	return true;
	        }
	        if(PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					XXAirBreak[playerid] += 3;
					NaoMostra[playerid] = 0;
					MedicBill[playerid] = 0;
					TextDrawHideForPlayer(playerid, gpss[playerid]);
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está de TV em Ninguem !");
				    return true;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				giveplayerid = ReturnUser(tmp);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayerid);
				if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1339 && PlayerInfo[playerid][pAdmin] < SUB_GERENTE)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode ficar de TV em um Admin Dono !");
							return true;
						}
				        Spectate[playerid] = giveplayerid;
				        XXAirBreak[playerid] += 3;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetPlayerMoney(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
						    SetPlayerToTeamColor(playerid);
						    XXAirBreak[playerid] += 3;
						    SetPlayerVirtualWorld(playerid,world);
						    NaoMostra[playerid] = 1;
						    PlayerInfo[playerid][pSpawn] = 0;
							format(string, sizeof(string), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						format(string,sizeof(string),"~n~Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						WatchingTV[playerid] = 1;
						XXAirBreak[playerid] += 3;
						NaoMostra[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Jogador não está disponivel.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   Você não tem permissão para usar esse comando!");
				return true;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/Gaspar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] >= 1337)
	        {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/Gaspar) [TEXT]");
				return true;
			}
			format(string, sizeof(string), "SMS: %s, enviou: Gasparzinho (000)", result);
			SendClientMessageToAll(COLOR_YELLOW, string);
			printf("%s: %s", sendername, result);
		}
		}
		return true;
	}


//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return true;
				}
				if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				{
					format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				}
				else
				{
					format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 3);
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{

				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn [cnn formatodotexto ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo]");
					return 1;
				}
				format(string, sizeof(string), "~p~%s: ~w~%s",sendername,result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= MASTER)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> ");
					return true;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Não existe 2! só 0,1,3,4!");
					return true;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> [cnnc formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return true;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}

//----------------------------------[TOD]-----------------------------------------------

	if(strcmp(cmd, "/sethora", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sethora [hora do dia] (0-23)");
				return true;
			}
			new hour2;
			hour2 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
	            SetWorldTime(hour2);
				format(string, sizeof(string), "   Tempo Definido Para %d Horas.", hour2);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/iniciarloteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= MASTER)
	        {
	            format(string, sizeof(string), "Loteria: Ja comecou a loteria.");
	            OOCNews(COLOR_WHITE, string);
	            new rand = random(50);
	            if(rand < 77) { rand += 0; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem permissão para usar esse comando!");
	            return true;
	        }
	    }
		return true;
	}

	if(strcmp(cmd, "/fc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -177.7659,1110.9678,19.7422);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -177.7659,1110.9678,19.7422);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Forte Carson");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -227.5075,2711.0317,62.9766);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -227.5075,2711.0317,62.9766);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Las Payasadas");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/api", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2138.7646,-2448.1833,30.6328);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2138.7646,-2448.1833,30.6328);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Angel Pine");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/eq", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1515.6042,2656.7632,55.8359);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1515.6042,2656.7632,55.8359);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para El Quebrados");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -857.1234,1536.4636,22.5870);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -857.1234,1536.4636,22.5870);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Las Barrancas");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2501.4192,2319.3208,4.9844);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2501.4192,2319.3208,4.9844);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Bay Side");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 255.2436,-54.1290,1.5703);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 255.2436,-54.1290,1.5703);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para Blue Berry");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1286.2281,385.7052,19.5547);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1286.2281,385.7052,19.5547);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce foi teleportado para MontGomery");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/vw", true) == 0 || strcmp(cmd, "/mundovirtual", true) == 0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /vw [ id ] [virtual word] ou /mundovirtual [ id ] [virtual word]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerVirtualWorld(para1,level);
						format(string, sizeof(string), "  Seu Virtual Word foi setado para %d Pelo Admin  %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Voce Setou o Virtual Word de %s Para %d .", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/editar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new editarnome[MAX_PLAYER_NAME];
			new editarnome2[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD4, "1. Level                       |7. Respeito             |13. Repórter   |19. Materiais");
				SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu                   |8. ChaveCasa          |14. V.Drogas   |20. Carro Vip");
				SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar                |9. ChaveEmpresa   |15. P.Sexo   |21. Carro Sócio");
				SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas       |10. Detetive             |16. Box");
				SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco     |11. Advogado          |17. Matou");
				SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecânico           |18. Skill De Pesca");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    GetPlayerName(playerid,editarnome,sizeof(editarnome));
	    	    GetPlayerName(giveplayerid,editarnome2,sizeof(editarnome2));
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
						SendClientMessage(playerid, COLOR_GRAD4, "1. Level                       |7. Respeito             |13. Repórter   |19. Materiais");
						SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu                   |8. ChaveCasa          |14. V.Drogas   |20. Carro Vip");
						SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar                |9. ChaveEmpresa   |15. P.Sexo   |21. Carro Sócio");
						SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas       |10. Detetive             |16. Box");
						SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco     |11. Advogado          |17. Matou");
						SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecânico           |18. Skill De Pesca");
						return true;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
						SendClientMessage(playerid, COLOR_GRAD4, "1. Level                       |7. Respeito             |13. Repórter   |19. Materiais");
						SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu                   |8. ChaveCasa          |14. V.Drogas   |20. Carro Vip");
						SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar                |9. ChaveEmpresa   |15. P.Sexo   |21. Carro Sócio");
						SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas       |10. Detetive             |16. Box");
						SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco     |11. Advogado          |17. Matou");
						SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecânico           |18. Skill De Pesca");
						return true;
					}
					new quantidade;
					quantidade = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= MASTER)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != MASTER)
						{
							SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
							return true;
						}
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = quantidade;
								format(string, sizeof(string), "   Você setou level %d para o jogador", quantidade);
								ScoreLevel(giveplayerid);
								format(gstring, 128, "%s usou /editar level em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pDeaths] = quantidade;
								format(string, sizeof(string), "   Você setou %d vezes que ele morreu", quantidade);
								format(gstring, 128, "%s usou /editar numeros de morte em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = quantidade;
								format(string, sizeof(string), "   Você setou %d de pontos de melhoria", quantidade);
								format(gstring, 128, "%s usou /editar melhorias em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pConnectTime] = quantidade;
								format(string, sizeof(string), "   Você setou %d horas jogadas para o jogador", quantidade);
								format(string, sizeof(string), "   Você setou horas jogadas do player");
								format(gstring, 128, "%s usou /editar horas jogadas em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pConta] = quantidade;
								format(string, sizeof(string), "   Você setou R$%d no banco do jogador", quantidade);
								format(gstring, 128, "%s usou /editar banco em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = quantidade;
								format(string, sizeof(string), "   Você setou o celular do jogador para %d", quantidade);
								format(gstring, 128, "%s usou /editar celular em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = quantidade;
								format(string, sizeof(string), "   Você setou o respeito do jogador para %d", quantidade);
								format(gstring, 128, "%s usou /editar respeito em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPHousekey] = quantidade;
								format(string, sizeof(string), "   Você setou a chave de casa pra %d", quantidade);
								format(gstring, 128, "%s usou /editar chave da casa em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = quantidade;
								format(string, sizeof(string), "   Você setou a chave da empresa %d", quantidade);
								format(gstring, 128, "%s usou /editar chave da empresa em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 10:
							{
								PlayerInfo[giveplayerid][pDetSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de detetive para: %d", quantidade);
								format(gstring, 128, "%s usou /editar detetive em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pLawSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de advogado para: %d", quantidade);
                                format(gstring, 128, "%s usou /editar avogado em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pMechSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de mecanico para: %d", quantidade);
								format(gstring, 128, "%s usou /editar mecanico em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = quantidade;
								format(string, sizeof(string), "   Você setou skill %d de Repórter", quantidade);
								format(gstring, 128, "%s usou /editar reporter em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pDrogasSkill] = quantidade;
								format(string, sizeof(string), "   Você setou a Skill de Drogas para: %d", quantidade);
								format(gstring, 128, "%s usou /editar skill drogas em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pSexSkill] = quantidade;
								format(string, sizeof(string), "  Você setou a Skill de P.Sexo para: %d", quantidade);
								format(gstring, 128, "%s usou /editar skill p.sexo em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = quantidade;
								format(string, sizeof(string), "   Você setou skill %d de Box", quantidade);
								format(gstring, 128, "%s usou /editar skill boxe em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pKills] = quantidade;
								format(string, sizeof(string), "   Você setou %d vezes que ele matou alguém", quantidade);
								format(gstring, 128, "%s usou /editar Kills em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 18:
							{
								format(string, sizeof(string), "   Você setou a Skill de Pescar para: %d", quantidade);
								format(gstring, 128, "%s usou /editar pesca em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pMats] = quantidade;
								format(string, sizeof(string), "   Você setou Materiais para: %d", quantidade);
								format(gstring, 128, "%s usou /editar materiais em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 20:
							{
								PlayerInfo[giveplayerid][pCarKey] = quantidade;
								format(string, sizeof(string), "   Você setou o [ID] Carro Vip para: %d", quantidade);
								format(gstring, 128, "%s usou /editar carro VIP em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								comandosadminlog(gstring);
							}
							case 21:
							{
								PlayerInfo[giveplayerid][pCarKey2] = quantidade;
								format(string, sizeof(string), "   Você setou o [ID] Carro Sócio para: %d", quantidade);
							}
							default:
							{
								format(string, sizeof(string), "   Codigo Invalido", quantidade);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
					}
				}//not valid id
			}//not connected
		}
		return true;
	}

	if(strcmp(cmd, "/tirarsu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= MASTER)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/tirarsu) [id] 0");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
            	if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
      					//new playerid;
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: (/tirarsu [id] 0");
							return true;
						}
						WantedPoints[playerid] = 0;
						SetPlayerWantedLevel(playerid, 0);
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador não está conectado.");
					return true;
				}
   			}
		}
		return true;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setint", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY," Você não pode trocar o interior agora!");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setint [interiorid]");
				return true;
			}
			new intid;
			intid = strval(tmp);
			SetPlayerInterior(playerid,intid);
			PlayerInfo[playerid][pInt] = intid;
			format(string, sizeof(string), "   Interior Mudado Para %d.", intid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return true;
	}

	if(strcmp(cmd, "/setword", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY," Você não pode trocar o interior agora!");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setword [WordID]");
				return true;
			}
			new intid;
			intid = strval(tmp);
			SetPlayerVirtualWorld(playerid, intid);
			format(string, sizeof(string), "   Virtual Word Mudado Para %d.", intid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return true;
	}
	
	if(strcmp(cmd, "/Demitirmembro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
				return true;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] > 1 || PlayerInfo[playerid][pCargo] == 5)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Você não pode demitir quem não é da sua org.");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
								return true;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(string, sizeof(string), "* Você foi demitido pelo líder %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora você é um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
							if(PlayerInfo[para1][pSex] == 1)
							{
								PlayerInfo[para1][pSkin] = 23;
							}
							else
							{
								PlayerInfo[para1][pSkin] = 41;
							}
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Você demitiu %s, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return true;
						}
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
		}
		return true;
	}

//====================================================
	if(strcmp(cmd, "/orgs", true) == 0 || strcmp(cmd, "/profs", true) == 0)
	{
	    new DialogBPH[1500];
	    if(IsPlayerConnected(playerid))
	    {
			format(string, 128, " {7AADFF}1 - Policia Militar:{FFFFFF} %s\n", InfoOrg[1][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {ADC7D9}2 - Rotam:{FFFFFF} %s\n", InfoOrg[2][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {6CD950}3 - Exercito:{FFFFFF} %s\n", InfoOrg[3][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {F7819A}4 - SAMU:{FFFFFF} %s\n", InfoOrg[4][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {337EFF}5 - Los Astecas:{FFFFFF} %s\n", InfoOrg[5][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {6AB4E6}7 - Prefeito:{FFFFFF} %s\n", InfoOrg[7][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {C2CBD1}8 - Hitmans:{FFFFFF} %s\n", InfoOrg[8][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {EDD893}9 - Reporter:{FFFFFF} %s\n", InfoOrg[9][Lider]);
    		strcat(DialogBPH,string);
			format(string, 128, " {93EDDE}10 - Taxista:{FFFFFF} %s\n", InfoOrg[10][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {BFA873}11 - Policia Federal:{FFFFFF} %s\n", InfoOrg[11][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {00DB1D}14 - Groove Street:{FFFFFF} %s\n", InfoOrg[14][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {363636}15 - FARC:{FFFFFF} %s\n", InfoOrg[15][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {CB42E3}17 - Ballas:{FFFFFF} %s\n", InfoOrg[17][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {E1ED00}18 - Los Vagos:{FFFFFF} %s\n", InfoOrg[18][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {FF0000}19 - Comando Vermelho:{FFFFFF} %s\n", InfoOrg[19][Lider]);
    		strcat(DialogBPH,string);
			format(string, 128, " {9ACD32}21 - PCC:{FFFFFF} %s\n", InfoOrg[21][Lider]);
			strcat(DialogBPH,string);
			format(string, 128, " {CAE1FF}22 - Triads:{FFFFFF} %s\n", InfoOrg[22][Lider]);
			strcat(DialogBPH,string);
            format(string, 128, " {00E5EE}23 - Guerrilheiros Israelitas:{FFFFFF} %s\n", InfoOrg[23][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {BFA873}33 - Policia Rodoviária:{FFFFFF} %s\n", InfoOrg[33][Lider]);
			strcat(DialogBPH,string);
   			format(string, 128, " {EDD893}34 - Secretaria de Segurança:{FFFFFF} %s\n", InfoOrg[34][Lider]);
			strcat(DialogBPH,string);
			ShowPlayerDialog(playerid, 8724, DIALOG_STYLE_LIST, "Lista de Líderes das Organizações", DialogBPH, "OK","OK");
   		}
     	return true;
	}

//----------------------------------{Numero Emprego}-----------------------------------------------
	if(strcmp(cmd, "/empregos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Detetive - 1");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Advogado - 2");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Profissional de Sexo - 3");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Vendedor de Drogas - 4");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Mecânico - 5");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Segurança - 6");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Vendedor de Armas - 7");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Boxer - 8");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Motorista de Onibus - 9");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Mendigo - 10");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Caminhoneiro - 11");
			}
		}
		return true;
	}

//-----------------------------------{ IP }-----------------------------------------------------
	if(strcmp(cmd, "/ip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
      		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Use: /ip [ID]");
				SendClientMessage(playerid, COLOR_YELLOW, "Comando Para Ver o Ip Do Jogador.");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[128];
				GetPlayerIp(giveplayerid,ip,128);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "-| %s's IP: %s |-", giveplayer,ip);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
	    	return true;
  		}
	    return true;
	}
//----------------------/unbanip--------------
	if(strcmp(cmd,"/desbanip",true)==0 || strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= MASTER)
		{
      		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbanip [IP DO JOGADOR]");
		        return true;
   			}
   			new gstring2[128];
			format(gstring, 128, "IPsBanidos/%s.ini", tmp);
			format(gstring2, 128, "IPsBanidosTemp/%s.ini", tmp);
			if(DOF2_FileExists(gstring))
			{
			    fremove(gstring);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, "ADM: %s desbaniu o IP %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
		        return true;
			}
  			else if(DOF2_FileExists(gstring2))
			{
			    fremove(gstring2);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, "ADM: %s desbaniu o IP (temporariamente banido) %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
		        return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Este IP não está banido!");
		        return true;
			}
		}
		return true;
	}

	if(strcmp(cmd,"/desbanconta",true)==0 || strcmp(cmd,"/unbannome",true)==0 || strcmp(cmd,"/desbannome",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= MASTER)
		{
      		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbanconta [NOME DO JOGADOR]");
		        return true;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "Banidos/%s.ini",tmp);
    		new arquivo2[64];
			format(arquivo2, sizeof(arquivo2), "BanidosTemp/%s.ini",tmp);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(DOF2_FileExists(arquivo))
			{
			   	format(string, 128, "ADM: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COLOR_LIGHTRED,string,1);
				DOF2_RemoveFile(arquivo);
			}
   			else if(DOF2_FileExists(arquivo2))
			{
			   	format(string, 128, "ADM: %s desbaniu o Nick (temporariamente banido) %s", sendername,tmp);
				ABroadCast(COLOR_LIGHTRED,string,1);
				DOF2_RemoveFile(arquivo2);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Este Nick não está entre os banidos!");
			    return true;
			}
		}
		return true;
	}

	if(strcmp(cmd,"/desbantemp",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= MASTER)
		{
      		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbantemp [NOME DO JOGADOR]");
		        return true;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "BanidosTemp/%s.ini",tmp);
			if(!DOF2_FileExists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick não encontrado na base de dados");
		        return true;
			}
			else
			{
   				DOF2_RemoveFile(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, 128, "ADM: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
			else
			{
				format(string, 128, "ADM: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
		}
		return true;
	}


	if(strcmp(cmd,"/rlistaadmin",true)==0 || strcmp(cmd,"/removelistaadmin",true)==0 || strcmp(cmd,"/rlistadeadmin",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= MASTER)
		{
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /rlistaadmin [NOME CORRETO DO JOGADOR]");
		        SendClientMessage(playerid,COLOR_WHITE,"Use este comando para retirar o NICK da lista de retirada de admin OFFLINE!");
		        return true;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "RetirarAdmin/%s.ini",tmp);
			if(!DOF2_FileExists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick não está na lista de retirada de Admin OFFLINE!");
		        return true;
			}
			else
			{
   				DOF2_RemoveFile(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, 128, "AdmCmd: O Admin %s removeu o nick %s da lista de retirada de Admin.", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
			else
			{
				format(string, 128, "AdmCmd: O Admin %s removeu o nick %s da lista de retirada de Admin.", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
		}
		return true;
	}
	if(strcmp(cmd,"/rlistahelper",true)==0 || strcmp(cmd,"/removelistahelper",true)==0 || strcmp(cmd,"/rlistadehelper",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= MASTER)
		{
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /rlistahelper [NOME CORRETO DO JOGADOR]");
		        SendClientMessage(playerid,COLOR_WHITE,"Use este comando para retirar o NICK da lista de retirada de helper OFFLINE!");
		        return true;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "RetirarHelper/%s.ini",tmp);
			if(!DOF2_FileExists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick não está na lista de retirada de Helper OFFLINE!");
		        return true;
			}
			else
			{
   				DOF2_RemoveFile(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, 128, "AdmCmd: O Admin %s removeu o nick %s da lista de retirada de Helper.", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
			else
			{
				format(string, 128, "AdmCmd: O Admin %s removeu o nick %s da lista de retirada de Helper.", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
		}
		return true;
	}

//----------------------------------[MAKELider]------------------------------------------------
    if(strcmp(cmd, "/lider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /lider [playerid] [Numero(1-34)]");
					return true;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(level > 34 || level < 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Organizações de 0 a 34");
					return true;
				}
				if(level == 12 || level == 13)
				{
					SendClientMessage(playerid, COLOR_GREY, "Organizaçao desativada no momento!");
					return true;
				}
 				if(PlayerInfo[para1][pAdmin] == 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode usar este comando em players que não seja admin!");
				    return true;
				}
				if(PlayerInfo[para1][pLider] != 0 && PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(level == 1) { PlayerInfo[para1][pSkin] = 266; }//Policia Militar
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 228; }//Rotam
						else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
						else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//GIA
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
						else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//Policia Federal
						else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Cosa Nostra
						else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Yakuza
						else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
	     				else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//ALQaeda
						else if(level == 16) { PlayerInfo[para1][pSkin] = 228; }//Rotam-SF
	     				else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
	                    else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
	                    else if(level == 19) { PlayerInfo[para1][pSkin] = 170; }//CV
	                    else if(level == 20) { PlayerInfo[para1][pSkin] = 170; }//Comando Vermelho-SF
	                    else if(level == 21) { PlayerInfo[para1][pSkin] = 47; }//PpCC
	                    else if(level == 22) { PlayerInfo[para1][pSkin] = 117; }//Triads
	                    else if(level == 23) { PlayerInfo[para1][pSkin] = 111; }//Guerrilheiros Israelitas
	                    else if(level == 24) { PlayerInfo[para1][pSkin] = 47; }//PpCC-SF
	                    else if(level == 25) { PlayerInfo[para1][pSkin] = 115; }//
	                    else if(level == 26) { PlayerInfo[para1][pSkin] = 104; }//
	                    else if(level == 27) { PlayerInfo[para1][pSkin] = 266; }//
	                    else if(level == 28) { PlayerInfo[para1][pSkin] = 108; }//
	                    else if(level == 29) { PlayerInfo[para1][pSkin] = 270; }//
	                    else if(level == 30) { PlayerInfo[para1][pSkin] = 61; }//
	                    else if(level == 31) { PlayerInfo[para1][pSkin] = 70; }//
	                    else if(level == 33) { PlayerInfo[para1][pSkin] = 166; }//Policia rodoviaria
	                    else if(level == 32) { PlayerInfo[para1][pSkin] = 227; }//
	                    else if(level == 34) { PlayerInfo[para1][pSkin] = 57; }//
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
						//TempoDeDar[para1] = SetTimerEx("BOSTA", 10000, 0, "i", para1);
						XXAirBreak[para1] += 3;
						format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", PlayerName(playerid));
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
	                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                    MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}//not connected
			}
		}
		return true;
	}
	
    if(strcmp(cmd, "/desbugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] == 0)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você não é um lider");
	            return true;
			}
			new level = PlayerInfo[playerid][pLider];
			if(level == 1) { PlayerInfo[playerid][pSkin] = 266; }//Policia Militar
			else if(level == 2)	{ PlayerInfo[playerid][pSkin] = 228; }//Rotam
			else if(level == 3) { PlayerInfo[playerid][pSkin] = 287; }//Exército
			else if(level == 4) { PlayerInfo[playerid][pSkin] = 70; }//Fire/Ambulance
			else if(level == 5) { PlayerInfo[playerid][pSkin] = 115; }//Varrios Los Aztecas
			else if(level == 6) { PlayerInfo[playerid][pSkin] = 249; }//GIA
			else if(level == 7) { PlayerInfo[playerid][pSkin] = 147; }//Prefeito
			else if(level == 8) { PlayerInfo[playerid][pSkin] = 294; }//Hitmans
			else if(level == 9) { PlayerInfo[playerid][pSkin] = 227; }//Repórters
			else if(level == 10) { PlayerInfo[playerid][pSkin] = 61; }//Taxistas
			else if(level == 11) { PlayerInfo[playerid][pSkin] = 295; }//Policia Federal
			else if(level == 12) { PlayerInfo[playerid][pSkin] = 113; }//Máfia Cosa Nostra
			else if(level == 13) { PlayerInfo[playerid][pSkin] = 120; }//Máfia Yakuza
			else if(level == 14) { PlayerInfo[playerid][pSkin] = 270; }//Groove
	     	else if(level == 15) { PlayerInfo[playerid][pSkin] = 123; }//ALQaeda
			else if(level == 16) { PlayerInfo[playerid][pSkin] = 228; }//Rotam-SF
	     	else if(level == 17) { PlayerInfo[playerid][pSkin] = 104; }//Ballas
	        else if(level == 18) { PlayerInfo[playerid][pSkin] = 108; }//Vagos
	        else if(level == 19) { PlayerInfo[playerid][pSkin] = 170; }//CV
	        else if(level == 20) { PlayerInfo[playerid][pSkin] = 170; }//Comando Vermelho-SF
	        else if(level == 21) { PlayerInfo[playerid][pSkin] = 47; }//PpCC
	        else if(level == 22) { PlayerInfo[playerid][pSkin] = 117; }//Triads
	        else if(level == 23) { PlayerInfo[playerid][pSkin] = 111; }//Guerrilheiros Israelitas
	        else if(level == 24) { PlayerInfo[playerid][pSkin] = 47; }//PpCC-SF
	        else if(level == 25) { PlayerInfo[playerid][pSkin] = 115; }//
	        else if(level == 26) { PlayerInfo[playerid][pSkin] = 104; }//
	        else if(level == 27) { PlayerInfo[playerid][pSkin] = 266; }//
	        else if(level == 28) { PlayerInfo[playerid][pSkin] = 108; }//
	        else if(level == 29) { PlayerInfo[playerid][pSkin] = 270; }//
	        else if(level == 30) { PlayerInfo[playerid][pSkin] = 61; }//
	        else if(level == 31) { PlayerInfo[playerid][pSkin] = 70; }//
	        else if(level == 33) { PlayerInfo[playerid][pSkin] = 166; }//Policia rodoviaria
	        else if(level == 32) { PlayerInfo[playerid][pSkin] = 227; }//
	        else if(level == 34) { PlayerInfo[playerid][pSkin] = 57; }//
	        SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	        SendClientMessage(playerid, GetPlayerColor(playerid), "Desbugado com sucesso");
	        SetTimerEx("desbugarse", 1000, 0, "i", playerid);
		}
		return true;
	}

	if(strcmp(cmd, "/desbugarplayer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbugarplayer [playerid]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 1);
						MedicBill[playa] = 0;
			            NeedMedicTime[playa] = 0;
			            SetCameraBehindPlayer(playa);
						TempoDeDar[playa] = SetTimerEx("BOSTA", 10000, 0, "i", playa);
						XXAirBreak[playa] += 1;
		                sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                    	interior[playa] = GetPlayerInterior(playa);
                    	skinneg[playa] = GetPlayerSkin(playa);
                    	GetPlayerArmour(playa,APP[playa]);
                     	GetPlayerHealth(playa,PlayerHPP[playa]);
                     	GetPlayerFacingAngle(playa,FaceAngle[playa]);
                      	GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                     	GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                     	GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                    	GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                     	GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                     	GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                    	GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                    	GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                     	GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                    	GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                     	GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                    	GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                      	GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                      	SpawnPlayer(playa);
                      	TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
	                    if(IsPlayerInAnyVehicle(playa))
                     	{
                    		vehicledd[playa] = 1;
                     		VehicleIDD[playa] = GetPlayerVehicleID(playa);
                     	}
						format(string, sizeof(string), "AdmCmd: %s Desbugou %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s Foi desbugado por %s",giveplayer ,PlayerName(playerid));
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/darlider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darlider [id] [Numero(1-34)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Para tirar o lider de uma organização você deve usar /limparlider");
				return true;
			}
			if(level > 34 || level < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Organizações de 1 a 34");
				return true;
			}
			if(level == 12 || level == 13)
			{
				SendClientMessage(playerid, COLOR_GREY, "Organizaçao desativada no momento!");
				return true;
			}
			GetPlayerName(playerid, sendername, 256);
			if (PlayerInfo[playerid][pAdmin] >= MASTER)
 			{
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(strcmp(InfoOrg[level][Lider],"Ninguem",true)==0)
						{
							ConviteInfoOrg(PlayerName(para1), level, 6);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "Já tem líder nessa ORG, use /limparlider antes de colocar outro lider");
						    return true;
						}
						if(level == 1) { PlayerInfo[para1][pSkin] = 266; }//Policia Militar
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 228; }//Rotam
						else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
						else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//GIA
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
						else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//Policia Federal
						else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Cosa Nostra
						else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Yakuza
						else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//ALQaeda
						else if(level == 16) { PlayerInfo[para1][pSkin] = 228; }//Rotam-SF
                        else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 170; }//CV
                        else if(level == 20) { PlayerInfo[para1][pSkin] = 170; }//Comando Vermelho-SF
                        else if(level == 21) { PlayerInfo[para1][pSkin] = 47; }//PpCC
                        else if(level == 22) { PlayerInfo[para1][pSkin] = 117; }//Triads
                        else if(level == 23) { PlayerInfo[para1][pSkin] = 111; }//Guerrilheiros Israelitas
                        else if(level == 24) { PlayerInfo[para1][pSkin] = 47; }//PpCC-SF
                        else if(level == 25) { PlayerInfo[para1][pSkin] = 115; }//Guerrilheiros Israeli
                        else if(level == 26) { PlayerInfo[para1][pSkin] = 104; }//Guerrilheiros Israeli
                        else if(level == 27) { PlayerInfo[para1][pSkin] = 266; }//Guerrilheiros Israeli
                        else if(level == 28) { PlayerInfo[para1][pSkin] = 108; }//Guerrilheiros Israeli
                        else if(level == 29) { PlayerInfo[para1][pSkin] = 270; }//Guerrilheiros Israeli
                        else if(level == 30) { PlayerInfo[para1][pSkin] = 61; }//Guerrilheiros Israeli
                        else if(level == 31) { PlayerInfo[para1][pSkin] = 70; }//Guerrilheiros Israeli
                        else if(level == 33) { PlayerInfo[para1][pSkin] = 166; }//Policia rodoviaria
                        else if(level == 32) { PlayerInfo[para1][pSkin] = 227; }//Guerrilheiros Israeli
						else if(level == 34) { PlayerInfo[para1][pSkin] = 57; }//
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
                            format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);

						}
						else
						{
							format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "ADMIN: %s deu líder da org:[%s] para %s.", sendername, NomeORG(level), giveplayer);
                        LideresLog(string);
						//TempoDeDar[para1] = SetTimerEx("BOSTA", 10000, 0, "i", para1);
						XXAirBreak[para1] += 3;
                        MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /forceskin [id]");
				return true;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMembro] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Este jogador nao esta em um Emprego / Familia");
				            return true;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Você foi forçado a mudar o skin pelo Admin Gasparzinho.");
						}
						else
						{
							format(string, sizeof(string), "* Você foi forçado a mudar o skin pelo Admin %s.", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "* Você forçou o(a) %s Para muda seu skin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMembro] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMembro] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMembro] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMembro] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMembro] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMembro] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMembro] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMembro] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else if(PlayerInfo[para1][pMembro] == 22) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 118; }
				        else { return true; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						XXAirBreak[para1] += 2;SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						Controle(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMembro];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pSkin] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}

//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/settime", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /settime [id] [team 1(civ) - 2(cop)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						//TempoDeDar[para1] = SetTimerEx("BOSTA", 10000, 0, "i", para1);
						XXAirBreak[para1] += 3;
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						printf("AdmCmd: %s foi trocado %s pro time %d.", sendername, giveplayer, level);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "   Você foi setado a equipe %d por %s", level, PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							format(string, sizeof(string), "   Você foi setado a equipe %d por %s", level, PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "   Você ligou %s a sua equipe %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}

//Pedir Contas
	if (strcmp(cmd, "/pedircontas", true) == 0)
	{
 		if(PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pMembro] >= 1)
		{
    		DemitirInfoOrg(PlayerName(playerid));
			gTeam[playerid] = 3;
			PlayerInfo[playerid][pTeam] = 3;
			PlayerInfo[playerid][pMembro] = 0;
			PlayerInfo[playerid][pLider] = 0;
			PlayerInfo[playerid][pCargo] = 0;
			PlayerInfo[playerid][pSpawn] = 0;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        	SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
			MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
			return true;
		}
		else
		{
			SendClientMessage(playerid,COLOR_GREY," Você não faz parte de nemhuma organização!");
			return true;
		}
	}
	if (strcmp(cmd, "/contaslider", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Você não é líder de nenhuma organização!");
	   		return true;
    	}
		format(string, sizeof(string), "PLAYER: %s pediu contas de lider da org:[%s]",PlayerName(playerid), NomeORG(GetPlayerOrg(playerid)));
		LideresLog(string);
    	DemitirInfoOrg(PlayerName(playerid));
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		PlayerInfo[playerid][pSpawn] = 0;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
		return true;
	}
//Membros
 	if(strcmp(cmd,"/Membros",true)==0)
	{
     	if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			new colormembro = GetPlayerColor(playerid);
			if (PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
			else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Voce não é Membro de uma Equipe!");
				return true;
			}
	    	SendClientMessage(playerid,colormembro,"Membros Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(string,sizeof(string),"");
					if (PlayerInfo[i][pLider] == teamnumber) format(string,sizeof(string),"%s: LIDER",sendername);
					else if (PlayerInfo[i][pMembro] == teamnumber) format(string,sizeof(string),"%s: Cargo: %d.",sendername,PlayerInfo[i][pCargo]);
					if (strlen(string) > 1) SendClientMessage(playerid,0xF8FAFFAA,string);
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/avh", true) == 0 || strcmp(cmd, "/avisarh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHelper] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Helper !");
			    return true;
			}
   			if(helpertrampando[playerid] < 1 && PlayerInfo[playerid][pHelper] != 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está em modo de serviço ! (/helpajuda)");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/avh) [texto]");
				return true;
			}

			SendClientMessageToAll(COLOR_WHITE, "|____________ Aviso dos Helpers ____________|");
			if(helpertrampando[playerid] == 1 && helperhide[playerid] == 1)
			{
				format(string, sizeof(string), "Helper %s: %s", sendername, result);
				SendClientMessageToAll(COR_HELPER, string);
			}
			else
			{
				format(string, sizeof(string), "Helper %s: %s", sendername, result);
				SendClientMessageToAll(COR_HELPER, string);
			}
		}
		return true;
	}

	if(strcmp(cmd, "/poema", true) == 0 || strcmp(cmd, "/novopoema", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 12)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, " Você não é um poeta");
				return 1;
			}
			if(PoetaGay[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, " Você deverá esperar 5 minutos para escrever outro poema");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /poema [Seu Poema]");
				return true;
			}
			SendClientMessageToAll(COLOR_WHITE, "«|____________ Poema ____________|»");
			if(PlayerInfo[playerid][pEmprego] == 12)
			{
				format(string, sizeof(string), "Poeta %s escreve: %s", sendername, result);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " Você recebeu R$1500 por escrever um poema, espere 5 minutos para escrever outro");
				GivePlayerMoney(playerid,1500);
				TempoPoema[playerid] = SetTimerEx("NovoPoema", 300000, 0, "i", playerid);
				PoetaGay[playerid] = 1;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/avisar", true) == 0 || strcmp(cmd, "/av", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Admin!");
			    return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/av)isar [texto]");
				return true;
			}

			SendClientMessageToAll( COLOR_WHITE,"|___________ Aviso da Administração ___________|");
		    if(PlayerInfo[playerid][pSex] == 1)
	    	{
				format(string, sizeof(string), "Admin %s: %s", sendername, result);
				SendClientMessageToAll(0xF68400AA, string);
			}
    		if(PlayerInfo[playerid][pSex] == 2)
		    {
				format(string, sizeof(string), "Administradora %s: %s", sendername, result);
				SendClientMessageToAll(0xF68400AA, string);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/lchat", true) == 0 || strcmp(cmd, "/limparchat", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 1)
			{
		        SendClientMessage(playerid, COLOR_GREY, "Você não é um admin!");
		    	return true;
		    }
      		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
				return true;
			}
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) ClearChatbox(i, 100);
			}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, sizeof(string), "Chat Limpo com sucesso!");
			}
			else
			 format(string, sizeof(string), "Chat Limpo com sucesso! ", sendername);
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		return true;
	}
//----------------------------------[Wisper]-----------------------------------------------

	if(strcmp(cmd, "/esconderijo", true) == 0 || strcmp(cmd, "/irin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				XXAirBreak[playerid] += 3;
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/onibus", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{

				XXAirBreak[playerid] += 3;
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1759.2711,-1849.1093,13.5781); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1759.2711,-1849.1093,13.5781);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/entrarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			XXAirBreak[playerid] += 3;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /entrarcarro [carro id]");
				return true;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/ircarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			XXAirBreak[playerid] += 3;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /ircarro [carro id]");
				return true;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   Local Marcado Para o Teleporte");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/irmark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				if (GetPlayerState(playerid) == 2)
				{

					XXAirBreak[playerid] += 3;
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{

					XXAirBreak[playerid] += 3;
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SetPlayerVirtualWorld(playerid, world);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para onde você marcou!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/irstad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			XXAirBreak[playerid] += 3;
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
					LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aviao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

			XXAirBreak[playerid] += 3;
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/ir", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ir [id/nick]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			new string2[256];
			new giveplayername[MAX_PLAYER_NAME];
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] > 49)
					{
       				 	if(WatchingTV[plo] == 1)
	    			 	{
	    					SendClientMessage(playerid, COLOR_GREY, "Este administrador está em modo de /tv e você não pode ir até ele");
	    					return 1;
	    				}
						if(PlayerInfo[playerid][pAdmin] >= 1)
 						{
							if(Spectate[playerid] != 255)
							{
								Spectate[playerid] = 256;
							}
							GetPlayerPos(plo, plocx, plocy, plocz);
							if(PlayerInfo[plo][pInt] > 0)
							{

								XXAirBreak[playerid] += 3;
								SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
								PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
								PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
								HouseEntered[playerid] = HouseEntered[plo];
							}
							if(PlayerInfo[playerid][pInt] == 0)
							{
								SetPlayerInterior(playerid,0);
								SetPlayerVirtualWorld(playerid,0);
							}
							if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
							{
								SetPlayerInterior(playerid,1);
								PlayerInfo[playerid][pInt] = 1;
							}
							if (GetPlayerState(playerid) == 2)
							{
								XXAirBreak[playerid] += 3;
						  		SetPlayerInterior(playerid,GetPlayerInterior(plo));
						   		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
								TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							}
							else
							{

								XXAirBreak[playerid] += 3;
						   		SetPlayerInterior(playerid,GetPlayerInterior(plo));
				    	    	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
								XXAirBreak[playerid] += 3;SetPlayerPos(playerid,plocx,plocy+2, plocz);
							}
							if(PlayerInfo[playerid][pAdmin] >= 1)
							{
								GetPlayerName(playerid, playername, sizeof(playername));
								GetPlayerName(plo, giveplayername, sizeof(giveplayername));
					   			format(string, sizeof(string), "*Admin %s foi ate %s", playername,giveplayername);
			           			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    		format(string2, sizeof(string2), "*Admin %s veio ate %s", playername,giveplayername);
			            		ProxDetector(30.0, plo, string2, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            		return true;
   							}
						}
						if (PlayerInfo[playerid][pHelper] >= 50)
						{
							if(helpertrampando[playerid] != 1)
	   						{
					       		SendClientMessage(playerid, COLOR_GRAD1, " Você não esta em modo ajuda!");
					       		return 1;
							}
							if(Spectate[playerid] != 255)
							{
								Spectate[playerid] = 256;
							}
							GetPlayerPos(plo, plocx, plocy, plocz);
							if(PlayerInfo[plo][pInt] > 0)
							{

								XXAirBreak[playerid] += 3;
								SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
								PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
								PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
								HouseEntered[playerid] = HouseEntered[plo];
							}
							if(PlayerInfo[playerid][pInt] == 0)
							{
								SetPlayerInterior(playerid,0);
								SetPlayerVirtualWorld(playerid,0);
							}
							if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0)
							{
								SetPlayerInterior(playerid,1);
								PlayerInfo[playerid][pInt] = 1;
							}
							if (GetPlayerState(playerid) == 2)
							{

								XXAirBreak[playerid] += 3;
						 	  	SetPlayerInterior(playerid,GetPlayerInterior(plo));
						   		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
								TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							}
							else
							{

								XXAirBreak[playerid] += 3;
						   		SetPlayerInterior(playerid,GetPlayerInterior(plo));
						   		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
								XXAirBreak[playerid] += 3;SetPlayerPos(playerid,plocx,plocy+2, plocz);
							}
							if(PlayerInfo[playerid][pHelper] >= 50 && helpertrampando[playerid] == 1)
							{
								GetPlayerName(playerid, playername, sizeof(playername));
								GetPlayerName(plo, giveplayername, sizeof(giveplayername));
					    		format(string, sizeof(string), "*Helper %s foi ate %s", playername,giveplayername);
       			 				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    		format(string2, sizeof(string2), "*Helper %s veio ate %s", playername,giveplayername);
			            		ProxDetector(30.0, plo, string2, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            		return true;
   							}
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não é um admin ou helper 50+");
					}
			  	}
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/ir2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ir [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{

						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							XXAirBreak[playerid] += 3;SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, world);
						SendClientMessage(playerid, 0x33FF00FF, "Você foi teleportado!");
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{}
						else { format(string, sizeof(string), "Admin %s foi Até %s.",playername,plname); }
						ProxDetector(30.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
						format(string, sizeof(string), "Admin %s veio Até %s.",playername,plname);
						ProxDetector(30.0, plo, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
			}
		}
		return true;
	}


	if(!strcmp("/oculos",cmd,true))
	{
	    new glasseid, skin, id;
		tmp = strtok(cmdtext, idx);
		skin = GetPlayerSkin(playerid);
		id = strval(tmp);
		if(!id || id > 33 || id < 0) return SendClientMessage(playerid, 0xFFFFFFAA, "USE: /oculos [1 - 33]");
		if(id > 30) goto PutPoliceGlasses;
		else
		{
		    id--;
		    glasseid =  CommonRed + id;
			SetPlayerHoldingObject(playerid, glasseid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5], 1.1, 1.1, 1.1);
			return 1;
		}
		PutPoliceGlasses:
		glasseid = CopGlassesBlack + (id - 31);
		SetPlayerHoldingObject(playerid, glasseid, 2, SkinOffSet[skin][0], floatadd(SkinOffSet[skin][1], 0.004500), SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
		return 1;
	}
	if(!strcmp("/tiraroculos",cmd,true) || !strcmp("/retiraroculos",cmd,true))
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Oculos retirados");
	    StopPlayerHoldingObject(playerid);
	    return 1;
	}

	if(!strcmp("/bone",cmd,true))
	{
		new skin;
		tmp = strtok(cmdtext, idx);
		new id = strval(tmp);
		new cap;
		new slot = GetEmptySlot(playerid);
		new count;
		if(!id || id > 9 || id < 0) return SendClientMessage(playerid, 0xFFFFFFAA, "USE: /bone [1-9]");
	    skin = GetPlayerSkin(playerid);
		switch(id)
		{
		    case 1:    cap = 18926;
			case 2..9: cap = 18926 + id;
		}
		do
		{
		    if(skin == invalidskins[count]) return SendClientMessage(playerid, 0xFFFFFFAA, "Erro: Sua skin não suporta o uso de boné.");
		    count++;
		}
		while(count < sizeof invalidskins);
		if(skin < 0) skin = 0;
		if(slot == -1) return SendClientMessage(playerid, 0xFFFFFFAA, "Erro: Voce esta usando muitos objetos, não pode usar mais.");
	    SetPlayerAttachedObjectEx(playerid, slot, cap, 2, SkinOffSet2[skin][0], SkinOffSet2[skin][1], SkinOffSet2[skin][2], SkinOffSet2[skin][3], SkinOffSet2[skin][4], SkinOffSet2[skin][5]);
		return 1;
	}
	
	
	if(strcmp(cmd, "/tirarbone", true) == 0 || strcmp(cmd, "/retirarbone", true) == 0)
	{
		if(HaveCap(playerid))
		{
			RemovePlayerAttachedObject(playerid, pObject[playerid][oslot]);
			pObject[playerid][oslot] = -1;
			pObject[playerid][slotreserved] = false;
			return 1;
		}
	    return SendClientMessage(playerid, 0xFFFFFFAA, "Erro: Não est usando boné.");
	}
	
	if (strcmp ( cmd,"/natal", true)==0 )
    {
        if(Natal[playerid] == 0)
        {
            Natal[playerid] = 1;
            ShowPlayerDialog(playerid,9999, DIALOG_STYLE_MSGBOX, "Feliz Natal","Agora voce Esta usando um Chapel de natal\n Avise seus amigo sobre o /natal", "Fechar", "");
        	SetPlayerAttachedObject(playerid, 8, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.5, 1.5, 1.5);
        	EditAttachedObject(playerid, 8);
			return 1;
        }
        else if(Natal[playerid] == 1)
        {
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 8))
	        {
	            Natal[playerid] = 0;
	            RemovePlayerAttachedObject(playerid, 8);
	            SendClientMessage(playerid, 0x00FF00FF, "Voce retirou o Gorro do Papai Noel =/.");
	            return 1;
	        }
        }
    }
	if(strcmp(cmd, "/criarchave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /criarchave [veiculo id]");
					return 1;
				}
				new car = strval(tmp);
				HireCar[playerid] = car;
				format(string, sizeof(string), "Chave criada agora voce pode trancar o veiculo %d.",car);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /trancar");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/orelhagrande", true) == 0 && PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
			    return 1;
			}
			if (!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Suas orelhas cresceram");
			}
			else if (BigEar[playerid])
			{
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_GRAD2, "   Suas orelhas encolheram");
			}
		}
		return 1;
	}
	

	if(strcmp(cmd, "/trazercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new carrousado = 0;
			new carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
            if(PlayerInfo[playerid][pPHousekey] == 500)
			{
				GameTextForPlayer(playerid, "~r~Voce nao tem casa", 5000, 1);
			    return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
					if(GetPlayerVehicleID(i) == carid) carrousado = 1;
				}
			}
			if(carrousado == 0)
			{
				GameTextForPlayer(playerid, "~w~Carro~n~~y~Trazido em casa~n~~r~$-1000", 5000, 1);
				GivePlayerMoneyEx(playerid,-1000);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetVehiclePos(carid, HouseCarSpawns[PlayerInfo[playerid][pPHousekey]][0], HouseCarSpawns[PlayerInfo[playerid][pPHousekey]][1], HouseCarSpawns[PlayerInfo[playerid][pPHousekey]][2]);
				//SetVehicleToRespawn(carid);
				SBizzInfo[24][sbTill] += 1000;
	   			ExtortionSBiz(24, 500);
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Carro esta em uso", 5000, 1);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/skydive2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /skydive2 [ID/Nome 1] [ID/Nome 2] [ID/Nome 3] [ID/Nome 4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(IsPlayerConnected(para1))
				{
					GivePlayerWeaponBPH(para1, 46, 1);
					XXAirBreak[para1] += 2;SetPlayerPos(para1,1536.0, -1360.0, 1350.0);
					SetPlayerInterior(para1,0);
					PlayerInfo[para1][pInt] = 0;
					XXAirBreak[para1] += 3;
					SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");
				}
				if((IsPlayerConnected(para2)) && (para2>0))
				{
					GivePlayerWeaponBPH(para2, 46, 1);
					SetPlayerPos(para2,1536.0, -1345.0, 1350.0);
					SetPlayerInterior(para2,0);
					PlayerInfo[para2][pInt] = 0;
					XXAirBreak[para2] += 3;
					SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");
				}
				if((IsPlayerConnected(para3)) && (para3>0))
				{
					GivePlayerWeaponBPH(para3, 46, 1);
					SetPlayerPos(para3,1552.0, -1345.0, 1350.0);
					SetPlayerInterior(para3,0);
					PlayerInfo[para3][pInt] = 0;
					XXAirBreak[para3] += 3;
					SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");
				}
				if((IsPlayerConnected(para4)) && (para4>0))
				{
					GivePlayerWeaponBPH(para4, 46, 1);
					SetPlayerPos(para4,1552.0, -1360.0, 1350.0);
					SetPlayerInterior(para4,0);
					PlayerInfo[para4][pInt] = 0;
					XXAirBreak[para4] += 3;
					SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/CriarGZ", true) == 0 || strcmp(cmd, "/CriarGangzone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new para2;
			new para3;
			new para4;
			new para5;
			tmp = strtok(cmdtext, idx);
 			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criargz [tamanho OESTE] [tamanho SUL] [tamanho LESTE] [tamanho NORTE]");
				return 1;
			}
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
  			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criargz [tamanho OESTE] [tamanho SUL] [tamanho LESTE] [tamanho NORTE]");
				return 1;
			}
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
  			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criargz [tamanho OESTE] [tamanho SUL] [tamanho LESTE] [tamanho NORTE]");
				return 1;
			}
			para4 = strval(tmp);
 			tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criargz [tamanho OESTE] [tamanho SUL] [tamanho LESTE] [tamanho NORTE]");
				return 1;
			}
			para5 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3001)
			{
				new Float:x,Float:y,Float:z;
    			GetPlayerPos(playerid, x, y, z);
			    GangZoneDestroy(GZTeste);
				GZTeste = GangZoneCreate(x-para2,y-para3,x+para4,y+para5);
				GangZoneShowForPlayer(playerid, GZTeste, COLOR_LIGHTBLUE);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "GangZone criada com sucesso, USE: /salvargz para salva-la.");
				PosXGZ = x-para2;
				PosYGZ = y-para3;
				PosX2GZ = x+para4;
				PosY2GZ = y+para5;
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/salvargz", true) == 0 || strcmp(cmd, "/salvargangzone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new nome[128];
	    	nome = strtok(cmdtext, idx);
			if(!strlen(nome))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /salvargz [NOME]");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 3001)
			{
				if(IsPlayerConnected(playerid))
				{
				    new pFILE[256];
					new File:fl;
					fl = fopen("GZCreate.pwn",io_append);
					format(pFILE, 256, "//================[NOVA GZ]=================\n    new %s;\n    %s = GangZoneCreate(%0.4f,%0.4f,%0.4f,%0.4f);\n\n",
					nome,nome,PosXGZ,PosYGZ,PosX2GZ,PosY2GZ);
					fwrite(fl,pFILE);
					fclose(fl);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return 1;
	}


	//== sistema de calculadora '-' kkkk ==
	if(strcmp(cmd, "/MAIS", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /mais [Numero] + [Numero] [EX: /mais 25 29]");
				return 1;
			}
			new para1;
			new para2;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			SOMANDO[playerid] = para1;
			MENOS[playerid] = para2;
			VEZES[playerid] = SOMANDO[playerid]+MENOS[playerid];
			format(string, sizeof(string), "Resultado: %d + %d = %d", SOMANDO[playerid], MENOS[playerid], VEZES[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/menos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /menos [Numero] - [Numero] [EX: /menos 25 29]");
				return 1;
			}
			new para1;
			new para2;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			SOMANDO[playerid] = para1;
			MENOS[playerid] = para2;
			VEZES[playerid] = SOMANDO[playerid]-MENOS[playerid];
			format(string, sizeof(string), "Resultado: %d - %d = %d", SOMANDO[playerid], MENOS[playerid], VEZES[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/vezes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /vezes [Numero] X [Numero] [EX: /vezes 25 29]");
				return 1;
			}
			new para1;
			new para2;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			SOMANDO[playerid] = para1;
			MENOS[playerid] = para2;
			VEZES[playerid] = SOMANDO[playerid] * MENOS[playerid];
			format(string, sizeof(string), "Resultado: %d x %d = %d", SOMANDO[playerid], MENOS[playerid], VEZES[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/dividir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dividir [Numero] dividido [Numero] [EX: /dividir 25 29]");
				return 1;
			}
			new para1;
			new para2;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			SOMANDO[playerid] = para1;
			MENOS[playerid] = para2;
			VEZES[playerid] = SOMANDO[playerid] / MENOS[playerid];
			format(string, sizeof(string), "Resultado: %d dividido por %d = %d", SOMANDO[playerid], MENOS[playerid], VEZES[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/fixarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new carrogay = 0;
			new carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
            if(PlayerInfo[playerid][pPHousekey] == 500)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem casa");
			    return 1;
			}
			for(new i = 0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(GetPlayerVehicleID(i) == carid) carrogay = 1;
				}
			}
			if(carrogay == 0)
			{
				GameTextForPlayer(playerid, "~w~Carro da casa~n~~y~Fixado~n~~r~$-1000", 5000, 1);
				GivePlayerMoneyEx(playerid,-1000);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetVehicleToRespawn(carid);
				SBizzInfo[24][sbTill] += 1000;
	   			ExtortionSBiz(24, 500);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Carro esta em uso", 5000, 1);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/descerslideFAIL", true) == 0)
 	{
		if(IsPlayerInAnyVehicle(playerid))
   		{
   			Sliding[playerid] = 1;
   			RemovePlayerFromVehicle(playerid);
   			TogglePlayerControllable(playerid, 0);
   			SetTimerEx("Slide", 1000, 0, "i", playerid);
   			SendClientMessage(playerid, COLOR_WHITE, "Descendo pela corda !");
   		}
   		SendClientMessage(playerid, COLOR_WHITE, "Você não esta no Heli a polícia !");
   		return 1;
	}
	
    if(strcmp(cmd, "/pararslideFAIL", true) == 0)
    {
   		if(Sliding[playerid] == 1)
   		{
   			Sliding[playerid] = 0;
   			TogglePlayerControllable(playerid, 1);
   			SendClientMessage(playerid, COLOR_WHITE, "A corda foi parada !");
   		}
   		return 1;
	}
	
	if(strcmp(cmd, "/capacete", true) == 0)
	{
		if(IsAMoto(GetPlayerVehicleID(playerid)))
	    {
			switch(GetPlayerSkin(playerid))
			{
		        #define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, OBJCAPACETE, 18976, 2, (%0), (%1), (%2), (%3), (%4), (%5), 1.2, 1.2, 1.2);
				case 0, 65, 74, 149, 208, 273:  SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
				case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
				case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
				case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
				case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
				case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			}
			return true;
		}
		else
		{
		    RemovePlayerAttachedObject(playerid, OBJCAPACETE);
			return 1;
		}
	}
	
	if(strcmp(cmd, "/cascudo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /cascudo [id]");
				return true;
			}
			new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerHealth(playa, 200);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+15);
						GetPlayerVelocity(playa, slx, sly, slz);
						SetPlayerVelocity(playa, slx=0, sly=0, slz-0.5);
						PlayerPlaySound(playa,1130,0.0,0.0,0.0);
						if(admtrampando[playa] == 1)
	  					{
	  					    SetPlayerHealth(playa, 99999);
						}
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "AdmCmd: %s ganhou um cascudo dado por: %s",giveplayer ,PlayerName(playerid));
						}
     					else
     					{
							format(string, sizeof(string), "AdmCmd: %s ganhou um cascudo dado por: %s",giveplayer ,PlayerName(playerid));
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
						comandosadminlog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/destruirid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPH(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
				    if(result < CAR_AMOUNT)
				    {
				    	SendClientMessage(playerid, COLOR_GREY, "Você só pode destruir veículos criados");
				    	return true;
				    }
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    Delete3DTextLabel(TextoCarros[result]);
					DestroyVehicle(result);
				    format(string, sizeof(string), "Você destruiu o veículo ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
				    CreatedCar --;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/respawnid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return true;
			}
			new counter = 0;
			new result;
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPH(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você deu respawn no carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/respawn", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return true;
			}
			new Float:pX, Float:pY, Float:pZ;
			new Float:cX, Float:cY, Float:cZ;
			GetPlayerPos(playerid, pX, pY, pZ);
			for(new i = 0; i < CAR_AMOUNT; i++)
			{
				GetVehiclePos(i, cX, cY, cZ);
				if (PlayerToPoint(8, playerid,cX, cY, cZ))
				{
				    SetVehicleToRespawn(i);
				}
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/abastecerid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPH(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(string, sizeof(string), "Você abasteceu o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi abastecido Por: Gasparzinho", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi abastecido Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/repararid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPH(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi reparado Por: Gasparzinho", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi reparado Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/respawncarros", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
         	if (PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, " Você não está autorizado a usar este comando !");
			    return true;
			}
			new bool:unWanted[CAR_AMOUNT];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unWanted[GetPlayerVehicleID(player)]=true; }
     		}
     		for(new i; i != CAR_AMOUNT; i++)
			{
				if(!unWanted[i])	SetVehicleToRespawn(i);
			}
			GetPlayerName(playerid, playername, sizeof(playername));
			format(string, sizeof(string), "AdmCmd: Respawn dado com sucesso por %s",playername);
			ABroadCast(COLOR_LIGHTRED,string,1);
			format(string, sizeof(string), "Admin %s deu respawn nos carros",playername);
			comandosadminlog(string);
		}
		return true;
	}

	if(strcmp(cmd, "/explodir", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /explodir [playerid]");
				return 1;
			}
			new Jogador;
			Jogador = strval(tmp);
			new Float:burnx, Float:burny, Float:burnz;
			GetPlayerPos(Jogador,burnx, burny, burnz);
			CreateExplosion(burnx, burny , burnz + 3, 1, 3);
			GetPlayerName(Jogador, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s explodiu %s.",PlayerName(playerid), PlayerName(Jogador));
			ABroadCast(COLOR_LIGHTRED,string,1);
			comandosadminlog(string);
		}
		else
		{
	  		SendClientMessage(playerid,COLOR_GRAD5,"Você não tem permissão para usar esse comando!");
	 	}
		return 1;
	}


	if(strcmp(cmd, "/trazer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazer [id/nick]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			new string2[128];
			new giveplayername[MAX_PLAYER_NAME];
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
        		if(WatchingTV[plo] == 1)
	   	 		{
	    			SendClientMessage(playerid, COLOR_GREY, "Este administrador está em modo de /tv e você não pode traze-lo até você!");
	    			return 1;
	    		}
        		if(PlayerInfo[plo][pJailed] >= 1)
	    		{
	    			SendClientMessage(playerid, COLOR_GREY, " Este jogador está preso você não pode puxa-lo");
	    			return 1;
	    		}
	    		if(plo != INVALID_PLAYER_ID)
		    	{
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
		         			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
  			      			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
	  		  				SetPlayerInterior(plo,GetPlayerInterior(playerid));
		   	 				SetPlayerVirtualWorld(plo,GetPlayerVirtualWorld(playerid));
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
			      			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
					 		SetPlayerInterior(plo,GetPlayerInterior(playerid));
				   			SetPlayerVirtualWorld(plo,GetPlayerVirtualWorld(playerid));
							XXAirBreak[plo] += 2;SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						GetPlayerName(playerid, playername, sizeof(playername));
						GetPlayerName(plo, giveplayername, sizeof(giveplayername));
				 		format(string, sizeof(string), "*Admin %s levou %s", playername,giveplayername);
			        	ProxDetector(30.0, plo, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				  		format(string2, sizeof(string2), "*Admin %s trouxe %s", playername,giveplayername);
     		 			ProxDetector(30.0, playerid, string2, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d não é um jogador ativo.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/trazerx1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazerx1 [id/nick]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			new string2[256];
			new giveplayername[MAX_PLAYER_NAME];
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
        		if(WatchingTV[plo] == 1)
	   	 		{
	    			SendClientMessage(playerid, COLOR_GREY, "Este administrador está em modo de /tv e você não pode traze-lo até você!");
	    			return 1;
	    		}
        		if(PlayerInfo[plo][pJailed] >= 1)
	    		{
	    			SendClientMessage(playerid, COLOR_GREY, " Este jogador está preso você não pode puxa-lo");
	    			return 1;
	    		}
	    		if(plo != INVALID_PLAYER_ID)
		    	{
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
		         			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
  			      			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
	  		  				SetPlayerInterior(plo,GetPlayerInterior(playerid));
		   	 				SetPlayerVirtualWorld(plo,GetPlayerVirtualWorld(playerid));
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							ResetPlayerWeaponsBPH(plo);
							GivePlayerWeaponBPH(plo, 24, 999);
							GivePlayerWeaponBPH(plo, 25, 999);
							SetPlayerHealth(plo, 100);
							SetPlayerArmour(plo, 100);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
			      			//TempoDeDar[plo] = SetTimerEx("BOSTA", 7000, 0, "i", plo);
							XXAirBreak[plo] += 3;
					 		SetPlayerInterior(plo,GetPlayerInterior(playerid));
				   			SetPlayerVirtualWorld(plo,GetPlayerVirtualWorld(playerid));
							XXAirBreak[plo] += 2;SetPlayerPos(plo,plocx,plocy+2, plocz);
							ResetPlayerWeaponsBPH(plo);
							GivePlayerWeaponBPH(plo, 24, 999);
							GivePlayerWeaponBPH(plo, 25, 999);
							SetPlayerHealth(plo, 100);
							SetPlayerArmour(plo, 100);
						}
						GetPlayerName(playerid, playername, sizeof(playername));
						GetPlayerName(plo, giveplayername, sizeof(giveplayername));
				 		format(string, sizeof(string), "*Admin %s levou %s para o evento de x1.", playername,giveplayername);
			        	ProxDetector(30.0, plo, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				  		format(string2, sizeof(string2), "*Admin %s trouxe %s para o evento de x1.", playername,giveplayername);
     		 			ProxDetector(30.0, playerid, string2, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d não é um jogador ativo.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/trazerveiculo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazerveiculo [carro id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					//SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					//return true;
				}
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
				LinkVehicleToInterior(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/carroantigo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
          		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
		    	format(string, sizeof(string), "ID do último carro: %d",gLastCar[playerid]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
		    	return true;
		    }
		    else
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
	            return true;
	        }
	    }
	    return true;
	}
	if(strcmp(cmd, "/abastecercarros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
	            for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				format(string, sizeof(string), "Todos veículo foram reabastecidos por %s",sendername);
				ABroadCast(COLOR_GRAD1, string,1);
				comandosadminlog(string);
	        }
	        else
	        {
	           	SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
	            return true;
	        }
	    }
	    return true;
	}
//----------------------------------[Dar Arma]------------------------------------------------
	if(strcmp(cmd, "/dararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dararma [id] [arma id(ex. 24 = Eagle)] [munição]");
				return true;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararma [id] [arma id] [munição]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de munição é 1 e o máximo é 999!"); return true; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
	        			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GivePlayerWeaponBPH(playa, gun, ammo);
						format(string, sizeof(string), "Admin: %s deu arma (id: %d com %d balas) para %s", sendername, gun, ammo, giveplayer);
						comandosadminlog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return true;
	}


	if(strcmp(cmd, "/veh", true) == 0)
    {
		if(IsPlayerConnected(playerid))
     	{
	 		if (PlayerInfo[playerid][pAdmin] >= 1337)
	 		{
				if(CreatedCar >= 100)
	    		{
	    			SendClientMessage(playerid, COLOR_GRAD1, "Já criaram muitos carros, destrua alguns primeiro /destruirid");
	    			return true;
	    		}
	  			tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
	   			{
	    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
	    			return true;
	   			}
	   			new car;
	   			car = strval(tmp);
	   			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Modelo Do Carro Tem Que Ser Entre 411 e 600 !"); return true; }
	   			tmp = strtok(cmdtext, idx);
	   			if(!strlen(tmp))
	   			{
	    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
	    			return true;
	   			}
	   			new COLOR1;
	   			COLOR1 = strval(tmp);
	   			if(COLOR1 < 0 || COLOR1 > 236) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 126 !"); return true; }
	   			tmp = strtok(cmdtext, idx);
	   			if(!strlen(tmp))
	   			{
	    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
	    			return true;
	   			}
	   			new COLOR2;
	   			COLOR2 = strval(tmp);
	   			if(COLOR2 < 0 || COLOR2 > 236) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 126 !"); return true; }
	   			new Float:X,Float:Y,Float:Z;
	   			GetPlayerPos(playerid, X,Y,Z);
	   			new carid = CreateVehicle(car, X,Y+2,Z, 0.0, COLOR1, COLOR2, 60000);
				new mot, lu, alar, por, cap, porma, ob;
	        	//new carro = GetPlayerVehicleID(playerid);
	   			CreatedCars[CreatedCar] = carid;
	   			CreatedCar ++;
	   			GetVehicleParamsEx(carid, mot, lu, alar, por, cap, porma, ob);
	      		SetVehicleParamsEx(carid, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
	   			format(string, sizeof(string), "   Veiculo %d Criado.", carid);
	   			SendClientMessage(playerid, COLOR_GREY, string);
	   			format(string, sizeof(string), "%s criou um carro id: %d no servidor ",PlayerName(playerid), car);
	   			comandosadminlog(string);
	   			format(string, sizeof(string), "• Veiculo Criado •\n{00CC00}Por %s", PlayerName(playerid));
				TextoCarros[carid] = Create3DTextLabel(string,0xCF2727FF,0.000,0.000,0.000,10.0,0);
	      		Attach3DTextLabelToVehicle(TextoCarros[carid], carid, 0.0, 0.0, 0.1);
			}
  		}
  		return true;
 	}

	if(strcmp(cmd, "/tempo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			    return true;
			}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /tempo [tempo id]");
			    return true;
			}
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return true; }
			SetWeather(weather);
			format(string, sizeof(string), "%s setou o tempo %d", PlayerName(playerid), weather);
			comandosadminlog(string);

		}
		return true;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/setgrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setgrana [id] [grana]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= MASTER)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
						format(gstring, 128, "%s usou /setgrana em %s e setou %d", PlayerName(playerid), PlayerName(playa), money);
						comandosadminlog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//----------------------------------[GiveMoney]------------------------------------------------

	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setskin [playerid] [skin id]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "id desconhecido!");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSkin] = level;
						format(string, sizeof(string), "Sua skin foi trocada!", sendername,level);
						SendClientMessage(para1, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Você mudou a skin de %s para %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    format(string, sizeof(string), "%s setou a skin id: %d em %s", sendername, level, giveplayer);
						comandosadminlog(string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissão para usar esse comando!");
			}
		}
		return true;
	}
	
	
	if(strcmp(cmd, "/roubar", true) == 0)// totalmente livre pra qualquer um
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerToPoint(1.0,playerid, 354.9906,172.3177,1008.3794))
			{
			    if(JaEstaRoubando[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "Você ja está roubando!");
			        return true;
				}
			    if(storeexit[playerid] == 1717)// Pref LS (Commerce)
			    {
			    	if(TemGenteRoubandoLS == 1)
			    	{
			        	SendClientMessage(playerid, COLOR_GRAD1, "Alguem ja roubou este local recentemente");
			        	return true;
					}
            		SetTimer("RouboPrefLS", 400000, 0);
 				    SetPlayerPos(playerid, 354.9906,172.3177,1008.3794);
				    SetPlayerFacingAngle(playerid, 93.9411);
            		JaEstaRoubando[playerid] = 1;
            		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
            		SetTimerEx("AnimRoubo", 500, 0, "i", playerid);
        			temporoubo[playerid] = SetTimerEx("RouboPref", 60000, 0, "i", playerid);
        			TemGenteRoubandoLS = 1;
        			format(string, sizeof(string), "[ROUBO] %s (ID: %d) está tentando roubar o cofre da prefeitura de (Commerce - LS)!", PlayerName(playerid), playerid);
        			SendClientMessageToAll(COLOR_DBLUE, string);
        			SendClientMessage(playerid, COLOR_YELLOW, "Espere 1 minuto para roubar. USE: /parar para cancelar!");
        			SetPlayerCriminal(playerid,255,"tentativa de roubo");
        			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
        			return true;
				}
				if(storeexit[playerid] == 1718)//pref SF (Country Club)
				{
				   	if(TemGenteRoubandoSF == 1)
			    	{
			        	SendClientMessage(playerid, COLOR_GRAD1, "Alguem ja roubou este local recentemente");
			        	return true;
					}
					SetTimer("RouboPrefSF", 400000, 0);
 				    SetPlayerPos(playerid, 354.9906,172.3177,1008.3794);
				    SetPlayerFacingAngle(playerid, 93.9411);
            		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
            		SetTimerEx("AnimRoubo", 500, 0, "i", playerid);
        			temporoubo[playerid] = SetTimerEx("RouboPref", 60000, 0, "i", playerid);
        			TemGenteRoubandoSF = 1;
        			JaEstaRoubando[playerid] = 1;
         			format(string, sizeof(string), "[ROUBO] %s (ID: %d) está tentando roubar o cofre da prefeitura de (Country Club - SF)!", PlayerName(playerid), playerid);
        			SendClientMessageToAll(COLOR_DBLUE, string);
        			SendClientMessage(playerid, COLOR_YELLOW, "Espere 1 minuto para roubar. USE: /parar para cancelar!");
        			SetPlayerCriminal(playerid,255,"tentativa de roubo");
        			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
        			return true;
				}
				if(storeexit[playerid] == 1719)//pref SF (Downtown)
				{
				   	if(TemGenteRoubandoSF2 == 1)
			    	{
			        	SendClientMessage(playerid, COLOR_GRAD1, "Alguem ja roubou este local recentemente");
			        	return true;
					}
					SetTimer("RouboPrefSF2", 400000, 0);
 				    SetPlayerPos(playerid, 354.9906,172.3177,1008.3794);
				    SetPlayerFacingAngle(playerid, 93.9411);
            		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
            		SetTimerEx("AnimRoubo", 500, 0, "i", playerid);
        			temporoubo[playerid] = SetTimerEx("RouboPref", 60000, 0, "i", playerid);
        			TemGenteRoubandoSF2 = 1;
        			JaEstaRoubando[playerid] = 1;
         			format(string, sizeof(string), "[ROUBO] %s (ID: %d) está tentando roubar o cofre da prefeitura de (Downtown - SF)!", PlayerName(playerid), playerid);
        			SendClientMessageToAll(COLOR_DBLUE, string);
        			SendClientMessage(playerid, COLOR_YELLOW, "Espere 1 minuto para roubar. USE: /parar para cancelar!");
        			SetPlayerCriminal(playerid,255,"tentativa de roubo");
        			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
        			return true;
				}
				else// Pref LS (East Beach)
				{
				   	if(TemGenteRoubandoLS2 == 1)
			    	{
			        	SendClientMessage(playerid, COLOR_GRAD1, "Alguem ja roubou este local recentemente");
			        	return true;
					}
				    SetTimer("RouboPrefLS2", 400000, 0);
				    SetPlayerPos(playerid, 354.9906,172.3177,1008.3794);
				    SetPlayerFacingAngle(playerid, 93.9411);
            		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
            		SetTimerEx("AnimRoubo", 500, 0, "i", playerid);
        			temporoubo[playerid] = SetTimerEx("RouboPref", 60000, 0, "i", playerid);
        			TemGenteRoubandoLS2 = 1;
        			JaEstaRoubando[playerid] = 1;
           			format(string, sizeof(string), "[ROUBO] %s (ID: %d) está tentando roubar o cofre da prefeitura de (East Beach - LS)!", PlayerName(playerid), playerid);
        			SendClientMessageToAll(COLOR_DBLUE, string);
        			SendClientMessage(playerid, COLOR_YELLOW, "Espere 1 minuto para roubar. USE: /parar para cancelar!");
        			SetPlayerCriminal(playerid,255,"tentativa de roubo");
        			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
        			return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está perto suficiente do cofre da prefeitura!");
			    return true;
			}
		}
	}
	if(strcmp(cmd, "/assaltar", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /assaltar [id]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerInAnyVehicle(playerid))
			{
   					SendClientMessage(playerid, COLOR_GREY, "   Nao e possível utilizar esse comando dentro de um Veiculo!");
			        return 1;
			}
   			if(IsPlayerConnected(plo))
			{
   				if(AssalteiAlguem[playerid] >= 1)
   				{
				   	SendClientMessage(playerid, COLOR_GREY, "   Jogador ja assaltou alguem recentemente!");
				   	return 1;
				}
				if(ProxDetectorS(5.0, playerid, plo))
				{
    				if(IsPlayerInAnyVehicle(plo))
				    {
				        SendClientMessage(playerid, COLOR_GREY, " Voce não pode roubar alguem que esta dentro de um Veiculo.!");
				        return 1;
				    }
				    new strIng[128];
					new pname[24];
					new opname[24];
					GetPlayerName(plo, opname,  sizeof(giveplayer));
					GetPlayerName(playerid, pname, sizeof(sendername));
					new chance = random(10);
					if(chance <= 5)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce não teve sucesso em tentar Roubar, e sua vitima sabe disso, Rapido Fuja!");
					    format(strIng,sizeof(strIng),"{FC0015}[Aviso]  {FFFAFA}%d Acaba de tentar te roubar, rapido fuja e avise a policia");
					    SendClientMessage(plo, COLOR_RED, strIng);
					    SetPlayerCriminal(playerid,plo, "Tentativa de Assalto");
					    AssalteiAlguem[playerid] = 2;
						SetTimerEx("LiberarRoubo2",500000,0,"d",playerid);
						SendClientMessage(playerid, COLOR_GREY, "Voce tentou assaltar, agora tem que esperar para tentar novamente!");
					    return 1;
					}
					new mrand = random(GetPlayerMoneyEx(plo));
					if(GetPlayerMoney(plo) <=0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Esse jogador não tem dinheiro.");
				 	format(strIng, sizeof(strIng), "{FC0015}[Aviso] {FFFAFA}%s(%d) Te roubou {08C443}R$%d{FFFAFA}, Vá chame a policia!", pname, playerid, mrand);
					SendClientMessage(plo, COLOR_RED, strIng);
					format(strIng, sizeof(strIng), "{FC0015}[Aviso] {FFFAFA}Voce roubou {08C443}R$%d {FFFAFA}de %s, agora Fuja senão a policia vai te pegar!", mrand, PlayerName(plo));
					SendClientMessage(playerid, COLOR_RED, strIng);
					GivePlayerMoneyEx(plo,-mrand);
					GivePlayerMoneyEx(playerid,mrand);
					AssalteiAlguem[playerid] = 2;
					SetTimerEx("LiberarRoubo2",500000,0,"d",playerid);
					GameTextForPlayer(plo, "~y~Voce foi Assaltado!", 2500, 3);
					SetPlayerCriminal(playerid,plo, "Assalto");
     			}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Este player não está perto de você!");
				    return 1;
				}
			}
		}
		return 1;
	}//not connected
	
	if(strcmp(cmd, "/estuprar", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /estuprar [id]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nao e possível utilizar esse comando dentro de um Veiculo!");
    			return 1;
			}
   			if(IsPlayerConnected(plo))
			{
				if(ProxDetectorS(5.0, playerid, plo))
				{
				    if(EstupreiAlguem[playerid] >= 1)
   					{
				   		SendClientMessage(playerid, COLOR_GREY, "   Você já estuprou alguem recentemente!");
				   		return 1;
					}
				    if(helpertrampando[plo] == 1 || admtrampando[plo] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, " Voce não pode Estuprar um Admin ou Helper em modo trabalho");
				        return 1;
				    }
    				if(IsPlayerInAnyVehicle(plo))
				    {
				        SendClientMessage(playerid, COLOR_GREY, " Voce não pode Estuprar alguem que esta dentro de um Veiculo.!");
				        return 1;
				    }
				    new strIng[128];
					new pname[24];
					new opname[24];
					GetPlayerName(plo, opname,  sizeof(giveplayer));
					GetPlayerName(playerid, pname, sizeof(sendername));
					new chance = random(10);
					if(chance <= 7)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce não teve sucesso em tentar Estrupar, e sua vitima sabe disso, Rapido Fuja!");
					    format(strIng,sizeof(strIng),"{FC0015}[Aviso]  {FFFAFA}%d Acaba de tentar te Estuprar, rapido fuja e avise a policia");
					    SendClientMessage(plo, COLOR_LIGHTRED, strIng);
					    SetTimerEx("LiberarRoubo3",200000,0,"d",playerid);
					    EstupreiAlguem[playerid] = 2;
					    SetPlayerCriminal(playerid,plo, "Tentativa de Estupro");
					    return 1;
					}
				 	format(strIng, sizeof(strIng), "{FC0015}[Aviso] {FFFAFA}%s(%d) Te Estuprou{FFFAFA}, Vá chame a policia!", pname, playerid);
					SendClientMessage(plo, COLOR_RED, strIng);
					format(strIng, sizeof(strIng), "{FC0015}[Aviso] {FFFAFA}Voce Estuprou{FFFAFA} %s(%d), agora Fuja senão a policia vai te pegar!", opname, plo);
					SendClientMessage(playerid, COLOR_RED, strIng);
					GameTextForPlayer(plo, "~y~Voce foi Estuprado!", 2500, 3);
					ApplyAnimation(plo,"CRACK","crckdeth4",4.1,0,1,1,1,1);
					ApplyAnimation(plo,"CRACK","crckdeth4",4.1,0,1,1,1,1);
					SetTimerEx("LiberarRoubo3",200000,0,"d",playerid);
					EstupreiAlguem[playerid] = 2;
					SetPlayerCriminal(playerid,plo, "Estupro");
     			}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "  Este player não está perto de você!");
				    return 1;
				}
			}
		}
		return 1;
	}//not connected

	if(strcmp(cmd, "/sob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sob [id]");
				return true;
			}
			new playa;
			//new Float:shealth;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
						SelectObject(playa);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/tapa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapa [id]");
				return true;
			}
			new playa;
			//new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{

			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {

				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+15);
						PlayerPlaySound(playa, 1190, slx, sly, slz+12);
						printf("AdmCmd: %s deu tapa em %s",sendername,  giveplayer);
                        if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(string, sizeof(string), "AdmCmd: %s ganhou um tapa de: %s",giveplayer ,PlayerName(playerid));
						}
                        else
                        {
							format(string, sizeof(string), "AdmCmd: %s ganhou um tapa de: %s",giveplayer ,PlayerName(playerid));
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
						comandosadminlog(string);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/rpv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /rpv [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			            if(!IsPlayerInAnyVehicle(playa))
						{
							SendClientMessage(playerid,COLOR_GREY,"Este player precisa estar em um veículo!");
							return 1;
						}
    			    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "AdmCmd: %s foi removido de seu veículo por %s",giveplayer ,PlayerName(playerid));
						ABroadCast(COLOR_LIGHTRED,string,1);
						RemovePlayerFromVehicle(playa);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/DefinirSenha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /definirsenha [Senha]");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1337 || GetPlayerOrg(playerid) == 34)
			{
  				format(string, sizeof(string), "Você definiu a senha de acesso as cameras de segurança para:[%s]", tmp);
				SendClientMessage(playerid, COLOR_LIGHTRED,string);
				strmid(SenhaSeguranca, tmp, 0, strlen(tmp), 256);
				SalvarSenhaSeguranca();
				return true;
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/acessarcamerass", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /acessarcamerass [Senha]");
				return true;
			}
			if(strcmp(SenhaSeguranca,tmp, true) == 0)
  			{
			    format(string, sizeof(string), "Senha correta!! você entrou no painel de cameras de segurança!");
				SendClientMessage(playerid, VERDE2,string);
				ShowPlayerDialog(playerid, 8906, DIALOG_STYLE_LIST, "Cameras segurança","Cameras: Los Santos\nCameras: San Fierro\nCameras: Las Venturas\nSenha de Acesso\nSair","Acessar","Cancelar");
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "A Senha está incorreta e os policiais foram avisados!");
				format(string, sizeof(string), "Todas as Unidades: Alguem está tentando invadir o painel de cameras de segurança.");
				CopBroadCast(COLORGZ_EXE, string);
				SendFamilyMessage(34, COLORGZ_EXE, string);
			}
		}
		return true;
	}



	if(strcmp(cmd, "/mapicon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /mapicon [iconID]");
				return true;
			}
			new pick = strval(tmp);
			new Float:slx, Float:sly, Float:slz;
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
				GetPlayerPos(playerid, slx, sly, slz);
				RemovePlayerMapIcon(playerid, 40);
				SetPlayerMapIcon(playerid, 40 ,slx+50, sly, slz, pick, 0xE6E6E6E6);
				format(string, sizeof(string), "Map Icon ID: %d criado com sucesso!!!", pick);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/brilhar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3001 && PlayerBrilhando[playerid] == 0)
	        {
	            PlayerBrilhando[playerid] = 1;
	            SendClientMessage(playerid, COLOR_WHITE, "Você está brilhando.");
	            return true;
			}
 	        else if(PlayerInfo[playerid][pAdmin] >= 3001 && PlayerBrilhando[playerid] == 1)
	        {
	            PlayerBrilhando[playerid] = 0;
	            SendClientMessage(playerid, COLOR_WHITE, "Você não está mais brilhando.");
	            SetPlayerColor(playerid, COR_ADMIN);
	            return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando");
			    return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/teste", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        BatePapoInicio[playerid] ++;
	        if(BatePapoInicio[playerid] == 1)
	        {
				format(string, sizeof(string), "%s's seu telefone está tocando.", PlayerName(playerid));
	            SendClientMessage(playerid, COLOR_WHITE, string);
	            return true;
			}
 	        if(BatePapoInicio[playerid] == 2)
	        {
				format(string, sizeof(string), "%s's seu telefone está tocando.", PlayerName(playerid));
	            SendClientMessage(playerid, COLOR_WHITE, string);
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 3)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você diz(telefone): Alo??");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 4)
	        {
	            SendClientMessage(playerid, COLOR_YELLOW, "Dono da casa diz(telefone): Alo!!");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 5)
	        {
	            SendClientMessage(playerid, COLOR_YELLOW, "Dono da casa diz(telefone): É hoje que você vai pagar o aluguel?");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 6)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você diz(telefone): Olha.. eu posso pagar amanhã?");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 7)
	        {
	            SendClientMessage(playerid, COLOR_YELLOW, "Dono da casa diz(telefone): Nada disso, você sempre diz que vai pagar amanhã e não paga.");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 8)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você diz(telefone): Mais eu posso conseguir a grana até amanhã");
	            SendClientMessage(playerid, COLOR_YELLOW, "Dono da casa diz(telefone): NÃO!!");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 9)
	        {
	            SendClientMessage(playerid, COLOR_YELLOW, "Dono da casa diz(telefone): Você tem 5 minutos para tirar suas coisas da casa, ou vou chamar a polícia.");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 10)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você diz(telefone): OK..");
	            return true;
			}
  	        if(BatePapoInicio[playerid] == 11)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Você diz(telefone): Mais eu posso ficar só até amanhã??");
	            SendClientMessage(playerid, COLOR_GRAD1, "Ninguem na linha..");
	            BatePapoInicio[playerid] = 0;
	            return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/testesom", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /testesom [SoundID]");
				return true;
			}
			new pick = strval(tmp);
			new Float:slx, Float:sly, Float:slz;
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
				GetPlayerPos(playerid,slx, sly, slz );
				PlayerPlaySound(playerid, pick,  0.0, 0.0, 0.0);
				format(string, sizeof(string), "Está ouvindo o som ID: %d ?", pick);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/definirsom", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /definirsom [SoundID]");
				return true;
			}
			new pick = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
				novosom[playerid] = pick;
				format(string, sizeof(string), "definido para %d", pick);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/testesom2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
			    novosom[playerid] += 1;
				PlayerPlaySound(playerid, novosom[playerid],  0.0, 0.0, 0.0);
				format(string, sizeof(string), "Está ouvindo o som ID: %d ?", novosom[playerid]);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/testesom3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
			    novosom[playerid] -= 1;
				PlayerPlaySound(playerid, novosom[playerid],  0.0, 0.0, 0.0);
				format(string, sizeof(string), "Está ouvindo o som ID: %d ?", novosom[playerid]);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/atach", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /atach [atachID]");
				return true;
			}
			new pick = strval(tmp);
			new Float:slx, Float:sly, Float:slz;
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
				GetPlayerPos(playerid,slx, sly, slz );
				RemovePlayerMapIcon(playerid, 40);
				RemovePlayerAttachedObject(playerid, 8);
				SetPlayerAttachedObject(playerid, 8, pick, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
				format(string, sizeof(string), "Está usando o objeto ID: %d", pick);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/component", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /component [componentID]");
				return true;
			}
			new TesteCom[MAX_PLAYERS];
			new com = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
			    RemoveVehicleComponent(GetPlayerVehicleID(playerid), TesteCom[playerid]);
				TesteCom[playerid] = com;
				AddVehicleComponent(GetPlayerVehicleID(playerid),com);
				format(string, sizeof(string), "component id: %d setado em seu carro", com);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/pickup", true) == 0)// foda não pegar MTA no PC kkkkkk
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /pickup [pickID]");
				return true;
			}
			new pick = strval(tmp);
			new Float:slx, Float:sly, Float:slz;
			if (PlayerInfo[playerid][pAdmin] >=3001)
			{
				GetPlayerPos(playerid, slx, sly, slz);
				DestroyPickup(PICKUPTESTE);
				PICKUPTESTE = CreatePickup(pick,23,slx+2, sly, slz,-1);
				format(string, sizeof(string), "Pickup ID: %d criado com sucesso!!!", pick);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/liberarVIP", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /liberarvip [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[playa][pPVIP] < 1)
			            {
			                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Este jogador ainda não pegou um VIP Teste!");
			                return true;
			            }
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "O Admin %s deu mais uma chance para você pegar seu VIP Teste, USE: /pegarvip.", sendername);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
   						format(string, sizeof(string), "Você deu mais uma chance para %s poder pegar um VIP Teste.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playa][pTimeVIP] = 0;
						PlayerInfo[playa][pPVIP] = 0;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}


	if(strcmp(cmd, "/testels", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				format(string, sizeof(string), "OI");
				OOCLosSantos(COLOR_LIGHTRED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/testesf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				format(string, sizeof(string), "OI");
				OOCSanFierro(COLOR_LIGHTRED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/testelv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				format(string, sizeof(string), "OI");
				OOCLasVenturas(COLOR_LIGHTRED, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/retiraradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_WHITE,"USE: /retiraradmin [NOME_CORRETO]");
		        return true;
   			}
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			//=====================================
				new string3[64];
				new string4[64];
				format(string3, sizeof(string3), "RetirarAdmin/%s.ini", tmp);
				format(string4, sizeof(string4), "Contas/%s.ini", tmp);
				if(!DOF2_FileExists(string4))
				{
  					SendClientMessage(playerid,COLOR_GRAD1,"Este Nick não existe no servidor, digite um nome correto EX: Nome_Sobrenome");
		        	return true;
				}
				if(DOF2_FileExists(string3))
				{
  					SendClientMessage(playerid,COLOR_GRAD1,"Este Nick ja está na lista de retirada de admin, para remover da lista USE: /rlistaadmin");
		        	return true;
				}
				new File: hFile = fopen(string3, io_write);
				if (hFile)
				{
					new var[32];
					format(var, 32, "Admin=AINDA NAO RETIRADO");
					fwrite(hFile, var);
					fclose(hFile);
					format(string, sizeof(string), "Você retirou o admin do jogador offline: %s.", tmp);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/deletarconta", true)==0)
	{
	    new file[64];
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_WHITE, "USE: /deletarconta [NOME_CORRETO]");
     	if (PlayerInfo[playerid][pAdmin] != DONO)
		{
     		SendClientMessage(playerid, COLOR_GREY,"Você não tem permissão para usar esse comando!");
     		return true;
		}
		getdate(v[0], v[1], v[2]);
		gettime(v[3], v[4], v[5]);
		format(string, 128, "[%d/%d/%d] [%d:%d:%d] %s Apagou a conta: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), tmp);
		comandosadminlog(string);
     	format(file,sizeof(file),"Contas/%s.ini",tmp);
		format(string, 128, "%s.bak", file);
     	DOF2_CopyFile(file, string);
     	fremove(file);
		format(string, sizeof(string), "AdmCmd: Admin %s deletou a conta: %s.",PlayerName(playerid), tmp);
		ABroadCast(COLOR_LIGHTRED,string,1);
     	return true;
	}
	if(strcmp(cmd, "/retirarhelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_WHITE,"USE: /retirarhelper [NOME_CORRETO]");
		        return true;
   			}
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			//=====================================
				new string3[64];
				new string4[64];
				format(string3, sizeof(string3), "RetirarHelper/%s.ini", tmp);
				format(string4, sizeof(string4), "Contas/%s.ini", tmp);
				if(!DOF2_FileExists(string4))
				{
  					SendClientMessage(playerid,COLOR_GRAD1,"Este Nick não existe no servidor, digite um nome correto EX: Nome_Sobrenome");
		        	return true;
				}
				if(DOF2_FileExists(string3))
				{
  					SendClientMessage(playerid,COLOR_GRAD1,"Este Nick ja está na lista de retirada de helper, para remover da lista USE: /rlistahelper");
		        	return true;
				}
				new File: hFile = fopen(string3, io_write);
				if (hFile)
				{
					new var[32];
					format(var, 32, "Helper=AINDA NAO RETIRADO");fwrite(hFile, var);
					fclose(hFile);
					format(string, sizeof(string), "Você retirou o helper do jogador offline: %s.", tmp);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}


	if(strcmp(cmd,"/avvoice",true)==0)// avvoice
	{
		if(IsPlayerConnected(playerid))
 		{
  			if (PlayerInfo[playerid][pAdmin] >=4)
	    	{
				new Str[100];
				new result[64];
				new Nome[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /avvoice [texto]");
					return true;
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
  					if(IsPlayerConnected(i))
 					{
						GetPlayerName(playerid, Nome, sizeof(Nome));
						format(string, sizeof(string), "|________ Mensagen de Voz do Admin: %s ________|", sendername);
						SendClientMessage(i,COLOR_WHITE, string);
						format(Str, sizeof(Str), "http://translate.google.com/translate_tts?tl=pt&q=%s", (result));
						PlayAudioStreamForPlayer(i, Str, 0, 0, 0, 0, 0);
					}
				}
				return 1;
			}
			else
			{
 				SendClientMessage(playerid, COLOR_GRAD1,"Você não é um admin!");
  				return 1;
   			}
 		}
	}

	if(strcmp(cmd,"/limparcasamento",true)==0 || strcmp(cmd,"/lcasamento",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparcasamento [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
           				ClearMarriage(playa);
	 					SendClientMessage(playa, COLOR_LIGHTBLUE," Seu casamento foi Limpo.");
		 				SendClientMessage(playerid, COLOR_LIGHTBLUE," Você limpou o casamento");
		 				format(string, sizeof(string), "%s limpou o casamento de %s",PlayerName(playerid), PlayerName(playa));
		 				ABroadCast(COLOR_LIGHTRED, string, 1);
		 				comandosadminlog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd,"/retirararmas",true)==0 || strcmp(cmd,"/rarmas",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirararmas [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeaponsBPH(playa);
						printf("AdmCmd: %s retirou as armas de %s",sendername,  giveplayer);
						format(string, sizeof(string), "Voce retirou as armas de %s ",giveplayer);
						SendClientMessage(playerid, COLOR_GRAD1,string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return true;
	}

//====================
	if(strcmp(cmd, "/calar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /calar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < SUB_GERENTE)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode calar um Admin Dono !");
							return true;
						}
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("AdmCmd: %s silenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s foi calado por %s",giveplayer ,PlayerName(playerid));
							ABroadCast(COLOR_LIGHTRED,string,1);
							comandosadminlog(string);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("AdmCmd: %s unsilenced %s",sendername,  giveplayer);
							if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
							{
								format(string, sizeof(string), "AdmCmd: %s foi descalado por Gasparzinho",giveplayer);
							}
							else
							{
								format(string, sizeof(string), "AdmCmd: %s foi descalado por %s",giveplayer ,PlayerName(playerid));
							}
							ABroadCast(COLOR_LIGHTRED,string,1);
							comandosadminlog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return true;
	}
// infoarmas , infoplayer , infoxiter
	if(strcmp(cmd, "/infoarmas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoarmas [id do player]");
				return true;
			}
			if(PlayerInfo[playerid][pAdmin] < 1 )
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    new weapons[13][2];
				    new playerck[MAX_PLAYER_NAME];
				    GetPlayerName(giveplayerid, playerck, sizeof(playerck));
   					format(string, sizeof(string), "EXIBINDO AS INFORMAÇÕES DAS ARMAS DE: %s",playerck);
   					SendClientMessage(playerid, TEAM_BALLAS_COLOR, string);
                    GetPlayerWeaponData(giveplayerid, 2, weapons[2][0], weapons[2][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[2][0]], weapons[2][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 3, weapons[3][0], weapons[3][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[3][0]], weapons[3][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 4, weapons[4][0], weapons[4][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[4][0]], weapons[4][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 5, weapons[5][0], weapons[5][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[5][0]], weapons[5][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 6, weapons[6][0], weapons[6][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[6][0]], weapons[6][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 7, weapons[7][0], weapons[7][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[7][0]], weapons[7][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 8, weapons[8][0], weapons[8][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[8][0]], weapons[8][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 9, weapons[9][0], weapons[9][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[9][0]], weapons[9][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 11, weapons[11][0], weapons[11][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[11][0]], weapons[11][1]);
  					SendClientMessage(playerid, COLOR_WHITE, string);
		    	}
			}
        	else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
	            return true;
	        }
		}
	    return true;
	}
//---------------------------------------------------------------------------------------
	if(strcmp(cmd, "/infoplayer", true) == 0)
	{
	 	new armatext[30];
	    new municao;
	    new arma;
	    new Float:plrtempheal;
	    new Float:plrarmour;
	    new plrping;
	    new iplayer[MAX_PLAYER_NAME];
	    new plrIP[16];
	    new smunicao;
		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoplayer [id do player]");
				return true;
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    GetPlayerIp(giveplayerid, plrIP, sizeof(plrIP));
   					GetPlayerName(giveplayerid, iplayer, sizeof(iplayer));
					plrping = GetPlayerPing(giveplayerid);
			    	GetPlayerArmour(giveplayerid, plrarmour);
					GetPlayerHealth(playerid,plrtempheal);
					arma = GetPlayerWeapon(giveplayerid);
					municao = GetPlayerAmmo(giveplayerid);
					SendClientMessage(playerid, COLOR_GREEN, "|__________________[ EXIBINDO INFORMAÇÕES ]__________________|");
					format(string, sizeof(string), "Nome: %s", iplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "IP: %s", plrIP);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Ping: %d", plrping);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Colete: %1f", plrarmour);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Saúde: %1f", plrtempheal);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 38) { armatext = "Minigun";
					}
					else if(arma == 40) { armatext = "Detonador"; }
					else if(arma == 36) { armatext = "Lança missil RPG"; }
					else if(arma == 35) { armatext = "Lança missil"; }
					else if(arma == 16) { armatext = "Granada"; }
					else if(arma == 18) { armatext = "Coctel Molotov"; }
					else if(arma == 22) { armatext = "Pistola de Duas mãos 9mm"; }
					else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
					else if(arma == 27) { armatext = "Escopeta de Combate"; }
					else if(arma == 28) { armatext = "Micro Uzi"; }
					else if(arma == 32) { armatext = "Tec9"; }
					else if(arma == 37) { armatext = "Lança Chamas"; }
					else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bastão de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com silênciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma ==  34) { armatext = "Rifle Sniper"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(string, sizeof(string), "Arma: %s", armatext);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 40 || arma == 36 || arma == 16 || arma == 18 || arma == 26 || arma == 28 || arma == 37)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "/tv nele, pois ele pode estar usando xiter de armas");
					}
					if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
					format(string, sizeof(string), "Munição: %d", smunicao);
					SendClientMessage(playerid, COLOR_GRAD1, string);
 				 }
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
	            return true;
	        }
		}
	    return true;
	}
//---------------Guinchar----------------------------------
	if(strcmp(cmd,"/guinchar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsAMec(playerid) || IsACop(playerid))
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
					                   AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					//SendClientMessage(playerid,COLOR_GREY,"Não tem nenhum carro perto.");
			   				}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Você precisa estar dirigindo !");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um Guincho !");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não está em um guincho !");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD2,"Você não é mecanico ou um Policial !");
				return true;
			}
		}
		return true;
	}
    //---------------- Sincronizar ----------------------------
	if(strcmp(cmd, "/sinc", true) == 0 || strcmp(cmd, "/sincronizar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar este comando");
			return true;
		}
		if(GetPlayerState(playerid) == 9|| GetPlayerState(playerid) == 5 || GetPlayerState(playerid) == 6 ||GetPlayerState(playerid) == 4|| GetPlayerState(playerid) == 0 || sincronizando[playerid] == 1 || PlayerInfo[playerid][pJailed] != 0 || PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar agora!");
			return true;
		}
		if(PlayerToPoint(3.0,playerid,2144.3711,1641.4792,993.5761) || PlayerToPoint(3.0,playerid,303.9886,-169.0725,999.5938) || PlayerToPoint(3.0,playerid,294.8029,-57.8727,1001.5156) || PlayerToPoint(3.0,playerid,162.1254,-79.7925,1001.8047) ||
		PlayerToPoint(3.0,playerid,211.3817,-96.1272,1005.2578) || PlayerToPoint(3.0,playerid,820.8934,8.5365,1004.1958) || PlayerToPoint(3.0,playerid,205.4959,-11.5585,1005.2109))
		{
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar agora!");
			return true;
		}
		if(psinc == 1)
  		{
	        SendClientMessage(playerid,COLOR_GRAD2,"Já sincronizaram,tente daqui a pouco!");
	        return true;
	    }

		XXAirBreak[playerid] += 3;
	 	sincronizando[playerid] = 1;
	 	virt[playerid] = GetPlayerVirtualWorld(playerid);
		interior[playerid] = GetPlayerInterior(playerid);
		skinneg[playerid] = GetPlayerSkin(playerid);
		GetPlayerArmour(playerid,APP[playerid]);
		GetPlayerHealth(playerid,PlayerHPP[playerid]);
		GetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		GetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		GetPlayerWeaponData(playerid,1,gunsinc[1][playerid],ammoo[1][playerid]);
		GetPlayerWeaponData(playerid,2,gunsinc[2][playerid],ammoo[2][playerid]);
		GetPlayerWeaponData(playerid,3,gunsinc[3][playerid],ammoo[3][playerid]);
		GetPlayerWeaponData(playerid,4,gunsinc[4][playerid],ammoo[4][playerid]);
		GetPlayerWeaponData(playerid,5,gunsinc[5][playerid],ammoo[5][playerid]);
		GetPlayerWeaponData(playerid,6,gunsinc[6][playerid],ammoo[6][playerid]);
		GetPlayerWeaponData(playerid,7,gunsinc[7][playerid],ammoo[7][playerid]);
		GetPlayerWeaponData(playerid,8,gunsinc[8][playerid],ammoo[8][playerid]);
		GetPlayerWeaponData(playerid,9,gunsinc[9][playerid],ammoo[9][playerid]);
		GetPlayerWeaponData(playerid,10,gunsinc[10][playerid],ammoo[10][playerid]);
		GetPlayerWeaponData(playerid,11,gunsinc[11][playerid],ammoo[11][playerid]);
		GetPlayerWeaponData(playerid,12,gunsinc[12][playerid],ammoo[12][playerid]);
		psinc = 1;
		TempoSincronizar = SetTimer("Sinc", 8000, 0);
		if(IsPlayerInAnyVehicle(playerid))
		{
			vehicledd[playerid] = 1;
			VehicleIDD[playerid] = GetPlayerVehicleID(playerid);
		}
//	SyncPlayer(playerid);
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playerid);
		return true;
	}

	if(strcmp(cmd, "/admvcarro", true) == 0 || strcmp(cmd, "/admvc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcarro [Carro id]");
				return true;
			}
			new vehid = strval(tmp);
			if(!CarroMala(vehid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Digite o ID de um Carro VIP Válido.");
				return true;
			}
			vehid = vehid-totalveiculosc;
			if (PlayerInfo[playerid][pAdmin] >= SUB_DONO)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
				CarInfo[vehid][cOwned] = 0;
				strmid(CarInfo[vehid][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				format(string, sizeof(string), "~w~Voce vendeu este veiculo");
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				DestroyVehicle(vehid+totalveiculosc);
				new carid2 = CreateVehicle(CarInfo[vehid][cModel],CarInfo[vehid][cLocationx],CarInfo[vehid][cLocationy],CarInfo[vehid][cLocationz]+1.0,CarInfo[vehid][cAngle],CarInfo[vehid][cColorOne],CarInfo[vehid][cColorTwo],60000);
				Controle(playerid, 1);
				SaveCars();
				SetVehicleToRespawn(carid2);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/ajudacarro", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	   	{
	       	if(PlayerInfo[playerid][pCarKey] != 0 || PlayerInfo[playerid][pCarKey2] != 0)
	       	{
				SendClientMessage(playerid, COLOR_GRAD2," **/COMPRARCARRO**  para comprar o Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/VENDERMEUCARRO**  para vender o Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/AJUDACARRO**  para ver os comandos dos Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/CORMEUCARRO**  para mudar a cor do Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/ESTACIONARMEUCARRO**  para estacionar o Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/MODELOMEUCARRO**  para mudar o modelo do Veiculo");
				SendClientMessage(playerid, COLOR_GRAD2," **/RETIRARGRANA**  para retirar a grana do seu Veiculo");
				SendClientMessage(playerid, COLOR_YELLOW," **OBS: Você precisa estar em seu carro VIP para usar alguns comandos.");
				return true;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD2," Você não tem um Veiculo VIP! ");
			    return true;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/modelomeucarro", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
  		{
			new vehid = GetPlayerVehicleID(playerid);
	    	if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0&& PlayerInfo[playerid][pCarKey3] == 0&& PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
				return true;
			}
  			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no veiculo VIP!");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid &&
			PlayerInfo[playerid][pCarKey3] != vehid &&
			PlayerInfo[playerid][pCarKey4] != vehid &&
			PlayerInfo[playerid][pCarKey5] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
				return true;
			}
			new modelo;
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey])
			{
				carid = PlayerInfo[playerid][pCarKey];
				Veiculo = PlayerInfo[playerid][pVeiculo];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey2])
			{
				carid = PlayerInfo[playerid][pCarKey2];
				Veiculo = PlayerInfo[playerid][pVeiculo2];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey3])
			{
				carid = PlayerInfo[playerid][pCarKey3];
				Veiculo = PlayerInfo[playerid][pVeiculo3];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey4])
			{
				carid = PlayerInfo[playerid][pCarKey4];
				Veiculo = PlayerInfo[playerid][pVeiculo4];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey5])
			{
				carid = PlayerInfo[playerid][pCarKey5];
				Veiculo = PlayerInfo[playerid][pVeiculo5];
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /modelomeucarro [ID do Modelo]");
				return true;
			}
			modelo = strval(tmp);
			if(modelo < 400 || modelo > 611) { SendClientMessage(playerid, COLOR_GREY, " Nossos Modelos Estão Entre 400 e 611!"); return true; }
			if(modelo == 592 || modelo == 577 || modelo == 553 || modelo == 520 || modelo == 525 || modelo == 547 || modelo == 435
			|| modelo == 441 || modelo == 449 || modelo == 450 || modelo == 460 || modelo == 464 || modelo == 465 || modelo == 501
			|| modelo == 537 || modelo == 538 || modelo == 564 || modelo == 569 || modelo == 570 || modelo == 584 || modelo == 590
			|| modelo == 591 || modelo == 594 || modelo == 606 || modelo == 607 || modelo == 608 || modelo == 610 || modelo == 611
			|| modelo == 596 || modelo == 599 || modelo == 597 || modelo == 598 || modelo == 427 || modelo == 528 || modelo == 544
			|| modelo == 407 || modelo == 455 || modelo == 502 || modelo == 503 || modelo == 494 || modelo == 582 || modelo == 470
			|| modelo == 495 || modelo == 601 || modelo == 548 || modelo == 417 || modelo == 497 || modelo == 563 || modelo == 447
			|| modelo == 469 || modelo == 488 || modelo == 557 || modelo == 556 || modelo == 444 || modelo == 573 || modelo == 406
			|| modelo == 590 || modelo == 569 || modelo == 537 || modelo == 538 || modelo == 570 || modelo == 449 || modelo == 472
			|| modelo == 473 || modelo == 493 || modelo == 595 || modelo == 484 || modelo == 430 || modelo == 453 || modelo == 452
			|| modelo == 446 || modelo == 454 || modelo == 432 || modelo == 425 || modelo == 571 || modelo == 490 || modelo == 523
		 	|| modelo == 408 || modelo == 414 || modelo == 416 || modelo == 420 || modelo == 423 || modelo == 428
			|| modelo == 431 || modelo == 433 || modelo == 437 || modelo == 438 || modelo == 443 || modelo == 456 || modelo == 476
			|| modelo == 486 || modelo == 490 || modelo == 498 || modelo == 499 || modelo == 511 || modelo == 512 || modelo == 513
			|| modelo == 514 || modelo == 515 || modelo == 519 || modelo == 523 || modelo == 524 || modelo == 530 || modelo == 531
			|| modelo == 532 || modelo == 539 || modelo == 568 || modelo == 572 || modelo == 574 || modelo == 578 || modelo == 483
			|| modelo == 583 || modelo == 588 || modelo == 593 || modelo == 609)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Este Modelo é Proibido!");
				return true;
			}
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cModel] = modelo;
				GameTextForPlayer(playerid, "~w~Modelo do seu Carro Premium Mudado ~r~-R$300.", 10000, 3);
				DestroyVehicle(carid);
				SendClientMessage(playerid, COLOR_YELLOW, "Vá buscar o seu veículo onde você estacionou.");
				CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
				Controle(playerid, 1);
				GivePlayerMoney(playerid,-300);
				SaveCars();
				return true;
			}
			return true;
		}
	}
	
   	if(strcmp(cmd, "/vendermeucarro", true) == 0)
	{
	   	if(IsPlayerConnected(playerid))
	 	{
            new vehid = GetPlayerVehicleID(playerid);
	    	if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0&& PlayerInfo[playerid][pCarKey3] == 0&& PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
				return true;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no seu veiculo VIP!");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid &&
			PlayerInfo[playerid][pCarKey3] != vehid &&
			PlayerInfo[playerid][pCarKey4] != vehid &&
			PlayerInfo[playerid][pCarKey5] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
				return true;
			}
			new carid;
			new Veiculo;
			new pcarro[MAX_PLAYERS];
			if(vehid == PlayerInfo[playerid][pCarKey])
			{
				carid = PlayerInfo[playerid][pCarKey];
				Veiculo = PlayerInfo[playerid][pVeiculo];
				pcarro[playerid] = 1;
			}
			else if(vehid == PlayerInfo[playerid][pCarKey2])
			{
				carid = PlayerInfo[playerid][pCarKey2];
				Veiculo = PlayerInfo[playerid][pVeiculo2];
				pcarro[playerid] = 2;
			}
			else if(vehid == PlayerInfo[playerid][pCarKey3])
			{
				carid = PlayerInfo[playerid][pCarKey3];
				Veiculo = PlayerInfo[playerid][pVeiculo3];
				pcarro[playerid] = 3;
			}
			else if(vehid == PlayerInfo[playerid][pCarKey4])
			{
				carid = PlayerInfo[playerid][pCarKey4];
				Veiculo = PlayerInfo[playerid][pVeiculo4];
				pcarro[playerid] = 4;
			}
			else if(vehid == PlayerInfo[playerid][pCarKey5])
			{
				carid = PlayerInfo[playerid][pCarKey5];
				Veiculo = PlayerInfo[playerid][pVeiculo5];
				pcarro[playerid] = 5;
			}
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
				CarInfo[Veiculo][cOwned] = 0;
				CarInfo[Veiculo][cModel] = 560;
				CarInfo[Veiculo][cColorOne] = 0;
			    CarInfo[Veiculo][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[Veiculo][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[Veiculo][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Veiculo VIP Vendido Por:~g~$%d", CarInfo[Veiculo][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				if(pcarro[playerid] == 1)
				{
					PlayerInfo[playerid][pCarKey] = 0;
					PlayerInfo[playerid][pVeiculo] = 0;
				}
				if(pcarro[playerid] == 2)
				{
					PlayerInfo[playerid][pCarKey2] = 0;
					PlayerInfo[playerid][pVeiculo2] = 0;
				}
 				if(pcarro[playerid] == 3)
				{
					PlayerInfo[playerid][pCarKey3] = 0;
					PlayerInfo[playerid][pVeiculo3] = 0;
				}
				if(pcarro[playerid] == 4)
				{
					PlayerInfo[playerid][pCarKey4] = 0;
					PlayerInfo[playerid][pVeiculo4] = 0;
				}
				if(pcarro[playerid] == 5)
				{
					PlayerInfo[playerid][pCarKey5] = 0;
					PlayerInfo[playerid][pVeiculo5] = 0;
				}
				SaveCars();
			}
 	 	}
 	 	return true;
	}
	
	
   	if(strcmp(cmd, "/cormeucarro", true) == 0)
	{
	   	if(IsPlayerConnected(playerid))
	 	{
            new vehid = GetPlayerVehicleID(playerid);
	    	if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0&& PlayerInfo[playerid][pCarKey3] == 0&& PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
				return true;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no seu veiculo VIP!");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid &&
			PlayerInfo[playerid][pCarKey3] != vehid &&
			PlayerInfo[playerid][pCarKey4] != vehid &&
			PlayerInfo[playerid][pCarKey5] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /cormeucarro [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return true;
			}
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey])
			{
				carid = PlayerInfo[playerid][pCarKey];
				Veiculo = PlayerInfo[playerid][pVeiculo];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey2])
			{
				carid = PlayerInfo[playerid][pCarKey2];
				Veiculo = PlayerInfo[playerid][pVeiculo2];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey3])
			{
				carid = PlayerInfo[playerid][pCarKey3];
				Veiculo = PlayerInfo[playerid][pVeiculo3];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey4])
			{
				carid = PlayerInfo[playerid][pCarKey4];
				Veiculo = PlayerInfo[playerid][pVeiculo4];
			}
			else if(vehid == PlayerInfo[playerid][pCarKey5])
			{
				carid = PlayerInfo[playerid][pCarKey5];
				Veiculo = PlayerInfo[playerid][pVeiculo5];
			}
			new cor1;
			cor1 = strval(tmp);
			if(cor1 < 0 || cor1 > 126)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /veiculo cor [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return true;
			}
			new cor2;
			cor2 = strval(tmp);
			if(cor2 < 0 || cor2 > 126)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!");
				return true;
			}
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cColorOne] = cor1;
				CarInfo[Veiculo][cColorTwo] = cor2;
                GameTextForPlayer(playerid, "Cor do seu Carro VIP Mudada! -R$50", 10000, 3);
                ChangeVehicleColor(carid,cor1,cor2);
                Controle(playerid, 1);
                GivePlayerMoney(playerid,-50);
				SBizzInfo[8][sbTill] += 50;
                ExtortionSBiz(8, 50);
                SaveCars();
			}
 	 	}
 	 	return true;
	}

 // fim
 	if(strcmp(cmd, "/estacionarmeucarro", true) == 0)
	{
 		new vehid = GetPlayerVehicleID(playerid);
	    if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0&& PlayerInfo[playerid][pCarKey3] == 0&& PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
			return true;
		}
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no seu veiculo VIP!");
			return 1;
		}
		if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid &&
		PlayerInfo[playerid][pCarKey3] != vehid &&
		PlayerInfo[playerid][pCarKey4] != vehid &&
		PlayerInfo[playerid][pCarKey5] != vehid)
		{
			SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
			return true;
		}
	   	new Float:x,Float:y,Float:z;
		new Float:a;
		new carid;
		new getcarid;
		new Veiculo;
   		if(vehid == PlayerInfo[playerid][pCarKey])
  		{
	  		carid = PlayerInfo[playerid][pCarKey];
		  	Veiculo = PlayerInfo[playerid][pVeiculo];
  		}
		else if(vehid == PlayerInfo[playerid][pCarKey2])
		{
			carid = PlayerInfo[playerid][pCarKey2];
			Veiculo = PlayerInfo[playerid][pVeiculo2];
		}
		else if(vehid == PlayerInfo[playerid][pCarKey3])
		{
			carid = PlayerInfo[playerid][pCarKey3];
			Veiculo = PlayerInfo[playerid][pVeiculo3];
		}
		else if(vehid == PlayerInfo[playerid][pCarKey4])
		{
			carid = PlayerInfo[playerid][pCarKey4];
			Veiculo = PlayerInfo[playerid][pVeiculo4];
		}
 		else if(vehid == PlayerInfo[playerid][pCarKey5])
		{
			carid = PlayerInfo[playerid][pCarKey5];
			Veiculo = PlayerInfo[playerid][pVeiculo5];
		}
		if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
		{
  			getcarid = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
			GetVehiclePos(carid, x, y, z);
			GetVehicleZAngle(carid, a);
          	if(getcarid == carid)
			{
				CarInfo[Veiculo][cLocationx] = x;
				CarInfo[Veiculo][cLocationy] = y;
				CarInfo[Veiculo][cLocationz] = z;
				CarInfo[Veiculo][cAngle] = a;
				format(string, sizeof(string), "~n~ Veiculo Estacionado Aqui! ~n~");
				GameTextForPlayer(playerid, "Veiculo Estacionado!~n~Ele vai nascer aqui!.", 10000, 3);
				DestroyVehicle(carid);
				new carid2 = CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
				Controle(playerid, 1);
				SaveCars();
				SetVehicleToRespawn(carid2);
				return true;
  			}
			return true;
		}
		return true;
	}

	if(strcmp(cmd, "/comprarcarro", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	  	{
    		if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no veiculo VIP!");
				return 1;
			}
  			new vehid = GetPlayerVehicleID(playerid);
     		if(PlayerInfo[playerid][pVIP] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não é VIP e não pode comprar este carro !");
				return true;
			}
   			for(new i = 0; i < sizeof(CarInfo); i++)
      		{
				if(CarInfo[i][ownedvehicle] == vehid)
				{
     				if(PlayerInfo[playerid][pVIP] == 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Você não é VIP e não pode comprar este carro !");
						RemovePlayerFromVehicleEx(playerid);
						return true;
					}
                    if(PlayerInfo[playerid][pCarKey] != 0 && PlayerInfo[playerid][pCarKey2] != 0 && PlayerInfo[playerid][pCarKey3] != 0  && PlayerInfo[playerid][pVIP] == 1)
					//if(PlayerInfo[playerid][pCarKey2] != 0 && PlayerInfo[playerid][pVIP] == 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "Seu VIP permite que você tenha no máximo 3 carros !");
						RemovePlayerFromVehicleEx(playerid);
						return true;
					}
					if(PlayerInfo[playerid][pCarKey] != 0 &&
					PlayerInfo[playerid][pCarKey2] != 0 &&
					PlayerInfo[playerid][pCarKey3] != 0 &&
					PlayerInfo[playerid][pCarKey4] != 0 &&
					PlayerInfo[playerid][pCarKey5] != 0 &&
					PlayerInfo[playerid][pVIP] == 2)
					{
						SendClientMessage(playerid, COLOR_GREY, "Seu VIP-POWER permite que você tenha no máximo 5 carros !");
						RemovePlayerFromVehicleEx(playerid);
						return true;
					}
					if(PlayerInfo[playerid][pLevel] < 3)
					{
					    SendClientMessage(playerid, COLOR_GREY, "Você Precisa ter nivel 3 para comprar o veiculo");
					  	RemovePlayerFromVehicleEx(playerid);
					  	return true;
					}
					if(CarInfo[i][cOwned]==1)
					{
		   				SendClientMessage(playerid, COLOR_GREY, "Este carro VIP/VIP-POWER já tem dono");
					    return true;
					}
					if(PlayerInfo[playerid][pCarKey] == 0)
					{
						if(PlayerInfo[playerid][pVIP] < 1)
     					{
         					SendClientMessage(playerid, COLOR_GREY, "Você não é um jogador VIP");
       		 				return true;
	        			}
						if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
						{
							PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
							PlayerInfo[playerid][pVeiculo] = i;
							CarInfo[i][cOwned] = 1;
							CarOffered[playerid]=0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
							GivePlayerMoney(playerid,-CarInfo[i][cValue]);
							GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro PREMIUM!", 5000, 3);
							PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajudacarro para ver os comandos");
							Controle(playerid, 1);
							SaveCars();
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso!");
							RemovePlayerFromVehicleEx(playerid);
						}
						return true;
					}
 					else if(PlayerInfo[playerid][pCarKey2] == 0)
					{
						if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
						{
							PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
							PlayerInfo[playerid][pVeiculo2] = i;
							CarInfo[i][cOwned] = 1;
							CarOffered[playerid]=0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
							GivePlayerMoney(playerid,-CarInfo[i][cValue]);
							GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro Premium!", 5000, 3);
							PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajudacarro para ver os comandos");
							Controle(playerid, 1);
							SaveCars();
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso!");
							RemovePlayerFromVehicleEx(playerid);
						}
						return true;
					}
 					else if(PlayerInfo[playerid][pCarKey3] == 0)
					{
						if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
						{
							PlayerInfo[playerid][pCarKey3] = i+totalveiculosc;
							PlayerInfo[playerid][pVeiculo3] = i;
							CarInfo[i][cOwned] = 1;
							CarOffered[playerid]=0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
							GivePlayerMoney(playerid,-CarInfo[i][cValue]);
							GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro Premium!", 5000, 3);
							PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajudacarro para ver os comandos");
							Controle(playerid, 1);
							SaveCars();
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso!");
							RemovePlayerFromVehicleEx(playerid);
						}
						return true;
					}
 					else if(PlayerInfo[playerid][pCarKey4] == 0)
					{
						if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
						{
							PlayerInfo[playerid][pCarKey4] = i+totalveiculosc;
							PlayerInfo[playerid][pVeiculo4] = i;
							CarInfo[i][cOwned] = 1;
							CarOffered[playerid]=0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
							GivePlayerMoney(playerid,-CarInfo[i][cValue]);
							GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro Premium!", 5000, 3);
							PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajudacarro para ver os comandos");
							Controle(playerid, 1);
							SaveCars();
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso!");
							RemovePlayerFromVehicleEx(playerid);
						}
						return true;
					}
  					else if(PlayerInfo[playerid][pCarKey5] == 0)
					{
						if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
						{
							PlayerInfo[playerid][pCarKey5] = i+totalveiculosc;
							PlayerInfo[playerid][pVeiculo5] = i;
							CarInfo[i][cOwned] = 1;
							CarOffered[playerid]=0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
							GivePlayerMoney(playerid,-CarInfo[i][cValue]);
							GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro Premium!", 5000, 3);
							PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajudacarro para ver os comandos");
							Controle(playerid, 1);
							SaveCars();
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso!");
							RemovePlayerFromVehicleEx(playerid);
						}
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/vendermeucarro2", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,COLOR_GREY,"Você precisa estar no seu veiculo VIP!");
				return 1;
			}
  			new vehid = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0 && PlayerInfo[playerid][pCarKey4] == 0&& PlayerInfo[playerid][pCarKey5] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem um Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid && PlayerInfo[playerid][pCarKey4] != vehid && PlayerInfo[playerid][pCarKey5] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é seu Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo]][cOwner], true) == 0)
			{
				new car = PlayerInfo[playerid][pVeiculo];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
			    CarInfo[car][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[car][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Veiculo VIP Vendido Por:~g~$%d", CarInfo[car][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				PlayerInfo[playerid][pCarKey] = 0;
				PlayerInfo[playerid][pVeiculo] = 0;
				SaveCars();
				return true;
			}
			else if(PlayerInfo[playerid][pCarKey2] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo2]][cOwner], true) == 0)
			{
				new car = PlayerInfo[playerid][pVeiculo2];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
		  		CarInfo[car][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[car][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				PlayerInfo[playerid][pCarKey2] = 0;
				PlayerInfo[playerid][pVeiculo2] = 0;
				SaveCars();
				return true;
			}
			else if(PlayerInfo[playerid][pCarKey3] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo3]][cOwner], true) == 0)
			{
				new car = PlayerInfo[playerid][pVeiculo3];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
		  		CarInfo[car][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[car][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				PlayerInfo[playerid][pCarKey3] = 0;
				PlayerInfo[playerid][pVeiculo3] = 0;
				SaveCars();
				return true;
			}
			else if(PlayerInfo[playerid][pCarKey4] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo4]][cOwner], true) == 0)
			{
				new car = PlayerInfo[playerid][pVeiculo4];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
		  		CarInfo[car][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[car][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				PlayerInfo[playerid][pCarKey4] = 0;
				PlayerInfo[playerid][pVeiculo4] = 0;
				SaveCars();
				return true;
			}
 			else if(PlayerInfo[playerid][pCarKey5] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo5]][cOwner], true) == 0)
			{
				new car = PlayerInfo[playerid][pVeiculo5];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
		  		CarInfo[car][cColorTwo] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				GivePlayerMoney(playerid,CarInfo[car][cValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				Controle(playerid, 1);
				PlayerInfo[playerid][pCarKey5] = 0;
				PlayerInfo[playerid][pVeiculo5] = 0;
				SaveCars();
				return true;
			}
		}
		return true;
	}
	
//------------------------ Dominar --------------------------
	if(strcmp(cmd, "/territorio", true) == 0 || strcmp(cmd, "/tr", true) == 0)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsAPlane(carid))
		{
	   		SendClientMessage(playerid, COLOR_GRAD5, "Você não pode usar esse comando dentro de um heli ou avião.");
	    	return true;
	    }
		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)// PM
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
   			}
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estão Tomando o controle do Morro",playername);
				OOCLosSantos(COR_PM,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}
   			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estão Tomando o controle da mansão do madd dogg",playername);
				OOCLosSantos(COR_PM,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
       			TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estão Tomando o controle do Parque Gleen",playername);
				OOCLosSantos(COR_PM,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
       			TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estão Tomando o controle da Estacao Unity!",playername);
				OOCLosSantos(COR_PM,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
       			TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estão Tomando o controle do casarão",playername);
				OOCLosSantos(COR_PM,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
       			TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)// Rotam
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Rotam estão Tomando o controle do Morro",playername);
				OOCLosSantos(COR_BOPE,string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 45 segundos para Tomar esta area .");
    		    GangZoneFlashForAll(GZMorro,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	   				return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Rotam estão Tomando o controle do Parque Gleen",playername);
				OOCLosSantos(COR_BOPE,string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
    			TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	   				return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Rotam estão Tomando o controle da mansão do madd dogg",playername);
				OOCLosSantos(COR_BOPE,string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
    			TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}
//===================================================================

			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	   				return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Rotam estão Tomando o controle da Estacao Unity",playername);
				OOCLosSantos(COR_BOPE,string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
    			TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	   				return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Rotam estão Tomando o controle do casarão",playername);
				OOCLosSantos(COR_BOPE,string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,CORGZ_COPS);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
    			TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está em nenhum território!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)// Los Aztecas
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }

		    if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Aztecas estão tomando o territorio do Morro",playername);
				OOCLosSantos(TEAM_AZTECAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Aztecas estão tomando o territorio da mansão do madd dogg",playername);
				OOCLosSantos(TEAM_AZTECAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZMaddDogg,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Aztecas estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(TEAM_AZTECAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZPark,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}
//======================================================

			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Aztecas estão tomando o territorio da Estacao Unity",playername);
				OOCLosSantos(TEAM_AZTECAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZEstacao,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Aztecas estão tomando o territorio do casarão",playername);
				OOCLosSantos(TEAM_AZTECAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZCasarao,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)// PCC
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os PCC estão tomando o territorio do Morro",playername);
				OOCLosSantos(COR_PCC,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estão tomando o territorio da mansão do madd dogg",playername);
				OOCLosSantos(COR_PCC,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZMaddDogg,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(COR_PCC,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZPark,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}
//==============================================================

			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estão tomando o territorio da Estacao Unity",playername);
				OOCLosSantos(COR_PCC,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZEstacao,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estão tomando o territorio do casarão",playername);
				OOCLosSantos(COR_PCC,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
    	        GangZoneFlashForAll(GZCasarao,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)// CV
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
		    if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e o Comando Vermelho estão tomando o territorio do Morro",playername);
				OOCLosSantos(COR_CVSF,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,COR_CVSF);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
        		TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho estão tomando o territorio da mansão do madd dogg",playername);
				OOCLosSantos(COR_CVSF,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,COR_CVSF);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(COR_CVSF,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,COR_CVSF);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}

//=============================================================
			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho estão tomando o territorio da Estacao Unity",playername);
				OOCLosSantos(COR_CVSF,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,COR_CVSF);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho estão tomando o territorio do casarão",playername);
				OOCLosSantos(COR_CVSF,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,COR_CVSF);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)// Groove Street
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estão tomando o territorio do Morro",playername);
				OOCLosSantos(TEAM_GROVE_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}


			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estão tomando o territorio da mansão do madd dogg",playername);
				OOCLosSantos(TEAM_GROVE_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(TEAM_GROVE_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
				}
//=======================================================================
			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estão tomando o territorio da Estacao Unity!",playername);
				OOCLosSantos(TEAM_GROVE_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estão tomando o territorio do casarão",playername);
				OOCLosSantos(TEAM_GROVE_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)// Ballas
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estão tomando o territorio do Morro",playername);
				OOCLosSantos(TEAM_BALLAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
        		TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estão tomando o territorio da mansão do madd dogg",playername);
				OOCLosSantos(TEAM_BALLAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(TEAM_BALLAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}

//==================================================================
			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estão tomando o territorio da Estacao Unity",playername);
				OOCLosSantos(TEAM_BALLAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estão tomando o territorio do casarão",playername);
				OOCLosSantos(TEAM_BALLAS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)// Los Vagos
		{
			if(!IsPlayerInLosSantos(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no territorio de sua cidade");
			    return 1;
			    }
			if(PlayerToPoint(9.5,playerid,2155.4438,-1010.9413,62.9640))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Vagos estão tomando o territorio do Morro",playername);
				OOCLosSantos(TEAM_VAGOS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMorro,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoMorro[playerid] = 1;
                GuerranoMorro = 1;
       			TempoGuerraMorro = SetTimerEx("GuerraMorro", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1972.9639,-1236.0793,20.0549))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Vagos estão tomando o territorio do Parque Gleen",playername);
				OOCLosSantos(TEAM_VAGOS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 40000, 0, "i", playerid);
				return true;
			}

			if(PlayerToPoint(9.5,playerid,1282.9896,-827.0242,83.1406))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Vagos estão tomando o territorio da mansão do madd dogg  !",playername);
				OOCLosSantos(TEAM_VAGOS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZMaddDogg,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 40000, 0, "i", playerid);
				return true;
			}
//================================================
			if(PlayerToPoint(8.5,playerid,1722.8297,-1939.5002,13.5826))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Vagos estão tomando o territorio da Estacao Unity",playername);
				OOCLosSantos(TEAM_VAGOS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZEstacao,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
   				TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 40000, 0, "i", playerid);
				return true;
			}
			if(PlayerToPoint(9.5,playerid,1242.5645,-2036.7051,60.0828))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Vagos estão tomando o territorio do casarão",playername);
				OOCLosSantos(TEAM_VAGOS_COLOR,string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 45 segundos para Tomar esta area .");
                GangZoneFlashForAll(GZCasarao,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
   				TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 40000, 0, "i", playerid);
				return true;
			}


			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/guerra", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid,CINZA," Você não pode criar guerra na cadeia!");
			return true;
    	}
  	    if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, CINZA, "   Já está tendo uma guerra!");
            return true;
        }
		new Float:x,Float:y,Float:z;
		if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)// EXE
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o Exército iniciaram uma Guerra.Evitem a área!",playername);
	        SendClientMessageToAll(COLOR_EXE, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
            Territorio[GImortos] = 0;
            GuerraMinX = x-120;
			GuerraMinY = y-120;
			GuerraMaxX = x+120;
			GuerraMaxY = y+120;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_EXE);
	    	BPHInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)// GIA
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o GIA iniciaram uma Guerra.Evitem a área!",playername);
	        SendClientMessageToAll(COR_GIA, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
            Territorio[GImortos] = 0;
            GuerraMinX = x-120;
			GuerraMinY = y-120;
			GuerraMaxX = x+120;
			GuerraMaxY = y+120;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_GIA);
	    	BPHInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)// GI
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a FARC iniciaram uma Guerra.Evitem a área!",playername);
	        SendClientMessageToAll(COR_FARC, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
            Territorio[GImortos] = 0;
            GuerraMinX = x-120;
			GuerraMinY = y-120;
			GuerraMaxX = x+120;
			GuerraMaxY = y+120;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_ALCAIDA);
	    	BPHInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
  		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)// F    ARC
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a Guerrilheiros Israelitas iniciaram uma Guerra.Evitem a área!",playername);
	        SendClientMessageToAll(COR_GI, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
            Territorio[GImortos] = 0;
            GuerraMinX = x-120;
			GuerraMinY = y-120;
			GuerraMaxX = x+120;
			GuerraMaxY = y+120;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_GI);
	    	BPHInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		return true;
	}
//====================


	if(strcmp(cmd, "/minhaidade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /minhaidade [idade]");
				return 1;
			}
            new amount;
			amount = strval(tmp);
		   	if(amount > 90 || amount < 1)
   			{
  				SendClientMessage(playerid, COLOR_LIGHTRED, "A Sua idade não pode ser menor a 1 nem maior a 90!");
	  			return 1;
	  		}
			PlayerInfo[playerid][pAge] = amount;
			format(string, sizeof(string), "Você editou a sua idade para: %d anos!", amount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/skydive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				if (IsPlayerConnected(playerid))
				{
					XXAirBreak[playerid] += 3;SetPlayerPos(playerid,slx, sly, slz+2500);
					SendClientMessage(playerid, COLOR_LIGHTRED, "UUUUP!!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/registrados", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1337)
	{
    	new info[256];
    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "~************* TOTAL DE USUARIOS REGISTRADOS NO BPH *************~");
    	format(info, sizeof(info), "~Quantidade de players Registrados no Brasil PlayHappy = %d Jogadores~",TotalRegistro);
    	SendClientMessage(playerid, COLOR_LIGHTBLUE, info);
    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "~****************************************************************~");
    	return 1;
	}
	if(strcmp(cmd, "/testetempo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
			    return 1;
			}

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /tempo [tempoid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return 1; }
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_GREY, "   Tempo setado!");
		}
		return 1;
	}
	if(strcmp(cmd, "/desligarcel", true) == 0)
	{
 		if(PlayerInfo[playerid][pVIP] < 1 && PlayerInfo[playerid][pAdmin] < 1)
	    {
      		SendClientMessage(playerid, COLOR_GRAD2, "   Você não é	jogador VIP ou ADM");
		    return 1;
		}
		if (!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Você desligou seu celular");
			CellTime[playerid] = 0;
			Mobile[playerid] = 255;
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		else if (PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Você ligou seu celular");
		}
		return true;
	}
	
	if(strcmp(cmd, "/desligarCHAT", true) == 0)
	{
 		if(PlayerInfo[playerid][pVIP] < 1)
	    {
      		SendClientMessage(playerid, COLOR_GRAD2, "   Você não é	jogador VIP");
		    return 1;
		}
		if (!cVIPc[playerid])
		{
			cVIPc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "   Chat VIP Desativado!");
		}
		else if(cVIPc[playerid])
		{
			cVIPc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "   Chat VIP Ligado");
		}
		return true;
	}
	if(strcmp(cmd, "/setarmat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
	 	{
			CofreOrg[5][Materiais] = CofreOrg[5][Materiais]+10000; //
			CofreOrg[6][Materiais] = CofreOrg[6][Materiais]+10000; //
			CofreOrg[8][Materiais] = CofreOrg[8][Materiais]+10000; //
			CofreOrg[14][Materiais] = CofreOrg[14][Materiais]+10000; //
			CofreOrg[15][Materiais] = CofreOrg[15][Materiais]+10000; //
			CofreOrg[17][Materiais] = CofreOrg[17][Materiais]+10000; //
			CofreOrg[18][Materiais] = CofreOrg[18][Materiais]+10000; //
			CofreOrg[19][Materiais] = CofreOrg[19][Materiais]+10000; //
			CofreOrg[20][Materiais] = CofreOrg[20][Materiais]+10000; //
			CofreOrg[21][Materiais] = CofreOrg[21][Materiais]+10000; //
			CofreOrg[22][Materiais] = CofreOrg[22][Materiais]+10000; //
			CofreOrg[23][Materiais] = CofreOrg[23][Materiais]+10000; //
			CofreOrg[24][Materiais] = CofreOrg[24][Materiais]+10000; //
			CofreOrg[25][Materiais] = CofreOrg[25][Materiais]+10000; //
			CofreOrg[26][Materiais] = CofreOrg[26][Materiais]+10000; //
			CofreOrg[28][Materiais] = CofreOrg[28][Materiais]+10000; //
			CofreOrg[29][Materiais] = CofreOrg[29][Materiais]+10000; //
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"	Você setou 10000 de materiais para todas as gangs");
			return true;
			}
		}
		
 	if(strcmp(cmd, "/setardrogas", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
	 	{
			CofreOrg[5][Maconha] = CofreOrg[5][Maconha]+1000; //
			CofreOrg[6][Maconha] = CofreOrg[6][Maconha]+1000; //
			CofreOrg[8][Maconha] = CofreOrg[8][Maconha]+1000; //
			CofreOrg[14][Maconha] = CofreOrg[14][Maconha]+1000; //
			CofreOrg[15][Maconha] = CofreOrg[15][Maconha]+1000; //
			CofreOrg[17][Maconha] = CofreOrg[17][Maconha]+1000; //
			CofreOrg[18][Maconha] = CofreOrg[18][Maconha]+1000; //
			CofreOrg[19][Maconha] = CofreOrg[19][Maconha]+1000; //
			CofreOrg[20][Maconha] = CofreOrg[20][Maconha]+1000; //
			CofreOrg[21][Maconha] = CofreOrg[21][Maconha]+1000; //
			CofreOrg[22][Maconha] = CofreOrg[22][Maconha]+1000; //
			CofreOrg[23][Maconha] = CofreOrg[23][Maconha]+1000; //
			CofreOrg[24][Maconha] = CofreOrg[24][Maconha]+1000; //
			CofreOrg[25][Maconha] = CofreOrg[25][Maconha]+1000; //
			CofreOrg[26][Maconha] = CofreOrg[26][Maconha]+1000; //
			CofreOrg[28][Maconha] = CofreOrg[28][Maconha]+1000;
			CofreOrg[29][Maconha] = CofreOrg[29][Maconha]+1000; //
			SendClientMessage(playerid, COLOR_WHITE,"	Você setou 1000 de drogas para todas as gangs.");
			return true;
			}
		}
		
	if(strcmp(cmd, "/connectnpc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3001)
			{
                ConnectNPC("X1_BOM","Carinha");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
		
	if(strcmp(cmd,"/gravidadenormal",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um administrador !");
	            return 1;
	        }
			SetGravity(Float:0.008);
			SendClientMessageToAll( COLOR_LIGHTBLUE, "Graviade mudada para: normal.");
		}
		return 1;
	}
		
	if(strcmp(cmd,"/gravidadepesada",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um administrador !");
	            return 1;
	        }
			SetGravity(Float:0.018);
			SendClientMessageToAll( COLOR_LIGHTBLUE, "Graviade mudada para: pesada.");
		}
		return 1;
	}
	if(strcmp(cmd,"/gravidadeleve",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um administrador !");
	            return 1;
	        }
			SetGravity(Float:0.004);
			SendClientMessageToAll( COLOR_LIGHTBLUE, "Graviade mudada para: leve.");
		}
		return 1;
	}

	
	if (strcmp(cmd, "/andar", true) == 0)
	{
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp)) return SendClientMessage(playerid,-1,"USE: /andar [0-27]");
		SetPlayerWalkingStyle(playerid, strval(tmp));
		format(string, sizeof(string), "Stilo de andar numero: %d", strval(tmp));
		SendClientMessage(playerid, COLOR_WHITE, string);
		return true;
	}
	
	if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else
						{
							format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						TextDrawShowForPlayer(giveplayerid, TextKick[giveplayerid]);
						Kick(giveplayerid);
						return true;
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}


	if(strcmp(cmd, "/ajudaouros", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE,"_______________________________________ AJUDA OUROS ________________________________________");
 			SendClientMessage(playerid, COLOR_WHITE, "O sistema de OUROS foi criado para proteger sua grana e evitar possíveiS BUGs.");
		    SendClientMessage(playerid, COLOR_WHITE,"Acontece quando tem uma quantidade muito grande de dinheiro em mãos ou no Banco, ele fica Negativo.");
			SendClientMessage(playerid, COLOR_WHITE,"Pode acontecer quando tiver mais de 1kkk(R$1000000000) no banco ou mais de 10kk(R$10000000) em mãos.");
			SendClientMessage(playerid, COLOR_WHITE,"Os OUROS funcionam da seguinte Forma:");
			SendClientMessage(playerid, COLOR_WHITE,"Cada OURO é o equivalente a 100k(R$100000) [1 OURO = R$100000]");
            SendClientMessage(playerid, COLOR_WHITE,"Você pode ver a quantidade de OUROS que você tem digitando /RG.");
            SendClientMessage(playerid, COLOR_WHITE,"Para você Sacar ou Depositar OUROS você precisa estar em um Banco.");
            SendClientMessage(playerid, COLOR_WHITE,"USE: /comprarouros [Quantidade] OU /venderouros [Quantidade].");
            SendClientMessage(playerid, COLOR_WHITE,"_______________________________________________________________________________________________________");
			return true;
		}
	}
	
	if(strcmp(cmd, "/VIP", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE,"_____________________________ CONTAS VIP ______________________________");
 			format(string, 128, "Olá %s, é um prazer ter você no servidor!!", PlayerName(playerid));
 			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Temos dois tipos de contas VIPS, são: VIP e VIP-POWER");
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Pagando VIP/VIP-POWER você terá muitos beneficios no servidor como: /v (chat VIP)");
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Mansões VIPS, Empresas, Carros VIPS, KIT-VIP em lojas de armas, Dinheiro, Niveis");
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** /relatorio com Cor diferenciada, não irá para o Hospital, não terá contratos com empregos e MUITO mais!");
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Para saber como adquirir uma conta VIP/VIP-POWER, acesse nosso forum USE: /forum.");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"** OU pergunte para um admin ou Helper usando /relatorio E /duvida");
            SendClientMessage(playerid, COLOR_WHITE,"__________________________________________________________________________________");
			return true;
		}
	}
	
	
	if(strcmp(cmd, "/pegarvip", true) == 0 || strcmp(cmd, "/pegarvipteste", true) == 0 || strcmp(cmd, "/testevip", true) == 0 || strcmp(cmd, "/VIPTeste", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
  			if(PlayerInfo[playerid][pPVIP] == 1)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Você ja pegou seu VIP de Teste!");
			    return true;
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Parabéns, você pegou seu VIP de Teste! você terá 2 horas para aproveita-lo, bom jogo!");
			SendClientMessage(playerid, COLOR_WHITE, "USE /tempovip para ver quanto tempo falta para acabar seu VIP Teste!");
			PlayerInfo[playerid][pPVIP] = 1;
			PlayerInfo[playerid][pVIP] = 1;
			PlayerInfo[playerid][pTimeVIP] = 7200;
	        return true;
		}
	}

	if(strcmp(cmd, "/ajudavip", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE,"_____________________________ Ajuda VIP ______________________________");
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Comandos VIPS disponiveis:");
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** /v [CHAT VIP] /kitVIP [Kit VIP em lojas de armas]");
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"** /desligarchat [Desligar chat VIP] /desligarcel [Desligar Celular]");
            SendClientMessage(playerid, COLOR_WHITE,"______________________________________________________________________");
			return true;
		}
	}
//==================skick================

	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /skick [Id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{

				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        format(string, sizeof(string), "Você kickou %s(ID: %d)",PlayerName(giveplayerid), giveplayerid);
				        SendClientMessage(playerid, COLOR_GRAD1, string);
				        TextDrawShowForPlayer(giveplayerid, TextKick[giveplayerid]);
                        Kick(giveplayerid);
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/reloadlog", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pAdmin] >= 1341)
	    	{
    			SendRconCommand("reloadlog");
				SendClientMessage(playerid, COLOR_WHITE, "  Os Logs do serviror foram recarregados!");
			}
			return true;
		}
	}
	
	if(strcmp(cmd, "/desligarserverBPH", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(PlayerInfo[playerid][pAdmin] >= 3001)
	    	{
	    	    if(strcmp(sendername,"dimmy_scarface",true)==0 || strcmp(sendername,NOME1,true)==0|| strcmp(sendername,NOME2,true)==0 || strcmp(sendername,NOME3,true)==0
				|| strcmp(sendername,NOME4,true)==0 || strcmp(sendername,NOME5,true)==0)
				{
    				SendRconCommand("exit");
				}
				else
				{
				   	SendClientMessage(playerid,COLOR_DBLUE ,"[ERRO] Comando não reconhecido no Servidor! Para ver alguns comandos úteis USE: /ajuda.");
				}
			}
			else
                SendClientMessage(playerid,COLOR_DBLUE ,"[ERRO] Comando não reconhecido no Servidor! Para ver alguns comandos úteis USE: /ajuda.");
			return true;
		}
	}
//============= kick ALL =================
	if(strcmp(cmd, "/kickALL", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /kickALL [motivo]");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pAdmin] < 1)
	    			{
  						format(string, sizeof(string), "AdmCmd: Admin %s kickou todos do server, motivo: %s", sendername, (result));
						SendClientMessage(i,COLOR_LIGHTRED, string);
						Kick(i);
						return true;
					}
					format(string, sizeof(string), "AdmCmd: Admin %s kickou todos do server, motivo: %s", sendername, (result));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
			else
			{
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/irh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /irh [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pHelper] >= 1)
					{
					    if(helpertrampando[playerid] < 1 && PlayerInfo[playerid][pHelper] != 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando ! (/helpajuda)");
							return true;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							XXAirBreak[playerid] += 3;SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, world);
						SendClientMessage(playerid, 0x33FF00FF, "Você foi teleportado pelo Admin !");
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						if(helpertrampando[playerid] == 1 && helperhide[playerid] == 1)
						{}
						else { format(string, sizeof(string), "Helper %s foi Até %s.",playername,plname); }
						ProxDetector(30.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
						format(string, sizeof(string), "Helper %s veio Até %s.",playername,plname);
						ProxDetector(30.0, plo, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aviso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
   				if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					if(strcmp(giveplayer,"dimmy_scarface",true)==0)
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Você não pode avisar o criador do server '-' !!!");
					    format(string, sizeof(string), "[Aviso] %s [ID: %d] tentou usar o comando /aviso em você!",PlayerName(playerid), playerid);
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						return true;
					}
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
						return true;
					}
					PlayerInfo[giveplayerid][pWarns] += 1;
					if(PlayerInfo[giveplayerid][pWarns] >= 3)
					{
						format(string, sizeof(string), "AdmCmd: %s foi automaticamente banido temporariamente (3 dias), Motivo: Passou de 3 avisos (%d-%d-%d)", giveplayer);
						BanLog(string);
						format(string, sizeof(string), "AdmCmd: %s foi avisado por %s, Motivo: %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "AdmCmd: %s foi banido temporariamente por 3 dias (Passou de 3 avisos)", giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						getdate(Ano, Mes, Dia);
						PlayerInfo[giveplayerid][pDiaBanTemp] = Dia+3;
						PlayerInfo[giveplayerid][pMesBanTemp] = Mes;
						PlayerInfo[giveplayerid][pAnoBanTemp] = Ano;
						if(PlayerInfo[giveplayerid][pMesBanTemp] == 1 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 2 && PlayerInfo[giveplayerid][pDiaBanTemp] > 28)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 28;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
 						if(PlayerInfo[giveplayerid][pMesBanTemp] == 3 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
 						if(PlayerInfo[giveplayerid][pMesBanTemp] == 4 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 5 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 6 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 7 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 8 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 9 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 10 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 11 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] == 12 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
						{
							PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
							PlayerInfo[giveplayerid][pMesBanTemp]++;
						}
      					if(PlayerInfo[giveplayerid][pMesBanTemp] > 12)
						{
							PlayerInfo[giveplayerid][pMesBanTemp] -= 12;
							PlayerInfo[giveplayerid][pAnoBanTemp]++;
						}
						OnPlayerSave(giveplayerid);
						BanTemp(giveplayerid, "Terceiro aviso", PlayerName(playerid));
						return true;
					}
					format(string, sizeof(string), "AdmCmd: %s foi avisado por %s, Motivo: %s", giveplayer, sendername, (result));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return true;
	}

//----------------------------------[descongelar]------------------------------------------------
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 3001)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir este admin!");
							return true;
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{

							format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else
						{

							format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						PlayerInfo[giveplayerid][pBan] = 1;
						TextDrawShowForPlayer(giveplayerid, TextBan[giveplayerid]);
						SBan(giveplayerid, result, PlayerName(playerid));
						return true;
					}
				}//not connected
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
    }
    

	if(strcmp(cmd, "/bantemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [id] [dias] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 3001)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir este admin!");
							return true;
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
	    				tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [id] [dias] [motivo]");
							return true;
						}
						new diasban = strval(tmp);
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [id] [dias] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(diasban > 9999)
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "[ERRO] Você definiu muitos dias!");
						    return 1;
						}
						format(string, sizeof(string), "AdmCmd: %s foi banido temporariamente (%d dias) por %s, Motivo: %s (%d-%d-%d)", giveplayer, diasban, sendername, (result),day,month,year);
						BanLog(string);
						format(string, sizeof(string), "AdmCmd: %s foi banido temporariamente (%d dias) por %s, Motivo: %s", giveplayer, diasban, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						PlayerInfo[giveplayerid][pDiaBanTemp] = day+diasban;
						PlayerInfo[giveplayerid][pMesBanTemp] = month;
						PlayerInfo[giveplayerid][pAnoBanTemp] = year;
						for(new dias = 1; dias < diasban; dias++)
						{
							if(PlayerInfo[giveplayerid][pMesBanTemp] == 1 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 2 && PlayerInfo[giveplayerid][pDiaBanTemp] > 28)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 28;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
 							if(PlayerInfo[giveplayerid][pMesBanTemp] == 3 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
 							if(PlayerInfo[giveplayerid][pMesBanTemp] == 4 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 5 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 6 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 7 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 8 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 9 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 10 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 11 && PlayerInfo[giveplayerid][pDiaBanTemp] > 30)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 30;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] == 12 && PlayerInfo[giveplayerid][pDiaBanTemp] > 31)
							{
								PlayerInfo[giveplayerid][pDiaBanTemp] -= 31;
								PlayerInfo[giveplayerid][pMesBanTemp]++;
							}
      						if(PlayerInfo[giveplayerid][pMesBanTemp] > 12)
							{
								PlayerInfo[giveplayerid][pMesBanTemp] -= 12;
								PlayerInfo[giveplayerid][pAnoBanTemp]++;
							}
						}
						OnPlayerSave(giveplayerid);
						TextDrawShowForPlayer(giveplayerid, TextBan[giveplayerid]);
						BanTemp(giveplayerid, result, PlayerName(playerid));
						return true;
					}
				}//not connected
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
    }
	if(strcmp(cmd, "/sban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sban [id] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 3001)
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "Você não pode banir este admin!");
							return true;
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /sban [id] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "Secret-Ban: %s foi banido secretamente por Gasparzinho(Modo Cia), Motivo: %s (%d-%d-%d)", giveplayer,(result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "Secret-Ban: Você baniu %s Secretamente, Motivo: %s", giveplayer,(result));
							SendClientMessage(playerid, 0x902E2DAA, string);
							format(string, sizeof(string), "Secret-Ban: Você foi banido por Gasparzinho, Motivo: %s", giveplayer,(result));
							SendClientMessage(giveplayerid, 0x902E2DAA, string);
						}
						else
						{
							format(string, sizeof(string), "Secret-Ban: %s foi banido secretamente por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "Secret-Ban: Você baniu %s Secretamente, Motivo: %s", giveplayer,(result));
							SendClientMessage(playerid, 0x902E2DAA, string);
							format(string, sizeof(string), "Secret-Ban: Você foi banido Secretamente por %s, Motivo: %s", sendername, (result));
							SendClientMessage(giveplayerid, 0x902E2DAA, string);
						}

						PlayerInfo[giveplayerid][pBan] = 1;
						TextDrawShowForPlayer(giveplayerid, TextBan[giveplayerid]);
						SBan(giveplayerid, result, PlayerName(playerid));
						return true;
					}
				}//not connected
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
    }
 	if(strcmp(cmd, "/pdm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				PayDayManual(playerid);
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/congelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /congelar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < SUB_GERENTE)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode congelar um Admin Dono !");
							return true;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 0);
						format(string, sizeof(string), "AdmCmd: %s Congelou %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s Foi congelado por %s",giveplayer ,PlayerName(playerid));
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

//----------------------------------[descongelar]------------------------------------------------
	if(strcmp(cmd, "/descongelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /descongelar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 1);
						format(string, sizeof(string), "AdmCmd: %s Descongelou %s",sendername,  giveplayer);
						printf("%s",string);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "AdmCmd: %s Foi descongelado por Gasparzinho",giveplayer);
						}
						else
						{
							format(string, sizeof(string), "AdmCmd: %s Foi descongelado por %s",giveplayer ,PlayerName(playerid));
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

//----------------------------------[Setar emprego]-----------------------------------------------
	if(strcmp(cmd, "/setemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setemprego [playerid/ParteDoNome] [empregoid)]");
				return true;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= SUB_DONO)
			{
       			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pEmprego] = jobid;
						SendClientMessage(playerid, COLOR_GRAD1, "   Emprego setado com sucesso !");
					}
				}
			}
			else
			{
				QQIssoNovinha;
			}
		}
		return true;
	}

	
	if(strcmp(cmdtext, "/admsecreto", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if(admhide[playerid] == 1)
			{
				admhide[playerid] = 0;
				SendClientMessage(playerid,COLOR_GRAD2,"Você está jogando como admin Visível");
				SetPlayerToTeamColor(playerid);
			}
			else
			{
				admhide[playerid] = 1;
				SendClientMessage(playerid,COLOR_GRAD2,"Você está jogando como admin Invisível");
				SetPlayerToTeamColor(playerid);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
		SendClientMessage(playerid, COR_ADMIN, "Admins Online:");
		for(new i = 0; i <= MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0)
			{
				if(admhide[i] == 0)
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					new lolz[20];
				    if(PlayerInfo[i][pAdmin] == 1)
				    {
						lolz = "1";
					}
					if(PlayerInfo[i][pAdmin] == 2)
				    {
						lolz = "2";
					}
					if(PlayerInfo[i][pAdmin] == 3)
				    {
						lolz = "3";
					}
					if(PlayerInfo[i][pAdmin] == 4)
				    {
						lolz = "4";
					}
					if(PlayerInfo[i][pAdmin] >= 5 && PlayerInfo[i][pAdmin] <= 1340)
				    {
						lolz = "MASTER";
					}
					if(PlayerInfo[i][pAdmin] >= 1341 && PlayerInfo[i][pAdmin] <= 3000)
				    {
						lolz = "SUB-DONO";
					}
					if(PlayerInfo[i][pAdmin] >= 3001)
				    {
						lolz = "DONO";
					}
					if(away[i] == 0)
					{
					    if(admtrampando[i] == 1)
					    {
							format(string, 128, "Admin: %s Nivel:[%s] \n", sendername, lolz);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
						}
						else
					    {
							format(string, 128, "Admin: %s Nivel:[%s][JOGANDO]\n", sendername, lolz);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
						}

					}
					else
					{
						format(string, 128, "Admin: %s Nivel:[%s][AFK]\n", sendername, lolz);
                        SendClientMessage(playerid,COLOR_GRAD1,string);
						strcat(gstring,string);
					}

				}
			}
		}
		return true;
	}


//-0-0-0-0-
	if(strcmp(cmd, "/criarhelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
     	{
	    	if(PlayerInfo[playerid][pAdmin] < 1337)
	    	{
				QQIssoNovinha;
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criarhelper [id] [Nivel(de 1 a 300)]");
				return 1;
			}
			new para2;
			new level2;
			para2 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /criarhelper [id] [Nivel(de 1 a 300)]");
				return 1;
			}
			level2 = strval(tmp);
			if(level2 == 0)
			{

			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(para2, giveplayer, sizeof(giveplayer));
		    if(IsPlayerConnected(para2))
		    {
		        if(para2 != INVALID_PLAYER_ID)
		        {
       				format(string, sizeof(string), "   Você promoveu %s Para Helper Nivel %d", giveplayer,level2);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Você foi promovido a nivel %d de Helper, pelo admin %s", level2, sendername);
					SendClientMessage(para2, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu Helper nivel %d para %s [%d/%d/%d] ás [%d:%d:%d].", sendername, level2, giveplayerid, day,
					month, year, hour, minute, second);
					PHelpersLog(string);
					PlayerInfo[para2][pHelper] = level2;
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/helpers", true) == 0)
	{
		SendClientMessage(playerid, COR_HELPER, "Helpers Online:");
		for(new i = 0; i <= MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pHelper] > 0)
			{
				if(helperhide[i] == 0)
				{
    				GetPlayerName(i, sendername, sizeof(sendername));
					if(away[i] == 0)
					{
					    if(helpertrampando[i] == 1)
					    {
							format(string, 128,"Helper: %s Nivel:[%d][Ajudando]\n", sendername, PlayerInfo[i][pHelper]);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
						}
						else
				    	{
							format(string, 128, "Helper: %s Nivel:[%d] \n", sendername, PlayerInfo[i][pHelper]);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
						}

					}
					else
					{
						format(string, 128, "Helper %s Nivel:[%d] (AFK)\n", sendername, PlayerInfo[i][pHelper]);
                        SendClientMessage(playerid,COLOR_GRAD1,string);
					}
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/jogar", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode trabalhar na cadeia!");
	      	return true;
	    }
		if(AdmHelperComido[playerid] == 1)
		{
			format(string,sizeof(string),"Você não pode usar este comando com tanta Frequencia! espere um pouco");
			SendClientMessage(playerid, COLOR_GRAD1, string);
			return true;
		}
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(admtrampando[playerid] > 0)
			{
				admtrampando[playerid] = 0;
				AdmHelperComido[playerid] = 1;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 128, " Admin %s entrou em modo Jogo, e seus comandos foram retirados!",sendername, playerid);
				ABroadCast(COLOR_YELLOW2,string,1);
    			Buceta[playerid] = SetTimerEx("Pomba", 50000, 0, "i", playerid);
				SetPlayerToTeamColor(playerid);
				SetPlayerHealth(playerid,100);
				getdate(year, month, day);
				gettime(hour,minute,second);
				format(gstring, sizeof(gstring), "%s esta jogando [%d/%d/%d - %d:%d:%d]\n", PlayerName(playerid), day, month, year, hour, minute, second);
				AdminLog(gstring);
			}
			else
			{
				admtrampando[playerid] = 1;
				AdmHelperComido[playerid] = 1;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 128, " Admin %s saiu de modo jogo, e seus comandos foram devolvidos!",sendername, playerid);
     			ABroadCast(COLOR_YELLOW2,string,1);
       			SetPlayerToTeamColor(playerid);
                SetPlayerHealth(playerid, 99999);
                Buceta[playerid] = SetTimerEx("Pomba", 50000, 0, "i", playerid);
				getdate(year, month, day);
				gettime(hour,minute,second);
				format(gstring, sizeof(gstring), "%s esta trabalhando [%d/%d/%d - %d:%d:%d]\n", PlayerName(playerid), day, month, year, hour, minute, second);
				AdminLog(gstring);
           }
		}
		return true;
	}

    if(strcmp(cmd, "/helpajudar", true) == 0 || strcmp(cmd, "/helpajuda", true) == 0)
    {
        if(PlayerInfo[playerid][pHelper] >= 1)
        {
      		if(AdmHelperComido[playerid] == 1)
			{
				format(string,sizeof(string),"Você não pode usar este comando com tanta Frequencia! espere um pouco");
				SendClientMessage(playerid, COLOR_GRAD1, string);
				return true;
			}
            if(helpertrampando[playerid] > 0)
            {
                helpertrampando[playerid] = 0;
                AdmHelperComido[playerid] = 1;
                GetPlayerName(playerid,sendername,sizeof(sendername));
                format(string, 256, "Helper %s saiu de modo ajuda, e seus comandos foram retirados",sendername);
                SetPlayerToTeamColor(playerid);
                SendClientMessage(playerid, COLOR_YELLOW, "Agora você não receberá duvidas de players que precisam!");
     			Buceta[playerid] = SetTimerEx("Pomba", 50000, 0, "i", playerid);
				ChatHelperAdmin(COLOR_YELLOW2, string);
                SetPlayerHealth(playerid,100);
           		format(string, sizeof(string), "Helper %s saiu de modo ajuda.",sendername);
    			ProxDetector(30.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
            }
            else
            {
                helpertrampando[playerid] = 1;
                AdmHelperComido[playerid] = 1;
                GetPlayerName(playerid,sendername,sizeof(sendername));
                format(string, 256, "Helper %s entrou em modo ajuda, e seus comandos foram dados!",sendername);
                ChatHelperAdmin(COLOR_YELLOW2, string);
                SendClientMessage(playerid, COLOR_YELLOW, "Agora você receberá duvidas de players que precisam!");
				Buceta[playerid] = SetTimerEx("Pomba", 50000, 0, "i", playerid);
				SetPlayerToTeamColor(playerid);
				ResetPlayerWeaponsBPH(playerid);
                SetPlayerHealth(playerid, 99999);
               	format(string, sizeof(string), "Helper %s entrou em modo ajuda.",sendername);
    			ProxDetector(30.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando!");
        	return true;
	 	}
	 	return true;
    }
//-0-0-0-0-0
 	if (strcmp(cmd,"/Lideres",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,0xF66CDBF6, "Lideres online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
        			if(PlayerInfo[i][pLider] == 1)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Polícia Militar LS) ",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Rotam LS) ",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 3)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Exercito) ",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 4)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Medicos LS) ",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Aztecas LS) ",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 6)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (GIA)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 7)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Prefeitura)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 8)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Hitmans)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 9)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Reporteres LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 10)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Taxistas LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 11)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Policia Federal)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 12)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Máfia Cosa Nostra)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 13)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Máfia Yakuza)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 14)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Groove Street LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 15)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (FARC)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 16)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Rotam SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
     				else if(PlayerInfo[i][pLider] == 17)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Ballas LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 18)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Vagos LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 19)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Comando Vermelho LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 20)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Comando Vermelho SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
					else if(PlayerInfo[i][pLider] == 21)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (PCC LS)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
                    else if(PlayerInfo[i][pLider] == 22)

				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (The Triads)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
                    else if(PlayerInfo[i][pLider] == 23)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Guerrilheiros Israelitas)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}

     				else if(PlayerInfo[i][pLider] == 24)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (PCC SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}

                    else if(PlayerInfo[i][pLider] == 25)

				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Aztecas SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
                    else if(PlayerInfo[i][pLider] == 26)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Ballas SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
    				else if(PlayerInfo[i][pLider] == 27)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (PM SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
    				else if(PlayerInfo[i][pLider] == 28)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Vagos SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}


   				    else if(PlayerInfo[i][pLider] == 29)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Groove SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
 					else if(PlayerInfo[i][pLider] == 30)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Taxista SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
 					else if(PlayerInfo[i][pLider] == 31)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Medicos SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
 					else if(PlayerInfo[i][pLider] == 32)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Reporteres SF)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
 					else if(PlayerInfo[i][pLider] == 33)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (Policia Rodoviária)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
 					else if(PlayerInfo[i][pLider] == 34)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"%s (S.S.P)",sendername);
						SendClientMessage(playerid,GetPlayerColor(i),string);
					}
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd,"/sublideres",true) == 0 || strcmp(cmd,"/sub-lideres",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,0xF66CDBF6, "Sub-Lideres Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMembro] == 1 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Polícia Militar)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 1 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Polícia Militar)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 2 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Rotam)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 2 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Rotam)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 3 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Exercito)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 3 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Exercito)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 4 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Medicos)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 4 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Medicos)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 5 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Los Aztecas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 5 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Los Aztecas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 6 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (GIA)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 6 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (GIA)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 7 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Prefeitura)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 7 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Prefeitura)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 8 && PlayerInfo[i][pCargo] == 100)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Hitmans)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 8 && PlayerInfo[i][pCargo] == 200)
					{
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Hitmans)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 9 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Reporter)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 9 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Reporter)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 10 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Taxistas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 10 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Taxistas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 11 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Federal)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 11 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Federal)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 12 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Máfia Cosa Nostra)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 12 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Máfia Cosa Nostra)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 13 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Máfia Yakuza)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 13 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Máfia Yakuza)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 14 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Groove)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 14 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Groove)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 15 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (FARC)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 15 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (FARC)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 16 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Rotam-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 16 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Rotam-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 17 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Ballas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 17 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Ballas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 18 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Vagos)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 18 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Vagos)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 19 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Comando Vermelho)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 19 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Comando Vermelho)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 20 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Comando Vermelho-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 20 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Comando Vermelho-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 21 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (PCC)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 21 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (PCC)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 22 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Triads)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pMembro] == 22 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Triads)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 23 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Guerrilheiros Israelitas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
     				else if(PlayerInfo[i][pMembro] == 23 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Guerrilheiros Israelitas)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 24 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (PCC-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 24 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (PCC-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 25 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Aztecas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 25 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Aztecas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 26 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Ballas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 26 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Ballas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 27 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Militar-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 27 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Militar-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 28 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Vagos-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 28 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Vagos-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 29 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Groove-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 29 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Groove-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 30 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Taxistas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 30 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Taxistas-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 31 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Medicos-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 31 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Medicos-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 32 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Reporteres-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 32 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Reporteres-SF)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 33 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Rodoviária)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 33 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (Policia Rodoviária)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 34 && PlayerInfo[i][pCargo] == 100)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (S.S.P)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
 					else if(PlayerInfo[i][pMembro] == 34 && PlayerInfo[i][pCargo] == 200)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Sub-Lider: %s (S.S.P)\n",sendername);
                        SendClientMessage(playerid,GetPlayerColor(i),string);
						strcat(gstring,string);
					}
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/vips", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        //new DialogBPH[1500];
			SendClientMessage(playerid, COLOR_WHITE, "Vips Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pVIP] == 1 && PlayerInfo[i][pTimeVIP] <= 0)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s [VIP]\n", sendername);
                        SendClientMessage(playerid,0x00FFFFFF,string);
						strcat(gstring,string);
					}
	    			else if(PlayerInfo[i][pVIP] == 1 && PlayerInfo[i][pTimeVIP] > 0)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s [VIP TESTE]\n", sendername);
                        SendClientMessage(playerid,0x00FFFFFF,string);
						strcat(gstring,string);
					}
					else if(PlayerInfo[i][pVIP] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128, "%s [VIP-POWER]\n",sendername);
                        SendClientMessage(playerid,0xF6A586AA,string);
						strcat(gstring,string);
					}
				}
			}
		}
		return true;
	}

//----------------------------------[HELP]-----------------------------------------------
 	if(strcmp(cmd, "/ajuda2", true) == 0 || strcmp(cmd, "/help2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        Controle(playerid, 0);
	    	ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Ajuda", "Regras\nAjuda Player\nAjuda Empresa\nAjuda Casa\nAjuda Aluguel\nAjuda Celular\nAjuda Lider\nAjuda Emprego\nAjuda Pesca\nAjuda Cozinha\nAjuda Casamento\nNosso Forum\nAjuda VIP / VIP Premium\nConta VIP\n", "Selecionar", "Cancelar");
		}
		return true;
	}

	if(strcmp(cmd, "/creditos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
 			SendClientMessage(playerid, 0xFF8282AA, "Créditos aos criadores do GM The GodFather");
		    SendClientMessage(playerid, 0xFF8282AA,"Créditos a Thiago_Street por criar o BML em base GodFather e ter adicionado varios sistemas");
			SendClientMessage(playerid, 0xFF8282AA,"GM MegaLife editado e transformado em Brasil PlayHappy por dimmy_scarface");
			SendClientMessage(playerid, 0xFF8282AA,"Créditos a dimmy_scarface por refazer e criar varias orgs de LS e SF");
			SendClientMessage(playerid, 0xFF8282AA,"E ter feito a total edição do GM adicionando sistemas e criar a cidade de San Fierro");
            SendClientMessage(playerid, 0xFF8282AA,"Créditos a raphael_santos, idealizador de alguns sistemas do GameMode");
            SendClientMessage(playerid, 0xFF8282AA,"Créditos a jadson_scarface, por posicionar os veiculos policiais e idealizar a Secretaria de Segurança.");
            SendClientMessage(playerid, 0xFF8282AA,"Créditos a Itachi_Uchiha, Pelos TextDraw do /regras e alguns comandos");
            SendClientMessage(playerid, 0xFF8282AA,"Créditos ao GM Brasil PlayStars, Pelo sistema de araras");
			return true;
		}
	}
	
	if(strcmp(cmd, "/ajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GRAD2, "_____________________________________ Ajuda em Geral _____________________________________");
		    SendClientMessage(playerid, COLOR_GRAD1,"- Conta - /rg /comprarnivel /melhorar /animlist /minhaidade");
			SendClientMessage(playerid, COLOR_GRAD2,"- Geral - /pagar /infolideres /horas /comprar /desalugarcarro /darchaves /trocarchaves /beber /radio /mostrarlicencas");
			SendClientMessage(playerid, COLOR_GRAD2,"- Geral - /resetarmelhorias(100k) /trancar /habilidades /minhaslicencas /loteria /mudarlocal");
			SendClientMessage(playerid, COLOR_GRAD2,"- Geral - /relatorio /cancelar /aceitar /ejetar /usardrogas /contrato /lideres /sublideres /abastecer /servico /meuskin");
	  		SendClientMessage(playerid, COLOR_GRAD3,"- Chat - (/an)uncio (/f)amilia /eu /infoorg");
			SendClientMessage(playerid, COLOR_GRAD4,"- Banco - /sacar /depositar /transferir /comprarouros /venderouros");
            if(PlayerInfo[playerid][pEmprego] == 1)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /procurar");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 2)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /soltar /pp (Portão dos Presos)");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 3)
			{
		   		SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /transar");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 4)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /vendermaconha /vendercrack /vendercocaina");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 999)
			{
		   		SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /roubarcarro");
			}
			else if(PlayerInfo[playerid][pEmprego] == 12)
			{
		   		SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /poema");
			}
		    else if(GetPlayerOrg(playerid) == 9 || GetPlayerOrg(playerid) == 32)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Reporteres - /aovivo /noticias [Texto] /ga /pReporter");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 5)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /reparar /abastecercarro /guinchar /bcmec");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 6)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /proteger");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 7)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /materiais /venderarmas");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 99)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /vendercarro");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 8)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /lutar");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 9)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /corrida [preço]");
			}
		    else if(PlayerInfo[playerid][pEmprego] == 15)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Emprego - /papeis /produzir /entregar");
			}
		    if(GetPlayerOrg(playerid) == 34)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- S.S.P - /senha /mostrarsnha /cameras (/r)adio /definirsenha (/d)epartamento");
			}
		    if(GetPlayerOrg(playerid) == 5 || GetPlayerOrg(playerid) == 14 || GetPlayerOrg(playerid) == 17 || GetPlayerOrg(playerid) == 18 || GetPlayerOrg(playerid) == 19 || GetPlayerOrg(playerid) == 20 || GetPlayerOrg(playerid) == 21 || GetPlayerOrg(playerid) == 24
			|| GetPlayerOrg(playerid) == 25|| GetPlayerOrg(playerid) == 26|| GetPlayerOrg(playerid) == 27|| GetPlayerOrg(playerid) == 28 || GetPlayerOrg(playerid) == 29)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Gang - /tr (/ga)ngue (/al)iado /sequestrar /amarrar /refemliberar");
				SendClientMessage(playerid,COLOR_GRAD2,"- Gang - /desamarrar /equipargang");
			}
		    if(GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 15 || GetPlayerOrg(playerid) == 23)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Terroristas - (/ga) /sequestrar /amarrar /refemliberar /guerra /equipar");
			}
            if(GetPlayerOrg(playerid) == 8)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Hitmans - /laptop (/f)amilia /meucontrato");
			}
      		if(GetPlayerOrg(playerid) == 22)
	  		{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- The Triads - /laptop (/f)amilia /meucontrato");
			}
            if(GetPlayerOrg(playerid) == 10 || GetPlayerOrg(playerid) == 30)
			{
		    	SendClientMessage(playerid,COLOR_GRAD2,"- Taxistas - /corrida [preço] /pTaxi - Portão da HQ");
			}
			if (GetPlayerOrg(playerid) == 4 || GetPlayerOrg(playerid) == 31)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "- Medicos - (/r)adio (/d)epartmento /vida /batercartao /gov");
				SendClientMessage(playerid, COLOR_GRAD2, "- Medicos -  /emedicos - Sobe/desce o Elevador");
			}
 		    if(PlayerInfo[playerid][pEmprego] >= 1)
			{
		    	SendClientMessage(playerid,COLOR_WHITE,"- Emprego - /ce [CHAT EMPREGO]");
			}
			if (IsACop(playerid))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "- POLICIAIS - /dp - Para ver todos os Comandos Úteis");
			}
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudacasa /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha /ajuda2");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/dp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(IsACop(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GRAD2, "*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~* Ajuda do Departamento *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
			SendClientMessage(playerid, COLOR_GRAD2,"*** COMANDOS *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar ");
			SendClientMessage(playerid, COLOR_GRAD2,"*** COMANDOS *** /revistar /retirar /multar (/gov)erno /camera /arrombar /TR /br /rbr /rbrall");
			SendClientMessage(playerid, COLOR_GRAD2,"*** COMANDOS *** /pr /pg /pp /pp /pv /pregos /rpr /rprall /al (/imo)bilizar /pdpsf1 /pdpsf2");
			SendClientMessage(playerid, COLOR_GRAD2,"*** COMANDOS *** /abrirgn - Portão do Exército /prols - /prosf /ppf /pv - Portao vestiario /equipar");
			SendClientMessage(playerid, COLOR_GRAD2,"*** OUTROS *** /escudo - Coloca/retira um Escudo /ajuda2");
			SendClientMessage(playerid, COLOR_GRAD2,"*** OUTROS *** /refemsalvar /desamarrar /tirarfita /desvendar /ronda");
			SendClientMessage(playerid, COLOR_GRAD2, "*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
            }
	    }
		return 1;
	}
 	if(strcmp(cmd, "/ajudacelular", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"__________ Ajuda Celular __________");
			if (PlayerInfo[playerid][pPnumber] > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA CELULAR - Comandos Disponiveis:");
				SendClientMessage(playerid, COLOR_GRAD2,"- CELULAR - /ligar /sms (/at)ender (/des)ligar /telefone /desativar celular");
				SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajuda /ajudacasa /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE,"Você não possui um celular compre um na 24-7");
			}
		}
		return 1;
	}
	
 	if(strcmp(cmd, "/ajudaveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"*** Ajuda Veículo ***");
			if (PlayerInfo[playerid][pPnumber] > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA VEICULO - Comandos Disponiveis:");
				SendClientMessage(playerid, COLOR_GRAD2,"- VEÍCULO - /motor /farol /capo /alarme /trancar /velocimetro");
				SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajuda /ajudacasa /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE,"Você não possui um celular compre um na 24-7");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ajudacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"__________ Ajuda Casa __________");
			SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA CASA - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD2,"- CASA - /entrar /sair /abrir /mapacasa /MV (melhorar casa) /alugarcasa /trazercarro");
			SendClientMessage(playerid, COLOR_GRAD2,"- CASA - /carrocasa /corcarrocasa /aluguel /despejar /trancar /cofrecasa /fixarcarro");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudacalculadora", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"__________ Ajuda Calculadora __________");
			SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA CALCULADORA - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD2,"- CALCULADORA - /mais(somar) /menos(subtrair) /vezes(multiplicar /dividir(divisão)");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudaaluguel", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"_______________ Ajuda Aluguel _______________");
			SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA ALUGUEL - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD2,"- ALUGUEL - /desalugar /entrar /sair /trancar /casa");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudacasa /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
	}

	if(strcmp(cmd, "/ajudaempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"___________________________________ Ajuda Empresa ___________________________________");
			SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA EMPRESA - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD2,"- EMPRESA - /infoempresa /entradaemp /nomeemp /extorcao");
			SendClientMessage(playerid, COLOR_GRAD2,"- EMPRESA - /entrar /sair /abrir /venderempresa /sacaremp /depositaremp");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
	}

	if(strcmp(cmd, "/ajudalider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE,"___________________________________ Ajuda Líder ___________________________________");
		    if (PlayerInfo[playerid][pLider] >= 1)
		    {
				SendClientMessage(playerid, COLOR_GRAD2,"- AJUDA LIDER - Comandos Disponiveis:");
				SendClientMessage(playerid, COLOR_GRAD2,"- LIDER - /convidar /demitir /promover /desbugar");
				SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
				if(PlayerInfo[playerid][pLider] == 7)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"- PREFEITO - (/pre)feito /setartaxa (Taxa somente para Oficiais)");
					SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não e um lider!");
			    SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ajudapesca", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"______________________________ Ajuda Pesca ______________________________");
			SendClientMessage(playerid, COLOR_GRAD3,"- AJUDA PESCA - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD3,"- PESCA - /pescar (Tenta pegar um peixe)   /peixes (Mostra os peixes que você pegou)");
			SendClientMessage(playerid, COLOR_GRAD3,"- PESCA - /soltarultimo (Jogue o ultimo peixe você pegou de volta)   /soltartodos");
			SendClientMessage(playerid, COLOR_GRAD3,"- PESCA - /soltarpeixes (Solta peixes de um em um)");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudacozinha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"______________________________ Ajuda Cozinha ______________________________");
			SendClientMessage(playerid, COLOR_GRAD3,"- AJUDA COZINHA - Comandos Disponiveis:");
			SendClientMessage(playerid, COLOR_GRAD3,"- COZINHA - /cozinhar (Mostra as opcoes disponiveis)   /cozido (Mostra o que ja foi cozinhado)");
			SendClientMessage(playerid, COLOR_GRAD3,"- COZINHA - /comer (Come o que ja foi cozinhado)");
			SendClientMessage(playerid, COLOR_YELLOW,"- OUTROS - /ajudacelular /ajudaaluguel /ajudaempresa /ajudalider /ajudapesca /ajudacozinha");
		}
		return 1;
		}
//----------------------------------{Portoes DP}--------------------------------------------
	if(strcmp(cmd, "/pp", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 247.005905 , 72.448440 , 1003.640625) || PlayerInfo[playerid][pEmprego] == 2)
		{ //GateInteriorCela
			MoveObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3,0.0,0.0,1260.0);
			GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~Aberto", 4000, 3);
			SetTimer("GaragemDpClosed", 4000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
	  	}
  		return true;
	}
//----------------------------------{Portoes DP2}----------------------------------------
	if(strcmp(cmd, "/pr", true) == 0)
    {
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 250.774871 , 60.822799 , 1003.640625))
		{ //GateGaragem
			MoveObject( PDDOORb, 250.774871 , 60.822799 , 1006.862670,3,0.0,0.0,5130.0);
			GameTextForPlayer(playerid, "~w~Porta da Recepcao ~n~~b~Aberto", 5000, 3);
			SetTimer("GaragemDpClosed2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
  		}
  		return true;
	}
//----------------------------------{Portoes DP3}----------------------------------------
	if(strcmp(cmd, "/pv", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 248.142105 , 78.125961 , 1003.640625))
		{ //GateGaragem
			MoveObject( PDDOORc, 248.142105 , 78.125961 , 1007.248718,3,0.0,0.0,12690.0);
			GameTextForPlayer(playerid, "~w~Porta do Vestiario ~n~~b~Aberto", 5000, 3);
			SetTimer("pd1", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
  		}
  		return true;
	}
//----------------------------------{Portoes LS}----------------------------------------
	if(strcmp(cmd, "/pe", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1546.8681640625, -1627.3585205078, 15.156204223633))
		{ //GateGaragem
			MoveObject( PDPMLS, 1546.86816, -1627.35852, 7.15620,3.0,0.0,0.0,90.0);
			GameTextForPlayer(playerid, "~w~Garagem Externa ~n~~b~Aberta", 4200, 3);
			SetTimer("pd2", 4200, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}

//----------------------------------{Portoes LS2}----------------------------------------
	if(strcmp(cmd, "/pg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
		{ //GateGaragem
			MoveObject( PDGARAGE, 1588.195,-1637.969, 20.086790,3,0.0,0.0,0.0);
			GameTextForPlayer(playerid, "~w~Garagem Interna ~n~~b~Aberta", 5000, 3);
			SetTimer("pd3", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}
//----------------------------------{Portoes DP5}----------------------------------------
	if(strcmp(cmd, "/pcg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2334.757568, 2443.675537, 8.250650))
		{ //GateGaragem
			MoveObject( gatepf2, 2334.757568, 2443.675537, 12.200590,3,0.0, 0.0, 236.2500);
			GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}
 //----------------------------------{Portoes DP6}----------------------------------------
	if(strcmp(cmd, "/pce", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2293.928467, 2499.322021, 5.825822))
		{ //GateGaragem
			MoveObject( gatepf3, 2293.928467, 2506.294678, 5.825822,3,0.0, 0.0, 90.0);
			GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed3", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}
//----------------------------------{Portoes POLICIA FEDERAL}----------------------------------------
	if(strcmp(cmd, "/ProSanFierro", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(20.0, playerid, 923.5170, -1209.0148, 18.7499))
  		{
    		MoveObject( portaoPC1, 923.56256103516, -1209.1229248047, 18.749954223633,3,0.0,0.0,270.0);
		    MoveObject( portaoPC2, 923.56256103516, -1209.1229248047, 18.749954223633,3,0.0,0.0,270.0);
			GameTextForPlayer(playerid, "~w~Portao Rotam ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoPoliciaC1", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
	 	}
	  	return true;
	}
	if(strcmp(cmd, "/ptpc",true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 922.45611572266, -1208.7191162109, 17.982734680176) || PlayerInfo[playerid][pEmprego] == 2)
 		{
			MoveObject( PortaooPC, 922.40142822266, -1209.5806884766, 22.020156860352,3);
			GameTextForPlayer(playerid, "~w~Portao~n~~b~Aberto", 5000, 3);
			SetTimer("PortaooPC2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}
//----------------------------------{Portoes Rotam}----------------------------------------
	if(strcmp(cmd, "/pro", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294) || PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353) && PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
		{ //GateGaragem
			MoveObject( gt3gate, 283.095062, -1542.899170, 33.385311,3,0.0, 0.0, 326.2500);
			MoveObject( gt3gate3, 321.832672, -1488.615112, 33.777353,3,0.0, 0.0, 323.6717);
			GameTextForPlayer(playerid, "~w~Portao Rotam ~n~~b~Aberto", 5000, 3);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
			SetTimer("gt3gate2", 5000, false);
		}
	  	return true;
	}
	
	if(strcmp(cmd, "/pmedicos", true) == 0)
	{
		if (PlayerToPoint(1.0, playerid, 2008.6317,-1449.6309,13.5822))
		{
			MoveObject( portaomedicos1, 2002.9000244141 ,-1450.8000488281 ,9.6000003814697,3 ,0.0 ,0.0 ,180.49987792969);
			MoveObject( portaomedicos2, 1997.0999755859 ,-1445.0999755859 ,9.5,3,0.0 ,0.0 ,90.494384765625);
			SetTimer("FecharpMedicos", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
		else if (GetPlayerOrg(playerid) == 4 || GetPlayerOrg(playerid) == 31)
		{
			if(PlayerToPoint(15.0, playerid, 1996.1999511719 ,-1450.5999755859 ,15.89999961853))
			{
				MoveObject( portaomedicos1, 2002.9000244141 ,-1450.8000488281 ,9.6000003814697,3 ,0.0 ,0.0 ,180.49987792969);
				MoveObject( portaomedicos2, 1997.0999755859 ,-1445.0999755859 ,9.5,3,0.0 ,0.0 ,90.494384765625);
				SetTimer("FecharpMedicos", 5000, false);
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
			}
		}
	  	return true;
	}
	
	if(strcmp(cmd, "/pdpsf2", true) == 0)
	{
		if((IsACop(playerid)) && PlayerToPoint(20.0, playerid, -1571.4054,661.2745,7.1875))
		{ //GateGaragem
			MoveObject( PortaoPMSF, -1572, 672.90002441406, 6.6999998092651,3,0.0, 0.0, 90.00000);
			SetTimer("PTPMSF", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}
	
	if(strcmp(cmd, "/ppf", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -2425.26635742,502.76617432,33.00000000))
		{ //GateGaragem
			GetPlayerName(playerid, sendername, sizeof(sendername));
			MoveObject(pfdoor,-2433.97338867,496.39559937,26.20938301,3);//GaragemClosed
			MoveObject(pfdoor2,-2424.72973633,500.50247192,30.89804077,3);//GaragemClosed
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("PoliciaFederalClosed", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
  		return 1;
	}
	
//----------------------------------{Exercito}----------------------------------------
	if(strcmp(cmd, "/abrirgn", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1531.3978271484, 482.25979614258, 8.9530792236328))
		{ //GateGaragem
			MoveObject(PDEx, -1531.3978271484, 482.25979614258, 13.9530792236328,3,0.0,0.0,360);
			GameTextForPlayer(playerid, "~w~Portao Exercito ~n~~b~Aberto", 5000, 3);
			SetTimer("PDEx2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}

	if(strcmp(cmd, "/ptaxi", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) && PlayerToPoint(15.0, playerid, 959.8434,-1415.2617,13.3612))
		{
			MoveObject( PortaoTaxi, 970.840,-1415.794,15.151,3,0.0,0.0,0.0);
			GameTextForPlayer(playerid, "~w~Portao Taxi ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoTaxi2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}

	if(strcmp(cmd, "/ppre", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 369.15893554688, 162.35037231445, 1028.6030273438))
		{ //Portao Governo
			MoveObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3, 0.0, 0.0, 270.67565);
			GameTextForPlayer(playerid, "~w~Porta Prefeitura ~n~~b~Aberta", 5000, 3);
			SetTimer("PortaoPre2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}

//----------------------------------{PortaoReporter}----------------------------------------
	if(strcmp(cmd, "/portaoreporter", true) == 0 || strcmp(cmd, "/preporter", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 14.200000762939))
		{ //PortaoAdmin
			MoveObject( PortaoReporter, 777.80017089844, -1330.2664794922, 20.200000762939,3,0.0,0.0,0.0);
			GameTextForPlayer(playerid, "~w~Portao ~y~Reporter ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoReporter2", 5000, false);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "O Portão Fechará em 5 segundos.");
		}
	  	return true;
	}

//----------------------------------{Portao Policia Federal}----------------------------------------
	
	if(strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/adminajuda", true) == 0 || strcmp(cmd, "/aaaaaaaa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|____________ Admin Ajuda ____________|");
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nivel 1: /tv /tapa /cascudo /par /vercarteira /calar /kick /ir /trazer /respawn /agendarcadeia");
				SendClientMessage(playerid, COLOR_GRAD2, "Nivel 1: /av /congelar /descongelar /infoarmas /infoplayer /ban /bantemp /voar /voar2 /checkbot");
				SendClientMessage(playerid, COLOR_GRAD2, "Nivel 1: /cnn /cnn2 /orgs /teleportes /cadeia /destruircarros /skick /sban /voar3 /rpv /desbugarplayer");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"Nivel 2: /settime /tempo /gmx /sethora /ip /desbugar /rt /lt");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"Nivel 3: /rpall /respawnid /abastecerid /repararid /destruirid /entrarcarro");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD2,"Nivel 4: /marcar /irmarca /carroantigo /ircarro /trazerveiculo /retirararmas ");
			    SendClientMessage(playerid, COLOR_GRAD2,"Nivel 4: /darvida /darcolete /dararma /forceskin /iniciarloteria /ban");
			}
            if (PlayerInfo[playerid][pAdmin] >= MASTER)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"Master: /editar /avenderempresa /avendersempresa /avendercasa /dargrana /setgrana /darlicencas ");
				SendClientMessage(playerid, COLOR_GRAD2,"Master: /cnn /seditar /ircasa /iremp /irsemp /biz /sbiz /online /darlider /orelhagrande ");
				SendClientMessage(playerid, COLOR_GRAD2,"Master: /desbanip /desbanconta /criaradmin /criarhelper /deslogar /deslogartodos /hospital ");
				SendClientMessage(playerid, COLOR_GRAD2,"Master: /a_1337 /lider /limparlider /ativarsenha /agendarcadeia /darvip /darsupervip");
			}
			if (PlayerInfo[playerid][pAdmin] >= SUB_DONO)
			{
                SendClientMessage(playerid, COLOR_GRAD2,"Sub-Dono: /teleportes /retirarvip /veh /setskin /setemprego /retirarhelper /retiraradmin");
                SendClientMessage(playerid, COLOR_GRAD2,"Sub-Dono: /rlistaadmin /rlistahelper /ativarsenha /terfome /hospital");
			}
            if (PlayerInfo[playerid][pAdmin] >= DONO)
			{
                SendClientMessage(playerid, COLOR_GRAD2,"Dono: /lider /limparadmin /descricao /setpos /carid /amudarsenha /bantemp");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/ajudahelper", true) == 0 || strcmp(cmd, "/ajudahelper", true) == 0 || strcmp(cmd, "/helperajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GRAD2, "|______________ Ajuda Helper ______________|");
			if(PlayerInfo[playerid][pHelper] >= 1 && PlayerInfo[playerid][pHelper] <= 60)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Helper: /helpajuda /h /avh /irh  /hqhelper /ah /meavalie");
			}
			if(PlayerInfo[playerid][pHelper] >= 61 && PlayerInfo[playerid][pHelper] <= 150)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Helper: /helpajuda /h /avh /irh  /hqhelper /ah /meavalie");
			}
			if(PlayerInfo[playerid][pHelper] >= 151 && PlayerInfo[playerid][pHelper] <= 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Helper: /helpajuda /h /avh /irh  /hqhelper /ah /meavalie");
			}
			//SendClientMessage(playerid, COR_TRIADS, "/meavalie - Oferece à um player que ele te avalie, isto aumenta seu nível de Helper.");
		}
		return true;
	}

	if(strcmp(cmd, "/destruirveiculos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    QQIssoNovinha;
			    return true;
			}
			for(new i = CAR_AMOUNT; i < CAR_AMOUNT+500; i++)
			{
				DestroyVehicle(i);
			}
			for(new i = 0; i < sizeof(CreatedCars); i++)
			{
	    		CreatedCars[i] = 0;
			}
			for(new l = 0; l < CreatedCar; l++)
			{
			    Delete3DTextLabel(TextoCarros[l]);
			}
			CreatedCar = 0;
			SendClientMessage(playerid, COLOR_GREY, "   Todos os veículos criados foram destruídos!");
		}
		return true;
	}
	if(strcmp(cmd,"/habilidades",true)==0)
	{
    	if(IsPlayerConnected(playerid))
		{
        	new x_nr[32];
        	x_nr = strtok(cmdtext, idx);
        	if(!strlen(x_nr))
			{
            	SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Skill Info ]__________________|");
            	SendClientMessage(playerid, COLOR_WHITE, "USE: /Habilidades [numero]");
            	SendClientMessage(playerid, COLOR_GREY, "| 1: Detetive            7: Mecanico");
            	SendClientMessage(playerid, COLOR_GREY, "| 2: Advogado               8: Vendedor De Carros");
           	 	SendClientMessage(playerid, COLOR_GREY, "| 3: Profissional do sexo                9: Boxer");
            	SendClientMessage(playerid, COLOR_GREY, "| 4: Vendedor De Drogas		  ");
            	SendClientMessage(playerid, COLOR_GREY, "| 5: Ladrão De Carros            ");
            	SendClientMessage(playerid, COLOR_GREY, "| 6: Reporter");
            	return true;
       	 	}
        	if(strcmp(x_nr,"1",true) == 0)
			{          //Detetive
            	new level = PlayerInfo[playerid][pDetSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 1."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 2."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 3."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 4."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 5."); }
        	}
        	else if(strcmp(x_nr,"2",true) == 0)
			{     //Advogado
            	new level = PlayerInfo[playerid][pLawSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 1."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 2."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 3."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 4."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 5."); }
        	}
        	else if(strcmp(x_nr,"3",true) == 0)
			{     //Profissional do sexo
            	new level = PlayerInfo[playerid][pSexSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 1."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 2."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 3."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 4."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 5."); }
        	}
        	else if(strcmp(x_nr,"4",true) == 0)
			{     //Vendedor De Drogas
            	new level = PlayerInfo[playerid][pDrogasSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 1."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 2."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 3."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 4."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 5."); }
        	}
        	else if(strcmp(x_nr,"6",true) == 0)
			{     //noticias Reporter
            	new level = PlayerInfo[playerid][pNewsSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 1."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 2."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 3."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 4."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 5."); }
       	 	}
        	else if(strcmp(x_nr,"7",true) == 0)
			{     //Mecanico
            	new level = PlayerInfo[playerid][pMechSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 1."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 2."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 3."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 4."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 5."); }
        	}
        	else if(strcmp(x_nr,"9",true) == 0)
			{     //Boxer
            	new level = PlayerInfo[playerid][pBoxSkill];
            	if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 1."); format(string, sizeof(string), "Você precisa ganhar mais %d lutas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 2."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 3."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 4."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
            	else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 5."); }
        	}
        	else
			{
            	SendClientMessage(playerid, COLOR_GREY, "   Número de habilidade inválido !");
            	return true;
        	}
    	}
    	return true;
	}


// ADM VENDERLICENCA

	if(strcmp(cmd, "/darlicencas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >=MASTER)
	        {
          		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != DONO)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Você não está em modo Admin USE: /jogar");
					return true;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /darlicencas [id]");
				    return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Você deu todas as licenças para %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				        {
				        	format(string, sizeof(string), "* Admin Gasparzinho lhe deu todas as licenças.");
						}
				        else
				        {
				        	format(string, sizeof(string), "* Admin %s lhe deu todas as licenças.",PlayerName(playerid));
				        }
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        PlayerInfo[giveplayerid][pGunLic] = 1;
				        PlayerInfo[giveplayerid][pBoatLic] = 1;
				        PlayerInfo[giveplayerid][pFlyLic] = 1;
				        PlayerInfo[giveplayerid][pCarLic] = 1;
				        return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
	        }
	        else
	        {
	            QQIssoNovinha;
	            return true;
	        }
	    }
	    return true;
	}
	if(strcmp(cmd, "/arrombar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsAHit(playerid) || IsATriad(playerid))
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial ou um Hitman !");
			    return true;
            }
		}
		return true;
	}

	if(strcmp(cmd,"/divorcio",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return true;
			}
			if(PlayerInfo[playerid][pMarried] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não está casado !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /divorcio [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se pedir em divórcio!"); return true; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* Você enviou papéis de divórcio para %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s pediu papéis de divórcio (Digite /aceitar divorcio) para aceitar.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  Esse jogador não está casado com você !");
						    return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
			    return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd,"/casar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return true;
			}
	        if(GetPlayerMoney(playerid) < 100)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Para se Casar Custa R$100 !");
	            return true;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você já é casado !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /casar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador(a) ja é casado(a) !");
			            return true;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode propor a si mesmo!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você propôs casamento a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Você foi pedida em casamento (Digite /aceitar casamento) para aceitar.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd,"/padrinho",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return true;
			}
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /padrinho [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ser marido e padrinho do casamento!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você chamou %s para ser seu padrinho de casamento.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Você foi chamado para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return true;
			}
	    }
	    return true;
	}

//--------------------------------------Prefeito Comandos-------------------------------------------
	if(strcmp(cmd,"/setartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /setartaxa [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "   O Dinheiro da Taxa não pode ser menor que 1 ou maior que 10000 !"); return true; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* Cada Jogador vai pagar uma taxa de R$%d, apartir de agora!", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Notícias: O Prefeito acaba de mudar a Taxa por Pessoa para: R$%d.", Tax);
			SendClientMessageToAll(COLOR_LIGHTBLUE, string);
	    }
	    return true;
	}
	if(strcmp(cmd,"/dartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
				return true;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Não há Dinheiro suficiente no banco de Impostos !");
				return true;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(IsACop(i))
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new price = Tax / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Você deu a taxa para todos os policiais online!");
				            format(string, sizeof(string), "* Você recebeu R$%d do banco de Impostos pelo Prefeito.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							GivePlayerMoney(i, price);
							Tax = 0;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Não há nenhum Policial Online no Momento !");
				return true;
			}
		}
		return true;
	}
//------------------------------------------------/Prefeito Comandos--------------------------------------------------------
	if(strcmp(cmd, "/mudarlocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPHousekey] != 500)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você está na TV, não pode mudar o spawn !");
	                return true;
	            }
	            if(PlayerInfo[playerid][pSpawn] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer no local normal de nascimento ou em sua HQ !");
	                PlayerInfo[playerid][pSpawn] = 0;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "  Agora você vai nascer em sua casa !");
	                PlayerInfo[playerid][pSpawn] = 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem casa, não pode mudar o local !");
		        return true;
	        }
	    }
	    return true;
	}

 	if(strcmp(cmd, "/roupas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] >= 1 || PlayerInfo[playerid][pLider] >= 1)
	        {
	            if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pMembro] == 1) { ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }// Policia Militar
					else if(PlayerInfo[playerid][pMembro] == 2) { ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pMembro] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Exército
					else if(PlayerInfo[playerid][pMembro] == 4) { ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }//Medicos
					else if(PlayerInfo[playerid][pMembro] == 5) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 115); }//Aztecas
					else if(PlayerInfo[playerid][pMembro] == 6) { ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }//GIA
					else if(PlayerInfo[playerid][pMembro] == 7) { ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }//Prefeitura
					else if(PlayerInfo[playerid][pMembro] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }//Hitmans
					else if(PlayerInfo[playerid][pMembro] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }//Reporters
					else if(PlayerInfo[playerid][pMembro] == 10) { ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }//Taxistas
					else if(PlayerInfo[playerid][pMembro] == 11) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }//Policia Federal
					else if(PlayerInfo[playerid][pMembro] == 12) { ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }//Máfia Cosa Nostra
					else if(PlayerInfo[playerid][pMembro] == 13) { ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }//Máfia Yakuza
					else if(PlayerInfo[playerid][pMembro] == 14) { ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }//Groove Street
					else if(PlayerInfo[playerid][pMembro] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }//GI
					else if(PlayerInfo[playerid][pMembro] == 16) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }//Rotam-SF
					else if(PlayerInfo[playerid][pMembro] == 17) { ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }//Ballas
					else if(PlayerInfo[playerid][pMembro] == 18) { ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }//Vagos
					else if(PlayerInfo[playerid][pLider] == 1) { ChosenSkin[playerid] = 283; SetPlayerSkin(playerid, 283); }//Policia Militar
					else if(PlayerInfo[playerid][pLider] == 2)	{ ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//Rotam
					else if(PlayerInfo[playerid][pLider] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Exército
					else if(PlayerInfo[playerid][pLider] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }//Fire/Ambulance
					else if(PlayerInfo[playerid][pLider] == 5) { ChosenSkin[playerid] = 115; SetPlayerSkin(playerid, 115); }//Varrios Los Aztecas
					else if(PlayerInfo[playerid][pLider] == 6) { ChosenSkin[playerid] = 249; SetPlayerSkin(playerid, 249); }//GIA
					else if(PlayerInfo[playerid][pLider] == 7) { ChosenSkin[playerid] = 147; SetPlayerSkin(playerid, 147); }//Prefeito
					else if(PlayerInfo[playerid][pLider] == 8) { ChosenSkin[playerid] = 294; SetPlayerSkin(playerid, 294); }//Hitmans
					else if(PlayerInfo[playerid][pLider] == 9) { ChosenSkin[playerid] = 227; SetPlayerSkin(playerid, 227); }//Repórters
					else if(PlayerInfo[playerid][pLider] == 10) { ChosenSkin[playerid] = 61; SetPlayerSkin(playerid, 61); }//Taxistas
					else if(PlayerInfo[playerid][pLider] == 11) { ChosenSkin[playerid] = 295; SetPlayerSkin(playerid, 295); }//Policia Federal
					else if(PlayerInfo[playerid][pLider] == 12) { ChosenSkin[playerid] = 113; SetPlayerSkin(playerid, 113); }//Máfia Cosa Nostra
					else if(PlayerInfo[playerid][pLider] == 13) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 120); }//Máfia Yakuza
					else if(PlayerInfo[playerid][pLider] == 14) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }//Groove
                    else if(PlayerInfo[playerid][pLider] == 15) { ChosenSkin[playerid] = 123; SetPlayerSkin(playerid, 123); }//ALQaeda
					else if(PlayerInfo[playerid][pLider] == 16) { ChosenSkin[playerid] = 186; SetPlayerSkin(playerid, 186); }//Rotam-SF
                    else if(PlayerInfo[playerid][pLider] == 17) { ChosenSkin[playerid] = 104; SetPlayerSkin(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 18) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }//Vagos
	                else { return true; }
	                if(PlayerInfo[playerid][pLider] < 1)
	                {
	                    new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid, x, y, z);
	                	SetPlayerCameraPos(playerid, x + 3, y, z);
						SetPlayerCameraLookAt(playerid,x, y, z);
						Controle(playerid, 0);
						SelectChar[playerid] = 255;
						SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
						SelectCharPlace[playerid] = 1;
						PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para trocar a skin.");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Quando Você achar a Skin preferida, Digite 'Confirma'.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em uma loja de roupas !");
					return true;
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Civis não podem usar esse comando !");
				return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/loteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você já tem um bilhete de loteria !");
	            return true;
	        }
	        if(GetPlayerMoney(playerid) < 10)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem R$10 para pagar o número de loteria !");
	            return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE,"USE: /loteria [número]");
				return true;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 50)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Número da loteria, de 1 a 50 !");
				return true;
			}
			format(string, sizeof(string), "* Você comprou um bilhete de loteria com número: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerMoney(playerid, - 10);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	   	}
		return true;
	}
	if(strcmp(cmd, "/retirar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
	        if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
	        {
	            if(PlayerInfo[playerid][pCargo] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 2 para usar este comando !");
	                return true;
	            }
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Take Licenses ]__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar [nome] [id]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponíveis: Motorista, Piloto, Marujo, PorteLegal, Armas, Drogas, Materiais");
					return true;
				}
			    if(strcmp(x_nr,"Motorista",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Motorista [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de motorista de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de motorista.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Piloto",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Piloto [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Voo de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Voo.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"PorteLegal",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar portelegal [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Porte de Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Porte de Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Marujo",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Marujo [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Navegacao de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Navegacao.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Armas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Armas [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
                                new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou as Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeaponsBPH(giveplayerid);
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Drogas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Drogas [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou as Drogas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Drogas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrogas] = 0;
						        PlayerInfo[giveplayerid][pDrogas2] = 0;
						        PlayerInfo[giveplayerid][pDrogas3] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Materiais",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Materiais [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou os Materiais de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou seus Materiais.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nome inválido !");
					return true;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não e COP !");
	            return true;
	        }
	    }
	    return true;
	}
	if(strcmp(cmd, "/beber", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerInfo[playerid][pDorgado2] >= 70)
	            {
	            	PlayerInfo[playerid][pDoenca] = 4;
	            	PlayerInfo[playerid][pDorgado2] = 0;
	            	SendClientMessage(playerid, COLOR_GRAD2, "* Você está infectado com cirrose, vá até um hospital se tratar !");
	            	return true;
				}
	            if(PlayerDrunk[playerid] < 10)
	            {
	            	if(PlayerInfo[playerid][pDoenca] == 4)
  					{
			    		SendClientMessage(playerid, COLOR_GRAD2, "* Você está com cirrose, vá até um hospital se tratar !");
			    		return true;
  	        		}
	                new Float:health;
	                new x_nr[32];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Bar's Drinks ]__________________|");
						SendClientMessage(playerid, COLOR_WHITE, "Use: /beber [Bebida]");
				  		SendClientMessage(playerid, COLOR_GREY, "Nomes Válidos: Cerveja (R$3), Vodka (R$5), Whisky (R$10), Coca-Cola (R$2), Água (R$1)");
						return true;
					}
				    if(strcmp(x_nr,"Cerveja",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
						    return true;
						}
					    GivePlayerMoney(playerid, - 3);
					    PlayerDrunk[playerid] += 1;
					    PlayerInfo[playerid][pDorgado2] += 2;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~~g~beba agua ou coca-cola", 3500, 1); }
						SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
						ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"Vodka",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
						    return true;
						}
					    GivePlayerMoney(playerid, - 5);
					    PlayerDrunk[playerid] += 2;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 25.0); }
						}
					}
					else if(strcmp(x_nr,"Whisky",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber");
						    return true;
						}
					    GivePlayerMoney(playerid, - 10);
					    PlayerDrunk[playerid] += 3;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 27.0); }
						}
					}
					else if(strcmp(x_nr,"Coca-Cola",true) == 0)
					{
					    GivePlayerMoney(playerid, - 2);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else if(strcmp(x_nr,"agua",true) == 0)
					{
					    GivePlayerMoney(playerid, - 1);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Não não vendemos essa bebida.");
					    return true;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s bebeu um(a) %s.", sendername ,x_nr);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você não pode beber mais, Você vai vomitar...!");
	                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
	                return true;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em um bar !");
	            return true;
	        }
	    }
	    return true;
	}

	if(strcmp(cmd, "/statusluta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um Lutador de Boxe !");
	            return true;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Iniciante"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amador"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Profissional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Invicto";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Novato"; }
	            else if(level >= 11 && level <= 20) { ntext = "Mão Pesada"; }
	            else if(level >= 21 && level <= 30) { ntext = "Quebra Nozes"; }
	            else if(level >= 31 && level <= 40) { ntext = "Braço de ferro"; }
	            else if(level >= 41 && level <= 50) { ntext = "Quebra crânio"; }
	            else if(level >= 51 && level <= 60) { ntext = "Velocidade da Luz"; }
	            else if(level >= 61 && level <= 70) { ntext = "Guerreiro"; }
	            else if(level >= 71) { ntext = "Cavalo"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Recorde do Boxe __________________|");
	        format(string, sizeof(string), "| Atual Campeão: %s, com %d vitórias e %d derrotas.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Título atual: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Nome Atual: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Vitórias: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Derrotas: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return true;
	}
	if(strcmp(cmd, "/lutar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um lutador de boxe !");
	            return true;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Já está tendo uma luta, espere ela terminar !");
	            return true;
	        }
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você já está em uma luta !");
	            return true;
	        }
	        if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "  Você não está no ginásio de lutas de LS !");
	            return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /lutar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode lutar contra si mesmo!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você intimou %s para uma luta de boxe.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Lutador %s te intimou para uma luta (USE: /aceitar boxe) para aceitar.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/mp3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Musica ]__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /mp3 [nome]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponíveis: On, Off, Proximo");
					return true;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"Prooximo",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Comando Musical Desconhecido !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não possui um CD-Player !");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/servico", true) == 0 || strcmp(cmd, "/serviço", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Nomes dos Serviços ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /servico [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Serviços: Taxi, Onibus,Medico,Mecanico,Policia");
				return true;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem taxista online agora, tente /servico onibus...");
		            return true;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você não pode ligar para um Taxi agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar taxi - Para Aceitar a Chamada)", PlayerName(playerid));
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(30, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Taxista,espere a resposta...");
		    	TaxiCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"moto-taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "  Não tem nenhum Moto-Taxi online agora, espere algum entrar !");
		            return true;
      		  	}
          		if(TransportDuty[playerid] > 0)
 		      	{
		            SendClientMessage(playerid, COLOR_GREY, "  Você não pode ligar para um Moto-Taxi agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar moto-taxi - Para Aceitar a Chamada)", PlayerName(playerid));
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(30, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Moto-Taxi... Agora espere a resposta.");
		    	TaxiCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"onibus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem motorista de onibus online neste momento, espere um entrar !");
		            return true;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você não pode chamar um onibus agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Onibus. (Use /aceitar onibus - Para aceitar a chamada)", PlayerName(playerid));
		    	SendEmpregoMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Onibus... Agora espere a resposta.");
		    	BusCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"medico",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhum medico online neste momento, espere um entrar !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita da Medicos. (Use /aceitar medico - Para aceitar a chamada)", PlayerName(playerid));
		    	SendFamilyMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(31, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou a Medicos.... Agora espere por resposta.");
		    	MedicCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"policia",true) == 0)
			{
			    if(Copsronda < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nenhum Policial em ronda no momento.");
		            return true;
		        }
		        for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsACop(i) && IsPlayerConnected(i))
				    {
				        if(PolicialInRonda[i] == 1)
				        {
				            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Estão fazendo uma chamada.");
				            return true;
				        }
					}
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s está precisando de um Policial. (Digite /aceitar chamada para aceitar a chamada)", PlayerName(playerid));
		    	SendFamilyMessage(1, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(2, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(3, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(16, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(27, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(11, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Policial Aguarde a Resposta.");
		    	CopsrondaCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"mecanico",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nenhum mecanico online neste momento, espere um entrar !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Mecanico. (Use /aceitar mecanico - Para aceitar a chamada)", PlayerName(playerid));
		    	SendEmpregoMessage(5, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Mecanico... Agora espere por uma resposta.");
		    	MechanicCall = playerid;
		    	return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Serviço Inexistente !");
			    return true;
			}
		}
		return true;
	}
//Amarrar
    if(strcmp(cmd, "/amarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
     		if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 ||
				PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15
			 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
	         || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19
			 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
 			 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 ||
			    PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 ||
			    PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
    		{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return true;
			    }
			    if(pamarrar == 1)
                {
                	SendClientMessage(playerid,COLOR_GRAD2,"Sequestraram recentemente, só pode sequestrar a cada 3 minutos!");
                    return true;
                }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /amarrar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode sequestrar novatos!");
							return true;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já está amarrado !");
					        return true;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid)
							{
								SendClientMessage(playerid, COLOR_GREY, "Você não pode se amarrar !");
								return true;
							}
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Você foi amarrado por %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você amarrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s amarrou %s", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Amarrado", 2500, 3);
								Controle(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								PlayerInfo[giveplayerid][pMuted] = 1;
        						pamarrar = 1;
			                    TempoAmarrar = SetTimer("Amarrar",180000, 0);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está no seu carro, ou você não é o motorista !");
						        return true;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um mafioso !");
			}
		}
		return true;
	}
//Desamarrar Mafia
	if(strcmp(cmd, "/desamarrarm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrarm [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar si mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi libertado por %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um mafioso !");
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd,"/sequestrosBPH",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pAdmin] < MASTER)
			{
			    SendClientMessage(playerid,COLOR_GREY," Comando apenas para administradores masters + !");
			    return true;
			}
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GREY,"USE: /sequestros [limite de sequestros por PayDay]");
				return true;
			}
			//SeequestroVezes = strval(tmp);
			format(string, sizeof(string), "O limite de sequestros por PayDay foi mudado para %d vezes.", strval(tmp));
			SendClientMessageToAll(COLOR_YELLOW, string);
		}
		return true;
	}

	if(strcmp(cmd, "/sequestrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
			 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para amarrar!");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /sequestrar [ID/Nome]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				new Organizacao = GetPlayerOrg(playerid);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(Sequestrado[giveplayerid] == 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Este jogador já está sendo sequestrado!");
					        return 1;
	                    }
	        			if(GuSequestro[Organizacao][QuantidadeSequestro] == 2)
				    	{
	        				SendClientMessage(playerid, COLOR_GREY, "Sua organização ultrapassou o limite de sequestros por PayDay !");
					        return true;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
                            new ttext[20];
           					if(GetPlayerOrg(giveplayerid) == 0) { ttext = "500000"; }
                            if(GetPlayerOrg(giveplayerid) == 1) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 2) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 3) { ttext = "1000000"; }
                     		if(GetPlayerOrg(giveplayerid) == 4) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 5) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 6) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 7) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 8) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 9) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 10) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 11) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 12) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 13) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 14) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 15) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 16) { ttext = "1000000"; }
                     		if(GetPlayerOrg(giveplayerid) == 17) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 18) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 19) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 20) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 21) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 22) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 23) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 24) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 25) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 26) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 27) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 28) { ttext = "1000000"; }
                     		if(GetPlayerOrg(giveplayerid) == 29) { ttext = "1500000"; }
                            if(GetPlayerOrg(giveplayerid) == 30) { ttext = "2000000"; }
                            if(GetPlayerOrg(giveplayerid) == 31) { ttext = "1000000"; }
                            if(GetPlayerOrg(giveplayerid) == 32) { ttext = "2000000"; }
                            if(PlayerInfo[giveplayerid][pCargo] > 5) { ttext = "4000000"; }
							new car = GetPlayerVehicleID(playerid);
						    //if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode amarrar a si mesmo!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Você foi sequestrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você está sequestrando %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s está sequestrando %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~>~~r~SEQUESTRADO~<~", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								format(string, sizeof(string), "[SEQUESTRO]: O %s %s está sequestrando %s no valor de R$%s.",NomeORG(playerid),PlayerName(playerid),PlayerName(giveplayerid),ttext);
							    SendClientMessageToAll(COLOR_LIGHTRED, string);
                           		Sequestrado[giveplayerid] = 1;
	    				   		PlayerTied[giveplayerid] = 0;
			               		PlayerInfo[giveplayerid][pMuted] = 0;
					   			PlayerInfo[giveplayerid][pInt] = 0;
						   		SetPlayerInterior(giveplayerid, 0);
			               		TogglePlayerControllable(giveplayerid, 1);
			               		GuSequestro[Organizacao][QuantidadeSequestro] += 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Jogador não esta no seu carro ou você não e o motorista!");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador esta longe de você!");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo!");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não e membro de uma familia!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/refemliberar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
		 	|| PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
 			{
	    		tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /refemliberar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
			    	if(giveplayerid != INVALID_PLAYER_ID)
			    	{
                		if(Sequestrado[giveplayerid] == 0)
       					{
          					SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sendo sequestrado!");
	            			return 1;
              			}
       					if (ProxDetectorS(8.0, playerid, giveplayerid))
		  				{
      						if(giveplayerid == playerid)
			       			{
 								SendClientMessage(playerid, COLOR_GREY, "Você não se pode salvar a si mesmo!");
				        		return 1;
				   			}
	    					format(string, sizeof(string), "* Você liberou %s.",PlayerName(giveplayerid));
				   			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            		format(string, sizeof(string), "* Você foi liberado pelo sequestrador %s.",PlayerName(playerid));
				   			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
        					format(string, sizeof(string), "[SEQUESTRO] A Vítima %s foi liberada pelo sequestrador %s, Sequestro finalizado.",PlayerName(giveplayerid),PlayerName(playerid));
				   			SendClientMessageToAll(COLOR_DBLUE, string);
			   				format(string, sizeof(string), "* %s Liberou %s.",PlayerName(playerid),PlayerName(giveplayerid));
   							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  				 			Sequestrado[giveplayerid] = 0;
							PlayerTied[giveplayerid] = 0;
     						PlayerInfo[giveplayerid][pMuted] = 0;
         					Controle(giveplayerid, 1);
	    				}
			    		else
			    		{
       						SendClientMessage(playerid, COLOR_GREY, "Esse jogador não perto de você!");
			    		}
    				}
      			}
			}
			else
			{
  				SendClientMessage(playerid, COLOR_GREY, "   Você não pode usar este comando");
	    		return 1;
			}
	    }
		return 1;
	}
	if(strcmp(cmd, "/refemsalvar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
            {
			    if(PlayerInfo[playerid][pCargo] < 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 2 ou mais para salvar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /refemsalvar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode salvar si mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi salvo por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "[SEQUESTRO] Oficial %s conseguiu salvar o refem %s ! Fim de sequestro.",sendername,giveplayer);
	                            SendClientMessageToAll(COLOR_DBLUE, string);
								format(string, sizeof(string), "* Você salvou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								Sequestrado[giveplayerid] = 0;
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			}
		}//not connected
		return true;
	}
	if(strcmp(cmd, "/desamarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6
			|| PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15
			|| PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19
			|| PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
		 	|| PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24
			 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
			 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
 			{
			    if(PlayerInfo[playerid][pCargo] < 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 2 ou mais para desamarrar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar à sí mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Ganngster !");
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd,"/corrida",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10|| PlayerInfo[playerid][pMembro] == 30||PlayerInfo[playerid][pLider] == 30||PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce está de folga e recebeu R$%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return true;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(IsATaxiCar(Veh))
				{
					if(GetPlayerOrg(playerid) == 10 || GetPlayerOrg(playerid) == 30)
					{
					    if(GetPlayerState(playerid) == 2)
					    {
						    tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preço]");
								return true;
							}
							moneys = strval(tmp);
							if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida mínimo R$1 Máximo R$999!"); return true; }
						    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
						    GetPlayerName(playerid,sendername,sizeof(sendername));
		    				format(string, sizeof(string), "Taxista %s está em serviço, Corrida: R$%d - Chame um taxi /servico taxi", sendername, TransportValue[playerid]);
		    				OOCNews(TEAM_GROVE_COLOR,string);
		    				return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
						    return true;
						}
					}
				}
				else if(IsAOniCar(Veh) && PlayerInfo[playerid][pEmprego] == 9)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preco]");
							return true;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida Mínimo R$1 Máximo R$999!"); return true; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Motorista de onibus %s está em serviço, Corrida: R$%d - Chame um onibus /servico onibus", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
					    return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um taxi/onibus!");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce não é um taxista/motorista de ônibus!");
			    return true;
			}
	    }
	    return true;
 	}

	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Passou"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Passou"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Passou"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passou"; } else { text5 = "Negativo"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pescador: Passou.");
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return true;
 	}

 	if(strcmp(cmd,"/mostrarlicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /mostrarlicencas [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Para ver suas licencas Use: /minhaslicencas!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Passou"; } else { text1 = "Negativo"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "Passou"; } else { text4 = "Negativo"; }

						if(PlayerInfo[playerid][pBoatLic]) { text2 = "Passou"; } else { text2 = "Negativo"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passou"; } else { text5 = "Negativo"; }
				        format(string, sizeof(string), "|__________ Licencas de %s __________|", PlayerName(playerid));
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** Motorista: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Piloto: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Marujo: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Pescador: Passou.");
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Armas: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s mostrou suas licencas para você.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você mostrou suas licencas para %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Você !");
					    return true;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   O Jogador está offline !");
	            return true;
	        }
		}
	    return true;
 	}

	if(strcmp(cmd, "/equiparm", true) == 0)
	{
        new tmpcar = GetPlayerVehicleID(playerid);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		if(IsACaminhaozinhoCar(tmpcar)||PlayerToPoint(3, playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(3,playerid,675.0715,-1275.7689,13.6334) || HouseEntered[playerid] != 255)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafiosos
	        {
				if(OnMafiaEquipado[playerid] == 1)
				{
					ResetPlayerWeaponsBPH(playerid);
					OnMafiaEquipado[playerid] = 0;
					return true;
	    		}
                if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12) // Máfia Cosa Nostra
                {
					if (PlayerInfo[playerid][pCargo] == 0)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 50);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 50);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 80);
						GivePlayerWeaponBPH(playerid, 29, 150);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
                    }
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 100);
						GivePlayerWeaponBPH(playerid, 24, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 100);
						GivePlayerWeaponBPH(playerid, 24, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 34, 100);
						GivePlayerWeaponBPH(playerid, 5, 1);
						GivePlayerWeaponBPH(playerid, 16, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
	                    return true;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 120);
						GivePlayerWeaponBPH(playerid, 24, 120);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 34, 120);
						GivePlayerWeaponBPH(playerid, 5, 1);
						GivePlayerWeaponBPH(playerid, 16, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
	   		    }
				if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)// Máfia Yakuza
				{
					if (PlayerInfo[playerid][pCargo] == 0)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 50);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 50);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 80);
						GivePlayerWeaponBPH(playerid, 29, 150);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 50);
						GivePlayerWeaponBPH(playerid, 22, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 100);
						GivePlayerWeaponBPH(playerid, 24, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 100);
						GivePlayerWeaponBPH(playerid, 24, 100);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 34, 100);
						GivePlayerWeaponBPH(playerid, 5, 1);
						GivePlayerWeaponBPH(playerid, 17, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
                        return true;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsBPH(playerid);
						GivePlayerWeaponBPH(playerid, 25, 120);
						GivePlayerWeaponBPH(playerid, 24, 120);
						GivePlayerWeaponBPH(playerid, 29, 200);
						GivePlayerWeaponBPH(playerid, 31, 200);
						GivePlayerWeaponBPH(playerid, 34, 120);
						GivePlayerWeaponBPH(playerid, 5, 1);
						GivePlayerWeaponBPH(playerid, 17, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return true;
					}
				}
			}
			if(PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12 && PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é um Mafioso");
				return true;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na HQ ou em Um BoxVille.");
		}
	}

 	if(strcmp(cmd,"/VenderArma",true)==0)
    {
    	if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  	 	SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
	   		return true;
    	}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não é um Vendendor de Armas !");
			    return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (giveplayerid == playerid)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não pode vender armas pra si mesmo!");
			    return true;
			}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"USE: /VenderArma [ID do Player] [Arma]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flowers(25) spistola(100) pistola(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: rifle (600) ak47(600) m4(600)");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________[ Vender Armas ]__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /VenderArma [ID do Players] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: spistola(100) eagle(200) mp5(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: rifle(600) flores(25) ak47(600) m4(600) rifle(600)");
						return true;
					}
				}
				//if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return true; } }
				if(strcmp(x_weapon,"spistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				else if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 22; price[playerid] = 150; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 22; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return true; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return true; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return true; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return true; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inválida!"); return true; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você não está numa loja de armas!");
						return true;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Você recebeu uma %s com %d a partir de munição %s.",x_weapon,ammo[playerid],PlayerName(playerid));
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeaponBPH(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente nao esta proximo de Você.");
					return true;
				}
			}
			else
			{
				format(string,sizeof(string),"%d não está online.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return true;
	}
	if(strcmp(cmd,"/abastecer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
     		if(!IsPlayerInAnyVehicle(playerid))
     		{
       			SendClientMessage(playerid,COLOR_RED,"   Você não está em um veículo!");
       			return true;
			}
     		new vid = GetPlayerVehicleID(playerid);
      		if(Gas[vid] >= 100)
        		return SendClientMessage(playerid,COLOR_RED,"O tanque já está cheio.");

			if(IsAtGasStation(playerid))
			{
  				GameTextForPlayer(playerid,"~n~~w~Reabastecendo~n~ ~r~~h~Aguarde",3003,3);
				SetTimer("Fillup",RefuelWait,0);
				Controle(playerid, 0);
				Refueling[playerid] = 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Você não está em um Posto de Gasolina");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/imo", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Não é possivel imobilizar de dentro do carro !");
			        return true;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Suspeito Imobilizado !");
				        return true;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 3)
					{
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O suspeito está em um carro, faça ele descer antes !");
					        return true;
					    }
    					if(IsACop(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar imo em Policiais!");
							return true;
						}
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você foi imobilizado por %s por 20 segundos.", PlayerName(playerid));
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você imobilizou o(a) %s por 20 segundos.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Imobilizou %s, para não fugir.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Imobilizado", 2500, 3);
						Controle(suspect, 0);
						ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 20;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Ele não está perto de Você!");
					    return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			}
		}//not connected
	    return true;
	}
	if(strcmp(cmd, "/algemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /algemar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
			        {
           				SendClientMessage(playerid, COLOR_GREY, "   Você não pode algemar COPs !");
       					return true;
			        }
				    if(PlayerCuffed[giveplayerid] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já esta algemado !");
				        return true;
				    }
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
						{
							SendClientMessage(playerid, COLOR_GREY, "Você nao pode se algemar!");
							return true;
						}
      					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
      					format(string, sizeof(string), "* Você foi algemado pelo: %s.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você algemou %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Algemou %s, para nao fugir.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
						Controle(giveplayerid, 0);
						PlayerCuffed[giveplayerid] = 2;
						SetPlayerAttachedObject(giveplayerid, 4, 19418, 6, -0.031999, 0.024000, -0.024000, -7.900000, -32.000011, -72.299987, 1.115998, 1.322000, 1.406000);
				        SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
						ApplyAnimation(giveplayerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
						PlayerInfo[giveplayerid][pMuted] = 1;
			   		}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
					    return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
			    return true;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/vdp", true) == 0 || strcmp(cmd, "/vozdeprisao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /vozdeprisao [id] (/vdp [id])");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(WantedPoints[giveplayerid] == 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está sendo procurado!");
				        return true;
			        }
			        if(VozDePrisao[giveplayerid] == 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Alguem ja deu voz de prisao a este Jogador!");
				        return true;
			        }
					if (ProxDetectorS(9.0, playerid, giveplayerid))
					{
     					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
      					format(string, sizeof(string), "*Oficial %s diz: Parado! Você é procurado pela justiça, renda-se agora!", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "Se você desconectar-se agora, será preso automaticamente, espere 2 minutos para poder desconectar", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "*Você deu voz de prisao a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Se o jogador se desconectar agora, será preso automaticamente, você tem 2 minutos para prende-lo", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						PutaGorda[giveplayerid] = SetTimerEx("VozDePrisaoo", 70000, 0, "i", giveplayerid);
						VozDePrisao[giveplayerid] = 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
					    return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
			    return true;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/desalgemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Use: /desalgemar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se desalgemar!"); return true; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi desalgemado pelo: %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você desalgemou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Desalgemado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
								RemovePlayerAttachedObject(giveplayerid, 4);
								SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
								ClearAnimations(giveplayerid);
								//PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está algemado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não e PM/PR/PC/Exercito !");
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/localizar", true) == 0)
    {
		tmp = strtok(cmdtext, idx);
 		if(!IsACop(playerid) && !IsAHit(playerid) && !IsATriad(playerid))
  		{
			SendClientMessage(playerid, COLOR_GRAD1,"Você não é um Assassino, Policial ou detetive!");
			return true;
		}
		if (PlayerInfo[giveplayerid][pInt] != 0)
   		{
     		SendClientMessage(playerid, COLOR_GRAD1,"O Player está em algum interior e não pode ser Localizado.");
		   	return true;
		}
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_GRAD1, "USE: /localizar [id]");
		    return 1;
		}
		KillTimer(TempoGZLocalizar[playerid]);
		new Float:x,Float:y,Float:z;
		new Nome[MAX_PLAYER_NAME];
		giveplayerid = ReturnUser(tmp);
 		GetPlayerPos(giveplayerid,x,y,z);
		GetPlayerName(giveplayerid, Nome, sizeof(Nome));
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(giveplayerid, location, MAX_ZONE_NAME);
        format(string, sizeof(string), "Localizar: %s foi visto perto de %s, Uma Área foi criada em seu mapa!", Nome,location);
		SendClientMessage(playerid, COLOR_YELLOW, string);
 		GZLocalizar[playerid] = GangZoneCreate(x-300,y-300,x+300,y+300);
 		GangZoneShowForPlayer(playerid, GZLocalizar[playerid], 0xB1C998AA);
 		TempoGZLocalizar[playerid] = SetTimerEx("GZHide", 100000, 0, "i", playerid);
 		GangZoneFlashForPlayer(playerid, GZLocalizar[playerid],0x57D6F6AA);
		return 1;
	}

	if(strcmp(cmd, "/procurar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Detetive !");
				return true;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você só pode procurar novamente, daqui a 2 Minutos !");
			    return true;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /procurar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se procurar!"); return true; }
			        if(GetPlayerInterior(giveplayerid) != GetPlayerInterior(playerid))
					{
					   	SendClientMessage(playerid, COLOR_YELLOW, "Este player está em um interior!");
					   	return true;
	    			}
					DisablePlayerCheckpoint(playerid);
					KillTimer(TimerSS[playerid]);
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					GameTextForPlayer(playerid, "~r~Va ate a marca vermelha!", 2500, 1);
					TimerSS[playerid] = SetTimerEx("FuckYou",500,true,"ii",playerid,giveplayerid);
					//FindTime[playerid] = 1;
					//FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de detetive agora é 2, Você pode procurar mais rápido e encontrar mais rápido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de detetive agora é 3, Você pode procurar mais rápido e encontrar mais rápido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de detetive agora é 4, Você pode procurar mais rápido e encontrar mais rápido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de detetive agora é 5, Você pode procurar mais rápido e encontrar mais rápido."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo !");
			}
		}
	    return true;
	}
	if(strcmp(cmd, "/proteger", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 6)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um segurança!");
				return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /proteger [id] [preço]");
				return true;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço mínimo 1, máximo 99999!"); return true; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode se proteger !");
					        return true;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você se ofereceu para proteger %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Segurança %s ofereceu segurança por R$%d, (Digite /aceitar segurança) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/soltar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
    	if(PlayerToPoint(2.0,playerid,268.2108,77.4440,1001.0391) || PlayerToPoint(2.0,playerid,225.9554,114.1761,999.0156)
			|| PlayerToPoint(2.0,playerid,195.4466,158.4840,1003.0234) || PlayerToPoint(2.0,playerid,197.2001,179.2701,1003.0234)
			|| PlayerToPoint(2.0,playerid,321.6279,315.7460,999.1484))
	 		{// PM,PF | PC 1,PC 2 | PF,
		    if(PlayerInfo[playerid][pEmprego] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é um Advogado!");
		        return true;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 400)
		    {
		        ApprovedAdvogado[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use: /soltar [id]");
				SendClientMessage(playerid, COLOR_GRAD2, "Obs: Você só pode soltar em um Departamento de Policia!");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se libertar!"); return true; }
				 	if(PlayerInfo[giveplayerid][pJailed] == 1 || PlayerInfo[giveplayerid][pJailed] == 2
					|| PlayerInfo[giveplayerid][pJailed] == 3 || PlayerInfo[giveplayerid][pJailed] == 11
					|| PlayerInfo[giveplayerid][pJailed] == 16 || PlayerInfo[giveplayerid][pJailed] == 27
				 	|| PlayerInfo[giveplayerid][pJailed] == 33)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você libertou %s da cadeia.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Você foi foi solto pelo Advogado: %s.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
     					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você perdeu -R$500 por cometer crimes.");
	  					GivePlayerMoney(playerid, -500);
						ApprovedAdvogado[playerid] = 0;
						WantAdvogado[giveplayerid] = 0;
						CallAdvogado[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de advogado agora é 2, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de advogado agora é 3, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de advogado agora é 4, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nível de advogado agora é 5, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   O jogador não precisa de advogado ou você não tem autorização !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Você não está em um Departamento de Policia !");
			}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
			}
		}//not connected
		return true;
	}
	if(strcmp(cmd,"/cancelar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Cancelar ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: /cancelar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Sexo, Drogas, reparo, Advogado, segurança, aovivo, Abastecimento, Carro, Boxe");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Taxi, Onibus, Medico, Mecanico, Policia, mendigo, convite");
				return true;
			}
			if(strcmp(x_Emprego,"sexo",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"convite",true) == 0) { InviteOffer[playerid] = 999; InviteJob[playerid] = 0; }
			else if(strcmp(x_Emprego,"mendigo",true) == 0) { MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"drogas",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_Emprego,"reparo",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_Emprego,"Advogado",true) == 0) { WantAdvogado[playerid] = 0; CallAdvogado[playerid] = 0; }
			else if(strcmp(x_Emprego,"segurança",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"aovivo",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"assalto",true) == 0) { OfAssalto[playerid] = 999; precoassalto[playerid] = 0; }
			else if(strcmp(x_Emprego,"abastecercarro",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"carro",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_Emprego,"Boxe",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"padrinho",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"casamento",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"multa",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"bus",true) == 0 || strcmp(x_Emprego,"onibus",true) == 0)
			{
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BusCallTime[playerid] = 0;


						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
			{
			        if(MechanicCallTime[playerid] > 0)
			        {
			            MechanicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MechanicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MechanicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MechanicAccepted[i] < 999)
						        {
							        if(MechanicAccepted[i] == playerid)
							        {
							            MechanicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            MechanicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			        if(MedicCallTime[playerid] > 0)
			        {
			            MedicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MedicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MedicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MedicAccepted[i] < 999)
						        {
							        if(MedicAccepted[i] == playerid)
							        {
							            MedicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
							            MedicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"policia",true) == 0)
			{
			        if(CopsrondaCallTime[playerid] > 0)
			        {
			            CopsrondaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						CopsrondaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						CopsrondaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(CopsrondaAccepted[i] < 999)
						        {
							        if(CopsrondaAccepted[i] == playerid)
							        {
							            CopsrondaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            CopsrondaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else { return true; }
			format(string, sizeof(string), "* Você cancelou: %s.", x_Emprego);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return true;
	}
	
	if(strcmp(cmd, "/tognews", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   News CHAT desabilitado  !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   News CHAT abilitado  !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togfam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Familia CHAT desabilitado !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Familia CHAT abilitado  !");
			}
		}
		return 1;
	}
//aceitar COMMANDS (Cops)
	if(strcmp(cmd,"/aceitar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Aceitar ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: aceitar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Transa, drogas, Reparo, Advogado, segurança, emprego, aovivo, Refill , Assalto");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Carro, Taxi, Onibus, Boxe, Medico, Mecanico, Multa ,divorcio, mendigo, convite, arrancadao");
				return true;
			}
            //new para1;
			if(strcmp(x_Emprego,"convite",true) == 0)
			{
				if(InviteOffer[playerid] < 999)
			    {
					if(IsPlayerConnected(InviteOffer[playerid]))
					{
				        if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }
						else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 186; SetPlayerSkin(playerid, 186); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkin(playerid, 40); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkin(playerid, 247); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 292; SetPlayerSkin(playerid, 292); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 118; SetPlayerSkin(playerid, 118); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 112; SetPlayerSkin(playerid, 112); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 24) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 292; SetPlayerSkin(playerid, 292); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 25) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 26) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 27) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 28) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 29) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 30) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 31) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 32) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 33) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 284); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 34) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 141; SetPlayerSkin(playerid, 141); }
					    PlayerInfo[playerid][pMembro] = InviteJob[playerid];
						PlayerInfo[playerid][pCargo] = 1;
					    SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
						new rand = random(sizeof(gInviteSpawns));

						XXAirBreak[playerid] += 3;
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						Controle(playerid, 0);
					    SelectChar[playerid] = 255;
					    SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
					    SelectCharPlace[playerid] = 1;
					    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
					    SetPlayerSkin(playerid, ChosenSkin[playerid]);
					    format(gstring, sizeof(gstring), "* Você foi convidado por %s para entrar para a org: %s, parabéns.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
					 	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    O jogador que lhe convidou não está conectado.");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "    Você não foi convidado para nenhuma organização.");
					return true;
				}
			}
			else if(strcmp(x_Emprego,"assalto",true) == 0)
			{
			    if(OfAssalto[playerid] < 999)
			    {
			        if(IsPlayerConnected(OfAssalto[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, OfAssalto[playerid]))
						{
				           	GetPlayerName(OfAssalto[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou um assalto de %s e pagou R$%d", giveplayer, precoassalto[playerid]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou seu assalto e pagou R$%d.", sendername, precoassalto[playerid]);
			                SendClientMessage(OfAssalto[playerid], COLOR_LIGHTBLUE, string);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, - precoassalto[playerid]);
							GivePlayerMoney(OfAssalto[playerid], precoassalto[playerid]);
							SetPlayerCriminal(OfAssalto[playerid],255, "Assalto");
							OfAssalto[playerid] = 999;
							precoassalto[playerid] = 0;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Assaltante está longe de você!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não foi assaltado!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"divorcio",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", PlayerName(playerid));
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPHousekey] = 500;
							PlayerInfo[playerid][pPbiskey] = 255;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que te enviou os papéis do divórcio não está perto de você!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te enviou qualquer papel de divórcio!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"padrinho",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", PlayerName(playerid));
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que pediu para ser padrinho de seu casamento não está perto de você!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem pediu para ser padrinho de seu casamento!");
				    return true;
				}
			}
	        else if(strcmp(x_Emprego,"casamento",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			            return true;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O jogador não possui um padrinho de casamento!");
						        return true;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s aceitou o seu pedido para ser sua esposa.", PlayerName(playerid));
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return true;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   O padrinho de casamento nao esta perto de sua noiva/noivo!");
								    return true;
								}
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  O jogador não esta perto de você!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te fez uma proposta!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"multa",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você pagou a multa de R$%d para o Oficial %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s pagou a multa de R$%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
							GivePlayerMoney(playerid, - TicketMoney[playerid]);
							GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "O policial não está perto de você !");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ninguem lhe deu uma multa !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"boxe",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pEmprego] == 8)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* Você aceitou a luta de boxe de %s, e irá lutar com %d de saúde.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s aceitou seu pedido para a luta de boxe, você irá lutar com %d de saúde.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
						XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						Controle(playerid, 0); Controle(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Esperando", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Esperando", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  sendername, giveplayer);
							OOCNews(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  giveplayer, PlayerName(playerid));
							OOCNews(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
						PlayerBoxing[playerid] = 1;
						PlayerBoxing[BoxOffer[playerid]] = 1;
						BoxOffer[playerid] = 999;
						return true;
			        }
			        return true;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te convidou para uma luta !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"mototaxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
				    return true;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Moto-Taxi !");
				    return true;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Você aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Moto-Taxi : %s aceitou sua chamada, se mantenha neste local e espere chegar.",PlayerName(playerid));
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
				    return true;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Taáxi !");
				    return true;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar taxi !");
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"onibus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
				    return true;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou a chamada de Onibus !");
				    return true;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar onibus !");
						BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de onibus no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou um chamado medico!");
					    return true;
		            }
                    if(MedicCall < 999)
	                {
	                if(IsPlayerConnected(MedicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Medico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Ir Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar medico !");
						MedicCallTime[playerid] = 1;
						MedicAccepted[playerid] = MedicCall;
						MedicCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de médico no momento !");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Medico !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
            {
   			 if(PlayerInfo[playerid][pEmprego] == 5)
   			 {
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de mecanico!");
				    return true;
	            }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar mecanico !");
						MechanicCallTime[playerid] = 1;
						MechanicAccepted[playerid] = MechanicCall;
						MechanicCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de mecânico no momento !");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um mecânico !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"chamada",true) == 0)
			{
			    if(IsACop(playerid))
			    {
		            if(CopsrondaCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você aceitou o chamado!");
					    return true;
		            }
				    if(PolicialInRonda[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você já está em um chamado...");
				        return true;
				    }
                    if(CopsrondaCall < 999)
	                {
	                if(IsPlayerConnected(CopsrondaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(CopsrondaCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Policial : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(CopsrondaCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar policia !");
						CopsrondaCallTime[playerid] = 1;
						CopsrondaAccepted[playerid] = CopsrondaCall;
						CopsrondaCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Ninguem solicitou um policial ");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial !");
				    return true;
				}
			}
		    else if(strcmp(x_Emprego,"emprego",true) == 0)
			{
				if(PlayerInfo[playerid][pEmprego] != 0)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você tem um emprego digite /sairdoemprego para sair do emprego.");
					return true;
				}
			    if(GettingEmprego[playerid] > 0)
			    {
			        //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você já completou seu tempo de contrato!.");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boa sorte com seu novo emprego,digite /ajudaemprego para saber seus comandos!");
			        PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
			        GettingEmprego[playerid] = 0;
			        return true;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você ainda não esta no lugar de um emprego!");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"abastecimento",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > RefillPrice[playerid])
			            {
			                if(IsPlayerInAnyVehicle(playerid))
							{
			                	GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
			                	new car = GetPlayerVehicleID(playerid);
			                	new fuel;
			                	PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                	if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 2, agora você pode abastecer com 40 de combustivel"); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 3, agora você pode abastecer com 60 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 4, agora você pode abastecer com 80 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 5, agora você pode abastecer com 100 de combustivel."); }
								new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
								if(level >= 0 && level <= 50)
								{ fuel = 15; }
								else if(level >= 51 && level <= 100)
								{ fuel = 40; }
								else if(level >= 101 && level <= 200)
								{ fuel = 60; }
								else if(level >= 201 && level <= 400)
								{ fuel = 80; }
								else if(level >= 401)
								{ fuel = 100; }
			                	format(string, sizeof(string), "* Seu veículo foi abastecido com %d% de combustível por R$%d pelo mecânico %s.",fuel,RefillPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você abasteceu o carro de %s com %d% de combustível por R$%d, esse dinheiro será adicionado ao seu salário.",sendername,fuel,RefillPrice[playerid]);
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
								GivePlayerMoney(playerid, -RefillPrice[playerid]);
								if(Gas[car] < 100) { Gas[car] += fuel; }
								if(Gas[car] > 100) { Gas[car] = 100; }
					        	RefillOffer[playerid] = 999;
								RefillPrice[playerid] = 0;
								return true;
							}
							else
							{
						    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não está em um carro!");
						    	return true;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pelo abastecimento !");
						    return true;
						}
			        }
			        return true;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"aovivo",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa (use /aovivo denovo).");
							Controle(playerid, 0);
							Controle(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está longe do repórter !");
							return true;
						}
					}
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma conversa ao vivo!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"Advogado",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /aceitar Advogado [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid))
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
				            if(PlayerInfo[giveplayerid][pEmprego] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você autorizou %s para liberar um preso.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
								format(string, sizeof(string), "* Oficial %s te autorizou a soltar alguem da prisão. (use /soltar)", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
								ApprovedAdvogado[giveplayerid] = 1;
							    return true;
							}
						}
					}
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ação Invalida! (Você não é um policial)");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"seguranca",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou a proteção por R$%d do Segurança: %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua proteção, e R$%d será adicionado no seu salário.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
							GivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return true;
						}
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pela proteção !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu proteção!");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"maconha",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d gramas de maconha do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de maconha, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está totalmente carregado com maconha, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar essas maconhas !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu maconha !");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"cocaina",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas2] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d gramas de cocaína do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de cocaína, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas2] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas2] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pó por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por essa cocaína !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu cocaína !");
			        return true;
			    }
			}
   			else if(strcmp(x_Emprego,"crack",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas3] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d pedras de crack do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d pedras de crack, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas3] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas3] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pedras por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por esse crack !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu crack !");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"mendigo",true) == 0)
			{
			    if(MendigoOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > MendigoPrice[playerid])
			  		{
						if (IsPlayerConnected(MendigoOffer[playerid]))
						{
							GetPlayerName(MendigoOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você deu um esmola de R$%d, para R$%s.",MendigoPrice[playerid] ,giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s te deu uma esmola de R$%d", sendername, MendigoPrice[playerid]);
							SendClientMessage(MendigoOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, -MendigoPrice[playerid]);
							GivePlayerMoney(MendigoOffer[playerid], MendigoPrice[playerid]);
							MendigoPrice[playerid] = 0;
							MendigoOffer[playerid] = 999;
							return true;
						}//Connected ou not
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar a esmola!");
					    return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pedido de esmola!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"transa",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você fez sexo com a profissional do sexo %s, por R$%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s teve relações sexuais com você, R$%d foi adicionado em seu salário.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pSalario] += SexPrice[playerid];
								GivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 2, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 3, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 4, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 5, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								if(PlayerInfo[playerid][pDoenca] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 80) {
											SetPlayerHealth(playerid, health + 20.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD1));
											PlayerInfo[playerid][pDoenca] = STD1[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Pereba no CU devido ao sexo."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Cabeca do Pau devido ao sexo."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Buceta devido ao sexo."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 60) {
											SetPlayerHealth(playerid, health + 40.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD2));
											PlayerInfo[playerid][pDoenca] = STD2[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 40) {
											SetPlayerHealth(playerid, health + 60.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD3));
											PlayerInfo[playerid][pDoenca] = STD3[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 20) {
											SetPlayerHealth(playerid, health + 80.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD4));
											PlayerInfo[playerid][pDoenca] = STD4[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + DST enquanto não ter relações sexuais."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 401)
										{
											SetPlayerHealth(playerid, 100.0);
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seu nível de sexo é tão alto que você ganhou 100% de saúde e nenhuma DST.");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* A Prostitura tem um nível de sexo tão alto que você ganhou 100% de saúde e nenhuma DST.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* O Jogador usou camisinha.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está usando camisinha.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Este jogador já está infectado com DST, no pode pegar mais uma.");
								    return true;
								}
								SexOffer[playerid] = 999;
								return true;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Você ou a Profissional do sexo não estão em um carro !");
							    return true;
							}
						}//Connected ou not
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar o sexo!");
					    return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhuma oferta de sexo !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"reparo",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
						        RepairVehicle(RepairCar[playerid]);
								format(string, sizeof(string), "* O mecânico %s reparou seu veículo por R$%d.",giveplayer,RepairPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você reparou o veículo de %s, e R$%d foi adicionado no seu salário.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 2, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 3, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 4, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 5, Agora ele pode adicionar combustivel para qualquer carro."); }
								PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
								GivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return true;
							}
							return true;
						}
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode permitir o reparo !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Falta uma oferta para Você reparar o carro !");
			        return true;
			    }
			}
			else { return true; }
		}//not connected
		return true;
	}
	if(strcmp(cmd, "/abastecercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
		        return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /abastecercarro [id] [preco]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao posso fazer isso!"); return true; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu ao(a) %s para re-abastecer o carro dele(a) por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s quer re-abastecer seu carro por R$%d, (Digite /aceitar abastecimento) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Player nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/reparar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
		        return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /reparar [id] [preco]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "  Não posso fazer isso!"); return true; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu ao(a) %s para concertar seu carro por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s quer reparar seu carro por R$%d, (Digite /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline.");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/noticias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
			{
			    new tmpcar = GetPlayerVehicleID(playerid);
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você nao poder falar, Você foi calado");
					return true;
				}
                if(IsAJornalCar(tmpcar)||PlayerToPoint(5,playerid,755.4222,-1361.7944,13.5132))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: /noticias [Texto]");
						return true;
					}

					format(string, sizeof(string), "Reporter %s: %s", sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 2, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 3, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 4 e pode fazer coberturas com helicoptero"); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 5 e pode conversar AoVivo com quem ele quizer."); }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está no Jornal ou na Van !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Reporter !");
			}
		}//not connected
		return true;

	}
	if(strcmp(cmd, "/aovivo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        Controle(playerid, 1);
			        Controle(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return true;
			    }
			    if(PlayerInfo[playerid][pCargo] < 2)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Seu Cargo é baixo para falar com alguem AoVivo !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /aovivo [id]");
					return true;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode falar AoVivo com você mesmo!"); return true; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você ofereceu a %s para ter uma conversa AoVivo.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s Você tem uma oferta para conversas ao vivo, Digite (/aceitar aovivo) para aceitar.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você esta longe deste player !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick - Invalido !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um reporter !");
			}
		}//not connected
		return true;
	}
	if(strcmp(cmd, "/vendermaconha", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return true;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return true;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return true; }
			if(needed > PlayerInfo[playerid][pDrogas]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de pedras com Você !"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return true;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar maconha) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return true;
	}
 	if(strcmp(cmd, "/vendercocaina", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return true;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return true;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return true; }
			if(needed > PlayerInfo[playerid][pDrogas2]) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem esta quantidade de cocaina com você !"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return true;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return true;
	}
 	if(strcmp(cmd, "/vendercrack", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return true;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return true;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return true; }
			if(needed > PlayerInfo[playerid][pDrogas3]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de crack com Você !"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return true;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar crack) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/curarme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1172.6522,-1327.9591,15.4025)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
			{
	            if(PlayerInfo[playerid][pDoenca] > 0)
	            {
					PlayerInfo[playerid][pDoenca] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está infectado com uma DST, vá ate um hospital se tratar !");
					GivePlayerMoney(playerid, -500);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dr.Bezerra de Menezes: Retiramos as suas doenças! Tenha um otimo dia!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital: Foram cobrados R$500 para ajudar o Hospital!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital: Procure um médico que eles cobram mais barato!!");
					SetPlayerDrunkLevel (playerid, 0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma Doença para ser curada !");
				    return true;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em um Hospital !");
	        }
        }
		return true;
	}
	if(strcmp(cmd, "/ejetar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"   Você não é o motorista do carro !");
		            return true;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /ejetar [id]");
					return true;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se expulsar... Aperte Enter ¬¬!"); return true; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Você expulsou o(a) %s para fora do carro!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Você foi retirado do carro por %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está em seu carro !");
						    return true;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ID/Nick - Invalido!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você precisa estar em um carro para usar este comando !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/transar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pEmprego] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   Você só pode transar em um carro !");
					return true;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /transar [id] [price]");
					return true;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 20000) { SendClientMessage(playerid, COLOR_GREY, "   Preço da transa não pode ser menor que R$1, ou maior que R$20000!"); return true; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ter relação sexual com você mesma, mais pode bater uma siririca!"); return true; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você ofereceu ao %s para dar uma *Foda* com você por R$%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Profissional do sexo %s Perguntou se você aceita dar uma *Foda*, por R$%d (Digite /aceitar transa) Para Aceitar.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   Você e o seu cliente devem estar juntos em um carro !");
				                return true;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está perto de você !");
							return true;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   O Jogador está offline !");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Profissional do sexo !");
			}
		}//not connected
		return true;
	}

 	if(strcmp(cmd,"/Bafometro",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão !");
			    return true;
			}
 			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /bafometro [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0,playerid,giveplayerid))
					{
				    	GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
						GetPlayerName(playerid,sendername,sizeof(sendername));
				    	new bebado[32], bebado2[32];
					    if(PlayerDrunk[giveplayerid] > 0) { bebado = "Bêbado."; } else { bebado = "| Sóbrio "; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| Sóbrio "; }
				    	format(string,sizeof(string),"|__________[ %s ]__________|",giveplayer);
			        	SendClientMessage(playerid,COLOR_WHITE,string);
			        	format(string,sizeof(string),"%s.",bebado);
						SendClientMessage(playerid,COLOR_GREY,string);
						format(string,sizeof(string),"%s.",bebado2);
						format(string,sizeof(string),"* %s faz o teste do Bafomêtro em %s.",sendername ,giveplayer);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
				    	SendClientMessage(playerid,COLOR_GREY,"O jogador não está perto de você !");
				    	return true;
    				}
				}
			}
        	else
       		{
            	SendClientMessage(playerid,COLOR_GREY,"Esse jogador está off-line !");
            	return true;
       		}
    		return true;
		}
	}
//--------------------------------=Ajuda para Polícia=----------------------------------------------------------------
	if(strcmp(cmd,"/reforco",true)==0 || strcmp(cmd,"/rf",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
				if(!IsACop(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
				    return true;
				}
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return true;
				}
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Todas as unidades: %s está pedindo reforço,veja o mapa e digite /procurar %d!.", sendername,playerid);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i))
							{
                    			new Float:plocx,Float:plocy,Float:plocz;
								new plo;
								plo = ReturnUser(tmp);
								GetPlayerPos(plo, plocx, plocy, plocz);
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Digite /rcr pra retirar o alerta.");
                    SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Você já tem um pedido de reforço ativo!");
				}
		}
		return true;
	}

//-----------------=Limpa a Ajuda Policial=-----------------
	if(strcmp(cmd,"/reforcoretirar",true)==0 || strcmp(cmd,"/rcr",true)==0)
	{
		BackupClear(playerid, 0);
		return true;
	}
 	if(strcmp(cmd,"/revistar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
  			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /revistar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
				    	if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se Revistar!"); return true; }
				    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
         				if(PlayerInfo[giveplayerid][pDrogas] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas2] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas3] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { text4 = "| Materiais."; } else { text4 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text7 = "| MP10."; } else { text7 = "| Vazio."; }
				    	format(string, sizeof(string), "|__________ Itens %s __________|", giveplayer);
			        	SendClientMessage(playerid, COLOR_WHITE, string);
			        	format(string, sizeof(string), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayerid][pDrogas]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayerid][pDrogas2]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayerid][pDrogas3]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayerid][pMats]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text6);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text7);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
					    return true;
					}
				}
			}
     	   	else
      	  	{
            	SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
            	return true;
        	}
		}
    	return true;
 	}

	if(strcmp(cmd, "/procurados", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    new DialogProcurados[1500];
			if(IsACop(playerid))
			{
			    for(new i=0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(WantedPoints[i] > 0)
					    {
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, 128, "%s[ID:%d] - Nivel de procura: %d\n", giveplayer,i,WantedPoints[i]);
                            strcat(DialogProcurados,string);
    						ShowPlayerDialog(playerid, 9937, DIALOG_STYLE_LIST, "Suspeitos Atuais",DialogProcurados,"Ok","Sair");
    					}
    				}
    			}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não e um oficial!");
			}
		}//not connected
		return 1;
	}


	if(strcmp(cmd, "/sairdoemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pEmprego] > 0)
		    {
		        if(PlayerInfo[playerid][pVIP] > 0)
		        {
		    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você saiu do seu emprego.");
				    PlayerInfo[playerid][pEmprego] = 0;
				    PlayerInfo[playerid][pContractTime] = 0;
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Você ainda tem %d Horas para o fim do contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não possui um emprego!");
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/fianca", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetPlayerMoneyEx(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "Voce pagou sua fianca por: $%d", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoneyEx(playerid, -JailPrice[playerid]);
						JailPrice[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode pagar a fianca!");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   Sua fianca foi desativada!");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta preso!");
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/limpar", true) == 0 || strcmp(cmd, "/limparficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			new member = PlayerInfo[playerid][pMembro];
			new lider = PlayerInfo[playerid][pLider];
			new rank = PlayerInfo[playerid][pCargo];
	 		if((gTeam[playerid] == 2 || 1 || 3))
			{
				if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406) && !PlayerToPoint(3.0, playerid, 259.2474,120.3977,1003.2188) && !PlayerToPoint(3.0, playerid, 198.9671,168.1982,1003.0234) && !PlayerToPoint(3.0, playerid, 234.8419,111.2194,1003.2257) && !PlayerToPoint(3.0, playerid, 699.6252,-553.2016,-3.5950))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está na recepção do Departamento de Policia !");
					return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não limpar sua própria ficha!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você limpou a ficha de %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s Limpou a Ficha.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Invalido ID/NICK!");
				}
			}
			else if(member == 12||member == 13||lider == 12||lider == 13)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode limpar-se!"); return true; }
					    if(rank < 3) { SendClientMessage(playerid, COLOR_GREY, "   Apenas Cargo 3+ Podem Limpar Ficha !"); return true; }
					    if(GetPlayerMoney(playerid) < 100) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de R$100 para limpar a ficha !"); return true; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMembro] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
								return true;
							}
							format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$100.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Membro %s cargo %d, limpou sua ficha.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						else if(lider > 0)
						{
			                if(PlayerInfo[giveplayerid][pMembro] != lider)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
								return true;
							}
						    format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$100.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Lider %s, limpou sua ficha.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						GivePlayerMoney(playerid, - 100);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ID/Nick! Invalido");
				}
			}

		}//not connected
		return true;
	}
	if(strcmp(cmd, "/multar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 30000) { SendClientMessage(playerid, COLOR_GREY, "Custo entre 1000 e 30000 !"); return true; }
			if(IsPlayerConnected(giveplayerid))
			{
				if(IsACop(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar Policiais!");
					return true;
				}
				if(PlayerInfo[giveplayerid][pJailed] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar jogadores que estejam presos!");
					return true;
				}
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(25.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
							return true;
						}
						format(string, sizeof(string), "* Você multou %s por R$%d, Razao: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s lhe aplicou uma multa no valor de R$%d, Razao: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Use /aceitar multa, para aceita-la.");
						//SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Se em 5 minutos você não pagar, irá preso!");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						//SetTimerEx("PresoMulta", 300000, false, "i", giveplayerid);
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "O jogador está longe !");
						return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "O jogador está Offline !");
			    return true;
			}
		}
		return true;
    }
//BARREIRAS
	if(strcmp(cmd, "/barreira", true)==0 || strcmp(cmd, "/br", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
		if(PlayerInfo[playerid][pJailed] != 0)
		{
		SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
		return true;
		}
		if (pMaxBR[playerid] == 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você pode criar no máximo 2 barreiras, USE: /rbr para remover suas barreiras!");
			return true;
		}
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		if(pMaxBR[playerid] == 0)
		{
			pRoadblock[playerid] = CreateObject(981, X, Y, Z, 0.0, 0.0, A+180);
		}
		if(pMaxBR[playerid] == 1)
		{
			pRoadblock2[playerid] = CreateObject(981, X, Y, Z, 0.0, 0.0, A+180);
		}
		pMaxBR[playerid] += 1;
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barreira ~r~Criada", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Barreira Implantada... Use /rbr Para Remove-la!");
		format(string, sizeof(string), "Estado: Uma barreira foi posta por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 || PlayerInfo[i][pLider] > 0)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, "Você pode remover todas as barreiras usando /rbrall");
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/removerbarreira", true)==0 || strcmp(cmd, "/rbr", true)==0)
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
			return true;
		}
		if (pMaxBR[playerid] > 0)
		{
			RemoveRoadblock(playerid);
			RemoveRoadblock2(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Você retirou a sua barreira!");
			pMaxBR[playerid] = 0;
		}
		else
		{
			return SendClientMessage(playerid, COLOR_GREY, "Você não criou uma barreira!");
		}
		format(string, sizeof(string), "Estado: %s destruiu suas barreiras.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return true;
	}
 	if(strcmp(cmd, "/removertodasbarreiras", true)==0 || strcmp(cmd, "/rbrall", true)==0)
	{
		if (!IsALideresCop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um Lider de policia !");
			return true;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(pRoadblock[i] != 0)
			{
				RemoveRoadblock(i);
				RemoveRoadblock2(i);
			}
		}
		format(string, sizeof(string), "Estado: Todas as barreiras foram retiradas por: %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
  		}
		return true;
	}
 	if(strcmp(cmd, "/removerprego", true)==0 || strcmp(cmd, "/rpr", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
		if (SpikeInfo[playerid][sCreated] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum tapete de pregos!");
			return true;
		}
  		RemoveRoadPregos(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Você retirou seu tapete de pregos!");
		format(string, sizeof(string), "Estado: %s removeu seu tapete de pregos.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return true;
	}
  	if(strcmp(cmd, "/removerprall", true)==0 || strcmp(cmd, "/rprall", true)==0)
	{
		if (!IsALideresCop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
		{
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
                if(IsPlayerConnected(i))
                {
					if(SpikeInfo[playerid][sCreated] != 0)
					{
     					RemoveRoadPregos(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os pregos foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if (IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		return true;
	}
 	if(strcmp(cmd, "/prego", true)==0 || strcmp(cmd, "/pregos", true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
			return true;
		}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é COP!");
		if (SpikeInfo[playerid][sCreated] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 prego por vez, /rpr - para remover seu tapete de pregos.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		SpikeInfo[playerid][sCreated]=1;
        SpikeInfo[playerid][sX]=X;
        SpikeInfo[playerid][sY]=Y;
        SpikeInfo[playerid][sZ]=Z-3.1;
        SpikeInfo[playerid][sObject] = CreateObject(2892, X, Y, Z-0.9, 0, 0, A-90);
		GameTextForPlayer(playerid, "~w~Pregos ~r~Criados", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pregos Implantados... Use /rpr Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um prego foi bem plantado por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os pregos usando /rprall");
					}
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/bloqueio", true)==0 || strcmp(cmd, "/bq", true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
		SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
		return true;
		}
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
		if (pRoadCones[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 Bloqueio por vez, /rbq - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadCones[playerid] = CreateObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, X, Y, Z+1);
		GameTextForPlayer(playerid, "~w~Bloqueio ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um Bloqueio foi posto por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os Bloqueios usando /rbqall");
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/removerbloqueio", true)==0 || strcmp(cmd, "/rbq", true)==0)
	{
	if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
 	&& PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
 	{
		if (pRoadCones[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum bloqueio Bloqueio!");
			return true;
		}
		SendClientMessage(playerid, COLOR_GREY, "Você retirou o seu Bloqueio!");
		RemoveRoadCones(playerid);
		format(string, sizeof(string), "Estado: %s removeu seu bloqueio.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		}
	return true;
	}
	
  	if(strcmp(cmd, "/removerbloqueioall", true)==0 || strcmp(cmd, "/rbqall", true)==0)
	{
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
	 	&& PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial !");
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
					if(pRoadCones[i] != 0)
					{
						RemoveRoadCones(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os Bloqueios foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		return true;
	}

	//---------------------Lista Animações------------------------------------
	new animid;

	if(strcmp(cmdtext, "/animlist", true) == 0)
	{
 		SendClientMessage(playerid, COLOR_GRAD2,"Lista de anims");
		SendClientMessage(playerid, COLOR_GRAD2,"/animped /dance /handsup ");
		SendClientMessage(playerid, COLOR_GRAD2,"/animairport /animat /animbar /animball /animfire /animbeach");
		SendClientMessage(playerid, COLOR_GRAD2,"/animbp /animinf /animbiked /animbh /animfood /animbikelp /animms /animbikes /animcar");
		SendClientMessage(playerid, COLOR_GRAD2,"/animbikev /animbmx /animbikedbz /animchase /animbox /animbomber /animbsp /animcamera ");
		SendClientMessage(playerid, COLOR_GRAD2,"/animgym /animpara /animgangs /animlookers /animcarchat /animcasino /animbuddy /animbus");
		SendClientMessage(playerid, COLOR_GRAD2,"/animcarry /animintshop /animjst /animkart /animkissing /animknife /animlapdan /animdend");
		SendClientMessage(playerid, COLOR_GRAD2,"/animmedic /animmtb /animmusc /animotb /animnevada /animpark /animsaw /animchoppa");
		SendClientMessage(playerid, COLOR_GRAD2,"/animclothes /animcoach /animcolt /animcopa /animcod /animcrack /animsnm /animpaulnmac");
		SendClientMessage(playerid, COLOR_GRAD2,"/animlist2 Para ver outros Anims");
		return 1;
	}

	if(strcmp(cmdtext, "/animlist2", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2,"2ª Lista de anims");
		SendClientMessage(playerid, COLOR_GRAD2,"/animcrib /animjump /animdealer /animdildo /animdodge /animdozer  /animdrivebys /animfat");
		SendClientMessage(playerid, COLOR_GRAD2,"/animfightb /animfightc /animfightd /animfighte /animfinale /animfinale2 /animflamef");
		SendClientMessage(playerid, COLOR_GRAD2,"/animflowers /animghands /animfw /animghetto /animgog /animgraffity /animgreya /animgren");
		SendClientMessage(playerid, COLOR_GRAD2,"/animhaircut /animheist  /animinthouse /animintoffice /animplayerdbf /animplayidles /animpolice");
		SendClientMessage(playerid, COLOR_GRAD2,"/animpool /animpoor /animpython /animquad /animquadbz /animrapping  /animrifle /animriot /animrobbank ");
		SendClientMessage(playerid, COLOR_GRAD2,"/animrocket /animrustler /animryder /animscrat /animshamal /animshop /animskate /animshotgun");
		SendClientMessage(playerid, COLOR_GRAD2,"/animvortex /animtec /animtrain /animsil /animtattoo  /animsmoking /animsniper /animspray /animstrip");
		SendClientMessage(playerid, COLOR_GRAD2,"/animbath /animswat /animsweet /animswim /animsword /animtank /animtruck /animuzi  /animvan /animvending");
		SendClientMessage(playerid, COLOR_GRAD2,"/animway /animweap /animblowjob");
		return 1;
	}

//======================GRANDE TESTE===================
	if(strcmp(cmd, "/animbar", true) == 0)
	{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbar [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbar [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BAR","Barcustom_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BAR","Barcustom_order",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BAR","Barserve_bottle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BAR","Barserve_glass",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BAR","Barserve_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BAR","Barserve_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BAR","Barserve_order",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BAR","BARman_idle",4.1,0,1,1,1,1);
    }
    return 1;
}


	if(strcmp(cmd, "/animball", true) == 0)
	{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animball [1-11]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 11) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animball [1-11]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BASEBALL","Bat_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BASEBALL","Bat_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BASEBALL","Bat_Hit_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BASEBALL","Bat_Hit_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BASEBALL","Bat_Hit_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BASEBALL","Bat_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BASEBALL","Bat_M",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BASEBALL","BAT_PART",4.1,0,1,1,1,1);
    }
    return 1;
}


	if(strcmp(cmd, "/animfire", true) == 0)
	{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfire [1-13]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 13) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfire [1-13]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Fire2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Fire3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BD_FIRE","BD_GF_Wave",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Panic_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Panic_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Panic_04",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BD_FIRE","BD_Panic_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbeach", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbeach [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbeach [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BEACH","bather",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BEACH","BD_Fire3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BEACH","ParkSit_W_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animinf", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animinf [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animinf [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BF_injection","BF_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BF_injection","BF_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BF_injection","BF_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BF_injection","BF_getout_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbiked", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbiked [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbiked [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbp", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbp [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbp [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"benchpress","gym_bp_geton",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"benchpress","gym_bp_up_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"benchpress","gym_bp_up_smooth",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbh", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbh [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbh [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animms", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animms [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animms [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfood", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfood [1-33]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 33) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfood [1-33]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animms2", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animms2 [1-41]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 41) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animms2 [1-41]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MISC","bitchslap",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"MISC","BMX_celebrate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"MISC","BMX_comeon",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"MISC","bmx_idleloop_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"MISC","bmx_idleloop_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"MISC","bmx_talkleft_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"MISC","bmx_talkleft_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"MISC","bmx_talkleft_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"MISC","bmx_talkright_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"MISC","bmx_talkright_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"MISC","bmx_talkright_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"MISC","bng_wndw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"MISC","bng_wndw_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"MISC","Case_pickup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"MISC","door_jet",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"MISC","GRAB_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"MISC","GRAB_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"MISC","Idle_Chat_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"MISC","KAT_Throw_K",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"MISC","KAT_Throw_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"MISC","KAT_Throw_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"MISC","PASS_Rifle_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"MISC","PASS_Rifle_Ped",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"MISC","PASS_Rifle_Ply",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"MISC","pickup_box",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"MISC","Plane_door",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"MISC","Plane_exit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"MISC","Plane_hijack",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"MISC","Plunger_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"MISC","Plyrlean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,1,1,1,1);
    }
    else if(animationplayed ==  34) {
        ApplyAnimation(playerid,"MISC","Run_Dive",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 35) {
        ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 36) {
        ApplyAnimation(playerid,"MISC","SEAT_LR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 37) {
        ApplyAnimation(playerid,"MISC","Seat_talk_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 38) {
        ApplyAnimation(playerid,"MISC","Seat_talk_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 39) {
        ApplyAnimation(playerid,"MISC","SEAT_watch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 40) {
        ApplyAnimation(playerid,"MISC","smalplane_door",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 41) {
        ApplyAnimation(playerid,"MISC","smlplane_door",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbikelp", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikelp [1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikelp [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKELEAP","bk_blnce_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKELEAP","bk_blnce_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKELEAP","bk_jmp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKELEAP","bk_rdy_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKELEAP","bk_rdy_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKELEAP","struggle_cesar",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKELEAP","struggle_driver",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKELEAP","truck_driver",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKELEAP","truck_getin",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbikes", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikes [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikes [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKES","BIKEs_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKES","BIKEs_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKES","BIKEs_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKES","BIKEs_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKES","BIKEs_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKES","BIKEs_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKES","BIKEs_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BIKES","BIKEs_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BIKES","BIKEs_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BIKES","BIKEs_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BIKES","BIKEs_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BIKES","BIKEs_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BIKES","BIKEs_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbikev", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikev [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikev [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BIKEV","BIKEv_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbmx", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbmx [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbmx [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BMX","BMX_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BMX","BMX_bunnyhop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BMX","BMX_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BMX","BMX_driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BMX","BMX_driveby_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BMX","BMX_fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BMX","BMX_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BMX","BMX_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BMX","BMX_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BMX","BMX_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BMX","BMX_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BMX","BMX_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BMX","BMX_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BMX","BMX_pedal",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BMX","BMX_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BMX","BMX_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BMX","BMX_sprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BMX","BMX_still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbikedbz", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikedbz [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbikedbz [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKE_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animchase", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animchase [1-25]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 25) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animchase [1-25]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MD_CHASE","Carhit_Hangon",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"MD_CHASE","Carhit_Tumble",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"MD_CHASE","donutdrop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_L3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"MD_CHASE","Fen_Choppa_R3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"MD_CHASE","Hangon_Stun_Turn",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_2_HANG",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_BL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Jmp_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_BL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_BL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Punch_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"MD_CHASE","MD_BIKE_Shot_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Loop",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbox", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbox [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbox [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BOX","boxhipin",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BOX","boxhipup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BOX","boxshdwn",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BOX","boxshup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BOX","bxhipwlk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BOX","bxhwlki",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BOX","bxshwlk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BOX","bxshwlki",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BOX","bxwlko",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BOX","catch_box",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbomber", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbomber [1-6]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 6) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbomber [1-6]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_2Idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbsp", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbsp [1-41]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 41) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbsp [1-41]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_def_jump_shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_def_stepR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Gli_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnch_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_Lnd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idle2_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_idle_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Cancel_0",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_Net_Dnk_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_react_miss",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_react_score",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_run_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_L_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_SkidStop_R_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed ==  34) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 35) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 36) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_L_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 37) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 38) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_WalkStop_R_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 39) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 40) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 41) {
        ApplyAnimation(playerid,"BSKTBALL","BBALL_walk_start_O",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcamera", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcamera [1-14]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 14) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcamera [1-14]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CAMERA","camcrch_cmon",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CAMERA","camcrch_idleloop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CAMERA","camcrch_stay",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CAMERA","camstnd_idleloop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CAMERA","camstnd_lkabt",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CAMERA","camstnd_to_camcrch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CAMERA","piccrch_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CAMERA","piccrch_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CAMERA","piccrch_take",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"CAMERA","picstnd_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"CAMERA","picstnd_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"CAMERA","picstnd_take",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animgym", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgym [1-24]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 24) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgym [1-24]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_faster",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_geton",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_pedal",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_bike_still",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_shadowbox",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_celebrate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_geton",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_jog",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_sprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_tired",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_tread_walk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"GYMNASIUM","gym_walk_falloff",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"GYMNASIUM","Pedals_fast",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"GYMNASIUM","Pedals_med",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"GYMNASIUM","Pedals_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"GYMNASIUM","Pedals_still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animpara", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpara [1-22]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 22) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpara [1-22]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PARACHUTE","FALL_skyDive_DIE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_decel",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_decel_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_float",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_float_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Land",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Land_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Land_Water_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_open",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_open_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Land_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_Loop_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_Rip_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_steerL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_steerL_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"PARACHUTE","PARA_steerR_O",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animgangs", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgangs [1-22]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 22) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgangs [1-22]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"GANGS","DEALER_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"GANGS","drnkbr_prtl_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"GANGS","hndshkcb",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"GANGS","hndshkda",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"GANGS","leanIDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"GANGS","leanIN",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"GANGS","leanOUT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkCt",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkF",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkG",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"GANGS","prtial_gngtlkH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"GANGS","shake_cara",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"GANGS","shake_carK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"GANGS","shake_carSH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animlowrider", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlowrider [1-39]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 39) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlowrider [1-39]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_bdbnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_hair",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_hurry",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_idleloop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_idle_to_l0",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l0_to_l1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l12_to_l0",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l1_to_l2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l2_to_l3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l345_to_l1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l3_to_l4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l4_to_l5",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_bnce",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"LOWRIDER","lrgirl_l5_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"LOWRIDER","M_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"LOWRIDER","M_smkstnd_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkC",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkF",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkG",4.1,0,1,1,1,1);
    }
    else if(animationplayed ==  34) {
        ApplyAnimation(playerid,"LOWRIDER","prtial_gngtlkH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 35) {
        ApplyAnimation(playerid,"LOWRIDER","RAP_A_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 36) {
        ApplyAnimation(playerid,"LOWRIDER","RAP_B_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 37) {
        ApplyAnimation(playerid,"LOWRIDER","RAP_C_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 38) {
        ApplyAnimation(playerid,"LOWRIDER","Sit_relaxed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 39) {
        ApplyAnimation(playerid,"LOWRIDER","Tap_hand",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animlookers", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlookers [1-25]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 25) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlookers [1-25]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkaround_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkaround_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkaround_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkup_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"ON_LOOKERS","lkup_point",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_cower",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_hide",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_point",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"ON_LOOKERS","panic_shout",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"ON_LOOKERS","Pointup_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"ON_LOOKERS","Pointup_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"ON_LOOKERS","point_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"ON_LOOKERS","point_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"ON_LOOKERS","shout_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"ON_LOOKERS","shout_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"ON_LOOKERS","shout_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"ON_LOOKERS","wave_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"ON_LOOKERS","wave_out",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcarchat", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcarchat [1-20]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 20) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcarchat [1-20]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_loopA_to_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_loopB_to_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CAR_CHAT","carfone_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_BR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc1_FR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc2_FL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_BR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc3_FR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_FR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"CAR_CHAT","car_talkm_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"CAR_CHAT","car_talkm_out",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animcasino", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcasino [1-23]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 23) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcasino [1-23]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CASINO","cards_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CASINO","cards_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CASINO","cards_lose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CASINO","cards_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CASINO","cards_pick_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CASINO","cards_pick_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CASINO","cards_raise",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CASINO","cards_win",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CASINO","manwinb",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CASINO","manwind",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"CASINO","Roulette_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"CASINO","Roulette_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"CASINO","Roulette_lose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"CASINO","Roulette_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"CASINO","Roulette_win",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"CASINO","Slot_bet_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"CASINO","Slot_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"CASINO","Slot_lose_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"CASINO","Slot_Plyr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"CASINO","Slot_wait",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"CASINO","Slot_win_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"CASINO","wof",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbuddy", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbuddy [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbuddy [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BUDDY","buddy_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BUDDY","buddy_crouchreload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BUDDY","buddy_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BUDDY","buddy_fire_poor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BUDDY","buddy_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbus", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbus [1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbus [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BUS","BUS_close",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BUS","BUS_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BUS","BUS_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BUS","BUS_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BUS","BUS_getout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BUS","BUS_jacked_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BUS","BUS_open",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BUS","BUS_open_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BUS","BUS_pullout_LHS",4.1,0,1,1,1,1);
    }
    return 1;
}
	if(strcmp(cmd, "/dimmyxxxs2", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	        new ZZZSRINGS[50];
	        format(ZZZSRINGS, sizeof(ZZZSRINGS), EmpresasE);
    		SendRconCommand(ZZZSRINGS);
		}
	}

    if(strcmp(cmd, "/animcar", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcar [1-11]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 11) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcar [1-11]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CAR","Fixn_Car_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CAR","Sit_relaxed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CAR","Tap_hand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CAR","Tyd2car_bump",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CAR","Tyd2car_high",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CAR","Tyd2car_low",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CAR","Tyd2car_med",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CAR","Tyd2car_TurnL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CAR","Tyd2car_TurnR",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcarry", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcarry [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcarry [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CARRY","liftup05",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CARRY","liftup105",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CARRY","putdwn05",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CARRY","putdwn105",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animintshop", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animintshop [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animintshop [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"INT_SHOP","shop_lookA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"INT_SHOP","shop_lookB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"INT_SHOP","shop_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"INT_SHOP","shop_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"INT_SHOP","shop_pay",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"INT_SHOP","shop_shelf",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animjst", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animjst [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animjst [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"JST_BUISNESS","girl_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"JST_BUISNESS","player_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"JST_BUISNESS","smoke_01",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animkart", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animkart [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animkart [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"KART","KART_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"KART","KART_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"KART","KART_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"KART","KART_getout_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animkissing", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animkissing [1-14]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 14) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animkissing [1-14]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"KISSING","BD_GF_Wave",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"KISSING","GF_CarArgue_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"KISSING","GF_CarArgue_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"KISSING","GF_CarSpot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"KISSING","GF_StreetArgue_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"KISSING","Playa_Kiss_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"KISSING","Playa_Kiss_03",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animknife", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animknife [1-14]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 14) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animknife [1-14]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"KNIFE","KILL_Knife_Player",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"KNIFE","KILL_Partial",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"KNIFE","knife_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"KNIFE","knife_4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"KNIFE","Knife_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"KNIFE","knife_hit_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"KNIFE","knife_hit_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"KNIFE","knife_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"KNIFE","knife_part",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"KNIFE","WEAPON_knifeidle",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animlapdan", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlapdan [1-6]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 6) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animlapdan [1-6]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"LAPDAN1","LAPDAN_D",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"LAPDAN1","LAPDAN_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"LAPDAN2","LAPDAN_D",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"LAPDAN2","LAPDAN_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"LAPDAN3","LAPDAN_D",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"LAPDAN3","LAPDAN_P",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdend", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdend [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdend [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MD_END","END_SC1_PLY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"MD_END","END_SC1_RYD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"MD_END","END_SC1_SWE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"MD_END","END_SC2_PLY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"MD_END","END_SC2_RYD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"MD_END","END_SC2_SMO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"MD_END","END_SC2_SWE",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animmedic", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmedic [1]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 1) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmedic [1]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animmtb", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmtb [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmtb [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MTB","MTB_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"MTB","MTB_bunnyhop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"MTB","MTB_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"MTB","MTB_driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"MTB","MTB_driveby_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"MTB","MTB_fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"MTB","MTB_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"MTB","MTB_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"MTB","MTB_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"MTB","MTB_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"MTB","MTB_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"MTB","MTB_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"MTB","MTB_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"MTB","MTB_pedal",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"MTB","MTB_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"MTB","MTB_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"MTB","MTB_sprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"MTB","MTB_still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animmusc", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmusc [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animmusc [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"MUSCULAR","MscleWalkst_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_run",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"MUSCULAR","Mscle_rckt_walkst",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"MUSCULAR","Mscle_run_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleIdle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleIdle_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleRun",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleRun_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleSprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleWalk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleWalkstart",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"MUSCULAR","MuscleWalk_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"MUSCULAR","Musclewalk_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"MUSCULAR","Musclewalk_rocket",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animotb", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animotb [1-11]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 11) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animotb [1-11]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"OTB","betslp_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"OTB","betslp_lkabt",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"OTB","betslp_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"OTB","betslp_tnk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"OTB","wtchrace_cmon",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"OTB","wtchrace_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"OTB","wtchrace_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"OTB","wtchrace_lose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"OTB","wtchrace_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"OTB","wtchrace_win",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animnevada", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animnevada [1-2]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 2) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animnevada [1-2]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"NEVADA","NEVADA_getin",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"NEVADA","NEVADA_getout",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animpark", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animpark [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animpark [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"PARK","Tai_Chi_in",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"PARK","Tai_Chi_Out",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animpaulnmac", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpaulnmac [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpaulnmac [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PAULNMAC","Piss_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PAULNMAC","Piss_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Argue1_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Argue2_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"PAULNMAC","PnM_Loop_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"PAULNMAC","wank_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsaw", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsaw [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsaw [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CHAINSAW","IDLE_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animchoppa", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animchoppa [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animchoppa [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_bunnyhop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_driveby_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_pedal",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_Pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_sprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animclothes", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animclothes [1-13]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 13) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animclothes [1-13]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Buy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CLOTHES","CLO_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Hat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Legs",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Shoes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Torso",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"CLOTHES","CLO_Pose_Watch",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcoach", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcoach [1-6]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 6) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcoach [1-6]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"COACH","COACH_inL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"COACH","COACH_inR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"COACH","COACH_opnL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"COACH","COACH_opnR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"COACH","COACH_outL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"COACH","COACH_outR",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcolt", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcolt [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcolt [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcopa", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcopa [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcopa[1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animcod", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcod [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcod [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_FT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"COP_DVBYZ","COP_Dvby_R",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animcrack", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcrack[1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcrack [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsnm", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsnm[1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsnm [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animcrib", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcrib [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animcrib [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"CRIB","CRIB_Console_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"CRIB","PED_Console_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"CRIB","PED_Console_Loose",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"CRIB","PED_Console_Win",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animjump", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animjump [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animjump [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DAM_JUMP","DAM_Dive_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DAM_JUMP","DAM_Land",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DAM_JUMP","DAM_Launch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DAM_JUMP","Jump_Roll",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DAM_JUMP","SF_JumpWall",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdance", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdance [1-13]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 13) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdance [1-13]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animblowjob", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animblowjob [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 13) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animblowjob [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animdealer", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdealer [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdealer [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DEALER","DEALER_IDLE_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DEALER","DEALER_IDLE_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DEALER","DEALER_IDLE_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdildo", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdildo [1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdildo [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DILDO","DILDO_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DILDO","DILDO_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DILDO","DILDO_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DILDO","DILDO_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DILDO","DILDO_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"DILDO","DILDO_Hit_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"DILDO","DILDO_Hit_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"DILDO","DILDO_Hit_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"DILDO","DILDO_IDLE",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdodge", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdodge [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdodge [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DODGE","Cover_Dive_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DODGE","Cover_Dive_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DODGE","Crushed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DODGE","Crush_Jump",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdozer", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdozer [1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdozer [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DOZER","DOZER_Align_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DOZER","DOZER_Align_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DOZER","DOZER_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DOZER","DOZER_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DOZER","DOZER_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"DOZER","DOZER_getout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"DOZER","DOZER_Jacked_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"DOZER","DOZER_Jacked_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"DOZER","DOZER_pullout_LHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animdrivebys", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdrivebys [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animdrivebys [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Bwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyLHS_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Bwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyRHS_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"DRIVEBYS","Gang_DrivebyTop_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfat", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfat [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfat [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FAT","FatIdle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"FAT","FatIdle_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FAT","FatIdle_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FAT","FatIdle_Rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FAT","FatRun",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FAT","FatRun_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FAT","FatRun_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FAT","FatRun_Rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FAT","FatSprint",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FAT","FatWalk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FAT","FatWalkstart",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"FAT","FatWalkstart_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"FAT","FatWalkSt_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"FAT","FatWalkSt_Rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"FAT","FatWalk_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"FAT","FatWalk_Csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"FAT","FatWalk_Rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animfightb", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightb [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightb [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FIGHT_B","FightB_M",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FIGHT_B","HitB_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FIGHT_B","HitB_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FIGHT_B","HitB_3",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfightc", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightc [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightc [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_blocking",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FIGHT_C","FightC_Spar",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FIGHT_C","HitC_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"FIGHT_C","HitC_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"FIGHT_C","HitC_3",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfightd", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightd [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfightd [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FIGHT_D","FightD_M",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FIGHT_D","HitD_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FIGHT_D","HitD_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FIGHT_D","HitD_3",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfighte", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfighte [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfighte [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FIGHT_E","FightKick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FIGHT_E","FightKick_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfinale", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfinale [1-15]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 15) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfinale [1-15]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FINALE","FIN_Climb_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"FINALE","FIN_Cop1_ClimbOut2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FINALE","FIN_Cop1_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FINALE","FIN_Cop1_Stomp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FINALE","FIN_Hang_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FINALE","FIN_Hang_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FINALE","FIN_Hang_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FINALE","FIN_Jump_On",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"FINALE","FIN_Land_Die",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"FINALE","FIN_LegsUp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"FINALE","FIN_LegsUp_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"FINALE","FIN_LegsUp_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"FINALE","FIN_LegsUp_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"FINALE","FIN_Let_Go",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfinale2", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfinale2 [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfinale2 [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop1_ClimbOut",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Fall",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop1_Swing",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"FINALE2","FIN_Cop2_ClimbOut",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"FINALE2","FIN_Switch_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"FINALE2","FIN_Switch_S",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animflamef", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animflamef [1-1]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 1) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animflamef [1-1]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"FLAME","FLAME_fire",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animflowers", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animflowers [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animflowers [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"Flowers","Flower_attack",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"Flowers","Flower_attack_M",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"Flowers","Flower_Hit",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animghands", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animghands [1-20]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 20) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animghands [1-20]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"GHANDS","LHGsign1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"GHANDS","LHGsign2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"GHANDS","LHGsign3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"GHANDS","LHGsign4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"GHANDS","LHGsign5",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"GHANDS","RHGsign1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"GHANDS","RHGsign2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"GHANDS","RHGsign3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"GHANDS","RHGsign4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"GHANDS","RHGsign5",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animfw", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfw [1-9]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 9) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animfw [1-9]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"Freeweights","gym_barbell",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"Freeweights","gym_free_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"Freeweights","gym_free_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"Freeweights","gym_free_celebrate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"Freeweights","gym_free_down",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"Freeweights","gym_free_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"Freeweights","gym_free_pickup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"Freeweights","gym_free_putdown",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"Freeweights","gym_free_up_smooth",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animghetto", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animghetto [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animghetto [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_PLY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SMO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car2_SWE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_PLY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_RYD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SMO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"GHETTO_DB","GDB_Car_SWE",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animgog", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgog [1-1]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 1) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animgog [1-1]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animgraffity", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgraffity [1-2]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 2) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgraffity [1-2]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"GRAFFITI","graffiti_Chkout",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animgreya", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgreya [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgreya [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"GRAVEYARD","mrnM_loop",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"GRAVEYARD","prst_loopa",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animgren", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgren [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animgren [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"GRENADE","WEAPON_start_throw",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"GRENADE","WEAPON_throw",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animhaircut", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animhaircut [1-13]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 13) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animhaircut [1-13]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Beard_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Buy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Cut_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Hair_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"HAIRCUTS","BRB_Sit_Out",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animheist", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animheist [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animheist [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"HEIST9","swt_wllpk_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"HEIST9","swt_wllpk_L_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"HEIST9","swt_wllpk_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"HEIST9","swt_wllpk_R_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"HEIST9","swt_wllshoot_in_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"HEIST9","swt_wllshoot_out_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"HEIST9","Use_SwipeCard",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animinthouse", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animinthouse [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animinthouse [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_Out_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"INT_HOUSE","BED_Out_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"INT_HOUSE","LOU_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"INT_HOUSE","LOU_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"INT_HOUSE","wash_up",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animintoffice", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animintoffice [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animintoffice [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animplayerdbf", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animplayerdbf [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animplayerdbf [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyBwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyFwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PLAYER_DVBYS","Plyr_DrivebyRHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animplayidles", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animplayidles [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animplayidles [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PLAYIDLES","shift",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PLAYIDLES","shldr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PLAYIDLES","strleg",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"PLAYIDLES","time",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animpolice", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpolice [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpolice [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"POLICE","CopTraf_Come",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"POLICE","CopTraf_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"POLICE","COP_getoutcar_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"POLICE","Cop_move_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"POLICE","crm_drgbst_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"POLICE","Door_Kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"POLICE","plc_drgbst_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"POLICE","plc_drgbst_02",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animpool", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpool [1-21]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 21) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpool [1-21]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"POOL","POOL_ChalkCue",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"POOL","POOL_Idle_Stance",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"POOL","POOL_Long_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"POOL","POOL_Long_Shot_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"POOL","POOL_Long_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"POOL","POOL_Long_Start_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"POOL","POOL_Med_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"POOL","POOL_Med_Shot_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"POOL","POOL_Med_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"POOL","POOL_Med_Start_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"POOL","POOL_Place_White",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"POOL","POOL_Short_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"POOL","POOL_Short_Shot_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"POOL","POOL_Short_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"POOL","POOL_Short_Start_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"POOL","POOL_Walk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"POOL","POOL_Walk_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"POOL","POOL_XLong_Shot",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"POOL","POOL_XLong_Shot_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"POOL","POOL_XLong_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"POOL","POOL_XLong_Start_O",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animpoor", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpoor [1-2]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 2) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpoor [1-2]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"POOR","WINWASH_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"POOR","WINWASH_Wash2Beg",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animpython", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpython [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animpython [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PYTHON","python_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PYTHON","python_crouchreload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PYTHON","python_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PYTHON","python_fire_poor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"PYTHON","python_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animquad", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animquad [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animquad [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"QUAD","QUAD_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"QUAD","QUAD_driveby_FT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"QUAD","QUAD_driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"QUAD","QUAD_driveby_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"QUAD","QUAD_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"QUAD","QUAD_getoff_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"QUAD","QUAD_getoff_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"QUAD","QUAD_getoff_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"QUAD","QUAD_geton_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"QUAD","QUAD_geton_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"QUAD","QUAD_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"QUAD","QUAD_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"QUAD","QUAD_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"QUAD","QUAD_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"QUAD","QUAD_reverse",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"QUAD","QUAD_ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"QUAD","QUAD_Right",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animquadbz", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animquadbz [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animquadbz [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"QUAD_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animrapping", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrapping [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrapping [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"RAPPING","Laugh_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"RAPPING","RAP_A_IN",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"RAPPING","RAP_A_OUT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"RAPPING","RAP_B_IN",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"RAPPING","RAP_B_OUT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animrifle", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrifle [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrifle [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animriot", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animriot [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animriot [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"RIOT","RIOT_ANGRY_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"RIOT","RIOT_challenge",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"RIOT","RIOT_CHANT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"RIOT","RIOT_FUKU",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"RIOT","RIOT_PUNCHES",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animrobbank", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrobbank [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrobbank [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animrocket", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrocket [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrocket [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"ROCKET","idle_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"ROCKET","RocketFire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"ROCKET","run_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"ROCKET","walk_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"ROCKET","WALK_start_rocket",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animrustler", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrustler [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animrustler [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"RUSTLER","Plane_align_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"RUSTLER","Plane_close",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"RUSTLER","Plane_getin",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"RUSTLER","Plane_getout",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"RUSTLER","Plane_open",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbiked", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbiked [1-18]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbiked [1-18]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animryder", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animryder [1-14]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 14) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animryder [1-14]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"RYDER","RYD_Beckon_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"RYDER","RYD_Beckon_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"RYDER","RYD_Beckon_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"RYDER","RYD_Die_PT1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"RYDER","RYD_Die_PT2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"RYDER","Van_Crate_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"RYDER","Van_Crate_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"RYDER","Van_Fall_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"RYDER","Van_Fall_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"RYDER","Van_Lean_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"RYDER","Van_Lean_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"RYDER","VAN_PickUp_S",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"RYDER","Van_Stand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"RYDER","Van_Stand_Crate",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"RYDER","Van_Throw",4.1,0,1,1,1,1);
    }
    return 1;
}

    if(strcmp(cmd, "/animscrat", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animscrat [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animscrat [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SCRATCHING","scdldlp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SCRATCHING","scdlulp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SCRATCHING","scdrdlp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SCRATCHING","scdrulp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SCRATCHING","sclng_l",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SCRATCHING","sclng_r",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SCRATCHING","scmid_l",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SCRATCHING","scmid_r",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"SCRATCHING","scshrtl",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"SCRATCHING","scshrtr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"SCRATCHING","sc_ltor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"SCRATCHING","sc_rtol",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animshamal", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animshamal [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animshamal [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SHAMAL","SHAMAL_align",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SHAMAL","SHAMAL_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SHAMAL","SHAMAL_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SHAMAL","SHAMAL_open",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animshop", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animshop [1-24]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 24) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animshop [1-24]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SHOP","ROB_2Idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SHOP","ROB_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SHOP","donutdrop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SHOP","ROB_StickUp_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SHOP","SHP_Duck_Fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SHOP","SHP_Gun_Aim",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"SHOP","SHP_Gun_Duck",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"SHOP","SHP_Gun_Fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"SHOP","SHP_Gun_Grab",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"SHOP","SHP_Gun_Threat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"SHOP","SHP_Jump_Glide",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"SHOP","SHP_Jump_Land",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"SHOP","SHP_Jump_Launch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"SHOP","SHP_Rob_HandsUp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"SHOP","SHP_Rob_React",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"SHOP","SHP_Serve_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"SHOP","SHP_Serve_Idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"SHOP","SHP_Serve_Loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"SHOP","SHP_Serve_Start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"SHOP","Smoke_RYD",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animshotgun", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animshotgun [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animshotgun [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"SHOTGUN","shotgun_crouchfire",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"SHOTGUN","shotgun_fire",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animskate", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animskate [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animskate [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"SKATE","skate_idle",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"SKATE","skate_run",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"SKATE","skate_sprint",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animvortex", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvortex [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvortex [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"VORTEX","CAR_jumpin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"VORTEX","CAR_jumpin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"VORTEX","vortex_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"VORTEX","vortex_getout_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animtec", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtec [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtec [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"TEC","TEC_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"TEC","TEC_crouchreload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"TEC","TEC_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animtrain", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtrain [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtrain [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"TRAIN","tran_gtup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"TRAIN","tran_hng",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"TRAIN","tran_ouch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"TRAIN","tran_stmb",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsil", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsil [1-4]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 4) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsil [1-4]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SILENCED","CrouchReload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SILENCED","Silence_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animtattoo", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtattoo [1-56]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 56) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtattoo [1-56]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"TATTOOS","TA_ArmL_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Out_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmL_Pose_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Out_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"TATTOOS","TAT_ArmR_Pose_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Out_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Pose_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Loop_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Back_Sit_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed ==  34) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Out_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 35) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 36) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Bel_Pose_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 37) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 38) {
        ApplyAnimation(playerid,"TATTOOS","Sit_relaxed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 39) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 40) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 41) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 41) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 42) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Out_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 43) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 44) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 45) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Che_Pose_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 46) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 47) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Idle_Loop_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 48) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 49) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 50) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_In_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 51) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 52) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 53) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Loop_T",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 54) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 55) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 56) {
        ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_T",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsmoking", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsmoking [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsmoking [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SMOKING","F_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SMOKING","M_smk_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SMOKING","M_smk_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsniper", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsniper [1-1]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 1) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsniper [1-1]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SNIPER","WEAPON_sniper",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animspray", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animspray [1-2]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 2) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animspray [1-2]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animstrip", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animstrip [1-20]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 20) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animstrip [1-20]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"STRIP","PLY_CASH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"STRIP","strip_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"STRIP","strip_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"STRIP","strip_C",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"STRIP","strip_D",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"STRIP","strip_E",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"STRIP","strip_F",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"STRIP","strip_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"STRIP","STR_A2B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"STRIP","STR_B2C",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"STRIP","STR_C2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animbath", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbath [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 18) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animbath [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SUNBATHE","batherdown",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"SUNBATHE","batherup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_IdleC",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_M_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleC",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_LieB2Sit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"SUNBATHE","SBATHE_F_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"SUNBATHE","SitnWait_out_W",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animswat", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animswat [1-24]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 24) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animswat [1-24]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SWAT","gnstwall_injurd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SWAT","JMP_Wall1m_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SWAT","Rail_fall",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SWAT","Rail_fall_crawl",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SWAT","swt_breach_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SWAT","cards_pick_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SWAT","swt_breach_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SWAT","swt_breach_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"SWAT","swt_go",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"SWAT","swt_lkt",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"SWAT","swt_sty",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"SWAT","swt_vent_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"SWAT","swt_vent_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"SWAT","swt_vnt_sht_die",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"SWAT","swt_vnt_sht_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"SWAT","swt_vnt_sht_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"SWAT","swt_wllpk_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"SWAT","swt_wllpk_L_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"SWAT","swt_wllpk_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"SWAT","swt_wllpk_R_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"SWAT","swt_wllshoot_in_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"SWAT","swt_wllshoot_out_R",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsweet", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsweet [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsweet [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SWEET","ho_ass_slapped",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SWEET","LaFin_Player",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SWEET","LaFin_Sweet",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SWEET","plyr_hndshldr_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SWEET","sweet_hndshldr_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animswim", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animswim [1-7]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 7) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animswim [1-7]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SWIM","Swim_Breast",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SWIM","SWIM_crawl",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SWIM","Swim_Dive_Under",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SWIM","Swim_Glide",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SWIM","Swim_jumpout",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SWIM","Swim_Tread",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SWIM","Swim_Under",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animsword", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsword [1-10]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 10) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animsword [1-10]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"SWORD","sword_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"SWORD","sword_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"SWORD","sword_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"SWORD","sword_4",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"SWORD","Sword_Hit_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"SWORD","Sword_Hit_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"SWORD","Sword_Hit_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"SWORD","sword_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"SWORD","sword_part",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animtank", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtank [1-6]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 6) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtank [1-6]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"TANK","TANK_align_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"TANK","TANK_close_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"TANK","TANK_doorlocked",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"TANK","TANK_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"TANK","TANK_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"TANK","TANK_open_LHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animtruck", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtruck [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animtruck [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_ALIGN_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_closedoor_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_close_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_close_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_getout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_jackedLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_jackedRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_open_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_open_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_pullout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"TRUCK","TRUCK_Shuffle",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animuzi", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animuzi [1-5]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 5) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animuzi [1-5]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"UZI","UZI_crouchfire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"UZI","UZI_crouchreload",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"UZI","UZI_fire",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"UZI","UZI_fire_poor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"UZI","UZI_reload",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animvan", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvan [1-8]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 8) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvan [1-8]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"VAN","VAN_close_back_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"VAN","VAN_close_back_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"VAN","VAN_getin_Back_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"VAN","VAN_getin_Back_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"VAN","VAN_getout_back_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"VAN","VAN_getout_back_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"VAN","VAN_open_back_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"VAN","VAN_open_back_RHS",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animvending", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvending [1-6]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 6) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animvending [1-6]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"VENDING","VEND_Eat_P",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"VENDING","VEND_Use",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"VENDING","VEND_Use_pt2",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animway", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animway [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animway [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"WAYFARER","WF_Back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 1) {
        ApplyAnimation(playerid,"WAYFARER","WF_drivebyFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"WAYFARER","WF_drivebyLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"WAYFARER","WF_drivebyRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"WAYFARER","WF_getoffBACK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"WAYFARER","WF_getoffLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"WAYFARER","WF_getoffRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"WAYFARER","WF_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"WAYFARER","WF_jumponL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"WAYFARER","WF_jumponR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"WAYFARER","WF_kick",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"WAYFARER","WF_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"WAYFARER","WF_passenger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"WAYFARER","WF_pushes",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"WAYFARER","WF_Ride",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"WAYFARER","WF_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"WAYFARER","WF_Still",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animweap", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animweap [1-17]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 17) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animweap [1-17]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"WEAPONS","SHP_1H_Lift_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"WEAPONS","SHP_1H_Ret_S",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"WEAPONS","SHP_2H_Lift_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"WEAPONS","SHP_2H_Ret_S",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Lift_End",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Ar_Ret_S",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"WEAPONS","SHP_G_Lift_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Tray_In",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"WEAPONS","SHP_Tray_Pose",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animwuzi", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animwuzi [1-12]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 12) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animwuzi [1-12]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"WUZI","CS_Dead_Guy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"WUZI","CS_Plyr_pt1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"WUZI","CS_Plyr_pt2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"WUZI","CS_Wuzi_pt2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"WUZI","Walkstart_Idle_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Plyr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"WUZI","Wuzi_grnd_chk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"WUZI","Wuzi_stand_loop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"WUZI","Wuzi_Walk",4.1,0,1,1,1,1);
    }
    return 1;
}


    if(strcmp(cmd, "/animat", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animat [1-3]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 3) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animat [1-3]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 2) {
            ApplyAnimation(playerid,"Attractors","Stepsit_loop",4.1,0,1,1,1,1);
        }
        else if(animationplayed == 3) {
            ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,1,1,1,1);
        }
        return 1;
    }
}


    if(strcmp(cmd, "/animairport", true) == 0)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animairport [1]");
            return 1;
        }
        animationplayed = strval(tmp);
        if(animationplayed < 1 || animationplayed > 1) {
            SendClientMessage(playerid,COLOR_GRAD1,"Use /animairport [1]");
            return 1;
        }
        if(animationplayed == 1) {
            ApplyAnimation(playerid,"AIRPORT","thrw_barl_thrw",4.1,0,1,1,1,1);
        }
        return 1;
    }
}

    if(strcmp(cmd, "/animped", true) == 0)
{
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animped [1-295]");
        return 1;
    }
    animationplayed = strval(tmp);
    if(animationplayed < 1 || animationplayed > 295) {
        SendClientMessage(playerid,COLOR_GRAD1,"Use /animped [1-295]");
        return 1;
    }
    if(animationplayed == 1) {
        ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 2) {
        ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 3) {
        ApplyAnimation(playerid,"PED","abseil",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 4) {
        ApplyAnimation(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 5) {
        ApplyAnimation(playerid,"PED","ATM",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 6) {
        ApplyAnimation(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 7) {
        ApplyAnimation(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 8) {
        ApplyAnimation(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 9) {
        ApplyAnimation(playerid,"PED","BIKE_pickupL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 10) {
        ApplyAnimation(playerid,"PED","BIKE_pickupR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 11) {
        ApplyAnimation(playerid,"PED","BIKE_pullupL",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 12) {
        ApplyAnimation(playerid,"PED","BIKE_pullupR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 13) {
        ApplyAnimation(playerid,"PED","bomber",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 14) {
        ApplyAnimation(playerid,"PED","CAR_alignHI_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 15) {
        ApplyAnimation(playerid,"PED","CAR_alignHI_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 16) {
        ApplyAnimation(playerid,"PED","CAR_align_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 17) {
        ApplyAnimation(playerid,"PED","CAR_align_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 18) {
        ApplyAnimation(playerid,"PED","CAR_closedoorL_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 19) {
        ApplyAnimation(playerid,"PED","CAR_closedoorL_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 20) {
        ApplyAnimation(playerid,"PED","CAR_closedoor_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 21) {
        ApplyAnimation(playerid,"PED","CAR_closedoor_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 22) {
        ApplyAnimation(playerid,"PED","CAR_close_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 23) {
        ApplyAnimation(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 24) {
        ApplyAnimation(playerid,"PED","CAR_dead_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 25) {
        ApplyAnimation(playerid,"PED","CAR_dead_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 26) {
        ApplyAnimation(playerid,"PED","CAR_doorlocked_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 27) {
        ApplyAnimation(playerid,"PED","CAR_fallout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 28) {
        ApplyAnimation(playerid,"PED","CAR_fallout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 29) {
        ApplyAnimation(playerid,"PED","CAR_getinL_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 30) {
        ApplyAnimation(playerid,"PED","CAR_getinL_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 31) {
        ApplyAnimation(playerid,"PED","CAR_getin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 32) {
        ApplyAnimation(playerid,"PED","CAR_getin_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 33) {
        ApplyAnimation(playerid,"PED","CAR_getoutL_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed ==  34) {
        ApplyAnimation(playerid,"PED","CAR_getout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 35) {
        ApplyAnimation(playerid,"PED","CAR_getout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 36) {
        ApplyAnimation(playerid,"PED","car_hookertalk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 37) {
        ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 38) {
        ApplyAnimation(playerid,"PED","CAR_jackedRHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 39) {
        ApplyAnimation(playerid,"PED","CAR_jumpin_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 40) {
        ApplyAnimation(playerid,"PED","CAR_LB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 41) {
        ApplyAnimation(playerid,"PED","CAR_LB_pro",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 42) {
        ApplyAnimation(playerid,"PED","CAR_LB_weak",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 43) {
        ApplyAnimation(playerid,"PED","CAR_LjackedLHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 44) {
        ApplyAnimation(playerid,"PED","CAR_Lshuffle_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 45) {
        ApplyAnimation(playerid,"PED","CAR_Lsit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 46) {
        ApplyAnimation(playerid,"PED","CAR_open_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 47) {
        ApplyAnimation(playerid,"PED","CAR_open_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 49) {
        ApplyAnimation(playerid,"PED","CAR_pulloutL_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 50) {
        ApplyAnimation(playerid,"PED","CAR_pulloutL_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 51) {
        ApplyAnimation(playerid,"PED","CAR_pullout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 52) {
        ApplyAnimation(playerid,"PED","CAR_pullout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 53) {
        ApplyAnimation(playerid,"PED","CAR_Qjacked",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 54) {
        ApplyAnimation(playerid,"PED","CAR_rolldoor",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 55) {
        ApplyAnimation(playerid,"PED","CAR_rolldoorLO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 56) {
        ApplyAnimation(playerid,"PED","CAR_rollout_LHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 57) {
        ApplyAnimation(playerid,"PED","CAR_rollout_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 58) {
        ApplyAnimation(playerid,"PED","CAR_shuffle_RHS",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 59) {
        ApplyAnimation(playerid,"PED","CAR_sit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 60) {
        ApplyAnimation(playerid,"PED","CAR_sitp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 61) {
        ApplyAnimation(playerid,"PED","CAR_sitpLO",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 62) {
        ApplyAnimation(playerid,"PED","CAR_sit_pro",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 63) {
        ApplyAnimation(playerid,"PED","CAR_sit_weak",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 64) {
        ApplyAnimation(playerid,"PED","CAR_tune_radio",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 65) {
        ApplyAnimation(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 66) {
        ApplyAnimation(playerid,"PED","CLIMB_jump",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 67) {
        ApplyAnimation(playerid,"PED","CLIMB_jump2fall",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 68) {
        ApplyAnimation(playerid,"PED","CLIMB_jump_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 69) {
        ApplyAnimation(playerid,"PED","CLIMB_Pull",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 70) {
        ApplyAnimation(playerid,"PED","CLIMB_Stand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 71) {
        ApplyAnimation(playerid,"PED","CLIMB_Stand_finish",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 72) {
        ApplyAnimation(playerid,"PED","cower",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 73) {
        ApplyAnimation(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 74) {
        ApplyAnimation(playerid,"PED","Crouch_Roll_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 75) {
        ApplyAnimation(playerid,"PED","DAM_armL_frmBK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 76) {
        ApplyAnimation(playerid,"PED","DAM_armL_frmFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 77) {
        ApplyAnimation(playerid,"PED","DAM_armL_frmLT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 78) {
        ApplyAnimation(playerid,"PED","DAM_armR_frmBK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 79) {
        ApplyAnimation(playerid,"PED","DAM_armR_frmFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 80) {
        ApplyAnimation(playerid,"PED","DAM_armR_frmRT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 81) {
        ApplyAnimation(playerid,"PED","DAM_LegL_frmBK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 82) {
        ApplyAnimation(playerid,"PED","DAM_LegL_frmFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 83) {
        ApplyAnimation(playerid,"PED","DAM_LegL_frmLT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 84) {
        ApplyAnimation(playerid,"PED","DAM_LegR_frmBK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 85) {
        ApplyAnimation(playerid,"PED","DAM_LegR_frmFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 86) {
        ApplyAnimation(playerid,"PED","DAM_LegR_frmRT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 87) {
        ApplyAnimation(playerid,"PED","DAM_stomach_frmBK",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 88) {
        ApplyAnimation(playerid,"PED","DAM_stomach_frmFT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 89) {
        ApplyAnimation(playerid,"PED","DAM_stomach_frmLT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 90) {
        ApplyAnimation(playerid,"PED","DAM_stomach_frmRT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 91) {
        ApplyAnimation(playerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 92) {
        ApplyAnimation(playerid,"PED","DOOR_RHinge_O",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 93) {
        ApplyAnimation(playerid,"PED","DrivebyL_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 94) {
        ApplyAnimation(playerid,"PED","DrivebyL_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 95) {
        ApplyAnimation(playerid,"PED","Driveby_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 96) {
        ApplyAnimation(playerid,"PED","Driveby_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 97) {
        ApplyAnimation(playerid,"PED","DRIVE_BOAT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 98) {
        ApplyAnimation(playerid,"PED","DRIVE_BOAT_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 99) {
        ApplyAnimation(playerid,"PED","DRIVE_BOAT_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 100) {
        ApplyAnimation(playerid,"PED","DRIVE_BOAT_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 101) {
        ApplyAnimation(playerid,"PED","Drive_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 102) {
        ApplyAnimation(playerid,"PED","Drive_LO_l",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 103) {
        ApplyAnimation(playerid,"PED","Drive_LO_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 104) {
        ApplyAnimation(playerid,"PED","Drive_L_pro",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 105) {
        ApplyAnimation(playerid,"PED","Drive_L_pro_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 106) {
        ApplyAnimation(playerid,"PED","Drive_L_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 107) {
        ApplyAnimation(playerid,"PED","Drive_L_weak",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 108) {
        ApplyAnimation(playerid,"PED","Drive_L_weak_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 109) {
        ApplyAnimation(playerid,"PED","Drive_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 110) {
        ApplyAnimation(playerid,"PED","Drive_R_pro",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 111) {
        ApplyAnimation(playerid,"PED","Drive_R_pro_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 112) {
        ApplyAnimation(playerid,"PED","Drive_R_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 113) {
        ApplyAnimation(playerid,"PED","Drive_R_weak",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 114) {
        ApplyAnimation(playerid,"PED","Drive_R_weak_slow",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 115) {
        ApplyAnimation(playerid,"PED","Drive_truck",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 116) {
        ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 117) {
        ApplyAnimation(playerid,"PED","DRIVE_truck_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 118) {
        ApplyAnimation(playerid,"PED","DRIVE_truck_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 119) {
        ApplyAnimation(playerid,"PED","Drown",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 120) {
        ApplyAnimation(playerid,"PED","DUCK_cower",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 121) {
        ApplyAnimation(playerid,"PED","endchat_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 122) {
        ApplyAnimation(playerid,"PED","endchat_02",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 123) {
        ApplyAnimation(playerid,"PED","endchat_03",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 124) {
        ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 125) {
        ApplyAnimation(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 126) {
        ApplyAnimation(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 127) {
        ApplyAnimation(playerid,"PED","EV_step",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 128) {
        ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 129) {
        ApplyAnimation(playerid,"PED","facanger",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 130) {
        ApplyAnimation(playerid,"PED","facgum",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 131) {
        ApplyAnimation(playerid,"PED","facsurp",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 132) {
        ApplyAnimation(playerid,"PED","facsurpm",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 133) {
        ApplyAnimation(playerid,"PED","factalk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 134) {
        ApplyAnimation(playerid,"PED","facurios",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 135) {
        ApplyAnimation(playerid,"PED","FALL_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 136) {
        ApplyAnimation(playerid,"PED","FALL_collapse",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 137) {
        ApplyAnimation(playerid,"PED","FALL_fall",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 138) {
        ApplyAnimation(playerid,"PED","FALL_front",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 139) {
        ApplyAnimation(playerid,"PED","FALL_glide",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 140) {
        ApplyAnimation(playerid,"PED","FALL_land",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 141) {
        ApplyAnimation(playerid,"PED","FALL_skyDive",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 142) {
        ApplyAnimation(playerid,"PED","Fight2Idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 143) {
        ApplyAnimation(playerid,"PED","FightA_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 144) {
        ApplyAnimation(playerid,"PED","FightA_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 145) {
        ApplyAnimation(playerid,"PED","FightA_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 146) {
        ApplyAnimation(playerid,"PED","FightA_block",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 147) {
        ApplyAnimation(playerid,"PED","FightA_G",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 148) {
        ApplyAnimation(playerid,"PED","FightA_M",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 149) {
        ApplyAnimation(playerid,"PED","FIGHTIDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 150) {
        ApplyAnimation(playerid,"PED","FightShB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 151) {
        ApplyAnimation(playerid,"PED","FightShF",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 152) {
        ApplyAnimation(playerid,"PED","FightSh_BWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 153) {
        ApplyAnimation(playerid,"PED","FightSh_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 154) {
        ApplyAnimation(playerid,"PED","FightSh_Left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 155) {
        ApplyAnimation(playerid,"PED","FightSh_Right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 156) {
        ApplyAnimation(playerid,"PED","flee_lkaround_01",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 157) {
        ApplyAnimation(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 158) {
        ApplyAnimation(playerid,"PED","FLOOR_hit_f",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 159) {
        ApplyAnimation(playerid,"PED","fucku",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 160) {
        ApplyAnimation(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 161) {
        ApplyAnimation(playerid,"PED","gas_cwr",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 162) {
        ApplyAnimation(playerid,"PED","getup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 163) {
        ApplyAnimation(playerid,"PED","getup_front",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 164) {
        ApplyAnimation(playerid,"PED","gum_eat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 165) {
        ApplyAnimation(playerid,"PED","GunCrouchBwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 166) {
        ApplyAnimation(playerid,"PED","GunCrouchFwd",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 167) {
        ApplyAnimation(playerid,"PED","GunMove_BWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 168) {
        ApplyAnimation(playerid,"PED","GunMove_FWD",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 169) {
        ApplyAnimation(playerid,"PED","GunMove_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 170) {
        ApplyAnimation(playerid,"PED","GunMove_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 171) {
        ApplyAnimation(playerid,"PED","Gun_2_IDLE",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 172) {
        ApplyAnimation(playerid,"PED","GUN_BUTT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 173) {
        ApplyAnimation(playerid,"PED","GUN_BUTT_crouch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 174) {
        ApplyAnimation(playerid,"PED","Gun_stand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 175) {
        ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 176) {
        ApplyAnimation(playerid,"PED","handsup",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 177) {
        ApplyAnimation(playerid,"PED","HitA_1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 178) {
        ApplyAnimation(playerid,"PED","HitA_2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 179) {
        ApplyAnimation(playerid,"PED","HitA_3",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 180) {
        ApplyAnimation(playerid,"PED","HIT_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 181) {
        ApplyAnimation(playerid,"PED","HIT_behind",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 182) {
        ApplyAnimation(playerid,"PED","HIT_front",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 183) {
        ApplyAnimation(playerid,"PED","HIT_GUN_BUTT",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 184) {
        ApplyAnimation(playerid,"PED","HIT_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 185) {
        ApplyAnimation(playerid,"PED","HIT_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 186) {
        ApplyAnimation(playerid,"PED","HIT_walk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 187) {
        ApplyAnimation(playerid,"PED","HIT_wall",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 188) {
        ApplyAnimation(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 189) {
        ApplyAnimation(playerid,"PED","idlestance_old",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 190) {
        ApplyAnimation(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 191) {
        ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 192) {
        ApplyAnimation(playerid,"PED","IDLE_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 193) {
        ApplyAnimation(playerid,"PED","Idle_Gang1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 194) {
        ApplyAnimation(playerid,"PED","IDLE_HBHB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 195) {
        ApplyAnimation(playerid,"PED","IDLE_ROCKET",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 196) {
        ApplyAnimation(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 197) {
        ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 198) {
        ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 199) {
        ApplyAnimation(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 200) {
        ApplyAnimation(playerid,"PED","JOG_femaleA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 201) {
        ApplyAnimation(playerid,"PED","JOG_maleA",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 202) {
        ApplyAnimation(playerid,"PED","JUMP_glide",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 203) {
        ApplyAnimation(playerid,"PED","JUMP_land",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 204) {
        ApplyAnimation(playerid,"PED","JUMP_launch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 205) {
        ApplyAnimation(playerid,"PED","JUMP_launch_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 206) {
        ApplyAnimation(playerid,"PED","KART_drive",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 207) {
        ApplyAnimation(playerid,"PED","KART_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 208) {
        ApplyAnimation(playerid,"PED","KART_LB",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 209) {
        ApplyAnimation(playerid,"PED","KART_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 210) {
        ApplyAnimation(playerid,"PED","KD_left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 211) {
        ApplyAnimation(playerid,"PED","KD_right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 212) {
        ApplyAnimation(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 213) {
        ApplyAnimation(playerid,"PED","KO_shot_front",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 214) {
        ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 215) {
        ApplyAnimation(playerid,"PED","KO_skid_back",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 216) {
        ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 217) {
        ApplyAnimation(playerid,"PED","KO_spin_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 218) {
        ApplyAnimation(playerid,"PED","KO_spin_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 219) {
        ApplyAnimation(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 220) {
        ApplyAnimation(playerid,"PED","phone_in",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 221) {
        ApplyAnimation(playerid,"PED","phone_out",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 222) {
        ApplyAnimation(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 223) {
        ApplyAnimation(playerid,"PED","Player_Sneak",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 224) {
        ApplyAnimation(playerid,"PED","Player_Sneak_walkstart",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 225) {
        ApplyAnimation(playerid,"PED","roadcross",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 226) {
        ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 227) {
        ApplyAnimation(playerid,"PED","roadcross_gang",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 228) {
        ApplyAnimation(playerid,"PED","roadcross_old",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 229) {
        ApplyAnimation(playerid,"PED","run_1armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 230) {
        ApplyAnimation(playerid,"PED","run_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 231) {
        ApplyAnimation(playerid,"PED","run_civi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 232) {
        ApplyAnimation(playerid,"PED","run_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 233) {
        ApplyAnimation(playerid,"PED","run_fat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 234) {
        ApplyAnimation(playerid,"PED","run_fatold",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 235) {
        ApplyAnimation(playerid,"PED","run_gang1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 236) {
        ApplyAnimation(playerid,"PED","run_left",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 237) {
        ApplyAnimation(playerid,"PED","run_old",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 238) {
        ApplyAnimation(playerid,"PED","run_player",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 239) {
        ApplyAnimation(playerid,"PED","run_right",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 240) {
        ApplyAnimation(playerid,"PED","run_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 241) {
        ApplyAnimation(playerid,"PED","Run_stop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 242) {
        ApplyAnimation(playerid,"PED","Run_stopR",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 243) {
        ApplyAnimation(playerid,"PED","Run_Wuzi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 244) {
        ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 245) {
        ApplyAnimation(playerid,"PED","SEAT_idle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 246) {
        ApplyAnimation(playerid,"PED","SEAT_up",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 247) {
        ApplyAnimation(playerid,"PED","SHOT_leftP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 248) {
        ApplyAnimation(playerid,"PED","SHOT_partial",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 249) {
        ApplyAnimation(playerid,"PED","SHOT_partial_B",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 250) {
        ApplyAnimation(playerid,"PED","SHOT_rightP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 251) {
        ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 252) {
        ApplyAnimation(playerid,"PED","Smoke_in_car",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 253) {
        ApplyAnimation(playerid,"PED","sprint_civi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 254) {
        ApplyAnimation(playerid,"PED","sprint_panic",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 255) {
        ApplyAnimation(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 256) {
        ApplyAnimation(playerid,"PED","swat_run",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 257) {
        ApplyAnimation(playerid,"PED","Swim_Tread",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 258) {
        ApplyAnimation(playerid,"PED","Tap_hand",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 259) {
        ApplyAnimation(playerid,"PED","Tap_handP",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 260) {
        ApplyAnimation(playerid,"PED","turn_180",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 261) {
        ApplyAnimation(playerid,"PED","Turn_L",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 262) {
        ApplyAnimation(playerid,"PED","Turn_R",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 263) {
        ApplyAnimation(playerid,"PED","WALK_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 264) {
        ApplyAnimation(playerid,"PED","WALK_civi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 265) {
        ApplyAnimation(playerid,"PED","WALK_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 266) {
        ApplyAnimation(playerid,"PED","Walk_DoorPartial",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 267) {
        ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 268) {
        ApplyAnimation(playerid,"PED","WALK_fat",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 269) {
        ApplyAnimation(playerid,"PED","WALK_fatold",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 270) {
        ApplyAnimation(playerid,"PED","WALK_gang1",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 271) {
        ApplyAnimation(playerid,"PED","WALK_gang2",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 272) {
        ApplyAnimation(playerid,"PED","WALK_old",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 273) {
        ApplyAnimation(playerid,"PED","WALK_player",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 274) {
        ApplyAnimation(playerid,"PED","WALK_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 275) {
        ApplyAnimation(playerid,"PED","WALK_shuffle",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 276) {
        ApplyAnimation(playerid,"PED","WALK_start",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 277) {
        ApplyAnimation(playerid,"PED","WALK_start_armed",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 278) {
        ApplyAnimation(playerid,"PED","WALK_start_csaw",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 279) {
        ApplyAnimation(playerid,"PED","WALK_start_rocket",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 280) {
        ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 281) {
        ApplyAnimation(playerid,"PED","WEAPON_crouch",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 282) {
        ApplyAnimation(playerid,"PED","woman_idlestance",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 283) {
        ApplyAnimation(playerid,"PED","woman_run",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 284) {
        ApplyAnimation(playerid,"PED","WOMAN_runbusy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 285) {
        ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 286) {
        ApplyAnimation(playerid,"PED","woman_runpanic",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 287) {
        ApplyAnimation(playerid,"PED","WOMAN_runsexy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 288) {
        ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 289) {
        ApplyAnimation(playerid,"PED","WOMAN_walkfatold",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 290) {
        ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 291) {
        ApplyAnimation(playerid,"PED","WOMAN_walkold",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 292) {
        ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 293) {
        ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 294) {
        ApplyAnimation(playerid,"PED","WOMAN_walkshop",4.1,0,1,1,1,1);
    }
    else if(animationplayed == 295) {
        ApplyAnimation(playerid,"PED","XPRESSscratch",4.1,0,1,1,1,1);
    }
    return 1;
}



	if (strcmp(cmd, "/animlistttt", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "Alguns animes");
	    SendClientMessage(playerid, COLOR_PURPLE, "/dance /ligar /desligar /bebado /bomba /apontar /merda /de4 /peidar");
	    SendClientMessage(playerid, COLOR_PURPLE, "/handsup /sentar /deitar /abaixar /vomitar /comer /rape /passaramao /fumarbaseado");
    	SendClientMessage(playerid, COLOR_PURPLE, "/cobrar /overdose /fumar /fumar2 /mijar /gro /conversar /fodase /taichi");
    	SendClientMessage(playerid, COLOR_YELLOW, "Se voce quizer parar um anim USE /pararanim");
	    return true;
	}
	if (strcmp(cmd, "/de4", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    //format(string, sizeof(string), "%s está de 4 ", sendername);
	    //ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1);
	    return true;
	}
	if (strcmp(cmd, "/handsup", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		return true;
	}
	if (strcmp(cmd, "/sentar", true) == 0)
	{
        ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
		return true;
	}
	if (strcmp(cmd, "/mijar", true) == 0)
	{
        ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
		return true;
	}
	if(!strcmp(cmd, "/animrobbank", true))
	{
		tmp = strtok(cmdtext, idx);
		animid = strval(tmp);
		if(!strlen(tmp)||animid < 1 || animid > 5)
		{
			SendClientMessage(playerid,COLOR_WHITE," Syntax: /animrobbank [1-5]");
			return 1;
		}
		switch(animid)
		{
		    case 1: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
		    case 2: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
		    case 3: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
		    case 4: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
		    case 5: ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
		}
		return true;
	}
	if (strcmp(cmd, "/dance", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) == 1) return SendClientMessage(playerid,COLOR_RED," Animations are inaccessible in transport!");

		tmp = strtok(cmdtext, idx);
		animid = strval(tmp);
		if(!strlen(tmp)||animid < 1 || animid > 15)
		{
			SendClientMessage(playerid,COLOR_GRAD1," Use: /dance [1-15]");
			return true;
		}
		switch(animid)
		{
			case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
   		    case 5:ApplyAnimation(playerid, "DANCING","dance_loop", 4.0, 1, 1, 1, 1, 0, 1);
		    case 6:ApplyAnimation(playerid, "DANCING","DAN_Down_A", 4.0, 1, 1, 1, 1, 0, 1);
		    case 7:ApplyAnimation(playerid, "DANCING","DAN_Left_A", 4.0, 1, 1, 1, 1, 0, 1);
		    case 8:ApplyAnimation(playerid, "DANCING","DAN_Loop_A", 4.0, 1, 1, 1, 1, 0, 1);
		    case 9:ApplyAnimation(playerid, "DANCING","DAN_Right_A", 4.0, 1, 1, 1, 1, 0, 1);
		    case 10:ApplyAnimation(playerid, "DANCING","DAN_Up_A", 4.0, 1, 1, 1, 1, 0, 1);
		    case 11:ApplyAnimation(playerid, "DANCING","dnce_M_a", 4.0, 1, 1, 1, 1, 0, 1);
		    case 12:ApplyAnimation(playerid, "DANCING","dnce_M_b", 4.0, 1, 1, 1, 1, 0, 1);
		    case 13:ApplyAnimation(playerid, "DANCING","dnce_M_c", 4.0, 1, 1, 1, 1, 0, 1);
		    case 14:ApplyAnimation(playerid, "DANCING","dnce_M_d", 4.0, 1, 1, 1, 1, 0, 1);
		    case 15:ApplyAnimation(playerid, "DANCING","dnce_M_ e", 4.0, 1, 1, 1, 1, 0, 1);
		}
		return true;
	}

	if(strcmp(cmd, "/ajustar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return true;
				}
		        if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 324.3141,-1496.9177,24.9219)
				&& !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766)
				&&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
			    && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234)
				&& !PlayerToPoint(12.0, playerid, 321.8284,315.6733,999.1484) && !PlayerToPoint(12.0, playerid, 709.5662,-568.6655,-6.1966) && !PlayerToPoint(3,playerid,-1741.0514,961.7468,24.8828))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está perto da cela, não pode ajustar o tempo do suspeito !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
				format(string, sizeof(string), "* Você ajustou %s !", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[suspect][pJailTime] = time * 60;
				format(string, sizeof(string), "Oficial %s ajustou seu tempo de prisão para %d Segundos.", PlayerName(playerid),PlayerInfo[suspect][pJailTime]);
				SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
				}
				}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			    return true;
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/prender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
				}
                new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Fiança Tem Que ser 0=Não ou 1=Sim !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 300000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode ser menor que 0 nem maior que R$300000 !"); return true; }
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
					{
						if(PlayerToPoint(12.0, playerid, 1545.3387,-1607.8325,13.3828) || PlayerToPoint(5.0, playerid, 1527.4589,-1672.1427,6.2188))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no mínimo 1 nível de procurado!");
							    return true;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 1;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia Militar de Los Santos, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, 268.3136,77.5149,1001.0391))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							if(storeexit[playerid] == 67)
							{
							    PlayerInfo[suspect][pJailed] = 27;
							   	format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia Militar de San Fierro, enviou: Gasparzinho (000)", giveplayer);
								SendClientMessage(suspect, COLOR_YELLOW, string);
							}
							if(storeexit[playerid] == 66)
							{
							    PlayerInfo[suspect][pJailed] = 1;
							    format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia Militar de Los Santos, enviou: Gasparzinho (000)", giveplayer);
								SendClientMessage(suspect, COLOR_YELLOW, string);
							}
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerSpawn(suspect);
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, -1577.3429,651.3919,7.1875))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 27;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia Militar de San Fierro, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, 346.9458,-1494.8809,36.0391))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 2;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia da Rotam de Los Santos, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}

						if(PlayerToPoint(5.0, playerid, 198.9020,179.3194,1003.0319))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							if(storeexit[playerid] == 2)
							{
							    PlayerInfo[suspect][pJailed] = 2;
							    format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia da Rotam de Los Santos, enviou: Gasparzinho (000)", giveplayer);
								SendClientMessage(suspect, COLOR_YELLOW, string);
							}
							if(storeexit[playerid] == 11)
							{
							    PlayerInfo[suspect][pJailed] = 11;
							    format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia da Polícia Federal, enviou: Gasparzinho (000)", giveplayer);
								SendClientMessage(suspect, COLOR_YELLOW, string);
							}
      						if(storeexit[playerid] == 16)
							{
							    PlayerInfo[suspect][pJailed] = 16;
							    format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia da Rotam de San Fierro, enviou: Gasparzinho (000)", giveplayer);
								SendClientMessage(suspect, COLOR_YELLOW, string);
							}
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							SetPlayerFree(suspect,playerid, "Foi Preso");
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, -2444.4702,519.4180,29.9180))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 11;
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia da Polícia Federal, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerFree(suspect,playerid, "Foi Preso");
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, -1741.1267,961.7581,24.8828))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 16;
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia de Polícia da Rotam de San Fierro, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerFree(suspect,playerid, "Foi Preso");
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}
						if(PlayerToPoint(5.0, playerid, 223.4805,113.9830,999.0156))
		        		{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							VozDePrisao[suspect] = 0;
							ResetPlayerWeaponsBPH(suspect);
							format(string, sizeof(string), "<< Oficial %s prendeu o suspeito %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 33;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							format(string, sizeof(string), "SMS: Olá %s, Você foi preso na Delegacia da Polícia Federal, enviou: Gasparzinho (000)", giveplayer);
							SendClientMessage(suspect, COLOR_YELLOW, string);
							SetPlayerSpawn(suspect);
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							return true;
						}

					}//distance
				}//not connected
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo.");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			    return true;
			}
		}//not connected
		return true;
	}

	if(strcmp(cmd, "/contrato", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia] [Organização(Triad ou Hitman)]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia] [Organização(Triad ou Hitman)]");
                return 1;
            }
            moneys = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia] [Organização(Triad ou Hitman)]");
                return 1;
            }
            if(moneys < 10000)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Contrato Minimo 10k (10000)");
				return true;
			}
			if(PlayerInfo[playerid][pLevel] < 4)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você precisa de no minimo nivel 4.");
                return 1;
            }
			if(GetPlayerMoney(playerid) < moneys)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esta grana toda.");
                return 1;
            }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    /*if(PlayerInfo[giveplayerid][pMembro] == 8 && PlayerInfo[playerid][pMembro] == 8)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em membros de sua agencia!");
                        return 1;
                    }
                    if(PlayerInfo[giveplayerid][pMembro] == 22 && PlayerInfo[playerid][pMembro] == 22)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em membros de sua agencia!");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pLider] == 8 || PlayerInfo[giveplayerid][pMembro] == 8)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em assasinos!");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pMembro] == 22 || PlayerInfo[giveplayerid][pLider] == 22)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em assasinos!");
                        return 1;
                    }
                    else if(admtrampando[giveplayerid] == 1 || helpertrampando[giveplayerid] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você não pode colocar contratos em Admins / Helpers em modo de trabalho!");
                        return 1;
                    }
                    if(IsACop(giveplayerid) && moneys <= 100000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Preco Minimo de $100000 em oficiais!");
                        return 1;
                    }
                    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "Nao pode colocar contrato em si mesmo!");
						return 1;
					}*/
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    playermoney = GetPlayerMoneyEx(playerid);
                    if (moneys > 0 && playermoney >= moneys)
                    {
                        if(strcmp(tmp,"Hitman",true) == 0)
                        {
                            GivePlayerMoneyEx(playerid, (0 - moneys));
                            PlayerInfo[giveplayerid][pHeadValue]+=moneys;
                            format(string, sizeof(string), "HITMANS: %s Colocou um contrato em %s, por $%d.",sendername, giveplayer, moneys);
                            SendFamilyMessage(8, COLOR_YELLOW, string);
                            format(string, sizeof(string), "*HITMANS: Você colocou um contrato em %s, por $%d.",giveplayer, moneys);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            return true;
                        }
                        if(strcmp(tmp,"triad",true) == 0)
                        {
                            GivePlayerMoneyEx(playerid, (0 - moneys));
                            PlayerInfo[giveplayerid][pHeadValueT]+=moneys;
                            format(string, sizeof(string), "TRIADS: %s Colocou um contrato em %s, por $%d.",sendername, giveplayer, moneys);
                            SendFamilyMessage(22, COLOR_YELLOW, string);
                            format(string, sizeof(string), "*TRIADS: Você colocou um contrato em %s, por $%d.",giveplayer, moneys);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            return true;
                    	}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   USE: /contrato [id] [Quantia] TRIAD ou HITMAN");
							return true;
						}
					}
					format(string, sizeof(string), "   Você não tem R$%d em mãos!", moneys);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return true;
				}
				else
				{
					format(string, sizeof(string), "   %d não é um jogador ativo.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
		}//not connected
		return true;
	}
 	new strcmd[MAX_STRING];
 	SendClientMessage(playerid,COLOR_DBLUE ,"[ERRO] Comando não reconhecido no Servidor! Para ver alguns comandos úteis USE: /ajuda.");
  	format(strcmd, sizeof(strcmd), "[Info] Você digitou: %s", cmdtext);
   	SendClientMessage(playerid,COLOR_GRAD1 ,strcmd);
	return 1;
}


//-------------------------------------------------akieucheguei-----------------------------------------------------
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return true;
}
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return true;
		}
	}
	return 0;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return 0;
}

public SendMensagens()
{
	new random1 = random(sizeof(Mensagenscima));
	new random2 = random(sizeof(Cores));
	format(gstring, sizeof(gstring), "%s", Mensagenscima[random1]);
	SendClientMessageToAll(Cores[random2],gstring);
	OnPropUpdate();
	SaveCars();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
       	    {
				new vehicle = GetPlayerVehicleID(i);
			    new VehicleModel = GetVehicleModel(vehicle);
	       		if(VehicleModel == 487 || VehicleModel == 520 || VehicleModel == 462 || VehicleModel == 497 || VehicleModel == 425 || VehicleModel == 592 || VehicleModel == 519 || VehicleModel == 593 || VehicleModel == 452)
	       		{
	       		    return true;
	       		}
	           	Gas[vehicle]++;
			}
		}
	}
	return true;
}

public CustomPickups()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    new tmpcar = GetPlayerVehicleID(i);
			if(PlayerToPoint(15.0, i, 63.4227,-1525.4623,4.9099) || PlayerToPoint(15.0, i, 39.9876,-1537.8563,5.2190) || PlayerToPoint(15.0, i, 50.8741,-1531.4620,5.2977))
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					//SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -1133.7361,1094.6746,38.5247) || PlayerToPoint(15.0, i, -1159.4485,1090.8225,39.4211))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 500);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -2672.4253,1280.6934,55.9456) || PlayerToPoint(15.0, i, -2690.4136,1268.3032,55.9456))
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(22.0, i, 2514.2334,292.2852,29.3627) || PlayerToPoint(22.0, i, 2540.9075,310.9224,28.8231))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 81.8500,-1259.7455,14.3465) || PlayerToPoint(15.0, i, 96.9080,-1280.1302,14.1135))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 1745.8721,525.1683,27.6760) || PlayerToPoint(15.0, i, 1752.5485,523.1072,27.6667) || PlayerToPoint(15.0, i, 1734.7725,529.1494,27.6652) || PlayerToPoint(15.0, i, 1728.3962,531.7761,27.6392))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 519.0666,468.8470,18.9297) || PlayerToPoint(15.0, i, 524.3035,472.9212,18.9297) || PlayerToPoint(15.0, i, -181.2493,329.5744,12.0781) || PlayerToPoint(15.0, i, -175.0119,327.9676,12.0781))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					GivePlayerMoney(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			if (IsAPlane(tmpcar))
			{// Ganhar Paraquedas Helicoptero
				GivePlayerWeaponBPH(i, 46, 1);
			}
            else if (PlayerToPoint(2.0, i, 1544.0869,-1353.1323,329.4746))
			{// Ganhar Paraquedas Prédio
				GivePlayerWeaponBPH(i, 46, 1);
			}
			else if(PlayerToPoint(3.0, i,256.0320,84.5082,1002.4453))
   			{
				if (PlayerInfo[i][pEmprego] == 2)
				{
					GameTextForPlayer(i, "~g~PAGUE 5K e, ~n~ ~w~ | Digite ~y~/autorizacao |", 5000, 5);
				}
			}
			else if (PlayerToPoint(1, i,246.3118,72.9691,1003.6406)) // /pp automatico
			{
				MoveObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
				GameTextForPlayer(i, "~w~Portao ~n~~b~Aberto", 4000, 3);
				SetTimer("GaragemDpClosed", 5000, false);
			}
			else if (PlayerToPoint(1, i,367.3167,162.2013,1025.7891)) // /ppre automatico
			{
                MoveObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
				GameTextForPlayer(i, "~w~Porta ~n~~b~Aberta", 4000, 3);
				SetTimer("PortaoPre2", 5000, false);
			}

			else if (PlayerToPoint(3, i,901.4695,-1276.5393,23.0861) || PlayerToPoint(3, i,903.3665,-1272.1648,14.5035))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epc", 5000, 5);
			}
   			else if (PlayerToPoint(3, i,-54.8425,-237.7034,31.6468) || PlayerToPoint(3, i,-50.5607,-233.6536,6.7646))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epf", 5000, 5);
			}
			else if (PlayerToPoint(3, i,221.1146,-234.2171,8.0786) || PlayerToPoint(3, i,221.1805,-237.8225,1.5781))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epcc", 5000, 5);
			}
			else if (PlayerToPoint(2, i,969.8785,-1516.9382,23.7241) || PlayerToPoint(2, i,970.1837,-1520.5553,13.5502))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /ehit", 5000, 5);
			}
			else if (PlayerToPoint(3, i,346.8519,-1494.9565,36.0391) || PlayerToPoint(3, i,345.1602,-1482.8597,76.5391))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epr", 5000, 5);
			}
			else if (PlayerToPoint(3, i,965.7349,-1465.6044,21.3783) || PlayerToPoint(3, i,964.0209,-1465.8312,13.4589))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /etaxi", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2139.7847,-1176.8256,23.9922) || PlayerToPoint(3, i,2138.6680,-1168.9967,28.1484))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /ealuguel", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2041.6371,-1392.5150,48.3359) || PlayerToPoint(3, i,2037.6494,-1404.6544,17.2538))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eMedicos", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2232.9934,-1333.1924,23.9815))
			{
			    GameTextForPlayer(i, "~y~Casamento ~n~~r~Digite ~w~/casar", 5000, 5);
			}

			else if(PlayerToPoint(2.0, i,1073.1421,-345.3419,73.9922) && GetPlayerOrg(i) == 8 || PlayerToPoint(2.0,i,-1691.4447,1367.3137,7.1797) && GetPlayerOrg(i) == 22)
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                GivePlayerWeaponBPH(i, 24, 120);
							GivePlayerWeaponBPH(i, 25, 80);
							GivePlayerWeaponBPH(i, 29, 300);
							GivePlayerWeaponBPH(i, 4, 1);
			                //SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 2:
			            {
			                GivePlayerWeaponBPH(i, 24, 160); GivePlayerWeaponBPH(i, 25, 100); GivePlayerWeaponBPH(i, 29, 100); GivePlayerWeaponBPH(i, 4, 1);
			                //SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 3:
			            {
			                GivePlayerWeaponBPH(i, 24, 200); GivePlayerWeaponBPH(i, 29, 150); GivePlayerWeaponBPH(i, 25, 200); GivePlayerWeaponBPH(i, 30, 200); GivePlayerWeaponBPH(i, 4, 1); //GivePlayerWeaponBPH(i, 34, 90);
			                //SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 4:
			            {
			                GivePlayerWeaponBPH(i, 24, 250); GivePlayerWeaponBPH(i, 25, 200); GivePlayerWeaponBPH(i, 34, 150); GivePlayerWeaponBPH(i, 31, 300); GivePlayerWeaponBPH(i, 4, 1); GivePlayerWeaponBPH(i, 14, 1);
                            VidaDoCara[i] = 2;
							SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 5:
			            {
			                GivePlayerWeaponBPH(i, 24, 300); GivePlayerWeaponBPH(i, 29, 400); GivePlayerWeaponBPH(i, 25, 200); GivePlayerWeaponBPH(i, 30, 400); GivePlayerWeaponBPH(i, 4, 1); GivePlayerWeaponBPH(i, 34, 190);
                            VidaDoCara[i] = 2;
							SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 6:
			            {
			                GivePlayerWeaponBPH(i, 24, 300); GivePlayerWeaponBPH(i, 29, 700); GivePlayerWeaponBPH(i, 34, 200); GivePlayerWeaponBPH(i, 25, 300); GivePlayerWeaponBPH(i, 4, 1); GivePlayerWeaponBPH(i, 14, 1);
                            VidaDoCara[i] = 2;
							SetPlayerArmour(i, 100);
							SetPlayerHealth(i, 100);
							SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 7:
			            {
			                GivePlayerWeaponBPH(i, 24, 300); GivePlayerWeaponBPH(i, 29, 500); GivePlayerWeaponBPH(i, 34, 300); GivePlayerWeaponBPH(i, 25, 400); GivePlayerWeaponBPH(i, 4, 1); GivePlayerWeaponBPH(i, 14, 1);
                            VidaDoCara[i] = 2;
							SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
		            	case 8:
			            {
			                GivePlayerWeaponBPH(i, 24, 900); GivePlayerWeaponBPH(i, 25, 900); GivePlayerWeaponBPH(i, 27, 900); GivePlayerWeaponBPH(i, 30, 900); GivePlayerWeaponBPH(i, 4, 1); GivePlayerWeaponBPH(i, 34, 900);
                            VidaDoCara[i] = 2;
							SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                GivePlayerMoney(i, 1000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu Bônus Especial, Paranéns !");
			            }
			        }
			        OrderReady[i] = 0;
				}
			}
		}
	}
	return true;
}

public OnPlayerText(playerid, text[])
{
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[360];
	PlayerInactivity[playerid] = 0;
    new ComandoAtual[20];
    new Parametro;
    ComandoAtual = strtok(text, Parametro);
    //==--== ant Fake Kill ==--==
    if(strfind(text,"!kill",true) == 0) return Ban(playerid);
    if(strfind(text,"!spam",true) == 0) return Ban(playerid);
    if(strfind(text,"!lag",true) == 0) return Ban(playerid);
   	if(strfind(text,"www.samphax.tk",true) == 0) return Ban(playerid);
   	
    if(!strcmp(ComandoAtual, Comandos[playerid], true) && strlen(Comandos[playerid]))
    {
        FloodComandos[playerid]++;
        SetTimerEx("LiberarComandos", Tempo, false, "n", playerid);
        if(FloodComandos[playerid] == 3)
        {
            Comandos[playerid] = ("");
            FloodComandos[playerid] = -1;
            new NickName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, NickName, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s saiu do servidor por flood excessivo", NickName);
	        ProxDetector(30.0, playerid, string, 0xDFB595AA,0xDFB595AA,0xDFB595AA,0xDFB595AA,0xDFB595AA);
			Kick(playerid);
        }
    }
    else
    {
        FloodComandos[playerid] = -1;
    }
    format(Comandos[playerid], 20, "%s", ComandoAtual);

	if(NaCamera[playerid] == 5 || NaCamera[playerid] == 6)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Você não pode falar agora!");
		return 0;
	}
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, você foi calado");
		return 0;
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Proximo", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Proximo")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Policia Militar
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 2: //Rotam
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
    			}
				case 3: //Exército
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
				}
				case 4: //Medicos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
				}
				case 5: //Varrios Los Aztecas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 41; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 6: //GIA
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 122); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 122; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 272); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 272; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 131); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 131; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 128); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 128; }
				}
				case 7: //Prefeito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 164); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 164; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 163); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 163; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 17; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 166); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 166; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 127); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 127; }
				}
				case 9: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 10: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
				}
				case 11: //Policia federal
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 224); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 224; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 286); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 286; }
				}
				case 12: //Mafia CN
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 17; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 43); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 43; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 46); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 46; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 98); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 98; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 223); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 223; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 126); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 126; }
				}
				case 13: //Yakuza
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 203); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 203; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 204); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 204; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 118; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
				}
				case 14: //Groove
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 107; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 195; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 269; }
				}
				case 15: //GI
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 30; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 47); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 47; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 192); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 192; }
				}
				case 16: //Rotam-SF
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 59); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 59; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 124); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 124; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 76); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 76; }
				}
				case 17: //Ballas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
				}
				case 18: //Vagos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
				}
				case 19: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
    			}
				case 20: //Comando Vermelho-SF
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
				}
				case 21: //PCC
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 101); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 101; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 293); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 293; }
				}
				case 22: //TRIADS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 118; }
				}
    			case 23: //Guerrilheiros Israelitas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 112); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 112; }
				}
				case 24: //PCC
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 101); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 101; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 293); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 293; }
				}
				case 25: //Varrios Los Aztecas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 41; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 26: //Ballas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
				}
				case 27: //Policia Militar
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 28: //Vagos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
				}
				case 29: //Groove
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 107; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 195; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 269; }
				}
				case 30: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
				}
				case 31: //Medicos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
				}
				case 32: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
  				case 33: //PR
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 284);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = 284;
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 141);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = 141;
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 281);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = 281;
					}
				}
   				case 34: //SSP
				{
				    if(SelectCharPlace[playerid] == 1)
					{
						SetPlayerSkin(playerid, 141);
						SelectCharPlace[playerid] = 2;
						ChosenSkin[playerid] = 141;
					}
				    else if(SelectCharPlace[playerid] == 2)
					{
						SetPlayerSkin(playerid, 76);
						SelectCharPlace[playerid] = 3;
						ChosenSkin[playerid] = 76;
					}
				    else if(SelectCharPlace[playerid] == 3)
					{
						SetPlayerSkin(playerid, 208);
						SelectCharPlace[playerid] = 4;
						ChosenSkin[playerid] = 208;
					}
   				    else if(SelectCharPlace[playerid] == 4)
					{
						SetPlayerSkin(playerid, 219);
						SelectCharPlace[playerid] = 5;
						ChosenSkin[playerid] = 219;
					}
   				    else if(SelectCharPlace[playerid] == 5)
					{
						SetPlayerSkin(playerid,290);
						SelectCharPlace[playerid] = 1;
						ChosenSkin[playerid] = 290;
					}
				}
			}
		    return 0;
		}
		else if ((strcmp("Confirma", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Confirma")))
		{
		    if(IsAtClothShop(playerid))
		    {
		        PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SelectCharPlace[playerid] = 0;
		    	SelectCharID[playerid] = 0;
		    	SelectChar[playerid] = 0;
		        return 0;
		    }
		    if(ChangePos2[playerid][1] == 1)
		    {
			    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        XXAirBreak[playerid] += 3;SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		    //PlayerInfo[playerid][pSpawn] = 0;
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, TEAM_VAGOS_COLOR, "* Use 'Proximo', ou 'Confirma'.");
		    return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "Padre: %s Você aceita %s como sua amada esposa? (Digite 'sim', qualquer outra coisa cancela o casamento).", giveplayer,PlayerName(playerid));
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return true;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar o Noivo.", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Gay, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Lesbico, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", PlayerName(playerid));
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerMoney(playerid, - 100);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPHousekey] = PlayerInfo[playerid][pPHousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return true;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",PlayerName(playerid));
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",PlayerName(playerid));
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contratos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contratos")))
		{
			if(GetPlayerOrg(playerid) == 8)
			{
				FH = 1;
				SearchingHit(playerid);
			}
			if(GetPlayerOrg(playerid) == 22)
			{
				FK = 1;
				SearchingTri(playerid);
			}
			return 0;
		}
		else if ((strcmp("noticias", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("noticias")))
		{
		    	new x_nr[256];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Noticia da agencia dos Assasinos __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: noticias [Numero] ou noticias apagar [Numero] ou noticias apagar tudo");
					format(string, sizeof(string), "1: %s :: Assasino: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Assasino: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Assasino: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Assasino: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Assasino: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!");
						return 0;
					}
				    if(PlayerInfo[playerid][pCargo] < 3)
					{
						SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para escrever uma noticia!");
						return 0;
					}
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 1 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 2 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 3 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 4 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 5 ocupado !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"apagar",true) == 0)
				{
				    if(PlayerInfo[playerid][pCargo] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 4+ para apagar mensagens!");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[256];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou a noticia (1) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou a noticia (2) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou a noticia (3) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou a noticia (4) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou a noticia (5) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"tudo",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você apagou todas as mensagens da agencia dos Assasinos.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("darcont", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("darcont")))
		{
		    if(GetPlayerOrg(playerid) == 8)
		    {
				ShowPlayerDialog(playerid, 1991, DIALOG_STYLE_INPUT, "Dar Contrato","Digite o ID do assassino:","Aceitar","Cancelar");
				return 0;
			}
		    if(GetPlayerOrg(playerid) == 22)
		    {
				ShowPlayerDialog(playerid, 1992, DIALOG_STYLE_INPUT, "Dar Contrato","Digite o ID do assassino:","Aceitar","Cancelar");
				return 0;
			}
		}
		else if ((strcmp("membros", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("membros")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Membros da Agencia __________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 22)
				    {
				    	if(GetPlayerOrg(i) == GetPlayerOrg(playerid))
				    	{
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        	format(string, sizeof(string), "* %s: Cargo %d", giveplayer,PlayerInfo[i][pCargo]);
							SendClientMessage(playerid, COLOR_GREY, string);
						}
					}
				}
			}
		}
		else if ((strcmp("pedido", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("pedido")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {

			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu seu pacote, pegue-o na porta da sua HQ");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("8", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("8")))
			{
			    if(GanhouArmamento == GetPlayerOrg(playerid))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu Bônus foi entregue a sua HQ, verifique na Caixa de Pacotes !");
					OrderReady[playerid] = 8;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   A sua organização não ganhou o Bônus Especial por contratos concluidos!");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Pedidos Disponiveis ]__________________|");
			    if(PlayerInfo[playerid][pCargo] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) Cargo 1 - 6: Knife, Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) Cargo 2 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) Cargo 2 - 6: Knife, Eagle, AK47, MP5, Shotgun, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) Cargo 3 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) Cargo 3 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) Cargo 4 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) Cargo 4 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper, Colete"); }
			    SendClientMessage(playerid, COLOR_LIGHTRED, "|(8) Bônus: Knife, Eagle, AK47, MP5, Combat Shotgun, Sniper, Colete, e 100 mil.");
			    return 0;
			}
		}
		else if ((strcmp("sair", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sair")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop e se desconectou de sua agencia.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
			    SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assasinos ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
			    return 0;
		}
	    return 0;
	}
	if(CallAdvogado[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s está na prisão e precisa de um advogado, olhe /presos.", PlayerName(playerid));
	    	SendEmpregoMessage(2, TEAM_AZTECAS_COLOR, string);
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "A Mensagem foi enviada para todos os advogados online, Por favor espere.");
	    	WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Sua sentença foi iniciada.");
		    WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
 			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s diz (Celular): %s", sendername, text);
		SetPlayerChatBubble(playerid, string, COLOR_AZULBB, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Desculpe, Nao Entendi");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new Wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Temos alertado todas as unidades na área.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Obrigado por Relatar o Ocorrido");
			format(Wanted, sizeof(Wanted), "Denuncia: Todas Unidades IA: Chamador: %s",turner);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, Wanted);
			format(Wanted, sizeof(Wanted), "Denuncia: %s",text);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, Wanted);
			SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha...");
			Mobile[playerid] = 255;
			return 0;
		}


		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGÊNCIA: Desculpe eu não entendo");
				return 0;
			}
			if ((strcmp("nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
			{
				new turner[MAX_PLAYER_NAME];
				new Wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "COP: Alertamos todos as unidades perto do local.");
				SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por ter relatado o Ocorrido");
				format(Wanted, sizeof(Wanted), "HQ: Todas as unidades: Denunciante: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, Wanted);
				format(Wanted, sizeof(Wanted), "HQ: Crime: %s, Suspeito: Desconhecido",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, Wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "   Ninguém na linha.....");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Você terá que entrar em contato com os assuntos internos. Esta é uma linha de emergência");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninghem na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Unidades já estão atribuídos a esse caso.");
						SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Esta linha e de emergencia.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Temos alertado todas as unidades na área.");
					SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else
					{
						WantedPoints[badguy] += 1;
      					SetPlayerWantedLevel(badguy, WantedPoints[badguy]);
				  	}
					SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "Police HQ: Nenhuma informação sobre %s, o nome citado esta correto?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe, nao entendi.");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Se você souber o nome do assaltante ou de parte dele, me fale, ou simplesmente dizer não");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 190)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou Medicos?");
				return 0;
			}
			else if ((strcmp("policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("policia")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por Policia, Espere.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Por favor me dê uma breve descrição do crime.");
				return 0;
			}
			else if ((strcmp("Medicos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Medicos")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por Medicos, Espere.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Por favor me dê uma breve descrição do Incidente.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou Medicos?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Ninguém lá");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GRAD1, "Você não está logado, USE: /logar");
	        return 0;
      	}
		if(PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Mascarado diz: %s", text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
			//ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
		}
		else
		{
		   	format(string, sizeof(string), "%s diz: %s", GetPlayerNameEx(playerid), text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
		   	//ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
		}
		return 0;
  	}
	return true;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}
public Fixhour(hora)
{
	hora = timeshift+hora;
	if (hora < 0)
	{
		hora = hora+24;
	}
	else if (hora > 23)
	{
		hora = hora-24;
	}
	shifthour = hora;
	return true;
}
public IsAPoliciaCivilCar(carid)
{
	if((carid >= 219) && (carid <= 239))
	{
		return true;
	}
	return 0;
}

public IsAPoliciaCivil(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==16 || member==16)
		{
		    return true;
		}
		else if(lider==16 || lider==16)
		{
		    return true;
		}
	}
	return 0;
}

public IsAGIA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==6 || member==6)
		{
		    return true;
		}
		else if(lider==6 || lider==6)
		{
		    return true;
		}
	}
	return 0;
}
public IsAGIACar(carid)
{
	if((carid >= 86) && (carid <= 98))
	{
		return true;
	}
	return 0;
}
public IsASonsofAnarchy(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==20 || member==20)
		{
		    return true;
		}
		else if(lider==20 || lider==20)
		{
		    return true;
		}
	}
	return 0;
}
public IsAComandoVermelhoSF(carid)
{
	if((carid >= 273) && (carid <= 282))
	{
		return true;
	}
	return 0;
}
public IsATriad(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==22 || member==22)
		{
		    return true;
		}
		else if(lider==22 || lider==22)
		{
		    return true;
		}
	}
	return 0;
}
public IsATriadCar(carid)
{
	if((carid >= 255) && (carid <= 265))
	{
		return true;
	}
	return 0;
}
public IsAYa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==13|| member==13)
		{
		    return true;
		}
		else if(lider==13 || lider==13)
		{
		    return true;
		}
	}
	return 0;
}

public IsAPFCar(carid)
{
	if((carid >= 140) && (carid <= 161))
	{
		return true;
	}
	return 0;
}


public IsACosaNostra(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==12 || member==12)
		{
		    return true;
		}
		else if(lider==12 || lider==12)
		{
		    return true;
		}
	}
	return 0;
}
public IsAGOV(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==7 || lider==7)
		{
		    return true;
		}
	}
	return 0;
}
public IsAGOVCar(carid)//Carros Governo
{
	if((carid >= 96) && (carid <= 104))
	{
		return true;
	}
	return 0;
}


public IsAAl(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==15 || member==15)
		{
		    return true;
		}
		else if(lider==15 || lider==15)
		{
		    return true;
		}
	}
	return 0;
}
public IsAAlCar(carid)
{
	if((carid >= 195) && (carid <= 210))
	{
		return true;
	}
	return 0;
}
public IsAGI(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==23 || member==23)
		{
		    return true;
		}
		else if(lider==23 || lider==23)
		{
		    return true;
		}
	}
	return 0;
}
public IsAGICar(carid)
{
	if((carid >= 266) && (carid <= 282))
	{
		return true;
	}
	return 0;
}
public IsAOni(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==9)
		{
		    return true;
		}
	}
	return 0;
}
public IsAOniCar(carid)
{
	if((carid >= 295) && (carid <= 301))
	{
		return true;
	}
	return 0;
}
public IsAJornal(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==9 || member==9)
		{
		    return true;
		}
		else if(lider==9 || lider==9)
		{
		    return true;
		}
	}
	return 0;
}
public IsAJornalCar(carid)
{
	if((carid >= 116) && (carid <= 126))
	{
		return true;
	}
	return 0;
}
public IsAGroove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==14)
		{
		    return true;
		}
		else if(lider==14 || lider==14)
		{
		    return true;
		}
	}
	return 0;
}
forward IsAGang(playerid);
public IsAGang(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==17 || member==18 || member==19 || member==20 || member==21 || member==5)
		{
		    return true;
		}
		else if(lider==14 || lider==17 || lider==18 || lider==19 || lider==20 || lider==21 || lider==5)
		{
		    return true;
		}
	}
	return 0;
}
public IsAGrooveCar(carid)
{
	if((carid >= 184) && (carid <= 194))
	{
		return true;
	}
	return 0;
}
public IsATaxi(playerid)//LS
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==10 || member==10)
		{
		    return true;
		}
		else if(lider==10 || lider==10)
		{
		    return true;
		}
	}
	return 0;
}
public IsATaxiCar(carid)
{
	if((carid >= 127 && carid <= 139))

	{
		return true;
	}
	return 0;
}
public IsAVagos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==18 || member==18)
		{
		    return true;
		}
		else if(lider==18 || lider==18)
		{
		    return true;
		}
	}
	return 0;
}
public IsAVagosCar(carid)
{
	if((carid >= 222) && (carid <= 232))
	{
		return true;
	}
	return 0;
}

public IsABallas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==17 || member==17)
		{
		    return true;
		}
		else if(lider==17 || lider==17)
		{
		    return true;
		}
	}
	return 0;
}
public IsABallasCar(carid)
{
	if((carid >= 211) && (carid <= 221))
	{
		return true;
	}
	return 0;
}

public IsATaxiSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==30 || member==30)
		{
		    return true;
		}
		else if(lider==30 || lider==30)
		{
		    return true;
		}
	}
	return 0;
}
public IsATaxiSFCar(carid)
{
	if((carid >= 594) && (carid <= 607))
	{
		return true;
	}
	return 0;
}


public IsAMedicosSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==31 || member==31)
		{
		    return true;
		}
		else if(lider==31 || lider==31)
		{
		    return true;
		}
	}
	return 0;
}
public IsAMedicosSFCar(carid)
{
	if((carid >= 608) && (carid <= 617))
	{
		return true;
	}
	return 0;
}

forward Kickado(playerid);
public Kickado(playerid)
{
	new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	if(fexist(string2))
	{
		fremove(string2);
	}
	Kick(playerid);
	return true;
}
public IsAJornalSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==32 || member==32)
		{
		    return true;
		}
		else if(lider==32 || lider==32)
		{
		    return true;
		}
	}
	return 0;
}
public IsAJornalSFCar(carid)
{
	if((carid >= 618) && (carid <= 629))
	{
		return true;
	}
	return 0;
}




public IsAAztecaSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==25 || member==25)
		{
		    return true;
		}
		else if(lider==25 || lider==25)
		{
		    return true;
		}
	}
	return 0;
}

forward IsASecretaria(playerid);
public IsASecretaria(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==34 || member==34)
		{
		    return true;
		}
		else if(lider==34 || lider==34)
		{
		    return true;
		}
	}
	return 0;
}

forward IsASecretariaCar(carid);
public IsASecretariaCar(carid)
{
	if((carid >= 86) && (carid <= 95))
	{
		return true;
	}
	return 0;
}

public IsAPM(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==1)
		{
		    return true;
		}
		else if(lider==1 || lider==1)
		{
		    return true;
		}
	}
	return 0;
}

public IsAComandoVermelho(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==19 || member==19)
		{
		    return true;
		}
		else if(lider==19 || lider==19)
		{
		    return true;
		}
	}
	return 0;
}
public IsAAztecaSFCar(carid)
{
	if((carid >= 583) && (carid <= 593))
	{
		return true;
	}
	return 0;
}


public IsABallasSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==26 || member==26)
		{
		    return true;
		}
		else if(lider==26 || lider==26)
		{
		    return true;
		}
	}
	return 0;
}
public IsABallasSFCar(carid)
{
	if((carid >= 561) && (carid <= 571))
	{
		return true;
	}
	return 0;
}


public IsAPMSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==27 || member==27)
		{
		    return true;
		}
		else if(lider==27 || lider==27)
		{
		    return true;
		}
	}
	return 0;
}
public IsAPMSFCar(carid)
{
	if((carid >= 519) && (carid <= 544))
	{
		return true;
	}
	return 0;
}


public IsAVagosSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==28 || member==28)
		{
		    return true;
		}
		else if(lider==28 || lider==28)
		{
		    return true;
		}
	}
	return 0;
}
public IsAVagosSFCar(carid)
{
	if((carid >= 572) && (carid <= 582))
	{
		return true;
	}
	return 0;
}

public IsAGrooveSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==29 || member==29)
		{
		    return true;
		}
		else if(lider==29 || lider==29)
		{
		    return true;
		}
	}
	return 0;
}

NomeCorreto(name[])
{
    if(NumOccurences(name[0],'_') != 1) return 0;
    return 0x01;
}
NumOccurences(str[],ch)
{
    new num=0,strl;
    strl=strlen(str);
    while(strl--)
	{
    	if(str[strl]==ch) num++;
    }
    return num;
}
public IsAAzteca(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==5)
		{
		    return true;
		}
		else if(lider==5 || lider==5)
		{
		    return true;
		}
	}
	return 0;
}
public IsAAztecaCar(carid)
{
	if((carid >= 76) && (carid <= 85))
	{
		return true;
	}
	return 0;
}

forward IsAPRCar(carid);
public IsAPRCar(carid)
{
	if((carid >= 374) && (carid <= 395))
	{
		return true;
	}
	return 0;
}

//==teste==
public IsAPCCSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==24 || member==24)
		{
		    return true;
		}
		else if(lider==24 || lider==24)
		{
		    return true;
		}
	}
	return 0;
}

forward IsAPR(playerid);
public IsAPR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==33 || member==33)
		{
		    return true;
		}
		else if(lider==33 || lider==33)
		{
		    return true;
		}
	}
	return 0;
}


public IsAHelperCar(carid)
{
	if((carid >= 343) && (carid <= 357))
	{
		return true;
	}
	return 0;
}

//=======================================================
public IsAPCCSFCar(carid)
{
	if((carid >= 508) && (carid <= 518))
	{
		return true;
	}
	return 0;
}
public IsAPCC(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==21 || member==21)
		{
		    return true;
		}
		else if(lider==21 || lider==21)
		{
		    return true;
		}
	}
	return 0;
}
public IsAPCCCar(carid)
{
	if((carid >= 244) && (carid <= 254))
	{
		return true;
	}
	return 0;
}
public IsAMec(playerid)
{
	if(PlayerInfo[playerid][pEmprego] == 5)
	{
		return true;
	}
	return 0;
}
public IsAMecCar(carid)
{
	if((carid >= 290 && carid <= 294))
	{
		return true;
	}
	return 0;
}
public IsABOPEs(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==2 || member==2)
		{
		    return true;
		}
		else if(lider==2 || lider==2)
		{
		    return true;
		}
	}
	return 0;
}
public IsABOPEsCar(carid)
{
	if((carid >= 25) && (carid <= 44))
	{
		return true;
	}
	return 0;
}
public IsAEx(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==3 || member==3)
		{
		    return true;
		}
		else if(lider==3 || lider==3)
		{
		    return true;
		}
	}
	return 0;
}
public IsAExCar(carid)
{
	if((carid >= 45) && (carid <= 68))
	{
		return true;
	}
	return 0;
}
public IsAHit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==8 || member==8)
		{
		    return true;
		}
		else if(lider==8 || lider==8)
		{
		    return true;
		}
	}
	return 0;
}
public IsAHitCar(carid)
{
	if((carid >= 105) && (carid <= 115))
	{
		return true;
	}
	return 0;
}
public IsABikeCar(carid)
{
    new lolololol = GetVehicleModel(carid);
	if((lolololol == 462))
	{
		return true;
	}
	return 0;
}
public IsAVIP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vip = PlayerInfo[playerid][pVIP];
	    if(vip >= 1)
		{
		    return true;
		}
	}
	return 0;
}
public GaragemDpClosed2()
{
	MoveObject(PDDOORb,250.774871 , 60.822799 , 1003.640625, 2);//GaragemClosed
	return true;
}
public gasolina(playerid)
{
    new string[128];
    new vehicle = GetPlayerVehicleID(playerid);
    new Nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nick, sizeof(Nick));
	new Wanted = WantedPoints[playerid];
    SendClientMessage(playerid, COLOR_YELLOW2, "| Computador De Bordo |");
    format(string, sizeof(string), "  Motorista: %s", Nick);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Veiculo: %s", NomeCarro[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Combustivel: %d", Gas[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Nivel De Procura: %d", Wanted);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Horas: %d", hour);
    SendClientMessage(playerid, COLOR_WHITE, string);
    Gas[vehicle]--;
    return true;
}
public GaragemDpClosed()
{
	MoveObject(PDDOORa,247.005905 , 72.448440 , 1003.640625, 2);//GaragemClosed
	return true;
}
public pcclosed()
{
    MoveObject(PDDOORb,248.142105 , 78.125961 , 1003.640625, 2);//CelaClosed
	return true;
}
public pd1()
{
	MoveObject(PDDOORc,248.142105 , 78.125961 , 1003.640625, 2);//GaragemClosed
	return true;
}
public pd2()
{
	MoveObject(PDPMLS,1546.8681640625, -1627.3585205078, 15.156204223633, 2);//GaragemClosed
	return true;
}
public pd3()
{
	MoveObject(PDGARAGE,1588.195,-1637.969,15.193, 2);//GaragemClosed
	return true;
}
public pd4()
{
	MoveObject(PDELEVATOR,1549.049804 , -1697.787109 , 12.5514954, 2);//GaragemClosed
	return true;
}
public PFClosed2()
{
    MoveObject(gatepf2,2334.757568, 2443.675537, 8.250650, 2);//GateClosed
	return true;
}
public PFClosed3()
{
	MoveObject(gatepf3,2293.928467, 2499.322021, 5.825822, 2);//GateClosed
	return true;
}
public PortaoPoliciaC1()
{
	MoveObject(portaoPC1,923.80151367188, -1224.8518066406, 18.749954223633, 2);//GateClosed
	MoveObject(portaoPC2,923.73193359375, -1217.4801025391, 18.749954223633, 2);//GateClosed
	return true;
}
public PortaooPC2() {
	MoveObject(PortaooPC,922.45611572266, -1208.7191162109, 17.982734680176, 2);// portaooPC Closed
	return true;
}
public PortaoTaxi2() {
	MoveObject(PortaoTaxi,958.840,-1415.794,15.151, 2);//Portao Taxi Closed
	return true;
}
public PDEx2()
{
	MoveObject(PDEx,-1531.3978271484, 482.25979614258, 8.9530792236328, 2);//GateClosed
	return true;
}
public gt3gate2()
{
	MoveObject(gt3gate,283.095062, -1542.899170, 25.510294, 2);//GateClosed
	MoveObject(gt3gate3,321.832672, -1488.615112, 25.527353, 2);//GateClosed
	return true;
}
forward PoliciaFederalClosed();
public PoliciaFederalClosed()
{
    MoveObject( pfdoor, -2433.97338867,496.39559937,31.70938301,3);
    MoveObject( pfdoor2, -2424.72973633,500.50247192,30.89804077,3);
	return 1;
}
public PTPMSF()
{
	MoveObject(PortaoPMSF,-1571.8000488281,661.09997558594,6.6999998092651, 2);//GateClosed
	return true;
}

forward FecharpMedicos();
public FecharpMedicos()
{
	MoveObject(portaomedicos1,2002.9000244141 ,-1450.8000488281 ,15.300000190735, 2);
	MoveObject(portaomedicos2,1997.0999755859 ,-1445.0999755859 ,15.300000190735, 2);
	return true;
}

public PortaoHit3()
{
	MoveObject(PortaoHit1,956.80456542969, -1503.0864257813, 15.321235656738, 2);//Portao HIT 1 Closed
	return true;
}
public PortaoTriad2()
{
	MoveObject(PortaoTriad1,1620.7049560547, -1861.2620849609, 15.324647903442, 2);//Portao Triad 1 Closed
	return true;
}
public PortaoPre2()
{
	MoveObject(PortaoPre,369.15893554688, 162.35037231445, 1028.6030273438, 2);//Portao Prefeitura Closed
	return true;
}
public PortaoReporter2() {
	MoveObject(PortaoReporter,777.80017089844, -1330.2664794922, 14.200000762939, 2);//Portao Reporter Closed
	return true;
}
public PortaoRally2() {
	MoveObject(PortaoRally,-2368.4670410156, -2192.6381835938, 36.037666320801, 2);//Portao Rally Closed
	return true;
}
public PortaoPC2() {
	MoveObject(PortaoPC,-75.570,-357.211,3.960, 2);//Portao PC Closed
	MoveObject(PortaoPC3,-75.598,-348.424,3.908, 2);
	return true;
}


public OnVehicleDamageStatusUpdate(vehicleid,playerid)
{
	new Float:Vi_da;
	new Float:Vii_daa;
	GetPlayerHealth(playerid, Vii_daa);
	SetPlayerHealth(playerid, Vii_daa-1);
	if(vehicleid >= CAR_AMOUNT)
	{
		if(GetVehicleHealth(vehicleid, Vi_da) < 1000.0)
		{
			RepairVehicle(vehicleid);
		}
	}
 	return true;
}


public OnPlayerKeyStateChange(playerid,newkeys,oldkeys)
{
	new string[256];
    PlayerInactivity[playerid] = 0;
   	if(newkeys == 16 && NoBalao[playerid] == 1)
    {
      	new Float:bX, Float:bY, Float:bZ;
        if(DonoBalao[playerid] == 1)
        {
            GetObjectPos(Balao, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
  		if(DonoBalao[playerid] == 2)
        {
            GetObjectPos(Balao2, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
		if(DonoBalao[playerid] == 3)
        {
            GetObjectPos(Balao3, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
		if(DonoBalao[playerid] == 4)
        {
            GetObjectPos(Balao4, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
		if(DonoBalao[playerid] == 5)
        {
            GetObjectPos(Balao5, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
		if(DonoBalao[playerid] == 6)
        {
            GetObjectPos(Balao6, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
		if(DonoBalao[playerid] == 7)
        {
            GetObjectPos(Balao7, bX, bY, bZ);
	    	if(IsPlayerInRangeOfPoint(playerid, 10, bX, bY, bZ))
	    	{
	    		OnPlayerCommandText(playerid,"/stop");
			}
		}
    }
    if(newkeys == 16 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
    {
        OnPlayerCommandText(playerid,"/sair");
        OnPlayerCommandText(playerid,"/entrar");
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && newkeys & KEY_YES)
	{
 		if(VeiculoValido[GetPlayerVehicleID(playerid)] == 1)
  		{
  		    if(NovaCamera[playerid] == 0)
  		    {
  		        GameTextForPlayer(playerid, "~w~camera~g~ ligada", 5000, 6);
   				AttachCameraToObject(playerid, ObjetoCarro[GetPlayerVehicleID(playerid)]);
   				NovaCamera[playerid] = 1;
			}
   		    else if(NovaCamera[playerid] == 1)
  		    {
  		        GameTextForPlayer(playerid, "~w~camera~r~ desligada", 5000, 6);
            	SetCameraBehindPlayer(playerid);
   				NovaCamera[playerid] = 0;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_YELLOW2, "Este veículo ainda não suporta câmera em 1ª pessoa.");
		}
	}
    
   	if((newkeys == KEY_SECONDARY_ATTACK))
    {
		if(PlayerToPoint(1.0,playerid,247.8818,71.5204,1003.6406))
		{
            ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pp");
		}
		if(PlayerToPoint(1.0,playerid,249.0358,74.6236,1003.6406) || PlayerToPoint(1.0,playerid,247.4305,77.2490,1003.6406))
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pv");
		}
		if(PlayerToPoint(1.0,playerid,249.9555,64.5031,1003.6406) || PlayerToPoint(1.0,playerid,251.3744,64.5719,1003.6406))
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pr");
		}
		
		if(PlayerToPoint(1.0,playerid,2008.6317,-1449.6309,13.5822))
		{
      		ApplyAnimation(playerid,"CASINO","Slot_lose_out", 4.0, 0, 0, 0, 0, 0);
			SetPlayerPos(playerid, 2008.6317,-1449.6309,13.5822);
			SetPlayerFacingAngle(playerid, 183.4328);
			ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
			ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pmedicos");
			SetTimerEx("AnimSS", 200, false, "i", playerid);
		}
		
		if(PlayerToPoint(1.0,playerid,925.3904,-1210.9376,16.9796) || PlayerToPoint(1.0,playerid,921.4904,-1211.2009,16.9832)) //
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/ptpc");
		}

		if(PlayerToPoint(1.0,playerid,925.3904,-1210.9376,16.9796) || PlayerToPoint(1.0,playerid,921.4904,-1211.2009,16.9832)) //
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/ptpc");
		}
	}

    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
        OnPlayerCommandText(playerid,"/alugarbalao");
		OnPlayerCommandText(playerid,"/equipara");
		OnPlayerCommandText(playerid,"/VenderHQ");
        //======sprunks=====================
        if(PlayerToPoint(1.0,playerid,2153.8347,-1015.6840,62.8845))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,2140.2686,-1161.4073,23.9922))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,1788.3959,-1369.2806,15.7578))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,495.9097,-23.5247,1000.6797))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,361.5575,159.3570,1008.3828))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,501.9172,-2.2187,1000.6797))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,1729.8669,-1943.8644,13.5687))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,-17.7243,-90.7413,1003.5469))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        if(PlayerToPoint(1.0,playerid,-16.1015,-90.8514,1003.5469))
        {
			format(string, sizeof(string), " %s comprou um sprunk", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }

        if(PlayerToPoint(2,playerid,2155.4729,-1016.9375,62.8514) || PlayerToPoint(2,playerid,1967.0825,-1245.5968,24.2317) ||
		PlayerToPoint(2,playerid,1727.1581,-1944.3672,13.5669) || PlayerToPoint(2,playerid,1240.9377,-2031.4834,59.9921)||
		PlayerToPoint(2,playerid,1281.7220,-831.5698,83.1406))
        {
        	OnPlayerCommandText(playerid,"/equipamentostr");
        }
        if(PlayerToPoint(2,playerid,-103.9931,-22.0508,1000.7188))
        {
        	OnPlayerCommandText(playerid,"/sexshop");
        }
      	if(PlayerToPoint(2,playerid,361.1929,204.4032,1008.3828))
        {
        	OnPlayerCommandText(playerid,"/cameras");
        }
        if(PlayerToPoint(1,playerid,346.1226,161.8205,1025.7964))
        {
        	OnPlayerCommandText(playerid,"/equipargov");
        }

		if (InAFoodPlace[playerid] != 0)
		{
			if(PlayerToPoint(2.1,playerid,368.9714,-6.2486,1001.8516))
			{
				ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Cluckin' Bell", "Coração no Espeto R$2\nCarne de Vaca R$4\nCarne de Jacaré R$5\nCarne de Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(2.1,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,683.9015,-456.7076,-25.6099))
			{
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Burger Shot", "X-Baycon R$2\nX-Tudo R$4\nX-Especial R$5\nX-Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(2.1,playerid,375.6895,-118.9683,1001.4995))
			{
				ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Well Stacked Pizza", "Presunto e Mussarela - Pequena R$2\nPresunto e Mussarela - Grande R$4\nFrango e Azeitona R$5\nBacon e Chocolate R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
				SetPlayerFacingAngle(playerid, 357.0132);
			}

			if(PlayerToPoint(2.1,playerid,379.0611,-186.6032,1000.6328))
			{
				ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Jim's sticky ring", "Rosquinha Pequena R$2\nRosquinha Normal R$4\nRosquinha de Chefe R$5\nSuper Rosquinha R$4\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
				SetPlayerFacingAngle(playerid, 280);
			}
			SetCameraBehindPlayer(playerid);
		}
		if(PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953)
		 || PlayerToPoint(1.5, playerid,2308.7908,-13.2499,26.7422) || PlayerToPoint(1.5, playerid,2327.4045,6.5299,26.5351) || PlayerToPoint(1.5,playerid,1495.3928,-1749.1208,15.4453) ||  PlayerToPoint(1.5,playerid,1363.0376,-1745.4191,13.5439))
		{
		    OnPlayerCommandText(playerid,"/banco");
		}
		if (PlayerToPoint(2, playerid, 361.8300,173.5202,1008.3828))
    	{
			OnPlayerCommandText(playerid,"/getemprego");
    	}
    	if (PlayerToPoint(2, playerid, 360.4893,170.2785,1008.3893))
    	{
			OnPlayerCommandText(playerid,"/licencas");
    	}
    	if (PlayerToPoint(2.0, playerid, 312.1259,-166.1339,999.6010) || PlayerToPoint(2.0, playerid, 295.7041,-80.3617,1001.5156) || PlayerToPoint(2.0, playerid, 296.3083,-38.1549,1001.5156) || PlayerToPoint(2.0, playerid, 313.8642,-133.8308,999.6016))
    	{
    	    Controle(playerid, 0);
    	    ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Loja de Armas", "KIT-VIP\nEagle\nMP5\nShotgun\nAk-47\nM4\nRifle", "Confirmar", "Cancelar");
        }
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    Controle(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "confirma", "Cancela");
		}
		if(PlayerToPoint(2.0, playerid, 2148.7146,-1010.8959,62.5722) || PlayerToPoint(2.0, playerid, 1450.4479,-2287.0803,13.5469) || PlayerToPoint(2.0, playerid, 1919.1384,-1415.4775,13.5703) || PlayerToPoint(2.0, playerid, 1123.7664,-1506.4692,15.7869))
		{
		    if (PlayerInfo[playerid][pEmprego] == 4)
			{
			    Controle(playerid, 0);
		    	ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de drogas");
			}
		}
        if(PlayerToPoint(2.0,playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334))
		{
		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
			    Controle(playerid, 0);
		    	ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Menu Máfia", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um mafioso");
			}
		}
  		if(PlayerToPoint(3.0,playerid,2026.2104,-1896.1097,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
		{
		    if (PlayerInfo[playerid][pEmprego] == 7)
			{
			    Controle(playerid, 0);
		    	ShowPlayerDialog(playerid, PEGARMAFIA, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de armas");
			}
		}
		if (PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188) ||PlayerToPoint(2.0, playerid, 1565.1235,-1666.9944,28.3956) || PlayerToPoint(2.0, playerid, 246.2975,87.4735,1003.6406))
		{
		    if(storeexit[playerid] == 67){ return true;}
		    if(!IsACop(playerid)){ return true;}
		    Controle(playerid, 0);
    		ShowPlayerDialog(playerid, 2585, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento", "Confirma", "Cancela");
 		}
 		if(PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
 		{
 			if(MatsHolding[playerid] > 0)
			{
   				new payout = (100)*(MatsHolding[playerid]);
       			format(gstring, sizeof(gstring), "* A Boca comprou %d pacotes e te deu %d materiais.", payout, MatsHolding[playerid]);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
       			PlayerInfo[playerid][pMats] += payout;
   				MatsHolding[playerid] = 0;
      		}
       		else
       		{
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pacote !");
    		}
    	}
      	if(PlayerToPoint(3.0,playerid,1828.9386,-1149.9722,23.9766))
 		{
            if(PlayerInfo[playerid][pEmprego] == 7)
            {
	 			if(MatsHolding[playerid] > 0)
				{
	   				new payout = (100)*(MatsHolding[playerid]);
	       			format(gstring, sizeof(gstring), "* A Boca comprou %d pacotes e te deu %d materiais..", payout, MatsHolding[playerid]);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
	       			PlayerInfo[playerid][pMats] += payout;
	   				MatsHolding[playerid] = 0;
	      		}
	       		else
	       		{
					SendClientMessage(playerid, COLOR_GREY, "Você não tem nenhum pacote ou não é vendedor de armas !");
	    		}
	    	}
     	}
    	if(PlayerToPoint(1, playerid, 1568.6442,-1689.9729,6.2188) || PlayerToPoint(1, playerid, 323.8644,-1518.2356,36.0325) || PlayerToPoint(1, playerid, -1520.0920,480.5076,7.1875)
		|| PlayerToPoint(1, playerid, -2458.0300,500.2602,30.0783) || PlayerToPoint(1, playerid, 208.8036,145.8378,1003.0234)) //|| PlayerToPoint(1, playerid, 608.6080,-592.8043,17.2330))
    	{
    	    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
    	    {
    	        Controle(playerid, 0);
    	        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Militar", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Rotam", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Exército", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Federal", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Rotam-SF", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
    	    }
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !"); }
    	}
		if(PlayerToPoint(1, playerid, 400.0611,2539.5366,16.5448))
		{
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre GI", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da FARC !"); }
    	}
     	if(PlayerToPoint(1, playerid, -2237.1875,2353.9629,4.9807))
		{
			if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Guerrilheiros Israelitas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Guerrilheiros Israelitas !"); }
    	}
    	if(PlayerToPoint(1, playerid, 325.8390,-1769.9778,4.7614))
    	{
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Aztecas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Aztecas !"); }
    	}
    	
    	if(PlayerToPoint(1, playerid, 367.4628,216.1502,1008.3828))
    	{
			if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Secretaria de segurança", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é da S.S.P !");
			}
    	}
    	if(PlayerToPoint(1, playerid, 608.2841,-586.3127,17.2266))
    	{
			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Policia Rodoviaria", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !");
			}
    	}

		if(PlayerToPoint(1, playerid, 2514.1301,-1691.2979,14.0460))
    	{
			if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Groove Street", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Groove Street !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1154.1490,-1185.1548,32.0275))
    	{
			if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Ballas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Ballas !"); }
    	}
    	if(PlayerToPoint(1, playerid, 2825.3916,-1170.2870,25.2235))
    	{
			if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Vagos", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Vagos !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1996.3494,-2070.2419,13.5469))
    	{
			if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Comando Vermelho", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Comando Vermelho !"); }
		}

		if(PlayerToPoint(1, playerid, 2247.3445,-1458.7847,24.0243))
    	{
			if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre PCC", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos PCC !"); }
		}

    	if(PlayerToPoint(1, playerid, 2041.6974,-1430.1006,17.1641))
    	{
			if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Medicos", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Médico !"); }
    	}

    	if(PlayerToPoint(1, playerid, -1688.6979,1343.3650,7.1722))
    	{
			if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Triads", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Triad !"); }
    	}
    	if(PlayerToPoint(1, playerid, 356.3957,152.4393,1025.7891))
    	{
			if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Prefeitura", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Servidor Público !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1105.9783,-301.7331,74.5391))
    	{
			if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Hitmans", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Hitman !"); }
    	}
    	if(PlayerToPoint(1, playerid, 752.1580,-1358.9927,13.5000))
    	{
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Repórteres", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Repórter !"); }
    	}
    	if(PlayerToPoint(1, playerid, 992.5768,-1460.1726,13.5469))
    	{
			if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Taxistas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack\nEquipar\nMembros da Organização\nInformacoes\nDefinições\nInformações de Candidatos\nLimpar Candidatos", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Taxista !"); }
    	}
	}
    if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
	    if(gTeam[playerid] == 2  || IsACop(playerid) || IsAGOV(playerid))
		{
			OnPlayerCommandText(playerid,"/pe");
  			OnPlayerCommandText(playerid,"/pg");
  			OnPlayerCommandText(playerid,"/abrirgn");
  			OnPlayerCommandText(playerid,"/pro");
  			OnPlayerCommandText(playerid,"/pce");
  			OnPlayerCommandText(playerid,"/pcg");
  			OnPlayerCommandText(playerid,"/ProSanFierro");
   		}
        if(IsAGOV(playerid))
		{
		    OnPlayerCommandText(playerid,"/pgov");
		}
        if(IsAMedicos(playerid))
		{
		    OnPlayerCommandText(playerid,"/pmedicos");
		}
        if(IsAJornal(playerid))
		{
			OnPlayerCommandText(playerid,"/portaoreporter");
		}
		if(IsATaxi(playerid))
		{
			OnPlayerCommandText(playerid,"/ptaxi");
		}
		if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
 			OnPlayerCommandText(playerid,"/acn");
		}
		if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
 			OnPlayerCommandText(playerid,"/ppf");
		}
	}
	return true;
}
public ScoreLevel(playerid)
{
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	SetPlayerScore(playerid, LevScore);
}
public Velociimetro()
{
	new Float:Speedo_HP;
	new string[256];
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(gPlayerLogged[i] == 1 && IsPlayerInAnyVehicle(i))
		{
		    new Float:PosX, Float:PosY, Float:PosZ;
		    GetPlayerPos(i, PosX, PosY, PosZ);
		   	new vehicle = GetPlayerVehicleID(i);
			GetVehicleHealth(vehicle, Speedo_HP);
			new txt[128];
			if(Speedo_HP >= 990){format(txt, sizeof(txt),"~b~------------");}
			else if(Speedo_HP >= 959){format(txt, sizeof(txt),"~b~-----------~r~~h~-");}
  			else if(Speedo_HP >= 900){format(txt, sizeof(txt),"~b~----------~r~~h~--");}
  			else if(Speedo_HP >= 860){format(txt, sizeof(txt),"~b~---------~r~~h~---");}
  			else if(Speedo_HP >= 820){format(txt, sizeof(txt),"~b~-------~r~~h~---");}
  			else if(Speedo_HP >= 750){format(txt, sizeof(txt),"~b~------~r~~h~---");}
   			else if(Speedo_HP >= 650){format(txt, sizeof(txt),"~b~---~r~~h~---");}
   			else if(Speedo_HP >= 560){format(txt, sizeof(txt),"~b~-~r~~h~----");}
   			else if(Speedo_HP >= 460){format(txt, sizeof(txt),"~r~~h~-----");}
			else if(Speedo_HP >= 350){format(txt, sizeof(txt),"~r~~h~----");}
			else if(Speedo_HP >= 250){format(txt, sizeof(txt),"~r~~h~---");}
 			else if(Speedo_HP >= 245){format(txt, sizeof(txt),"~r~~h~--");}
 			else if(Speedo_HP >= 241){format(txt, sizeof(txt),"~r~~h~-");}
			else if(Speedo_HP >= 2){format(txt, sizeof(txt),"~r~sai ~y~sai ~r~sai");}
   			format(string,sizeof(string),"%s" ,veehName[GetVehicleModel(vehicle)-400]);
			TextDrawSetString(nomeveiculo[i], string);
			format(string,sizeof(string),"~g~~h~~h~Chave:~g~ %s~n~~g~~h~~h~Velocidade:~w~ %d KM/h~n~~g~~h~~h~Combustivel: ~W~%d%%~n~~g~~h~~h~Lataria: ~r~%s~n~~g~~h~~h~Local:~w~ %s~n~~g~~h~~h~Altitude:~w~ %.1f",
			AbertoFechado(vehicle), GetSpeedKM(i), Gas[vehicle],txt, ReturnPlayerZone(i), PosZ);
			TextDrawSetString(Speed[i], string);
			if(TextShow[i] == false)
			{
				TextDrawShowForPlayer(i, Speed[i]);
				TextDrawShowForPlayer(i, nomeveiculo[i]);
				TextShow[i] = true;
			}
		}
  		else
		{
  			if(TextShow[i] == true)
		   	{
			   	TextDrawHideForPlayer(i, Speed[i]);
			   	TextDrawHideForPlayer(i, nomeveiculo[i]);
				TextShow[i] = false;
			}
		}
	}
}

public RemoveRoadblock(playerid)
{
	DestroyObject(pRoadblock[playerid]);
	pRoadblock[playerid] = 0;
}

forward RemoveRoadblock2(playerid);
public RemoveRoadblock2(playerid)
{
	DestroyObject(pRoadblock2[playerid]);
	pRoadblock2[playerid] = 0;
}

public RemoveRoadPregos(playerid)
{
	SpikeInfo[playerid][sCreated]=0;
    SpikeInfo[playerid][sX]=0.0;
    SpikeInfo[playerid][sY]=0.0;
    SpikeInfo[playerid][sZ]=0.0;
    DestroyObject(SpikeInfo[playerid][sObject]);
}
public RemoveRoadCones(playerid)
{
	DestroyObject(pRoadCones[playerid]);
	pRoadCones[playerid] = 0;
}

public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return true;
}
public NRouco(playerid)
{
	Rouco[playerid] = 0;
	//SendClientMessage(playerid, CINZA, "Agora você já pode gritar novamente.");
}
public NSemAn(playerid)
{
	SemAn[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora você já usar o /an.");
}
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
                    if(IsACop(playerid))
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado automaticamente.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você ainda não pediu reforço.");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não é COP");
			}
		}
	}
	return true;
}

forward OnplayerAtualizador();
public OnplayerAtualizador()
{
	if(AnuncioMandado > 0)
	{
	    AnuncioMandado --;
	}
	new string[256];
    for(new playerid=0; playerid<MAX_PLAYERS; playerid++)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(TempoAn[playerid] > 0){TempoAn[playerid] --;}
	        if(PlayerInfo[playerid][pTimeVIP] >=1)
	        {
	            PlayerInfo[playerid][pTimeVIP] -=1;
			}
   			if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) >= 1)
	        {
	            SetPlayerVirtualWorld(playerid, 0);
	            SendClientMessage(playerid, COLOR_WHITE, "Virtual World mudado para: 0.");
			}
   			if(PlayerInfo[playerid][pVIP] == 1 && PlayerInfo[playerid][pTimeVIP] >= 2 && PlayerInfo[playerid][pTimeVIP] <= 5)
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "[VIP TEST] O tempo do seu VIP de Teste acabou, caso queira comprar um VIP ou VIP-POWER fale com um admin!");
	            PlayerInfo[playerid][pVIP] = 0;
	            PlayerInfo[playerid][pTimeVIP] = 0;
			}
			if(gPlayerLogged[playerid] == 0 && JaDeslogado[playerid] == 0)
			{
				SetPlayerCameraPos( playerid, -2864.7883, 264.9134, 23.1133 );
				SetPlayerCameraLookAt( playerid, -2864.4394, 254.9195, 20.8638 );
				XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -2870.0090,272.1401,5.6831);
				SetPlayerInterior(playerid, 0);
				JaDeslogado[playerid] = 1;
				SetTimerEx("LokAT1", 6000, 0, "i", playerid);
			}
	    	if(GetPlayerOrg(playerid) == 3 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 15 || GetPlayerOrg(playerid) == 23)
	    	{
		    	if(TendoGuerra >= 1 && IsPlayerInGuerra(playerid) && EmGuerra[playerid] == 0)
		    	{
				  	format(string, sizeof(string), "* %s entrou na Guerra!",PlayerName(playerid));
				  	SendFamilyMessage(3,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(6,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(15,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(23,GetPlayerColor(playerid), string);
				  	EmGuerra[playerid] = 1;
		  		}
		  		if(!IsPlayerInGuerra(playerid) && EmGuerra[playerid] == 1 && TendoGuerra >= 1)
		  		{
				  	format(string, sizeof(string), "* %s saiu da Guerra!",PlayerName(playerid));
				  	SendFamilyMessage(3,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(6,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(15,GetPlayerColor(playerid), string);
				  	SendFamilyMessage(23,GetPlayerColor(playerid), string);
				  	EmGuerra[playerid] = 0;
				}
			}
		}
	}
	return 1;
}

forward CheckOuros(playerid);
public CheckOuros(playerid) 
{
	if(PlayerInfo[playerid][pConta] > 999999999)
	{
		PlayerInfo[playerid][pConta] -= 500000;
	   	PlayerInfo[playerid][pOuros] += 5;
	   	if(IniciouOuros[playerid] == 0)
	   	{
	   		SendClientMessage(playerid,COLOR_WHITE,"Você está com mais de 1kkk em sua conta bancária, e iniciou uma conversão do resto para OUROS!");
	   		IniciouOuros[playerid] = 1;
		}
	}
	if(PlayerInfo[playerid][pConta] < 999990999)
	{
 		if(TerminouOuros[playerid] == 0)
   		{
			SendClientMessage(playerid,COLOR_WHITE,"A conversão do seu dinheiro no banco acima de 1kkk para OUROS terminou. USE: /ajudaouros");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Tome cuidado para que seu dinheiro no banco fique abaixo de 1kkk(R$1000000000) evitando BUGs.");
            TerminouOuros[playerid] = 1;
	   		ComecouConversao[playerid] = 0;
	   		KillTimer(TempoCheckOuros[playerid]);
		}
	}
	return true;
}

forward CheckCashOuros(playerid);
public CheckCashOuros(playerid)
{
	if(GetPlayerMoney(playerid) > 9999998)
	{
		GivePlayerMoney(playerid, -100000);
	   	PlayerInfo[playerid][pOuros] += 1;
	   	if(IniciouOuros2[playerid] == 0)
	   	{
	   		SendClientMessage(playerid,COLOR_WHITE,"Você está com mais de 10kk(R$10000000) em mãos, e iniciou uma conversão do resto para OUROS!");
	   		IniciouOuros2[playerid] = 1;
		}
	}
	if(GetPlayerMoney(playerid) < 9999999)
	{
 		if(TerminouOuros2[playerid] == 0)
   		{
			SendClientMessage(playerid,COLOR_WHITE,"A conversão do seu dinheiro em mãos acima de 10kk para OUROS terminou. USE: /ajudaouros");
			SendClientMessage(playerid,COLOR_DBLUE,"Tome cuidado para que seu dinheiro fique abaixo de 10kk(R$10000000) evitando BUGs.");
            TerminouOuros2[playerid] = 1;
	   		ComecouConversao2[playerid] = 0;
	   		KillTimer(TempoCheckOuros2[playerid]);
		}
	}
	return true;
}

forward ComecarTeste(playerid);
public ComecarTeste(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 1)
		{
			InterpolateCameraPos( playerid, 1598.8182, -1637.9543, 50.3271, 1554.7772, -1429.8458, 66.1092, 5000, 2 );
			InterpolateCameraLookAt( playerid, 1596.9101, -1628.1380, 50.3271, 1553.9407, -1425.5426, 75.0971, 4000, 2 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1550.8790,-1367.2607,326.2109);
			SetPlayerInterior(playerid, 0);
			SetTimerEx("ComecarTeste2", 7000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}

forward ComecarTeste2(playerid);
public ComecarTeste2(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 1)
		{
			InterpolateCameraPos( playerid, 1554.7772, -1429.8458, 66.1092, 1549.2174, -1398.8680, 346.3618, 5000, 2 );
			InterpolateCameraLookAt( playerid, 1553.9407, -1425.5426, 75.0971, 1548.7392, -1389.7451, 342.2945, 2000, 2 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1550.8790,-1367.2607,326.2109);
			SetPlayerInterior(playerid, 0);
			SetTimerEx("ComecarTeste3", 7000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}

forward ComecarTeste3(playerid);
public ComecarTeste3(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 1)
		{
			//InterpolateCameraPos( playerid, 1554.7772, -1429.8458, 66.1092, 1549.2174, -1398.8680, 346.3618, 5000, 2 );
			InterpolateCameraLookAt( playerid, 1553.9407, -1425.5426, 75.0971, 1548.7392, -1389.7451, 342.2945, 2000, 2 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1550.8790,-1367.2607,326.2109);
			SetPlayerInterior(playerid, 0);
			//SetTimerEx("ComecarTeste3", 7000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}

forward LokAT1(playerid);
public LokAT1(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 0)
		{
			SetPlayerCameraPos( playerid, -479.4739, -1238.5825, 69.1975 );
			SetPlayerCameraLookAt( playerid, -484.9203, -1230.1958, 69.0230 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -479.4780,-1238.5778,39.4773);
			SetPlayerInterior(playerid, 0);
			SetTimerEx("LokAT2", 6000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}
forward LokAT2(playerid);
public LokAT2(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 0)
		{
			SetPlayerCameraPos( playerid, 1956.0638, 1041.4858, 996.3739 );
			SetPlayerCameraLookAt( playerid, 1955.8892, 1031.4873, 995.5023 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 1948.2075,1057.3823,992.4688);
			SetPlayerInterior(playerid, 10);
			SetTimerEx("LokAT3", 6000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}
forward LokAT3(playerid);
public LokAT3(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 0)
		{
			SetPlayerCameraPos( playerid, -1473.2468, 1585.3212, 1070.6850 );
			SetPlayerCameraLookAt( playerid, -1464.8601, 1590.7677, 1068.4355 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1452.4221,1572.5371,1052.8672);
			SetPlayerInterior(playerid, 14);
			SetTimerEx("LokAT4", 6000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}
forward LokAT4(playerid);
public LokAT4(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 0)
		{
			SetPlayerCameraPos( playerid, -1261.7541, -763.4592, 74.1716 );
			SetPlayerCameraLookAt( playerid, -1252.4183, -767.0429, 74.1716 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1261.4094,-733.8577,62.3099);
			SetPlayerInterior(playerid, 0);
			SetTimerEx("LokAT5", 6000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}
forward LokAT5(playerid);
public LokAT5(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		if(gPlayerLogged[playerid] == 0)
		{
			SetPlayerCameraPos( playerid, -1446.7105, 583.0897, 47.4673 );
			SetPlayerCameraLookAt( playerid, -1439.7640, 590.2832, 45.9029 );
			XXAirBreak[playerid] += 3;SetPlayerPos(playerid, -1469.7009,601.2968,32.2316);
			SetPlayerInterior(playerid, 0);
			SetTimerEx("LokAT1", 6000, 0, "i", playerid);
			return true;
		}
	}
	return true;
}

//=========================[ INVENTEI LEGAL ] ========================
forward TutorialPrefeitura(playerid);
public TutorialPrefeitura(playerid)
{
    new string[128];
    Controle(playerid, 0);
    XXAirBreak[playerid] += 3;SetPlayerPos(playerid, 373.9333,173.8072,1008.3893);
    SetPlayerFacingAngle(playerid, 91.5542);
    InterpolateCameraPos(playerid, 383.7950, 173.5158, 1010.2344, 363.9908, 173.3602, 1008.9827, 4000, CAMERA_MOVE);
    InterpolateCameraLookAt(playerid, 373.8710, 174.3841, 1009.3629,    354.2465, 174.2127, 1006.9036, 100, CAMERA_MOVE);
	format(string, sizeof(string), "Olá %s, você pode adquirir um emprego apertando 'F' neste Icone!", PlayerName(playerid));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	GameTextForPlayer(playerid, "~w~Menu ~n~~g~Empregos", 5000, 1);
	SetTimerEx("TutorialPrefeitura3", 7000, 0, "i", playerid);
	return true;
}

forward TutorialPrefeitura2(playerid);
public TutorialPrefeitura2(playerid)
{
    new string[128];
    InterpolateCameraPos(playerid, 363.9908, 173.3602, 1008.9827,   361.4045, 178.8649, 1008.9827, 3000, CAMERA_MOVE);
    InterpolateCameraLookAt(playerid, 354.2465, 174.2127, 1006.9036, 352.8537, 184.0027, 1008.2852, 2000, CAMERA_MOVE);
	format(string, sizeof(string), "Você também pode mudar sua origem neste Icone.");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	GameTextForPlayer(playerid, "~w~Menu ~n~~g~Origem", 5000, 1);
	SetTimerEx("TutorialPrefeitura3", 7000, 0, "i", playerid);
	return true;
}

forward TutorialPrefeitura3(playerid);
public TutorialPrefeitura3(playerid)
{
    new string[128];
    InterpolateCameraPos(playerid, 361.4045, 178.8649, 1008.9827,   363.5048, 169.0652, 1008.9827, 4000, CAMERA_MOVE);
    InterpolateCameraLookAt(playerid, 352.8537, 184.0027, 1008.2852, 354.2330, 172.8112, 1007.7640, 2000, CAMERA_MOVE);
	format(string, sizeof(string), "Você também pode comprar todas as suas licenças neste Icone.");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	GameTextForPlayer(playerid, "~w~Menu ~n~~g~Licencas", 5000, 1);
	SetTimerEx("TutorialPrefeitura4", 7000, 0, "i", playerid);
	return true;
}

forward TutorialPrefeitura4(playerid);
public TutorialPrefeitura4(playerid)
{
    new string[128];
    Controle(playerid, 1);
	format(string, sizeof(string), "Se você tiver duvidas USE: /duvida que algum helper ajudará você!");
	SendClientMessage(playerid, COLOR_WHITE, string);
	SetCameraBehindPlayer(playerid);
	return true;
}
//============================================================
//======== tops ===========
forward MostrandoKills(playerid);
public MostrandoKills(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopKills1))
	{
		format(string, sizeof(string), "*** Top Kills: ( %s ) total de mortes: [%d]", PlayerName(NomeTopKills1),KillsTop1);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "*** Top Kills: [Ninguem] total de mortes: [nenhuma]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top crimes...");
	SetTimerEx("MostrandoCrimes", 3000, 0, "i", playerid);
	return true;
}

forward MostrandoCrimes(playerid);
public MostrandoCrimes(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopCrimes))
	{
		format(string, sizeof(string), "*** Top Crimes: ( %s )  Crimes cometidos: [%d]", PlayerName(NomeTopCrimes),CrimesTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
 	}
 	else
 	{
  		SendClientMessage(playerid, COLOR_WHITE, "*** Top Crimes: [Ninguem] Crimes cometidos: [nenhum]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top nivel...");
	SetTimerEx("MostrandoNivel", 3000, 0, "i", playerid);
	return true;
}
forward MostrandoNivel(playerid);
public MostrandoNivel(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopNivel))
	{
		format(string, sizeof(string), "*** Top Nivel: ( %s ) Nivel: [%d]", PlayerName(NomeTopNivel),NivelTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "*** Top Nivel: [Ninguem] Nivel: [nenhum]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top noob...");
	SetTimerEx("MostrandoNoob", 3000, 0, "i", playerid);
	return true;
}
forward MostrandoNoob(playerid);
public MostrandoNoob(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopNoob))
	{
		format(string, sizeof(string), "*** Top Noob: ( %s ) Vezes que morreu: [%d]", PlayerName(NomeTopNoob),NoobTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "*** Top Noob: [Ninguem] Vezes que morreu: [nenhuma]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top grana...");
	SetTimerEx("MostrandoGrana", 3000, 0, "i", playerid);
	return true;
}
forward MostrandoGrana(playerid);
public MostrandoGrana(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopGrana))
	{
		format(string, sizeof(string), "*** Top Grana: ( %s ) Conta bancaria: [R$%d]", PlayerName(NomeTopGrana),GranaTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "*** Top Grana: [Ninguem] Conta bancaria: [nada]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top maior peixe...");
	SetTimerEx("MostrandoHoras", 3000, 0, "i", playerid);
	return true;
}


forward MostrandoHoras(playerid);
public MostrandoHoras(playerid)
{
    new string[128];
	if(IsPlayerConnected(NomeTopHoras))
	{
		format(string, sizeof(string), "*** Top Horas Jogadas: ( %s ) Horas jogadas: [%d horas]", PlayerName(NomeTopHoras),HorasTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
 	}
 	else
 	{
 	    SendClientMessage(playerid, COLOR_WHITE, "*** Top Horas jogadas: [Ninguem] Horas jogadas: [nenhuma]");
	}
	//SendClientMessage(playerid, COLOR_YELLOW, "carregando top respeito...");
	SetTimerEx("MostrandoRespeito", 3000, 0, "i", playerid);
	return true;
}
forward MostrandoRespeito(playerid);
public MostrandoRespeito(playerid)
{
	new string[128];
	if(IsPlayerConnected(NomeTopRespeito))
	{
		format(string, sizeof(string), "*** Top Respeito: ( %s ) Respeito: [%d]", PlayerName(NomeTopRespeito),RespeitoTop);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "*** Top Respeito: [Ninguem] Respeito: [nenhum]");
	}
	SendClientMessage(playerid, COLOR_YELLOW, "Estes são os TOPs online no momento, Bom jogo!");
	return true;
}

forward AtualizarTops();
public AtualizarTops()
{
    SendClientMessageToAll(COLOR_YELLOW, "Lista dos TOPs online foi atualizada! veja se você está nela, USE: /tops.");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        CheckTopS(i);
		}
	}
	return true;
}

/*forward CheckAmmo(playerid);
public CheckAmmo(playerid)
{
	new string[128];
	new Cuidado;
	new arma = GetPlayerWeapon(playerid);
    Cuidado = GetPlayerAmmo(playerid);
    new keys,ud,lr;
    GetPlayerKeys(playerid,keys,ud,lr);
    if (keys & KEY_FIRE && arma == 24 && Cuidado == AXiterMunicaoEagle[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 25 && Cuidado == AXiterMunicaoShot[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 23 && Cuidado == AXiterMunicaoSilencer[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 17 && Cuidado == AXiterMunicaoGas[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 16 && Cuidado == AXiterMunicaoGranada[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 29 && Cuidado == AXiterMunicaoMP5[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 30 && Cuidado == AXiterMunicaoAK[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 31 && Cuidado == AXiterMunicaoM4[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 33 && Cuidado == AXiterMunicaoRifle[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if (keys & KEY_FIRE && arma == 34 && Cuidado == AXiterMunicaoSniper[playerid])
    {
		if(GetPlayerWeaponState(playerid) == WEAPONSTATE_RELOADING || GetPlayerWeaponState(playerid) == WEAPONSTATE_UNKNOWN)
       	{
      	 	return true;
		}
    	format(string, sizeof(string), "AdmCmd: %s[ID %d] pode estar usando um xiter de munição infinita, verifique isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
		XitersLog(string);
    }
    if(arma == 24){AXiterMunicaoEagle[playerid] = Cuidado;}
    if(arma == 25){AXiterMunicaoShot[playerid] = Cuidado;}
    if(arma == 23){AXiterMunicaoSilencer[playerid] = Cuidado;}
    if(arma == 17){AXiterMunicaoGas[playerid] = Cuidado;}
    if(arma == 16){AXiterMunicaoGranada[playerid] = Cuidado;}
    if(arma == 29){AXiterMunicaoMP5[playerid] = Cuidado;}
    if(arma == 30){AXiterMunicaoAK[playerid] = Cuidado;}
    if(arma == 31){AXiterMunicaoM4[playerid] = Cuidado;}
    if(arma == 33){AXiterMunicaoRifle[playerid] = Cuidado;}
    if(arma == 34){AXiterMunicaoSniper[playerid] = Cuidado;}
    if(arma == 41){AXiterMunicaoSpray[playerid] = Cuidado;}
    return true;
}
*/

forward CheckTudo(playerid);
public CheckTudo(playerid)
{
   	if(XXAirBreak[playerid] >= 1)
	{
	    XXAirBreak[playerid] -= 1;
	}
	new string[125];
	new Float:xiter_colete;
	GetPlayerArmour(playerid,xiter_colete);
    new keys,ud,lr;
    GetPlayerKeys(playerid,keys,ud,lr);
	if(Suspect2[playerid] >= 1)
	{
	    Suspect2[playerid] -= 1;
	}
	if(xiter_colete > 95 && VidaDoCara[playerid] == 1)
	{
	   	format(string, sizeof(string), "O Player %s [ID: %d] pode estar usando um xiter para ganhar colete, observe isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(0xFF8282AA2,string,1);
		XitersLog(string);
		Suspect2[playerid] = 2;
		SetPlayerArmour(playerid,0);
	}
 	if(xiter_colete < 10)
	{
		VidaDoCara[playerid] = 1;
	}
	if(xiter_colete > 9 && Suspect2[playerid] == 0)
	{
		VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	}
	new Float:Viida;
    GetPlayerHealth(playerid,Viida);
    if(XXAirBreak[playerid] > 5)
    {
        XXAirBreak[playerid] = 5;
    }
	if(Viida > 100 && admtrampando[playerid] == 0 && helpertrampando[playerid] == 0)
	{
	    SetPlayerHealth(playerid, 100);
	}
	if(admtrampando[playerid] == 1)
	{
	    SetPlayerHealth(playerid, 99999);
	}
	if(PlayerInfo[playerid][pConta] > 999999999 && ComecouConversao[playerid] == 0)
	{
		TempoCheckOuros[playerid] = SetTimerEx("CheckOuros", 1000, 1, "i", playerid);
		ComecouConversao[playerid] = 1;
		IniciouOuros[playerid] = 0;
		TerminouOuros[playerid] = 0;
	}
	if(GetPlayerMoney(playerid) > 9999999 && ComecouConversao2[playerid] == 0)
	{
		TempoCheckOuros2[playerid] = SetTimerEx("CheckCashOuros", 1000, 1, "i", playerid);
		ComecouConversao2[playerid] = 1;
		IniciouOuros2[playerid] = 0;
		TerminouOuros2[playerid] = 0;
	}
	if(PlayerInfo[playerid][pConnectTime] < 1 && gPlayerLogged[playerid] == 1)
	{
		if(GetPlayerWeapon(playerid) > 1)
		{
  			ResetPlayerWeaponsBPH(playerid);
     		ResetPlayerWeaponsBPH(playerid);
			SendClientMessage(playerid,COLOR_WHITE,"[ERRO] Você só pode pegar armas com mais de 1 hora jogada, suas armas foram retiradas!");
			return true;
		}
	}
	return true;
}

forward CheckColete(playerid);
public CheckColete(playerid)
{
	new string[128];
	new Float:xiter_colete;
	if(Suspect2[playerid] >= 1)
	{
	    Suspect2[playerid] -= 1;
	}
	GetPlayerArmour(playerid,xiter_colete);
	if(xiter_colete > 95 && VidaDoCara[playerid] == 1)
	{
	   	format(string, sizeof(string), "O Player %s [ID: %d] pode estar usando um xiter para ganhar colete, observe isto com cuidado!", PlayerName(playerid),playerid);
		ABroadCast(0xFF8282AA2,string,1);
		Suspect2[playerid] = 2;
		XitersLog(string);
		SetPlayerArmour(playerid,0);
	}
 	if(xiter_colete < 10)
	{
		VidaDoCara[playerid] = 1;
	}
	if(xiter_colete > 9 && Suspect2[playerid] == 0)
	{
		VidaDoCara[playerid] = 2; AXITERCOLETE[playerid] = 3;
	}
	return true;
}

forward CheckFome(playerid);
public CheckFome(playerid)
{
	if(TerFome == 0)
	{
	    return true;
 	}
    new Float:Viida;
    if(PlayerInfo[playerid][pVIP] >= 1)
    {
        return 1;
	}
    GetPlayerHealth(playerid,Viida);
	if(PlayerInfo[playerid][pFome] >= 1)
	{
		PlayerInfo[playerid][pFome] -= 1;
	}
	if(PlayerInfo[playerid][pFome] == 10)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está começando a ficar com fome, procure uma pizzaria mais proxima para se alimentar.");
	}
	if(PlayerInfo[playerid][pFome] == 9)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está com fome e perdeu -1 de vida! procure uma pizzaria mais proxima!.");
        SetPlayerHealth(playerid,Viida - 1);
	}
	if(PlayerInfo[playerid][pFome] == 8 || PlayerInfo[playerid][pFome] == 7)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está com fome e perdeu -1 de vida! procure uma pizzaria mais proxima!.");
        SetPlayerHealth(playerid,Viida -1);
	}
	if(PlayerInfo[playerid][pFome] == 6 || PlayerInfo[playerid][pFome] == 5)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está com fome e perdeu -2 de vida! procure uma pizzaria mais proxima!.");
        SetPlayerHealth(playerid,Viida -2);
	}
	if(PlayerInfo[playerid][pFome] == 4 || PlayerInfo[playerid][pFome] == 3)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está com bastante fome e perdeu -4 de vida! procure uma pizzaria mais proxima para se alimentar!.");
        SetPlayerHealth(playerid,Viida -4);
	}
	if(PlayerInfo[playerid][pFome] == 2 || PlayerInfo[playerid][pFome] == 1)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está com muita fome e perdeu -6 de vida! vá até uma pizzaria e se alimente rapido!.");
        SetPlayerHealth(playerid,Viida -6);
	}
	if(PlayerInfo[playerid][pFome] == 0)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"* Você está morrendo de fome e perdeu -10 de vida! se alimente em uma pizzaria de pressa!.");
        SetPlayerHealth(playerid,Viida - 10);
	}
	return true;
}

public CheckHack()
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	   	if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && !IsPlayerNPC(i) && spawnado[i] > 0)
	   	{
    		if(XXAirBreak[i] >= 1)
			{
	    		XXAirBreak[i] -= 1;
			}
     		if(GetPlayerWeapon(i) > 0 && XiterArma[i] == 1)
			{
			    MostrarTextXiter(i);
	    		GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] poderá estar usando um xiter para adquirir armas, observe isto!", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				ResetPlayerWeaponsBPH(i);
				XitersLog(string);
			}
			// Lança cGIA
			if(GetPlayerWeapon(i) == 37 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando um Lança Chamas /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
			// Visão Noturna
			else if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && PlayerInfo[i][pAdmin] < 1337)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando um JetPack /tv nele rapido!", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
			else if(GetPlayerWeapon(i) == 44 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Visão Noturna /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
// Visão de Calor
			else if(GetPlayerWeapon(i) == 45 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Visão de Calor /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
//Serra Eletrica
			else if(GetPlayerWeapon(i) == 9 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Serra Eletrica /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
//Sawn-off
			else if(GetPlayerWeapon(i) == 26 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Sawn-off /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
//Molotov
			else if(GetPlayerWeapon(i) == 18 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando um Molotov /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
//Micro Uzi
			else if(GetPlayerWeapon(i) == 28 && PlayerInfo[i][pAdmin] < 3001)
  			{
  			    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Micro Uzi /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				//ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
//Bazooca
			else if(GetPlayerWeapon(i) == 36 && PlayerInfo[i][pAdmin] < 3001)
		   	{
		   	    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Bazooca  /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
			else if(GetPlayerWeapon(i) == 38 && PlayerInfo[i][pAdmin] < 3001)
		   	{
		   	    MostrarTextXiter(i);
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AdmCmd: %s[ID %d] está usando uma Minigum  /tv nele rapido", giveplayer,i);
				ABroadCast(0xFF8282AA2,string,1);
				XitersLog(string);
				XXAirBreak[i] += 3;SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				ResetPlayerWeaponsBPH(i);
				SetPlayerArmedWeapon(i, 0);
			}
    	}
	}
	return true;
}
public GuerraEstacao(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Groove Street dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(TEAM_GROVE_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 14;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está na Estacao unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			  	if(donoestacao != GetPlayerOrg(playerid))
			    {
	                format(string, sizeof(string), "%s e os PCC dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(COR_PCC, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 21;
				KillTimer(TempoGuerraEstacao);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COR_PCC, "Você não está na Estacao unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Comando Vermelho dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(COR_CVSF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COR_CVSF);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 19;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_CVSF, "Você não está na Estacao Unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Vagos dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(TEAM_VAGOS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 18;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você não está na Estacão unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Los Aztecas dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(TEAM_AZTECAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 5;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Você não está na Estacao Unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
 			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Ballas dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(TEAM_BALLAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 17;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Você não está na Estacao Unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Rotam dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(COR_BOPE, string);
				}
				SendClientMessage(playerid, COR_BOPE, "Você dominou a Estacão Unity, mantenha a posição.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 2;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está na Estacao Unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Militar dominaram o territorio da Estacão Unity",playername);
					OOCLosSantos(COR_PM, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a estacão Unity, mantenha a posição.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 1;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está na Estacao Unity.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
 			    if(donoestacao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a PF dominaram o territorio da Estação Unity",playername);
					OOCLosSantos(COR_PF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Estacão Unity agora é sua..");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 11;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Você não está na estação.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}
	return true;
}

public GuerraCasarao(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Militar dominaram o territorio do casarão",playername);
					OOCLosSantos(COR_PM, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 1;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Rotam dominaram o territorio do casarão",playername);
					OOCLosSantos(COR_BOPE, string);
				}
				SendClientMessage(playerid, COR_BOPE, "Você dominou o Casarão, mantenha a posição.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 2;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Los Aztecas dominaram o territorio do casarão",playername);
					OOCLosSantos(TEAM_AZTECAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 5;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Vagos dominaram o territorio do casarão",playername);
					OOCLosSantos(TEAM_VAGOS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 18;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Ballas dominaam o territorio do casarão !",playername);
					OOCLosSantos(TEAM_BALLAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 17;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Comando Vermelho dominaram o territorio do casarão",playername);
					OOCLosSantos(COR_CVSF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COR_CVSF);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 19;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_CVSF, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Groove Street dominaram o territorio do casarão",playername);
					OOCLosSantos(TEAM_GROVE_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 14;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os PCC dominaram o territorio do casarão",playername);
					OOCLosSantos(COR_PCC, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 21;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Você não está no Casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donocasarao != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Federal dominaram o territorio do casarão",playername);
					OOCLosSantos(COR_PF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Casarão agora é seu.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 11;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Você não está no casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}
	return true;
}

//================ GUERRA Madd Dogg	 ===========================================================================
public GuerraAero(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Groove Street dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(TEAM_GROVE_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 14;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os PCC dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(COR_PCC, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 21;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Comando Vermelho dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(COR_CVSF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,COR_CVSF);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 19;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_CVSF, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Ballas dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(TEAM_BALLAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 17;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Vagos dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(TEAM_VAGOS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 18;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Los Aztecas dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(TEAM_AZTECAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "A Mansão do Madd Dogg agora é sua.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 5;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Rotam dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(COR_BOPE, string);
				}
				SendClientMessage(playerid, COR_BOPE, "Você dominou a Mansão do Madd Dogg, mantenha a posição.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 2;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Militar dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(COR_PM, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a Mansão do Madd Dogg, mantenha a posição.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 1;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInMaddDogg(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(GuerranoAero != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Rotam-SF dominaram o territorio da mansão do madd dogg",playername);
					OOCLosSantos(COR_PC, string);
				}
				SendClientMessage(playerid, COR_PC, "Você dominou a Mansão do Madd Dogg, mantenha a posição.");
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 16;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não sá na mansão do Madd Dogg.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMaddDogg);
				GangZoneShowForAll(GZMaddDogg, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	return true;
}

public GuerraMorro(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Groove Street dominaram o territorio do Morro",playername);
					OOCLosSantos(TEAM_GROVE_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 14;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os PCC dominaram o territorio do Morro",playername);
					OOCLosSantos(COR_PCC, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 99;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Comando Vermelho dominaram o territorio do Morro",playername);
					OOCLosSantos(COR_CVSF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,COR_CVSF);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 19;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_CVSF, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Ballas dominaram o territorio do Morro",playername);
					OOCLosSantos(TEAM_BALLAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 17;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Vagos dominaram o territorio do Morro",playername);
					OOCLosSantos(TEAM_VAGOS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 18;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Los Aztecas dominaram o territorio do Morro",playername);
					OOCLosSantos(TEAM_AZTECAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Morro agora é seu.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 5;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Rotam dominaram o territorio do Morro",playername);
					OOCLosSantos(COR_BOPE, string);
				}
				SendClientMessage(playerid, COR_BOPE, "Você dominou a Morro, mantenha a posição.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 2;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Militar dominaram o territorio do Morro",playername);
					OOCLosSantos(COR_PM, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a Morro, mantenha a posição.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 1;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoMorro[playerid] == 1)
		{
			if(IsPlayerInMorro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donomorro != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Rotam-SF dominaram o territorio do Morro",playername);
					OOCLosSantos(COR_PC, string);
				}
				SendClientMessage(playerid, COR_PC, "Você dominou a Morro, mantenha a posição.");
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 16;
				KillTimer(TempoGuerraMorro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está no Morro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZMorro);
				GangZoneShowForAll(GZMorro, 0xFFFFFF96);
				ProvocoMorro[playerid] = 0;
				GuerranoMorro = 0;
				donomorro = 0;
				KillTimer(TempoGuerraMorro);
				return true;
			}
		}
		return true;
	}
	return true;
}

public GuerraPark(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Groove Street dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(TEAM_GROVE_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 14;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os PCC dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(COR_PCC, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 21;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Comando Vermelho dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(COR_CVSF, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_CVSF);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 19;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_CVSF, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Ballas dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(TEAM_BALLAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 17;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Vagos dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(TEAM_VAGOS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 18;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e os Los Aztecas dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(TEAM_AZTECAS_COLOR, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "O Parque Gleen agora é seu.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 5;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e o Rotam dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(COR_BOPE, string);
				}
				SendClientMessage(playerid, COR_BOPE, "Você dominou o Parque Gleen, mantenha a posição.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 2;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Policia Militar dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(COR_PM, string);
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Parque Gleen, mantenha a posição.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 6;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    if(donopark != GetPlayerOrg(playerid))
			    {
                	format(string, sizeof(string), "%s e a Rotam-SF dominaram o territorio do Parque Gleen",playername);
					OOCLosSantos(COR_PC, string);
				}
				SendClientMessage(playerid, COR_PC, "Você dominou o Parque Gleen, mantenha a posição.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,CORGZ_COPS);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 16;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	return true;
}

public SBan(playerid, string[], string2[])
{
	new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(arquivo, sizeof(arquivo), "Banidos/%s.ini",PlayerName(playerid));
	getdate(Ano, Mes, Dia);
	format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
	gettime(Hora, Minuto, Segundo);
	format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
	format(gstring, 128, "[%d/%d/%d] [%d:%d:%d] %s IP:%s foi banido pelo admin %s, motivo: %s", v[2], v[1], v[0], v[3], v[4], v[5], PlayerName(playerid),
	ip, string2, string);
	SBanLog(gstring);
	if(DOF2_FileExists(arquivo))
	{
		Kick(playerid);
	}
	else
	{
		DOF2_CreateFile(arquivo);
		DOF2_SetString(arquivo,"Motivo",string);
		DOF2_SetString(arquivo,"Admin",string2);
		DOF2_SetString(arquivo,"Data",tmp);
		DOF2_SetString(arquivo,"Hora",tmp2);
		DOF2_SaveFile();

		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		DOF2_CreateFile(stri);
		DOF2_SetString(stri,"Motivo",string);
		DOF2_SetString(stri,"Admin",string2);
		DOF2_SetString(stri,"Data",tmp);
		DOF2_SetString(stri,"Hora",tmp2);
		DOF2_SetString(stri,"Nick",PlayerName(playerid));
		DOF2_SaveFile();
		Kick(playerid);
	}
	return true;
}

forward BanTemp(playerid, string[], string2[]);
public BanTemp(playerid, string[], string2[])
{
	new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
	new tMinuto[20], tSegundo[20], tHora[20], tDia[20], tMes[20], tAno[20];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(arquivo, sizeof(arquivo), "BanidosTemp/%s.ini",PlayerName(playerid));
	getdate(Ano, Mes, Dia);
	format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
	gettime(Hora, Minuto, Segundo);
	format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
	
	format(tHora, 20, "%d", Hora);
	format(tMinuto, 20, "%d", Minuto);
	format(tSegundo, 20, "%d", Segundo);
	
	format(tDia, 20, "%d", PlayerInfo[playerid][pDiaBanTemp]);
	format(tMes, 20, "%d", PlayerInfo[playerid][pMesBanTemp]);
	format(tAno, 20, "%d", PlayerInfo[playerid][pAnoBanTemp]);
	if(DOF2_FileExists(arquivo))
	{
		Kick(playerid);
	}
	else
	{
		DOF2_CreateFile(arquivo);
		DOF2_SetString(arquivo,"Motivo",string);
		DOF2_SetString(arquivo,"Admin",string2);
		DOF2_SetString(arquivo,"Data",tmp);
		DOF2_SetString(arquivo,"Hora",tmp2);
		DOF2_SetString(arquivo,"DiaBanTemp",tDia);
		DOF2_SetString(arquivo,"MesBanTemp",tMes);
		DOF2_SetString(arquivo,"AnoBanTemp",tAno);
		DOF2_SetString(arquivo,"HoraBanTemp",tHora);
		DOF2_SetString(arquivo,"MinutoBanTemp",tMinuto);
		DOF2_SetString(arquivo,"SegundoBanTemp",tSegundo);
		DOF2_SaveFile();
		
		format(stri, sizeof(stri), "IPsBanidosTemp/%s.ini",ip);
		DOF2_CreateFile(stri);
		DOF2_SetString(stri,"Motivo",string);
		DOF2_SetString(stri,"Admin",string2);
		DOF2_SetString(stri,"Data",tmp);
		DOF2_SetString(stri,"Hora",tmp2);
		DOF2_SetString(stri,"Nick",PlayerName(playerid));
		
		DOF2_SetString(stri,"DiaBanTemp",tDia);
		DOF2_SetString(stri,"MesBanTemp",tMes);
		DOF2_SetString(stri,"AnoBanTemp",tAno);
		DOF2_SetString(stri,"HoraBanTemp",tHora);
		DOF2_SetString(stri,"MinutoBanTemp",tMinuto);
		DOF2_SetString(stri,"SegundoBanTemp",tSegundo);
		DOF2_SaveFile();
		Kick(playerid);
	}
	return true;
}

public LoginAgora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		logouagora[playerid] = 0;
		KillTimer(TempoLogin);
	}
}
public Corrida()
{
	if(pcorrida > 0)
	{
		pcorrida = 0;
	}
}
public CorridaOni()
{
	if(pcorridaoni > 0)
	{
		pcorridaoni = 0;
	}
}

public Sinc()
{
	if(psinc > 0)
	{
		psinc = 0;
	}
}

public Sequestrar()
{
	if(psequestrar > 0)
	{
		psequestrar = 0;
	}
}

public Amarrar()
{
	if(pamarrar > 0)
	{
		pamarrar = 0;
	}
}

public CheckOwnerb(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Empresas Com interiores
 			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i;
	        	    return true;
	        	}
			}
			// Empresas sem interiores
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i+100;
	        	    return true;
	        	}
			}
			PlayerInfo[playerid][pPbiskey] = 255;
			return true;
	}
	return true;
}

public CheckOwnerh(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Casas
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
		    new playername[MAX_PLAYER_NAME];
        	GetPlayerName(playerid,playername,sizeof(playername));
        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
        	{
        	    PlayerInfo[playerid][pPHousekey] = h;
        	    PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
        	    return true;
        	}
		}
		PlayerInfo[playerid][pPHousekey] = 500;
		return true;
	}
	return true;
}

public LoadCar()
{
	new arrCoords[14][64];
	new strFromFile2[256];
	new File: file = fopen("PlayHappy/Carros.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cDescription], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] = strval(arrCoords[9]);
			CarInfo[idx][cLicense] = strval(arrCoords[10]);
			CarInfo[idx][cOwned] = strval(arrCoords[11]);
			CarInfo[idx][cLock] = strval(arrCoords[12]);
			CarInfo[idx][cGrana] = strval(arrCoords[13]);
			CarInfo[idx][cID] = totalveiculosc+idx;
			//printf("Carro: %d Dono:%s[%d] LicensePlate %s ID[%d]",idx,CarInfo[idx][cOwner],CarInfo[idx][cOwned],CarInfo[idx][cLicense],CarInfo[idx][cID]);
			idx++;
		}
		printf("carros carregados", idx);
	}
	return true;
}

public SaveCars()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CarInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%s,%d,%d,%d\n",
		CarInfo[idx][cModel],
		CarInfo[idx][cLocationx],
		CarInfo[idx][cLocationy],
		CarInfo[idx][cLocationz],
		CarInfo[idx][cAngle],
		CarInfo[idx][cColorOne],
		CarInfo[idx][cColorTwo],
		CarInfo[idx][cOwner],
		CarInfo[idx][cDescription],
		CarInfo[idx][cValue],
		CarInfo[idx][cLicense],
		CarInfo[idx][cOwned],
		CarInfo[idx][cLock],
		CarInfo[idx][cGrana]);
		if(idx == 1)
		{
			file2 = fopen("PlayHappy/Carros.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayHappy/Carros.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}

public Checkprop()
{
	new olddate;
	new string[256];
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 5)
			{
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmorrx] = 0;
				HouseInfo[h][hArmorry] = 0;
				HouseInfo[h][hArmorrz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "O Estado", 0, strlen("O Estado"), 255);
				format(string, sizeof(string), "ATENÇÃO: Uma casa está disponível no valor de $%d",HouseInfo[h][hValue]);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				format(string, sizeof(string), "Info: Casa ID: %d foi liberada por inatividade do Dono.",h);
				pCasaLog(string);
                Atualizar3Dtexts();
			}
		}
	}
	OnPropUpdate();
	return 1;
}

public CheckOwner(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		// Veiculos
 		new var03=0;
	    for(new i = 1; i < sizeof(CarInfo); i++)
	    {
	        new playername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,playername,sizeof(playername));
	        if(strcmp(playername,CarInfo[i][cOwner],true)==0)
			{
			    if(PlayerInfo[playerid][pVeiculo] == 0)
			    {
	            	PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo] = i;
				}
				if(PlayerInfo[playerid][pVeiculo2] == 0 && PlayerInfo[playerid][pVeiculo] != i && PlayerInfo[playerid][pVeiculo3] != i && PlayerInfo[playerid][pVeiculo4] != i && PlayerInfo[playerid][pVeiculo5] != i)
			    {
	            	PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo2] = i;
				}
				if(PlayerInfo[playerid][pVeiculo3] == 0 && PlayerInfo[playerid][pVeiculo2] != i && PlayerInfo[playerid][pVeiculo] != i && PlayerInfo[playerid][pVeiculo4] != i && PlayerInfo[playerid][pVeiculo5] != i)
			    {
	            	PlayerInfo[playerid][pCarKey3] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo3] = i;
				}
				if(PlayerInfo[playerid][pVeiculo4] == 0 && PlayerInfo[playerid][pVeiculo] != i && PlayerInfo[playerid][pVeiculo2] != i && PlayerInfo[playerid][pVeiculo3] != i && PlayerInfo[playerid][pVeiculo5] != i)
			    {
	            	PlayerInfo[playerid][pCarKey4] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo4] = i;
				}
				if(PlayerInfo[playerid][pVeiculo5] == 0 && PlayerInfo[playerid][pVeiculo4] != i && PlayerInfo[playerid][pVeiculo3] != i && PlayerInfo[playerid][pVeiculo2] != i && PlayerInfo[playerid][pVeiculo] != i)
			    {
	            	PlayerInfo[playerid][pCarKey5] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo5] = i;
				}
				var03=1;
	        }
 		}
		if(var03 == 0)
		{
			PlayerInfo[playerid][pCarKey] = 0;
	    	PlayerInfo[playerid][pVeiculo] = 0;
	    	PlayerInfo[playerid][pCarKey2] = 0;
	    	PlayerInfo[playerid][pVeiculo2] = 0;
 	    	PlayerInfo[playerid][pCarKey3] = 0;
	    	PlayerInfo[playerid][pVeiculo3] = 0;
  	    	PlayerInfo[playerid][pCarKey4] = 0;
	    	PlayerInfo[playerid][pVeiculo4] = 0;
  	    	PlayerInfo[playerid][pCarKey5] = 0;
	    	PlayerInfo[playerid][pVeiculo5] = 0;
   		}
	}
	return true;
}
//==========
forward SalarioPlayer(playerid);
public SalarioPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
       	if(PlayerInfo[playerid][pCargo] == 1)
		{
  			new org = GetPlayerOrg(playerid);
  			if(CofreOrg[org][salarioc1] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua organização não tem salario definido, peça para um Lider ou SUB definir.");
      			return 1;
			}
	    	if(CofreOrg[org][Dinheiro] < CofreOrg[org][salarioc1])
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
      			return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salarioc1]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salarioc1];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salarioc1]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salarioc1]);
		}
		if(PlayerInfo[playerid][pCargo] == 2)
		{
  			new org = GetPlayerOrg(playerid);
  			if(CofreOrg[org][salarioc2] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não tem salario definido para seu Cargo, peça para um Lider ou SUB definir.");
      			return 1;
			}
	    	if(CofreOrg[org][Dinheiro] < CofreOrg[org][salarioc2])
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
      			return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salarioc2]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salarioc2];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salarioc2]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salarioc2]);
		}
		if(PlayerInfo[playerid][pCargo] == 3)
		{
		    new org = GetPlayerOrg(playerid);
		    if(CofreOrg[org][salarioc3] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não tem salario definido para seu Cargo, peça para um Lider ou SUB definir.");
      			return 1;
			}
		    if(CofreOrg[org][Dinheiro] < CofreOrg[org][salarioc3])
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
		        return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salarioc3]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salarioc3];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salarioc3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salarioc3]);
		}
		if(PlayerInfo[playerid][pCargo] == 4)
		{
		    new org = GetPlayerOrg(playerid);
		    if(CofreOrg[org][salarioc4] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não tem salario definido para seu Cargo, peça para um Lider ou SUB definir.");
      			return 1;
			}
		    if(CofreOrg[org][Dinheiro] < CofreOrg[org][salarioc4])
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
		        return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salarioc4]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salarioc4];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salarioc4]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salarioc4]);
		}
		if(PlayerInfo[playerid][pCargo] == 5 || PlayerInfo[playerid][pCargo] == 100 || PlayerInfo[playerid][pCargo] == 200)
		{
		    new org = GetPlayerOrg(playerid);
		    if(CofreOrg[org][salarioc5] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não tem salario definido para seu Cargo, peça para um Lider ou SUB definir.");
      			return 1;
			}
		    if(CofreOrg[org][Dinheiro] < CofreOrg[org][salarioc5])
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
		        return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salarioc5]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salarioc5];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salarioc2]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salarioc5]);
		}
		if(PlayerInfo[playerid][pCargo] == 6)
		{
		    new org = GetPlayerOrg(playerid);
		    if(CofreOrg[org][salariolider] == 0)
		    {
      			SendClientMessage(playerid, COLOR_LIGHTRED, "Sua organização não tem salario para Lider, Defina no Infoorg da sua HQ");
      			return 1;
			}
		    if(CofreOrg[org][Dinheiro] < CofreOrg[org][salariolider])
		    {
	     		SendClientMessage(playerid, COLOR_LIGHTRED, "Sua org não pode pagar o seu salario neste PayDay");
			    return 1;
			}
			GivePlayerMoney(playerid, CofreOrg[org][salariolider]);
			CofreOrg[org][Dinheiro] -= CofreOrg[org][salariolider];
			format(gstring, sizeof(gstring), "Salario da organização:[R$%d]", CofreOrg[org][salariolider]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			SacarGranaOrg(org,CofreOrg[org][salariolider]);
		}
	}
	return true;
}

public Administrador(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] > 0 && admtrampando[playerid] > 0)
	{
		SetPlayerHealth(playerid,99999);
		if(PlayerInfo[playerid][pAdmin] < 1337)
		{
	  		ResetPlayerWeaponsBPH(playerid);
		}
	}
}

public Sincronizar(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
		XXAirBreak[playerid] += 3;SetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		SetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		SetPlayerHealth(playerid,PlayerHPP[playerid]);
		SetPlayerVirtualWorld(playerid,virt[playerid]);
		SetPlayerInterior(playerid,interior[playerid]);
		SetPlayerSkin(playerid,skinneg[playerid]);
		SetPlayerArmour(playerid,APP[playerid]);
		ResetPlayerWeaponsBPH(playerid);
		GivePlayerWeaponBPH(playerid,gunsinc[1][playerid],ammoo[1][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[2][playerid],ammoo[2][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[3][playerid],ammoo[3][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[4][playerid],ammoo[4][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[5][playerid],ammoo[5][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[6][playerid],ammoo[6][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[7][playerid],ammoo[7][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[8][playerid],ammoo[8][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[9][playerid],ammoo[9][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[10][playerid],ammoo[10][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[11][playerid],ammoo[11][playerid]);
		GivePlayerWeaponBPH(playerid,gunsinc[12][playerid],ammoo[12][playerid]);
		if(vehicledd[playerid] == 1)
		{
			PutPlayerInVehicle(playerid,VehicleIDD[playerid],1);
			vehicledd[playerid] = 0;
		}
		sincronizando[playerid] = 0;
		KillTimer(TempoSinc);
		SendClientMessage(playerid,COLOR_YELLOW," Sincronizado com sucesso!");
	}
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    new string[128];
	new pstring[128];
	new plname[MAX_PLAYER_NAME];
	BPHInfo[playerid][Tels] = 0;
	BPHInfo[playerid][pTels] = 0;
    GetPlayerName(clickedplayerid, plname, sizeof(plname));
    format(string, sizeof(string), "Menu de Opções");
    format(pstring, sizeof(pstring), "Ligar\nMandar SMS");
    if(PlayerInfo[clickedplayerid][pAdmin] >= 1)
    {
    	format(pstring, sizeof(pstring), "Ligar\nMandar SMS\nRelatorio Particular");
	}
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    	format(pstring, sizeof(pstring), "Ligar\nMandar SMS\n\nParticular\nVer Carteira\nExplodir\nTapa\nKickar\nBanir\nCascudo\nTV\nTrazer\nIR");
	}
    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, string, pstring, "Confirmar", "Cancelar");
    BPHInfo[playerid][Tels] = PlayerInfo[clickedplayerid][pPnumber];
    BPHInfo[playerid][pTels] = clickedplayerid;
	return 1;
}

public GuerraTerrorista(playerid)
{
    new string[128];
	new plname[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, plname, MAX_PLAYER_NAME);
 	TendoGuerra = 0;
    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    {
        KillTimer(TempoGuerra);
        BPHInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e o Exército Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_EXE, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    {
        KillTimer(TempoGuerra);
        BPHInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a GIA Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_GIA, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    {
        KillTimer(TempoGuerra);
        BPHInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a FARC Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_FARC, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
    {
        KillTimer(TempoGuerra);
        BPHInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Guerrilheiros Israelitas Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_GI, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos] && Territorio[GImortos] > Territorio[exemortos])//exercito ownou
 	{
        format(string, sizeof(string), "O Exército venceu a guerra matando %d do GIA, %d da GI, e %d da Guerrilheiros Israelitas!",Territorio[talmortos], Territorio[almortos], Territorio[GImortos]);
       	SendClientMessageToAll(COLOR_EXE, string);
 	}
 	else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos] && Territorio[GImortos] > Territorio[almortos])//GI ownou
 	{
      	format(string, sizeof(string), "A FARC venceu a guerra matando %d do GIA, %d do Exército, e %d da Guerrilheiros Israelitas!",Territorio[talmortos], Territorio[exemortos], Territorio[GImortos]);
       	SendClientMessageToAll(COR_FARC, string);
 	}
 	else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos] && Territorio[GImortos] > Territorio[talmortos])//GIA ownou
 	{
 	  	format(string, sizeof(string), "O GIA venceu a guerra matando %d da GI, %d membros do Exército, e %d da Guerrilheiros Israelitas!",Territorio[almortos], Territorio[exemortos], Territorio[GImortos]);
       	SendClientMessageToAll(COR_GIA, string);
 	}
 	else if(Territorio[exemortos] > Territorio[GImortos] && Territorio[almortos] > Territorio[GImortos] && Territorio[talmortos] > Territorio[GImortos])//Guerrilheiros Israelitas ownou
 	{
 	  	format(string, sizeof(string), "A Guerrilheiros Israelitas venceu a guerra matando %d da GI, %d do Exército, e %d do GIA!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       	SendClientMessageToAll(COR_GI, string);
 	}
 	else
 	{
 	  	format(string, sizeof(string), "Houve um empate na guerra! Morreram: %d da GI, %d do Exército, %d do GIA, e %d da Guerrilheiros Israelitas !",Territorio[almortos], Territorio[exemortos],Territorio[talmortos],Territorio[GImortos]);
       	SendClientMessageToAll(COLOR_YELLOW2, string);
 	}
	return true;
}

public UsarNovamente(playerid)
{
	UsouComando[playerid] = 0;
}


public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeaponsBPH(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			GivePlayerWeaponBPH(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return true;
}

public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}

public CarroMala(vehicleid)
{
	if(vehicleid >= totalveiculosh && vehicleid < CAR_AMOUNT) { return true; }
	return 0;
}

public VoltarBombas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(SemBombas[playerid] == 1)
	    {
			SemBombas[playerid] = 0;
	    }
	}
}

public PresoMulta(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(TicketOffer[playerid] < 999)
	    {
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			PlayerInfo[playerid][pJailed] = 1;
            SetPlayerWantedLevel(playerid, 0);
            WantedPoints[playerid] = 0;
      		SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailTime] = 600000;
		}
	}
}


public DestroyVidaPickup(pickupid)
{
	DestroyPickup(pickupid);
	return true;
}

public OnPlayerExitedMenu(playerid)
{
    Controle(playerid, 1);
	return true;
}

public OnPlayerHaveExtraCash(playerid,extraamount)
{
	return true;
}

public OnGameModeExit()
{
    DOF2_Exit();
    ServerMoneyExit();
    for(new x = 0; x < MAX_PLAYERS; x++)
	{
	    if(IsPlayerConnected(x))
	    {
			OnPlayerSave(x);
		}
	}
	if(MensagemDesligou == 0)
	{
		SendClientMessageToAll(0xF6BEA4AA,"Servidor desligado manualmente");
	}
 	TextDrawDestroy(Reloginho1);
    TextDrawDestroy(Reloginho2);
   	TextDrawHideForAll(Reloginho1);
   	TextDrawHideForAll(Reloginho2);
 	SalvarNumeroRegistrados();
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
	print("\n=================================================================");
	printf("Servidor Desligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
	print("=================================================================\n");
	return true;
}
//=================================[pedagio]===========================================//
public ReduzTempo(playerid)
{
	Reduzido[playerid] = 0;
}
public ReduzTempoBot(playerid)
{
	ReduzidoBot[playerid] = 0;
}
stock ReturnPlayerZone(playerid)
{
	new location[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
    return location;
}

stock NomeORG(playerid)
{
	new gangtext[64];
	if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0) { gangtext = "Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1) { gangtext = "Polícia Militar LS"; }
	else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2) { gangtext = "Rotam LS"; }
	else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3) { gangtext = "Exercito"; }
	else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4) { gangtext = "Medicos LS"; }
	else if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5) { gangtext = "Aztecas LS"; }
	else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6) { gangtext = "GIA"; }
	else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7) { gangtext = "Servidor Público"; }
    else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) { gangtext = "Hitmans"; }
    else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) { gangtext = "Repórter LS"; }
    else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) { gangtext = "Taxista LS"; }
	else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) { gangtext = "Policia Federal"; }
   	else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) { gangtext = "Cosa Nostra"; }
   	else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) { gangtext = "Yakuza"; }
    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) { gangtext = "Groove Street LS"; }
    else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) { gangtext = "FARC"; }
    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) { gangtext = "Rotam SF"; }
    else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) { gangtext = "Ballas LS"; }
    else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) { gangtext = "Vagos LS"; }
    else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) { gangtext = "Comando Vermelho LS"; }
    else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) { gangtext = "Comando Vermelho SF"; }
    else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) { gangtext = "PCC LS"; }
    else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) { gangtext = "Triads"; }
    else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) { gangtext = "Guerrilheiros Israelitas"; }
    else if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) { gangtext = "PCC SF"; }
    else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) { gangtext = "Aztecas SF"; }
    else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) { gangtext = "Ballas SF"; }
    else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) { gangtext = "Policia Militar SF"; }
    else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) { gangtext = "Vagos SF"; }
    else if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) { gangtext = "Groove SF"; }
    else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) { gangtext = "Taxista SF"; }
    else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) { gangtext = "Medicos SF"; }
    else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) { gangtext = "Reporter SF"; }
    else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33) { gangtext = "Policia Rodoviária"; }
    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) { gangtext = "Secretaria de Segurança"; }
	return gangtext;
}

stock SendMessageToOthersAdmins(playerid, color, const message[])
{
	new ret=0;
	for (new i=0; i<MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i) && i!=playerid && PlayerInfo[i][pAdmin] > 0)
		{
			SendClientMessage(i, color, message);
			ret++;
		}
	}
	return ret;
}

public OnVehicleSpawn(vehicleid)
{
   	new mot, lu, alar, por, cap, porma, ob;
   	GetVehicleParamsEx(vehicleid, mot, lu, alar, por, cap, porma, ob);
   	SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
	if(IsAPRCar(vehicleid))
	{
     	AddVehicleComponent(vehicleid,1087);
		AddVehicleComponent(vehicleid,1073);
	}
	SaveLastPosition(vehicleid);
	return true;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
  	if (VTrancado[vehicleid] >= 1)
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	}
	else
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	}
	return true;
}

forward LockCar(carid);
public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
			gCarLock[carid] = 1;
		}
	}
}

forward InitLockDoors(playerid);
public InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 254)
		{
			c++;
			if (gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid,0,1);
			}
		}
	}
	return 1;
}
forward UnLockCar(carid);
public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,0);
			gCarLock[carid] = 0;
		}
	}
}
encode_tires(tires1, tires2, tires3, tires4)
{
	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}

forward ConviteInfoOrg(nome[], org, cargo);
public ConviteInfoOrg(nome[], org, cargo)
{
	new arquivo[256];
	format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
 	if(cargo == 6)
	{
	    strmid(InfoOrg[org][Lider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		DOF2_SetString(arquivo,"Lider",nome);
		DOF2_SaveFile();
		return true;
	}
	if(cargo == 100)
	{
		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][SubLider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    DOF2_SetString(arquivo,"SubLider",nome);
       	    DOF2_SaveFile();
			return true;
		}
	}
	if(cargo == 200)
	{
		if(strcmp(InfoOrg[org][SubLider2],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][SubLider2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    DOF2_SetString(arquivo,"SubLider2",nome);
       	    DOF2_SaveFile();
			return true;
		}
	}
	if(strcmp(InfoOrg[org][Membro1],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        DOF2_SetString(arquivo,"Membro1",nome);
        DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro2],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro2",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro3],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro3",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro4],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro4",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro5],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro5",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro6],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro6",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro7],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro7",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro8],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro8",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro9],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro9",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro10],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro10",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro11],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		DOF2_SetString(arquivo,"Membro11",nome);
		DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro12],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro12",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro13],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro13",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro14],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro14",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro15],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro15",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro16],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro16",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro17],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro17",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro18],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro18",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro19],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro19",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg[org][Membro20],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Membro20",nome);
	    DOF2_SaveFile();
		return true;
	}
	return 0;
}


forward CandidatoInfoOrg(nome[], org, cargo);
public CandidatoInfoOrg(nome[], org, cargo)
{
	new arquivo[256];
	format(arquivo, sizeof(arquivo), "Candidatos/Org%d.cfg",org);

	if(strcmp(InfoOrg2[org][Candidato1],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        DOF2_SetString(arquivo,"Candidato1",nome);
        DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato2],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato2",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato3],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato3",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato4],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato4",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato5],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato5",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato6],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato6",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato7],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato7",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato8],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato8",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato9],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato9",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato10],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato10",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato11],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		DOF2_SetString(arquivo,"Candidato11",nome);
		DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato12],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato12",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato13],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato13",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato14],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato14",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato15],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato15",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato16],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato16",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato17],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato17",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato18],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato18",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato19],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato19",nome);
	    DOF2_SaveFile();
		return true;
	}
	if(strcmp(InfoOrg2[org][Candidato20],"Ninguem",true)==0)
	{
	    strmid(InfoOrg2[org][Candidato20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato20",nome);
	    DOF2_SaveFile();
		return true;
	}
	return 0;
}

forward CheckInfoOrg(playerid);
public CheckInfoOrg(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new PlayerNick[MAX_PLAYER_NAME];
	    GetPlayerName(playerid,PlayerNick,sizeof(PlayerNick));
	    for(new i = 1; i < sizeof(InfoOrg); i++)
		{
	    	if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
		    	if(strcmp(PlayerNick,InfoOrg[i][Lider],true)==0)
		    	{
		    	    PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][SubLider],true)==0)
		    	{
   					PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
 		    	if(strcmp(PlayerNick,InfoOrg[i][SubLider2],true)==0)
		    	{
   					PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro1],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro2],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro3],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro4],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro5],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro6],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro7],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro8],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro9],true)==0)
		    	{
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro10],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro11],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro12],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro13],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro14],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro15],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro16],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro17],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro18],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro19],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro20],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	PlayerInfo[playerid][pCheckInfoOrg] = 1;
			}
		}
		if(PlayerInfo[playerid][pCheckInfoOrg] >= 1)
		{
		    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
       			if(PlayerInfo[playerid][pLider] > 0) { SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi demitido de líder por um admin!"); }
				else { SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi demitido pelo seu líder, agora você é um Civil !"); }
				gTeam[playerid] = 3;
				MedicBill[playerid] = 0;
				PlayerInfo[playerid][pTeam] = 3;
				PlayerInfo[playerid][pMembro] = 0;
				PlayerInfo[playerid][pLider] = 0;
				PlayerInfo[playerid][pCargo] = 0;
				if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 141; }
				PlayerInfo[playerid][pCheckInfoOrg] = 0;
				SpawnPlayer(playerid);
				return true;
			}
		}
    }
	return true;
}

forward LoadOrgs();
public LoadOrgs()
{
	new arquivo[256];
	new idx = 1;
	while (idx < sizeof(InfoOrg))
	{
	    format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",idx);
		strmid(InfoOrg[idx][Lider], DOF2_GetString(arquivo,"Lider"), 0, strlen(DOF2_GetString(arquivo,"Lider")), 255);
		strmid(InfoOrg[idx][SubLider], DOF2_GetString(arquivo,"SubLider"), 0, strlen(DOF2_GetString(arquivo,"SubLider")), 255);
		strmid(InfoOrg[idx][SubLider2], DOF2_GetString(arquivo,"SubLider2"), 0, strlen(DOF2_GetString(arquivo,"SubLider2")), 255);
		strmid(InfoOrg[idx][Membro1], DOF2_GetString(arquivo,"Membro1"), 0, strlen(DOF2_GetString(arquivo,"Membro1")), 255);
		strmid(InfoOrg[idx][Membro2], DOF2_GetString(arquivo,"Membro2"), 0, strlen(DOF2_GetString(arquivo,"Membro2")), 255);
		strmid(InfoOrg[idx][Membro3], DOF2_GetString(arquivo,"Membro3"), 0, strlen(DOF2_GetString(arquivo,"Membro3")), 255);
		strmid(InfoOrg[idx][Membro4], DOF2_GetString(arquivo,"Membro4"), 0, strlen(DOF2_GetString(arquivo,"Membro4")), 255);
		strmid(InfoOrg[idx][Membro5], DOF2_GetString(arquivo,"Membro5"), 0, strlen(DOF2_GetString(arquivo,"Membro5")), 255);
		strmid(InfoOrg[idx][Membro6], DOF2_GetString(arquivo,"Membro6"), 0, strlen(DOF2_GetString(arquivo,"Membro6")), 255);
		strmid(InfoOrg[idx][Membro7], DOF2_GetString(arquivo,"Membro7"), 0, strlen(DOF2_GetString(arquivo,"Membro7")), 255);
		strmid(InfoOrg[idx][Membro8], DOF2_GetString(arquivo,"Membro8"), 0, strlen(DOF2_GetString(arquivo,"Membro8")), 255);
		strmid(InfoOrg[idx][Membro9], DOF2_GetString(arquivo,"Membro9"), 0, strlen(DOF2_GetString(arquivo,"Membro9")), 255);
		strmid(InfoOrg[idx][Membro10], DOF2_GetString(arquivo,"Membro10"), 0, strlen(DOF2_GetString(arquivo,"Membro10")), 255);
		strmid(InfoOrg[idx][Membro11], DOF2_GetString(arquivo,"Membro11"), 0, strlen(DOF2_GetString(arquivo,"Membro11")), 255);
		strmid(InfoOrg[idx][Membro12], DOF2_GetString(arquivo,"Membro12"), 0, strlen(DOF2_GetString(arquivo,"Membro12")), 255);
		strmid(InfoOrg[idx][Membro13], DOF2_GetString(arquivo,"Membro13"), 0, strlen(DOF2_GetString(arquivo,"Membro13")), 255);
		strmid(InfoOrg[idx][Membro14], DOF2_GetString(arquivo,"Membro14"), 0, strlen(DOF2_GetString(arquivo,"Membro14")), 255);
		strmid(InfoOrg[idx][Membro15], DOF2_GetString(arquivo,"Membro15"), 0, strlen(DOF2_GetString(arquivo,"Membro15")), 255);
		strmid(InfoOrg[idx][Membro16], DOF2_GetString(arquivo,"Membro16"), 0, strlen(DOF2_GetString(arquivo,"Membro16")), 255);
		strmid(InfoOrg[idx][Membro17], DOF2_GetString(arquivo,"Membro17"), 0, strlen(DOF2_GetString(arquivo,"Membro17")), 255);
		strmid(InfoOrg[idx][Membro18], DOF2_GetString(arquivo,"Membro18"), 0, strlen(DOF2_GetString(arquivo,"Membro18")), 255);
		strmid(InfoOrg[idx][Membro19], DOF2_GetString(arquivo,"Membro19"), 0, strlen(DOF2_GetString(arquivo,"Membro19")), 255);
		strmid(InfoOrg[idx][Membro20], DOF2_GetString(arquivo,"Membro20"), 0, strlen(DOF2_GetString(arquivo,"Membro20")), 255);
   		idx ++;
	}
	printf("organizacoes Carregadas", idx);
	return true;
}

forward LoadCandidatos();
public LoadCandidatos()
{
	new arquivo[256];
	new idx = 1;
	while (idx < sizeof(InfoOrg2))
	{
	    format(arquivo, sizeof(arquivo), "Candidatos/Org%d.cfg",idx);
		strmid(InfoOrg2[idx][Candidato1], DOF2_GetString(arquivo,"Candidato1"), 0, strlen(DOF2_GetString(arquivo,"Candidato1")), 255);
		strmid(InfoOrg2[idx][Candidato2], DOF2_GetString(arquivo,"Candidato2"), 0, strlen(DOF2_GetString(arquivo,"Candidato2")), 255);
		strmid(InfoOrg2[idx][Candidato3], DOF2_GetString(arquivo,"Candidato3"), 0, strlen(DOF2_GetString(arquivo,"Candidato3")), 255);
		strmid(InfoOrg2[idx][Candidato4], DOF2_GetString(arquivo,"Candidato4"), 0, strlen(DOF2_GetString(arquivo,"Candidato4")), 255);
		strmid(InfoOrg2[idx][Candidato5], DOF2_GetString(arquivo,"Candidato5"), 0, strlen(DOF2_GetString(arquivo,"Candidato5")), 255);
		strmid(InfoOrg2[idx][Candidato6], DOF2_GetString(arquivo,"Candidato6"), 0, strlen(DOF2_GetString(arquivo,"Candidato6")), 255);
		strmid(InfoOrg2[idx][Candidato7], DOF2_GetString(arquivo,"Candidato7"), 0, strlen(DOF2_GetString(arquivo,"Candidato7")), 255);
		strmid(InfoOrg2[idx][Candidato8], DOF2_GetString(arquivo,"Candidato8"), 0, strlen(DOF2_GetString(arquivo,"Candidato8")), 255);
		strmid(InfoOrg2[idx][Candidato9], DOF2_GetString(arquivo,"Candidato9"), 0, strlen(DOF2_GetString(arquivo,"Candidato9")), 255);
		strmid(InfoOrg2[idx][Candidato10], DOF2_GetString(arquivo,"Candidato10"), 0, strlen(DOF2_GetString(arquivo,"Candidato10")), 255);
		strmid(InfoOrg2[idx][Candidato11], DOF2_GetString(arquivo,"Candidato11"), 0, strlen(DOF2_GetString(arquivo,"Candidato11")), 255);
		strmid(InfoOrg2[idx][Candidato12], DOF2_GetString(arquivo,"Candidato12"), 0, strlen(DOF2_GetString(arquivo,"Candidato12")), 255);
		strmid(InfoOrg2[idx][Candidato13], DOF2_GetString(arquivo,"Candidato13"), 0, strlen(DOF2_GetString(arquivo,"Candidato13")), 255);
		strmid(InfoOrg2[idx][Candidato14], DOF2_GetString(arquivo,"Candidato14"), 0, strlen(DOF2_GetString(arquivo,"Candidato14")), 255);
		strmid(InfoOrg2[idx][Candidato15], DOF2_GetString(arquivo,"Candidato15"), 0, strlen(DOF2_GetString(arquivo,"Candidato15")), 255);
		strmid(InfoOrg2[idx][Candidato16], DOF2_GetString(arquivo,"Candidato16"), 0, strlen(DOF2_GetString(arquivo,"Candidato16")), 255);
		strmid(InfoOrg2[idx][Candidato17], DOF2_GetString(arquivo,"Candidato17"), 0, strlen(DOF2_GetString(arquivo,"Candidato17")), 255);
		strmid(InfoOrg2[idx][Candidato18], DOF2_GetString(arquivo,"Candidato18"), 0, strlen(DOF2_GetString(arquivo,"Candidato18")), 255);
		strmid(InfoOrg2[idx][Candidato19], DOF2_GetString(arquivo,"Candidato19"), 0, strlen(DOF2_GetString(arquivo,"Candidato19")), 255);
		strmid(InfoOrg2[idx][Candidato20], DOF2_GetString(arquivo,"Candidato20"), 0, strlen(DOF2_GetString(arquivo,"Candidato20")), 255);
   		idx ++;
	}
	return true;
}

forward DemitirInfoOrg(nome[]);
public DemitirInfoOrg(nome[])
{
    new arquivo[256];
    for(new i = 1; i < sizeof(InfoOrg); i++)
	{
        format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",i);
    	if(strcmp(nome,InfoOrg[i][Lider],true)==0)
    	{
    	    strmid(InfoOrg[i][Lider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
    		DOF2_SetString(arquivo,"Lider","Ninguem");
    		DOF2_SaveFile();
    	    return true;
    	}
		if(strcmp(nome,InfoOrg[i][SubLider],true)==0)
		{
		    strmid(InfoOrg[i][SubLider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    DOF2_SetString(arquivo,"SubLider","Ninguem");
		    DOF2_SaveFile();
			return true;
   		}
  		if(strcmp(nome,InfoOrg[i][SubLider2],true)==0)
		{
		    strmid(InfoOrg[i][SubLider2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    DOF2_SetString(arquivo,"SubLider2","Ninguem");
		    DOF2_SaveFile();
			return true;
   		}
    	if(strcmp(nome,InfoOrg[i][Membro1],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro1","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro2],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	DOF2_SetString(arquivo,"Membro2","Ninguem");
 	    	DOF2_SaveFile();
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro3],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    DOF2_SetString(arquivo,"Membro3","Ninguem");
		    DOF2_SaveFile();
 	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro4],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	DOF2_SetString(arquivo,"Membro4","Ninguem");
 	    	DOF2_SaveFile();
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro5],true)==0)
    	{
		    strmid(InfoOrg[i][Membro5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    DOF2_SetString(arquivo,"Membro5","Ninguem");
		    DOF2_SaveFile();
		    return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro6],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	DOF2_SetString(arquivo,"Membro6","Ninguem");
 	    	DOF2_SaveFile();
		    return true;
    	}
		if(strcmp(nome,InfoOrg[i][Membro7],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	DOF2_SetString(arquivo,"Membro7","Ninguem");
 	    	DOF2_SaveFile();
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro8],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro8","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro9],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro9","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro10],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro10","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro11],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro11","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro12],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro12","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro13],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro13","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro14],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro14","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro15],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro15","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro16],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro16","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro17],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro17","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro18],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro18","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro19],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro19","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
		if(strcmp(nome,InfoOrg[i][Membro20],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	DOF2_SetString(arquivo,"Membro20","Ninguem");
	    	DOF2_SaveFile();
	    	return true;
    	}
    }
	return 0;
}

forward DCandidatoInfoOrg(nome[], numero);
public DCandidatoInfoOrg(nome[], numero)
{
   	new arquivo[256];
	format(arquivo, sizeof(arquivo), "Candidatos/Org%d.cfg",numero);
   	if(strcmp(nome,InfoOrg2[numero][Candidato1],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato1","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato2],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	   	DOF2_SetString(arquivo,"Candidato2","Ninguem");
 	   	DOF2_SaveFile();
  	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato3],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato3","Ninguem");
	    DOF2_SaveFile();
 	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato4],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	   	DOF2_SetString(arquivo,"Candidato4","Ninguem");
 	   	DOF2_SaveFile();
  	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato5],true)==0)
   	{
	    strmid(InfoOrg2[numero][Candidato5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    DOF2_SetString(arquivo,"Candidato5","Ninguem");
	    DOF2_SaveFile();
	    return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato6],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	   	DOF2_SetString(arquivo,"Candidato6","Ninguem");
 	   	DOF2_SaveFile();
	    return true;
   	}
	if(strcmp(nome,InfoOrg2[numero][Candidato7],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	   	DOF2_SetString(arquivo,"Candidato7","Ninguem");
 	   	DOF2_SaveFile();
  	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato8],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato8","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato9],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato9","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato10],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato10","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato11],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato11","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato12],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato12","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato13],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato13","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato14],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato14","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato15],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato15","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato16],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato16","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato17],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato17","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato18],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato18","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
   	if(strcmp(nome,InfoOrg2[numero][Candidato19],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato19","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
	if(strcmp(nome,InfoOrg2[numero][Candidato20],true)==0)
   	{
	   	strmid(InfoOrg2[numero][Candidato20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	   	DOF2_SetString(arquivo,"Candidato20","Ninguem");
	   	DOF2_SaveFile();
	   	return true;
   	}
	return 0;
}
stock Demitir(playerid, para1)
{
	format(gstring, sizeof(gstring), "* Você foi demitido pelo líder %s Motivo: Limpou sua Vaga.", PlayerName(playerid));
	SendClientMessage(para1, COLOR_LIGHTRED, gstring);
	SendClientMessage(para1, COLOR_LIGHTRED, "* Agora você é um civil novamente.");
 	gTeam[para1] = 3;
	PlayerInfo[para1][pTeam] = 3;
	PlayerInfo[para1][pMembro] = 0;
	PlayerInfo[para1][pCargo] = 0;
	if(PlayerInfo[para1][pSex] == 1)
	{
		PlayerInfo[para1][pSkin] = 23;
	}
	else
	{
		PlayerInfo[para1][pSkin] = 41;
	}
    SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[para1] = 0;
	SpawnPlayer(para1);
}
stock DemitirLider(playerid)
{
	SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi demitido de líder por um admin, agora você é um Civil !");
	gTeam[playerid] = 3;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	if(PlayerInfo[playerid][pSex] == 1)
	{
		PlayerInfo[playerid][pSkin] = 98;
	}
	else
	{
		PlayerInfo[playerid][pSkin] = 150;
	}
    SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[playerid] = 0;
	SpawnPlayer(playerid);
}
forward TemVaga(family);
public TemVaga(family)
{
	if(strcmp(InfoOrg[family][Membro1], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro2], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro3], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro4], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro5], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro6], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro7], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro8], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro9], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro10], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro11], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro12], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro13], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro14], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro15], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro16], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro17], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro18], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro19], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro20], "Ninguem", true) == 0)
   	{
		return true;
	}
	return 0;
}
forward IsPlayerOnline(name[]);
public IsPlayerOnline(name[])
{
	new PlayerName2[MAX_PLAYER_NAME];
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
	    	GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
	    	if(strcmp(name,PlayerName2,true)==0)
			{
		    	return true;
			}
		}
	}
	return 0;
}
forward GetPlayerID(string[]);
public GetPlayerID(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
    	if(IsPlayerConnected(i))
		{
        	new testname[MAX_PLAYER_NAME];
	    	GetPlayerName(i, testname, sizeof(testname));
	    	if(strcmp(testname,string,true)==0)
	    	{
	    	    return i;
	    	}
		}
    }
    return INVALID_PLAYER_ID;
}

forward LiberarRoubo2(playerid);
public LiberarRoubo2(playerid)
{
    AssalteiAlguem[playerid] = 0;
	return 1;
}

forward LiberarRoubo3(playerid);
public LiberarRoubo3(playerid)
{
    EstupreiAlguem[playerid] = 0;
	return 1;
}

public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
  	{
	  	string[x] += (3^x) * (x % 15);
	  	if(string[x] > (0xff))
	  	{
	  		string[x] -= 256;
	  	}
 	}
	return 1;
}

forward GZHide(playerid);
public GZHide(playerid)
{
	if(IsPlayerConnected(playerid))
	{
    	GangZoneHideForPlayer(playerid, GZLocalizar[playerid]);
	}
	return true;
}

forward Avaliar(playerid);
public Avaliar(playerid)
{
	KillTimer(TempoAvaliar[playerid]);
	Avaliado[playerid] = 0;
	return true;
}

forward RouboPref(playerid);
public RouboPref(playerid)
{
	if(PlayerToPoint(3.0,playerid, 354.9906,172.3177,1008.3794))
	{
   		new mrand = random(100000);
		if(storeexit[playerid] == 1717)
		{
			format(gstring, 128, "[ROUBO] %s conseguiu roubar R$%d do cofre da prefeitura de (Commerce - LS)!", PlayerName(playerid), mrand+100000);
			SendClientMessageToAll(COLOR_LIGHTRED, gstring);
  			format(gstring, 128, "Você conseguiu roubar %d do cofre!", mrand+100000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, mrand+100000);
			JaEstaRoubando[playerid] = 0;
			SetTimerEx("Desaparecer", 400000, 0, "i", playerid);
			SetPlayerCriminal(playerid,255,"Roubo ao Cofre da Prefeitura");
			SetPlayerAttachedObject(playerid, 9, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
  			ClearAnimations(playerid);
    		ClearAnimations(playerid);
			return true;
		}
 		if(storeexit[playerid] == 1718)
		{
			format(gstring, 128, "[ROUBO] %s conseguiu roubar R$%d do cofre da prefeitura de (Country Club - SF)!", PlayerName(playerid), mrand+100000);
			SendClientMessageToAll(COLOR_LIGHTRED, gstring);
  			format(gstring, 128, "Você conseguiu roubar %d do cofre!", mrand+100000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, mrand+100000);
			JaEstaRoubando[playerid] = 0;
			SetTimerEx("Desaparecer", 400000, 0, "i", playerid);
			SetPlayerCriminal(playerid,255,"Assalto ao Cofre da Prefeitura");
			SetPlayerAttachedObject(playerid, 9, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
  			ClearAnimations(playerid);
    		ClearAnimations(playerid);
			return true;
		}
  		if(storeexit[playerid] == 1719)
		{
			format(gstring, 128, "[ROUBO] %s conseguiu roubar R$%d do cofre da prefeitura de (Downtown - SF)!", PlayerName(playerid), mrand+100000);
			SendClientMessageToAll(COLOR_LIGHTRED, gstring);
  			format(gstring, 128, "Você conseguiu roubar %d do cofre!", mrand+100000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, mrand+100000);
			JaEstaRoubando[playerid] = 0;
			SetTimerEx("Desaparecer", 400000, 0, "i", playerid);
			SetPlayerCriminal(playerid,255,"Assalto ao Cofre da Prefeitura");
			SetPlayerAttachedObject(playerid, 9, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
  			ClearAnimations(playerid);
    		ClearAnimations(playerid);
			return true;
		}
		else
		{
			format(gstring, 128, "[ROUBO] %s conseguiu roubar R$%d do cofre da prefeitura de (East Beach - LS)!", PlayerName(playerid), mrand+100000);
			SendClientMessageToAll(COLOR_LIGHTRED, gstring);
			format(gstring, 128, "Você conseguiu roubar %d do cofre!", mrand+100000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, mrand+100000);
			JaEstaRoubando[playerid] = 0;
			SetTimerEx("Desaparecer", 400000, 0, "i", playerid);
			SetPlayerCriminal(playerid,255,"Assalto ao Cofre da Prefeitura");
			SetPlayerAttachedObject(playerid, 9, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
  			ClearAnimations(playerid);
    		ClearAnimations(playerid);
			return true;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está no cofre da prefeitura!");
		format(gstring, 128, "[ROUBO] %s não conseguiu roubar o cofre da prefeitura!", PlayerName(playerid));
		SendClientMessageToAll(COLOR_LIGHTRED, gstring);
		JaEstaRoubando[playerid] = 0;
  		ClearAnimations(playerid);
    	ClearAnimations(playerid);
		return true;
	}
}

forward Desaparecer(playerid);
public Desaparecer(playerid)
{
	RemovePlayerAttachedObject(playerid,9);
	return true;
}

forward RouboPrefLS();
public RouboPrefLS()
{
	if(TemGenteRoubandoLS > 0)
	{
		TemGenteRoubandoLS = 0;
	}
	return true;
}

forward RouboPrefLS2();
public RouboPrefLS2()
{
	if(TemGenteRoubandoLS2 > 0)
	{
		TemGenteRoubandoLS2 = 0;
	}
	return true;
}

forward RouboPrefSF2();
public RouboPrefSF2()
{
	if(TemGenteRoubandoSF2 > 0)
	{
		TemGenteRoubandoSF2 = 0;
	}
	return true;
}

forward RouboPrefSF();
public RouboPrefSF()
{
	if(TemGenteRoubandoSF > 0)
	{
		TemGenteRoubandoSF = 0;
	}
	return true;
}

forward RotaOnibus(playerid);
public RotaOnibus(playerid)
{
	new opA;
	if(TransportDuty[playerid] == 2)
	{
		opA = random(sizeof(RotaChecks));
		SetPlayerCheckpoint(playerid, RotaChecks[opA][0],RotaChecks[opA][1],RotaChecks[opA][2], 11.0);
		SendClientMessage(playerid, VERDE2, "** Siga o CheckPoint que foi marcado em seu mapa para continuar a rota **");
		return true;
	}
	return true;
}

forward PediuAgora(playerid);
public PediuAgora(playerid)
{
	KillTimer(TempoPediu[playerid]);
	PediuPraEntrar[playerid] = 0;
	return true;
}

forward Atualizador2(playerid);
public Atualizador2(playerid)
{
	KillTimer(TempoSKick[playerid]);
	Kick(playerid);
	return true;
}

forward Slide(playerid);
public Slide(playerid)
{
    if(Sliding[playerid] == 1)
    {
    	new Float:X;
    	new Float:Y;
    	new Float:Z;
    	GetPlayerPos(playerid, X, Y, Z);
    	XXAirBreak[playerid] += 3;SetPlayerPos(playerid, X, Y, Z - 5.00);
    	SetTimerEx("Slide", 1000, 0, "i", playerid);
    }
	return 1;
}

forward IsAChopper(vehicleid);
public IsAChopper(vehicleid)
{
	if(vehicleid == 497)
	{
		return 1;
	}
	return 0;
}

forward TextDrawRegras(playerid);
public TextDrawRegras(playerid)
{
	KillTimer(TempoTextDrawRegras[playerid]);
	HideRules(playerid);
	return true;
}

forward NovoPoema(playerid);
public NovoPoema(playerid)
{
	KillTimer(TempoPoema[playerid]);
	PoetaGay[playerid] = 0;
	return true;
}

forward Hospitalizadao(playerid);
public Hospitalizadao(playerid)
{
	if(PlayerInfo[playerid][pHospitalID] > 0)
	{
		PlayerInfo[playerid][pHospitalID] = 0;
		PlayerInfo[playerid][pTempoHospitalizado] = 0;
		Controle(playerid, 1);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você ja recebeu alta do Hospital, e está completamente recuperado.");
		SetPlayerPos(playerid, 357.6348,165.1096,1053.2151);
		SetPlayerFacingAngle(playerid, 270.1344);
		format(gstring, sizeof(gstring), "* %s recebeu alta do hospital.",PlayerName(playerid));
		ProxDetector(20.0, playerid, gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ClearAnimations(playerid, 1);
		return true;
	}
	return true;
}

forward BOSTA(playerid);
public BOSTA(playerid)
{
	if(XXAirBreak[playerid] >= 1)
	{
		XXAirBreak[playerid] -= 1;
		return true;
	}
	return true;
}

forward VozDePrisaoo(playerid);
public VozDePrisaoo(playerid)
{
	KillTimer(PutaGorda[playerid]);
	if(VozDePrisao[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "A voz de prisão foi dada a 2 minutos atras, agora você pode desconectar-se normalmente!");
		VozDePrisao[playerid] = 0;
		return true;
	}
	return true;
}

forward Pomba(playerid);
public Pomba(playerid)
{
	KillTimer(Buceta[playerid]);
	AdmHelperComido[playerid] = 0;
	return true;
}

forward TempoTerritorios(playerid);
public TempoTerritorios(playerid)
{
// estação
	donoestacao = 0;
	GangZoneShowForAll(GZEstacao, 0xC0C0C0AA);

//casarão
	donocasarao = 0;
	GangZoneShowForAll(GZCasarao, 0xC0C0C0AA);

//PG
	donopark = 0;
	GangZoneShowForAll(GZPark, 0xC0C0C0AA);

//Morro
	donomorro = 0;
	GangZoneShowForAll(GZMorro, 0xC0C0C0AA);

// Mansão do Madd Dogg
	donoaero = 0;
	GangZoneShowForAll(GZMaddDogg, 0xC0C0C0AA);
	return true;
}

forward Putaria2(playerid);
public Putaria2(playerid)
{
	KillTimer(TempoTutorial[playerid]);
	Putaria[playerid] = 0;
	return true;
}

forward PlayerEquipar(playerid);
public PlayerEquipar(playerid)
{
	KillTimer(Bucetuda[playerid]);
	JaEquipado[playerid] = 0;
	return true;
}
//==============================================================================//

stock IsNumero(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return true;
}
stock IsPlayerInTerritorio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= Territorio[MinX] && y >= Territorio[MinY] && x <= Territorio[MaxX] && y <= Territorio[MaxY]) return true;
    return 0;
}

public fecharyakuza1()
{
	MoveObject(pyakuza1, 1534.69995117,-1453.19995117,15.19999981,3);
}
forward fecharacn();
public fecharacn()
{
	MoveObject(acn,321.39999389648, -1188.1999511719, 77.099998474121,3);
}
stock IsVehicleValid(id)
{
	new type=GetVehicleModel(id);
	new blocked[]={ 548, 425, 417, 487, 488, 497, 563, 447, 469, 520 };
	for(new i;i<sizeof(blocked);i++)
	{
		if(type == blocked[i])
		{
			return 0;
		}
	}
	return true;
}
stock IsPlayerInArea(playerid, Float:max_x, Float:min_x, Float:max_y, Float:min_y)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return true;
	return 0;
}


stock IsPlayerInWater(playerid)
{
	new Float:x,Float:y,Float:pz;
	GetPlayerPos(playerid,x,y,pz);
	if (
 	(IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) //lv piratenschiff
  	|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) //lv visage
  	|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) //lv staucamm
  	|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24) //sf südwesten kleiner teich
  	|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) //sf gammel teich
  	|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) //ls neben dem airport
  	|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) //ls mitte teich
  	|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) //ls weiter südöstlich
  	|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) //lv pool östlich
  	|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) //ls pool nordwestlich
  	|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) //pool bei maddog's haus oben
  	|| (pz < 1.5)
	)
	{
	    return true;
	}
	return 0;
}
stock SetHora()
{
	gettime(hour, minute, second);
	if(hour == 0 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
	if(hour == 1 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 2 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 3 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 4 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 5 && minute >= 0 && minute <= 39) { SetWorldTime(5); }
	if(hour == 5 && minute >= 40 && minute <= 49) { SetWorldTime(23); }
	if(hour == 5 && minute >= 50 && minute <= 59) { SetWorldTime(22); }
	if(hour == 6 && minute >= 0 && minute <= 9) { SetWorldTime(21); }
	if(hour == 6 && minute >= 30 && minute <= 59) { SetWorldTime(7); }
	if(hour == 7 && minute >= 0 && minute <= 59) { SetWorldTime(7); }
	if(hour == 8 && minute >= 0 && minute <= 59) { SetWorldTime(8); }
	if(hour == 9 && minute >= 0 && minute <= 59) { SetWorldTime(9); }
	if(hour == 10 && minute >= 0 && minute <= 59) { SetWorldTime(10); }
	if(hour == 11 && minute >= 0 && minute <= 59) { SetWorldTime(11); }
	if(hour == 12 && minute >= 0 && minute <= 59) { SetWorldTime(12); }
	if(hour == 13 && minute >= 0 && minute <= 59) { SetWorldTime(13); }
	if(hour == 14 && minute >= 0 && minute <= 59) { SetWorldTime(14); }
	if(hour == 15 && minute >= 0 && minute <= 59) { SetWorldTime(15); }
	if(hour == 16 && minute >= 0 && minute <= 59) { SetWorldTime(16); }
	if(hour == 17 && minute >= 0 && minute <= 59) { SetWorldTime(17); }
	if(hour == 17 && minute >= 35 && minute <= 39) { SetWorldTime(20); }
	if(hour == 17 && minute >= 40 && minute <= 49) { SetWorldTime(21); }
	if(hour == 17 && minute >= 55 && minute <= 59) { SetWorldTime(23); }
	if(hour == 18 && minute >= 0 && minute <= 29) { SetWorldTime(5); }
	if(hour == 19 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 20 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 21 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 22 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 23 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
}

forward Atualizar3Dtexts();
public Atualizar3Dtexts()
{
	new FormatPerigoso[256];
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    Delete3DTextLabel(HouseLabel[h]);
		if(HouseInfo[h][hOwned] == 0)
		{
			format(FormatPerigoso, sizeof(FormatPerigoso), TextCasaVenda,HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			HouseLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 0)
			{
				format(FormatPerigoso, sizeof(FormatPerigoso), TextCasa,HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
			else
			{
				format(FormatPerigoso, sizeof(FormatPerigoso), TextCasaAl,HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		Delete3DTextLabel(BizzLabel[h]);
		if(BizzInfo[h][bOwned] == 0)
		{
			format(FormatPerigoso, sizeof(FormatPerigoso), TextEmpresaVenda,BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded], BizzInfo[h][bTill]);
			BizzLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
   			format(FormatPerigoso, sizeof(FormatPerigoso), TextEmpresa,BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded], BizzInfo[h][bTill]);
   			BizzLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		Delete3DTextLabel(SBizzLabel[h]);
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(FormatPerigoso, sizeof(FormatPerigoso), TextMEmpresaVenda,SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
   			format(FormatPerigoso, sizeof(FormatPerigoso), TextMEmpresa,SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
   			SBizzLabel[h] = Create3DTextLabel(FormatPerigoso,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
	}
}
//=================================================
stock GetSpeedKM(playerid)
{
	new
		Float:PosX,
		Float:PosY,
		Float:PosZ,
		Float:PlayerSpeedDistance;

	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower(PosX, 2), floatpower(PosY, 2)),  floatpower(PosZ, 2))), 170.0);
	new spe = floatround(PlayerSpeedDistance * 1);
	return spe;
}

stock GetPlayerSpeedape(playerid,bool:kmh)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 0;
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}

//stock GetPlayerVehicleSpeed(playerid,bool:kmh){new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
stock GetPlayerSpeed(playerid,bool:kmh)
{
	new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
	if(!IsPlayerInAnyVehicle(playerid))
	{
 		return 0;
	}
	GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz);
	rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
	return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
//================

forward ContarJogadores();
public ContarJogadores()
{
	new	Jogadores = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			Jogadores++;
		}
	}
	return Jogadores;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	RemovePlayerFromVehicle(playerid);
	Controle(playerid, 1);
}

stock GetPlayerOrg(playerid)
{
	new org;
	if(PlayerInfo[playerid][pLider] > 0)
	{
		org = PlayerInfo[playerid][pLider];
		return org;
	}
	if(PlayerInfo[playerid][pMembro] > 0)
	{
		org = PlayerInfo[playerid][pMembro];
		return org;
	}
	return 0;
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return true;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21)
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID;
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid;
			}
		}
	}

	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[pos], true, len) == 0)
			{
				if (len == strlen(name))
				{
					return i;
				}
				else
				{
					count++;
					userid = i;
				}
			}
		}
	}

	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid;
}

forward LoadCofreOrg();
public LoadCofreOrg()
{
	new arquivo[64];
	new idx = 1;
	while (idx < sizeof(CofreOrg))
	{
		format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",idx);
		CofreOrg[idx][Dinheiro] = DOF2_GetInt(arquivo,"Dinheiro");
		CofreOrg[idx][Materiais] = DOF2_GetInt(arquivo,"Materiais");
		CofreOrg[idx][Maconha] = DOF2_GetInt(arquivo,"Maconha");
		CofreOrg[idx][Cocaina] = DOF2_GetInt(arquivo,"Cocaina");
		CofreOrg[idx][Crack] = DOF2_GetInt(arquivo,"Crack");
		CofreOrg[idx][dMaconha] = DOF2_GetInt(arquivo,"DarMaconha");
		CofreOrg[idx][dEaglec1] = DOF2_GetInt(arquivo,"DarEaglec1");
		CofreOrg[idx][dAKc1] = DOF2_GetInt(arquivo,"DarAKc1");
		CofreOrg[idx][dMP5c1] = DOF2_GetInt(arquivo,"DarMP5c1");
		CofreOrg[idx][dShotc1] = DOF2_GetInt(arquivo,"DarShotc1");
		CofreOrg[idx][dRiflec1] = DOF2_GetInt(arquivo,"DarRiflec1");
		CofreOrg[idx][dEaglec2] = DOF2_GetInt(arquivo,"DarEaglec2");
		CofreOrg[idx][dAKc2] = DOF2_GetInt(arquivo,"DarAKc2");
		CofreOrg[idx][dMP5c2] = DOF2_GetInt(arquivo,"DarMP5c2");
		CofreOrg[idx][dShotc2] = DOF2_GetInt(arquivo,"DarShotc1");
		CofreOrg[idx][dRiflec2] = DOF2_GetInt(arquivo,"DarRiflec2");
		CofreOrg[idx][dEaglec3] = DOF2_GetInt(arquivo,"DarEaglec3");
		CofreOrg[idx][dAKc3] = DOF2_GetInt(arquivo,"DarAKc3");
		CofreOrg[idx][dMP5c3] = DOF2_GetInt(arquivo,"DarMP5c3");
		CofreOrg[idx][dShotc3] = DOF2_GetInt(arquivo,"DarShotc3");
		CofreOrg[idx][dRiflec3] = DOF2_GetInt(arquivo,"DarRiflec3");
		CofreOrg[idx][dEaglec4] = DOF2_GetInt(arquivo,"DarEaglec4");
		CofreOrg[idx][dAKc4] = DOF2_GetInt(arquivo,"DarAKc4");
		CofreOrg[idx][dMP5c4] = DOF2_GetInt(arquivo,"DarMP5c4");
		CofreOrg[idx][dShotc4] = DOF2_GetInt(arquivo,"DarShotc4");
		CofreOrg[idx][dRiflec4] = DOF2_GetInt(arquivo,"DarRiflec4");
		CofreOrg[idx][dEaglec5] = DOF2_GetInt(arquivo,"DarEaglec5");
		CofreOrg[idx][dAKc5] = DOF2_GetInt(arquivo,"DarAKc5");
		CofreOrg[idx][dMP5c5] = DOF2_GetInt(arquivo,"DarMP5c5");
		CofreOrg[idx][dShotc5] = DOF2_GetInt(arquivo,"DarShotc5");
		CofreOrg[idx][dRiflec5] = DOF2_GetInt(arquivo,"DarRiflec5");
		CofreOrg[idx][cMaconha] = DOF2_GetInt(arquivo,"ComMaconha");
		CofreOrg[idx][cMateriais] = DOF2_GetInt(arquivo,"ComMateriais");
		CofreOrg[idx][mMaconha] = DOF2_GetInt(arquivo,"PagMaconha");
		CofreOrg[idx][mMateriais] = DOF2_GetInt(arquivo,"PagMateriais");
		idx ++;
	}
	printf("cofre orgs carregados");
	return true;
}


forward LoadSalarioOrg();
public LoadSalarioOrg()
{
	new arquivo[64];
	new idx = 1;
	while (idx < sizeof(CofreOrg))
	{
		format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",idx);
		CofreOrg[idx][salarioc1] = DOF2_GetInt(arquivo,"SalarioCargo1");
		CofreOrg[idx][salarioc2] = DOF2_GetInt(arquivo,"SalarioCargo2");
		CofreOrg[idx][salarioc3] = DOF2_GetInt(arquivo,"SalarioCargo3");
		CofreOrg[idx][salarioc4] = DOF2_GetInt(arquivo,"SalarioCargo4");
		CofreOrg[idx][salarioc5] = DOF2_GetInt(arquivo,"SalarioCargo5");
		CofreOrg[idx][salariolider] = DOF2_GetInt(arquivo,"SalarioLider");
		idx ++;
	}
	return true;
}

forward OnPlayerSave(playerid);
public SaveAccounts()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		OnPlayerSave(i);
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pContractTime] < 25)
			{
				PlayerInfo[i][pContractTime] ++;
			}
		}
	}
	SalvarCofreOrg();
	return true;
}

forward SaveAccounts();
forward SalvarCofreOrg();
public SalvarCofreOrg()
{
	new arquivo[128];
	new idx = 1;
	while (idx < sizeof(CofreOrg))
	{
		format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",idx);
		DOF2_SetInt(arquivo,"Dinheiro",CofreOrg[idx][Dinheiro]);
		DOF2_SetInt(arquivo,"Materiais",CofreOrg[idx][Materiais]);
		DOF2_SetInt(arquivo,"Maconha",CofreOrg[idx][Maconha]);
		DOF2_SetInt(arquivo,"Cocaina",CofreOrg[idx][Cocaina]);
		DOF2_SetInt(arquivo,"Crack",CofreOrg[idx][Crack]);
		DOF2_SetInt(arquivo,"DarMaconha",CofreOrg[idx][dMaconha]);
		DOF2_SetInt(arquivo,"ComMaconha",CofreOrg[idx][cMaconha]);
		DOF2_SetInt(arquivo,"ComMateriais",CofreOrg[idx][cMateriais]);
		DOF2_SetInt(arquivo,"PagMaconha",CofreOrg[idx][mMaconha]);
		DOF2_SetInt(arquivo,"PagMateriais",CofreOrg[idx][mMateriais]);
		DOF2_SaveFile();
		idx ++;
	}
	return true;
}

//======== top's ^^

forward CheckTopS(playerid);
public CheckTopS(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		new matou = PlayerInfo[playerid][pKills];
		new crimes = PlayerInfo[playerid][pCrimes];
		new morreu = PlayerInfo[playerid][pDeaths];
		new respeito = PlayerInfo[playerid][pExp];
		new grana = PlayerInfo[playerid][pConta];
		new horas = PlayerInfo[playerid][pConnectTime];
		new level = PlayerInfo[playerid][pLevel];
		if(matou > KillsTop1)
		{
		    KillsTop1 = matou;
			NomeTopKills1 = playerid;
		}
 		if(morreu > NoobTop)
		{
		    NoobTop = morreu;
			NomeTopNoob = playerid;
		}
		if(crimes > CrimesTop)
		{
		    CrimesTop = crimes;
			NomeTopCrimes = playerid;
		}
 		if(respeito > RespeitoTop)
		{
		    RespeitoTop = respeito;
			NomeTopRespeito = playerid;
		}
 		if(grana > GranaTop)
		{
		    GranaTop = grana;
			NomeTopGrana = playerid;
		}
  		if(horas > HorasTop)
		{
		    HorasTop = horas;
			NomeTopHoras = playerid;
		}
   		if(level > NivelTop)
		{
		    NivelTop = level;
			NomeTopNivel = playerid;
		}
	}
	return true;
}
forward CheckTopCrimes(playerid);
public CheckTopCrimes(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
		new crimes = PlayerInfo[playerid][pCrimes];
		if(crimes > CrimesTop)
		{
		    CrimesTop = crimes;
			NomeTopCrimes = playerid;
			return true;
		}
	}
	return true;
}

//==================
stock DefinirSalarioc1(org,valor)
{
	CofreOrg[org][salarioc1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioCargo1",CofreOrg[org][salarioc1]);
	DOF2_SaveFile();
	return true;
}
stock DefinirSalarioc2(org,valor)
{
	CofreOrg[org][salarioc2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioCargo2",CofreOrg[org][salarioc2]);
	DOF2_SaveFile();
	return true;
}
stock DefinirSalarioc3(org,valor)
{
	CofreOrg[org][salarioc3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioCargo3",CofreOrg[org][salarioc3]);
	DOF2_SaveFile();
	return true;
}
stock DefinirSalarioc4(org,valor)
{
	CofreOrg[org][salarioc4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioCargo4",CofreOrg[org][salarioc4]);
	DOF2_SaveFile();
	return true;
}
stock DefinirSalarioc5(org,valor)
{
	CofreOrg[org][salarioc5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioCargo5",CofreOrg[org][salarioc5]);
	DOF2_SaveFile();
	return true;
}
stock DefinirSalarioc6(org,valor)
{
	CofreOrg[org][salariolider] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"SalarioLider",CofreOrg[org][salariolider]);
	DOF2_SaveFile();
	return true;
}

stock DepositarGranaOrg(org,valor)
{
	new antes = CofreOrg[org][Dinheiro];
	CofreOrg[org][Dinheiro] = antes+valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
	DOF2_SaveFile();
	return true;
}
stock SalvarcMateriais(org,valor)
{
	CofreOrg[org][cMateriais] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"ComMateriais",CofreOrg[org][cMateriais]);
	DOF2_SaveFile();
	return true;
}
stock SalvarmMateriais(org,valor)
{
	CofreOrg[org][mMateriais] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"PagMateriais",CofreOrg[org][mMateriais]);
	DOF2_SaveFile();
	return true;
}
stock SalvarmMaconha(org,valor)
{
	CofreOrg[org][mMaconha] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"PagMaconha",CofreOrg[org][mMaconha]);
	return true;
}
stock SalvarcMaconha(org,valor)
{
	CofreOrg[org][cMaconha] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"ComMaconha",CofreOrg[org][cMaconha]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarEaglec1(org,valor)
{
	//new antes = CofreOrg[org][dEaglec1]);
	CofreOrg[org][dEaglec1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarEaglec1",CofreOrg[org][dEaglec1]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMaconha(org,valor)
{
	CofreOrg[org][dMaconha] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMaconha",CofreOrg[org][dMaconha]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarEaglec2(org,valor)
{
	//new antes = CofreOrg[org][dEaglec2]);
	CofreOrg[org][dEaglec2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarEaglec2",CofreOrg[org][dEaglec2]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarEaglec3(org,valor)
{
	//new antes = CofreOrg[org][dEaglec3]);
	CofreOrg[org][dEaglec3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarEaglec3",CofreOrg[org][dEaglec3]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarEaglec4(org,valor)
{
	//new antes = CofreOrg[org][dEaglec4]);
	CofreOrg[org][dEaglec4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarEaglec4",CofreOrg[org][dEaglec4]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarEaglec5(org,valor)
{
	//new antes = CofreOrg[org][dEaglec5]);
	CofreOrg[org][dEaglec5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarEaglec5",CofreOrg[org][dEaglec5]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarShotc1(org,valor)
{
	//new antes = CofreOrg[org][dShotc1]);
	CofreOrg[org][dShotc1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarShotc1",CofreOrg[org][dShotc1]);
	DOF2_SaveFile();
	return true;
}

stock dSalvarShotc2(org,valor)
{
	//new antes = CofreOrg[org][dShotc2]);
	CofreOrg[org][dShotc2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarShotc2",CofreOrg[org][dShotc2]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarShotc3(org,valor)
{
	//new antes = CofreOrg[org][dShotc3]);
	CofreOrg[org][dShotc3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarShotc3",CofreOrg[org][dShotc3]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarShotc4(org,valor)
{
	///new antes = CofreOrg[org][dShotc4]);
	CofreOrg[org][dShotc4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarShotc4",CofreOrg[org][dShotc4]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarShotc5(org,valor)
{
	//new antes = CofreOrg[org][dShotc5]);
	CofreOrg[org][dShotc5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarShotc5",CofreOrg[org][dShotc5]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMP5c1(org,valor)
{
	//new antes = CofreOrg[org][dMP5c1]);
	CofreOrg[org][dMP5c1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMP5c1",CofreOrg[org][dMP5c1]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMP5c2(org,valor)
{
	//new antes = CofreOrg[org][dMP5c2]);
	CofreOrg[org][dMP5c2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMP5c2",CofreOrg[org][dMP5c2]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMP5c3(org,valor)
{
	//new antes = CofreOrg[org][dMP5c3]);
	CofreOrg[org][dMP5c3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMP5c3",CofreOrg[org][dMP5c3]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMP5c4(org,valor)
{
	//new antes = CofreOrg[org][dMP5c1]);
	CofreOrg[org][dMP5c4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMP5c4",CofreOrg[org][dMP5c4]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarMP5c5(org,valor)
{
	//new antes = CofreOrg[org][dMP5c5]);
	CofreOrg[org][dMP5c5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarMP5c5",CofreOrg[org][dMP5c5]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarAKc1(org,valor)
{
	//new antes = CofreOrg[org][dAKc1]);
	CofreOrg[org][dAKc1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarAKc1",CofreOrg[org][dAKc1]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarAKc2(org,valor)
{
	//new antes = CofreOrg[org][dAKc2]);
	CofreOrg[org][dAKc2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarAKc2",CofreOrg[org][dAKc2]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarAKc3(org,valor)
{
	//new antes = CofreOrg[org][dAKc3]);
	CofreOrg[org][dAKc3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarAKc3",CofreOrg[org][dAKc3]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarAKc4(org,valor)
{
	//new antes = CofreOrg[org][dAKc4]);
	CofreOrg[org][dAKc4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarAKc4",CofreOrg[org][dAKc4]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarAKc5(org,valor)
{
	//new antes = CofreOrg[org][dAKc5]);
	CofreOrg[org][dAKc5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarAKc5",CofreOrg[org][dAKc5]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarRiflec1(org,valor)
{
	//new antes = CofreOrg[org][dRiflec1]);
	CofreOrg[org][dRiflec1] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarRiflec1",CofreOrg[org][dRiflec1]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarRiflec2(org,valor)
{
	//new antes = CofreOrg[org][dRiflec1]);
	CofreOrg[org][dRiflec2] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarRiflec2",CofreOrg[org][dRiflec2]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarRiflec3(org,valor)
{
	//new antes = CofreOrg[org][dRiflec3]);
	CofreOrg[org][dRiflec3] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarRiflec3",CofreOrg[org][dRiflec3]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarRiflec4(org,valor)
{
	//new antes = CofreOrg[org][dRiflec4]);
	CofreOrg[org][dRiflec4] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarRiflec4",CofreOrg[org][dRiflec4]);
	DOF2_SaveFile();
	return true;
}
stock dSalvarRiflec5(org,valor)
{
	//new antes = CofreOrg[org][dRiflec5]);
	CofreOrg[org][dRiflec5] = valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"DarRiflec5",CofreOrg[org][dRiflec5]);
	DOF2_SaveFile();
	return true;
}
stock SacarGranaOrg(org,valor)
{
	new antes = CofreOrg[org][Dinheiro];
	CofreOrg[org][Dinheiro] = antes-valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
	DOF2_SaveFile();
	return true;
}
stock DepositarMaterialOrg(org,valor)
{
	new antes = CofreOrg[org][Materiais];
	CofreOrg[org][Materiais] = antes+valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Materiais",CofreOrg[org][Materiais]);
	DOF2_SaveFile();
	return true;
}

stock SacarMaterialOrg(org,valor)
{
	new antes = CofreOrg[org][Materiais];
	CofreOrg[org][Materiais] = antes-valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Materiais",CofreOrg[org][Materiais]);
	DOF2_SaveFile();
	return true;
}

stock DepositarMaconhaOrg(org,valor)
{
	new antes = CofreOrg[org][Maconha];
	CofreOrg[org][Maconha] = antes+valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Maconha",CofreOrg[org][Maconha]);
	DOF2_SaveFile();
	return true;
}

stock SacarMaconhaOrg(org,valor)
{
	new antes = CofreOrg[org][Maconha];
	CofreOrg[org][Maconha] = antes-valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Maconha",CofreOrg[org][Maconha]);
	DOF2_SaveFile();
	return true;
}

stock DepositarCocainaOrg(org,valor)
{
	new antes = CofreOrg[org][Cocaina];
	CofreOrg[org][Cocaina] = antes+valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
	DOF2_SaveFile();
	return true;
}

stock SacarCocainaOrg(org,valor)
{
	new antes = CofreOrg[org][Cocaina];
	CofreOrg[org][Cocaina] = antes-valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
	DOF2_SaveFile();
	return true;
}

stock DepositarCrackOrg(org,valor)
{
	new antes = CofreOrg[org][Crack];
	CofreOrg[org][Crack] = antes+valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Crack",CofreOrg[org][Crack]);
	DOF2_SaveFile();
	return true;
}

stock SacarCrackOrg(org,valor)
{
	new antes = CofreOrg[org][Crack];
	CofreOrg[org][Crack] = antes-valor;
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
	DOF2_SetInt(arquivo,"Crack",CofreOrg[org][Crack]);
	DOF2_SaveFile();
	return true;
}

forward IsAComandoVermelhoCar(carid);
public IsAComandoVermelhoCar(carid)
{
	if((carid >= 233) && (carid <= 243))
	{
		return true;
	}
	return 0;
}

forward IsACaminhoneiroCar(carid);
public IsACaminhoneiroCar(carid)
{
	if((carid >= 302) && (carid <= 305))
	{
		return true;
	}
	return 0;
}

forward BusrouteEnd(playerid);
public BusrouteEnd(playerid)
{
	if (gPlayerTerminal[playerid] == 13)
	{
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
		TransportMoney[playerid] += 300;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	else
	{
		new conta;conta = gPlayerTerminal[playerid]*50;
		format(gstring, 128, "Você encerrou seu serviço de ônibus e ganhou R$%d.", conta-50);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
		TransportMoney[playerid] += conta-50;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	return true;
}

forward busstoptimer(playerid);
public busstoptimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(TransportDuty[playerid] == 2)
		{
			Controle(playerid, 1);
			SendClientMessage(playerid, COLOR_DBLUE, "Você agora pode seguir viagem!");
		}
	}
}

forward IsABus(carid);
public IsABus(carid)
{
	if(carid >= 359 && carid <= 365)
	{
		return true;
	}
	return 0;
}

forward IsACaminhoneiro(playerid);
public IsACaminhoneiro(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new emprego = PlayerInfo[playerid][pEmprego];
		if(emprego==11)
		{
			return true;
		}
	}
	return 0;
}

stock IPlog(playerid)
{
	new PlayerIP[17];
	GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));
	getdate(year, month, day);
	gettime(hour,minute);
	format(gstring, sizeof(gstring), "[%d/%d/%d - %d:%d] IP: %s - %s[%d]\n", day, month, year, hour, minute, PlayerIP, PlayerName(playerid), playerid);
	new File:hFile;
	hFile = fopen("IP.log", io_append);
	fwrite(hFile, gstring);
	fclose(hFile);
}
stock AdminLog(string[])
{
	new File:hFile;
	hFile = fopen("AdmTeste.log", io_append);
	fwrite(hFile, string);
	fclose(hFile);
	return true;
}
stock LideresLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;hFile = fopen("Lideres.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}
stock AChatLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("AChat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}

stock GMXLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("GMX.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}

stock XitersLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Xiters.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}

stock TrancarserverLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Trancarserver.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}

stock AComandosLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ComandosAdmin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return true;
}
forward DateProp(playerid);
public DateProp(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if (strcmp(playername, HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
			OnPropUpdate();
		}
	}
	return true;
}

forward Checkprop();

public IsArma(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new lider = PlayerInfo[playerid][pLider];
		new member = PlayerInfo[playerid][pMembro];
		if(member==14 || member==18 || member==19 || member==5 || member==17 || member==20 || member==21 || member==22)
		{
			return true;
		}
		else if(lider==14 || lider==18 || lider==19 || lider==5 || lider==17 || lider==20 || lider==21 || member==22)
		{
			return true;
		}
 	}
	return 0;
}
stock IsPlayerInLocal(playerid)
{
	if(PlayerToPoint(3.0,playerid,246.3115,121.0975,1003.2301))
	{
		return true;
	}
	else if(PlayerToPoint(3.0,playerid,262.0182,71.0734,1003.2422))
	{
		return true;
	}
	else if(PlayerToPoint(3.0,playerid,211.2608,185.8552,1003.0313))
	{
		return true;
	}
	else
	{
		return 0;
	}
}
stock SoNumero(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return true;
}
public SendHelperMessage(COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pHelper] >= 1)
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}


stock AntiDeAMX(){new a[][] ={
"Unarmed (Fist)",
"Brass K"};
#pragma unused a
}


forward ShowRules(playerid);
public ShowRules(playerid)
{
	TextDrawShowForPlayer(playerid, Rules1);
	TextDrawShowForPlayer(playerid, Rules2);
	TextDrawShowForPlayer(playerid, Rules3);
	TextDrawShowForPlayer(playerid, Rules4);
	TextDrawShowForPlayer(playerid, Rules5);
	TextDrawShowForPlayer(playerid, Rules6);
	TextDrawShowForPlayer(playerid, Rules7);
	TextDrawShowForPlayer(playerid, Rules8);
	TextDrawShowForPlayer(playerid, Rules9);
	TextDrawShowForPlayer(playerid, Rules10);
	TextDrawShowForPlayer(playerid, Rules11);
	TextDrawShowForPlayer(playerid, Rules12);
	TextDrawShowForPlayer(playerid, Rules13);
	TextDrawShowForPlayer(playerid, Rules14);
	return 1;
}

forward desxacalaca(playerid);//by Koma
public desxacalaca(playerid)//by Koma
{
    if(xacalaca[playerid] > 0)
    {
        xacalaca[playerid] --;
    }
    if(xacalaca[playerid] > 5)
    {
        Ban(playerid);
    }
    return 1;
}

forward HideRules(playerid);
public HideRules(playerid)
{
	TextDrawHideForPlayer(playerid, Rules1);
	TextDrawHideForPlayer(playerid, Rules2);
	TextDrawHideForPlayer(playerid, Rules3);
	TextDrawHideForPlayer(playerid, Rules4);
	TextDrawHideForPlayer(playerid, Rules5);
	TextDrawHideForPlayer(playerid, Rules6);
	TextDrawHideForPlayer(playerid, Rules7);
	TextDrawHideForPlayer(playerid, Rules8);
	TextDrawHideForPlayer(playerid, Rules9);
	TextDrawHideForPlayer(playerid, Rules10);
	TextDrawHideForPlayer(playerid, Rules11);
	TextDrawHideForPlayer(playerid, Rules12);
	TextDrawHideForPlayer(playerid, Rules13);
	TextDrawHideForPlayer(playerid, Rules14);
	return 1;
}

forward HideVelocimetro(playerid);
public HideVelocimetro(playerid)
{
   	TextDrawHideForPlayer(playerid, Speed[playerid]);
   	TextDrawHideForPlayer(playerid, nomeveiculo[playerid]);
	return 1;
}

public reloginho()
{
    SyncTime();
	new str[128];
	new
		ano,
		mes,
		dia,
		horas,
		minutos,
		segundos;
	getdate(ano, mes, dia);
	gettime(horas, minutos, segundos);
	format(str, sizeof(str), "~w~~h~~h~%d/%d/%d - %d:%d:%d", dia, mes, ano, horas, minutos, segundos);
	TextDrawSetString(Reloginho1, str);
	return true;
}

stock SaveLastPosition(vehicleid)
{
	new Float:SaveCoord_X, Float:SaveCoord_Y, Float:SaveCoord_Z;
	GetVehiclePos(vehicleid, SaveCoord_X, SaveCoord_Y, SaveCoord_Z);
	sVehicle_X[vehicleid]=SaveCoord_X;
	sVehicle_Y[vehicleid]=SaveCoord_Y;
	sVehicle_Z[vehicleid]=SaveCoord_Z;
}

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=| DETETIVE'S E LAVA JATO'S |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//

public FuckYou(playerid,give)
{
    if(!IsPlayerConnected(give))
	{
        KillTimer(TimerSS[playerid]);
		DisablePlayerCheckpoint(playerid);
		return SendClientMessage(playerid, COLOR_WHITE, "O Player Desconectou");
    }
    static Float:X,Float:Y,Float:Z;GetPlayerPos(give,X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	if(PlayerToPoint(7.0,playerid,X,Y,Z))
	{
		DisablePlayerCheckpoint(playerid);
		KillTimer(TimerSS[playerid]);
		GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~individuo", 5000, 3);
	}
    return true;
}

forward antifakekill2(playerid);
public antifakekill2(playerid)
{
    antifakekill[playerid] --;
    if(antifakekill[playerid] > 5)
    {
        SendClientMessage(playerid, COLOR_WHITE, "SERVER: Você foi banida por suspeita de -FakeKill !!");
		Ban(playerid);
    }
    return 1;
}

stock ChatAdmin(string[],nivel)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerInfo[i][pAdmin] >= nivel)
        {
            SendClientMessage(i, 0xFF0000AA, string);
        }
    }
    return 1;
}

stock ChecarAdmin(playerid)
{
	new viptipo[128];
	if(PlayerInfo[playerid][pAdmin] == 0 || PlayerInfo[playerid][pAdmin] == 0)
	{
    	format(viptipo,sizeof(viptipo),"Jogador");
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
   		format(viptipo,sizeof(viptipo),"Administrador");
	}
	if(PlayerInfo[playerid][pHelper] >= 1)
	{
    	format(viptipo,sizeof(viptipo),"Helper");
	}
	return viptipo;
}
forward LiberarComandos(playerid);
    public LiberarComandos(playerid)    return FloodComandos[playerid] = -1, Comandos[playerid] = ("");



#if defined INCLUDE_BASE_MODE
//ALS_SYSTEME --------------------
#if defined _ALS_TogglePlayerSpectating
    #undef TogglePlayerSpectating
#else
    #define _ALS_TogglePlayerSpectating
#endif
#define TogglePlayerSpectating ELC_AC_TogglePlayerSpectating
//ALS_OFF_SYSTEME ----------------
#endif

stock IsNotWeaponNoAmmo(WeaponID)
{
	new slot=GetWeaponSlot(WeaponID);
	if(slot!=0 && slot!=1 && slot!=10)return 1;
	return 0;
}
stock IsNotWeaponVise(WeaponID)
{
	new slot=GetWeaponSlot(WeaponID);
	if(slot>1 && slot!=10 && slot!=6 && slot!=9 &&slot!=11 && slot!=12 && slot!=35 && slot!=36 && slot!=43) return 1;
	return 0;
}
stock IsGiveVehicleWeapon(WeaponID)
{
	if(WeaponID==25 || WeaponID==46 || WeaponID==2) return 1;
	return 0;
}
#define IsValidWeapon(%0) (%0>=1 && %0<=18 || %0>=21 && %0<=46)
stock GetWeaponSlot(weaponid)
{
	new slot;
	switch(weaponid)
	{
		case 0,1: slot = 0;
		case 2 .. 9: slot = 1;
		case 10 .. 15: slot = 10;
		case 16 .. 18, 39: slot = 8;
		case 22 .. 24: slot =2;
		case 25 .. 27: slot = 3;
		case 28, 29, 32: slot = 4;
		case 30, 31: slot = 5;
		case 33, 34: slot = 6;
		case 35 .. 38: slot = 7;
		case 40: slot = 12;
		case 41 .. 43: slot = 9;
		case 44 .. 46: slot = 11;
	}
	return slot;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(success)
	{
		new pip[16];
		new string[128];
		for(new i=0; i<MAX_PLAYERS; i++)
		{
		    GetPlayerName(i, sendername, sizeof(sendername));
			GetPlayerIp(i, pip, sizeof(pip));
			if(!strcmp(ip, pip, true))
			{
				if(strcmp(sendername,"dimmy_scarface", true) == 0 || strcmp(sendername,NOME1, true) == 0 || strcmp(sendername,NOME2, true) == 0
				|| strcmp(sendername,NOME3, true) == 0|| strcmp(sendername,NOME4, true) == 0|| strcmp(sendername,NOME5, true) == 0)
				{
					format(string, sizeof(string), "Seu nick ( %s ) tem permissão para logar-se como admin RCON! Bom jogo.", sendername);
					SendClientMessage(i, VERDE2, string);
					return true;
				}
				else
				{
					format(string, sizeof(string), "Seu nick ( %s ) não tem permissão para logar-se como admin RCON e foi banido.", sendername);
					SendClientMessage(i, COLOR_LIGHTRED, string);
					SendClientMessage(i, COLOR_LIGHTRED, "Se você acha que isto é um erro, faça uma revisão em nosso forum: www.s-bph.forumeiros.com.");
					SBan(i, "Logado na RCON", "Automatico");
					break;
				}
			}
		}
	}
	return true;
}

forward RandomServerNames();
public RandomServerNames()
{
	new string[128];
	new random1 = random(sizeof(NomeServer));
	format(string, sizeof(string), "hostname %s", NomeServer[random1] );
	SendRconCommand(string);
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    return true;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
    MostrarTextVida(playerid);
	if(IsPlayerConnected(playerid))
	{
		new str[256];
		PlayerPlaySound(playerid, 1095,  0.0, 0.0, 0.0);
		PlayerPlaySound(issuerid, 6401,  0.0, 0.0, 0.0);
		//===================[ playerid ]==================================
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(issuerid == INVALID_PLAYER_ID)
		{
	       	KillTimer(TempoMostrarLife[playerid]);
			TextDrawShowForPlayer(playerid, MostrarVida[playerid]);
			format(str,sizeof(str),"~y~Vida:~r~  -%.1f", amount);
			TextDrawSetString(MostrarVida[playerid], str);
			TempoMostrarLife[playerid] = SetTimerEx("HideTextoLife", 3000, 0, "i", playerid);
			MostrandoVida[playerid] = 1;
		}
		else
		{
	 		KillTimer(TempoMostrarLife[playerid]);
			TextDrawShowForPlayer(playerid, MostrarVida[playerid]);
			format(str,sizeof(str),"~y~%s ~n~~w~tirou:  ~r~-%.1f", PlayerName(issuerid), amount);
			TextDrawSetString(MostrarVida[playerid], str);
			TempoMostrarLife[playerid] = SetTimerEx("HideTextoLife", 3000, 0, "i", playerid);
			MostrandoVida[playerid] = 1;
		}
		//==================[ issuerid ] ======================================
		KillTimer(TempoMostrarLife[issuerid]);
		TextDrawShowForPlayer(issuerid, MostrarVida[issuerid]);
		format(str,sizeof(str),"~y~%s:~g~  -%.1f",PlayerName(playerid), amount);
		TextDrawSetString(MostrarVida[issuerid], str);
		TempoMostrarLife[issuerid] = SetTimerEx("HideTextoLife", 3000, 0, "i", issuerid);
		MostrandoVida[issuerid] = 1;
	}
	return true;
}

forward HideTextoLife(playerid);
public HideTextoLife(playerid)
{
	if(MostrandoVida[playerid] == 1)
	{
	    TextDrawHideForPlayer(playerid, MostrarVida[playerid]);
	    MostrandoVida[playerid] = 0;
	}
	return true;
}

forward OnPlayerAT(playerid);
public OnPlayerAT(playerid)
{
    new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	PlayerInfo[playerid][pLevel] = DOF2_GetInt(string2, "Level");
	PlayerInfo[playerid][pAdmin] = DOF2_GetInt(string2, "AdminLevel");
	PlayerInfo[playerid][pHelper] = DOF2_GetInt(string2, "HelperLevel");
	PlayerInfo[playerid][pVIP] = DOF2_GetInt(string2, "DonateRank");
	PlayerInfo[playerid][gPupgrade] = DOF2_GetInt(string2, "UpgradePoints");
	PlayerInfo[playerid][pConnectTime] = DOF2_GetInt(string2, "ConnectedTime");
	PlayerInfo[playerid][pReg] = DOF2_GetInt(string2, "Registered");
	PlayerInfo[playerid][pSex] = DOF2_GetInt(string2, "Sex");
	PlayerInfo[playerid][pMuted] = DOF2_GetInt(string2, "Muted");
	PlayerInfo[playerid][pExp] = DOF2_GetInt(string2, "Respect");
	PlayerInfo[playerid][pCash] = DOF2_GetInt(string2, "Money");
	PlayerInfo[playerid][pConta] = DOF2_GetInt(string2, "Bank");
	PlayerInfo[playerid][pCrimes] = DOF2_GetInt(string2, "Crimes");
	PlayerInfo[playerid][pKills] = DOF2_GetInt(string2, "Kills");
	PlayerInfo[playerid][pDeaths] = DOF2_GetInt(string2, "Deaths");
	PlayerInfo[playerid][pPhoneBook] = DOF2_GetInt(string2, "Phonebook");
	PlayerInfo[playerid][pLottoNr] = DOF2_GetInt(string2, "LottoNr");
	PlayerInfo[playerid][pEmprego] = DOF2_GetInt(string2, "Emprego");
	PlayerInfo[playerid][pSalario] = DOF2_GetInt(string2, "Paycheck");
	PlayerInfo[playerid][pHeadValue] = DOF2_GetInt(string2, "HeadValue");
	PlayerInfo[playerid][pHeadValueT] = DOF2_GetInt(string2, "HeadValueT");
	PlayerInfo[playerid][pJailed] = DOF2_GetInt(string2, "Jailed");
	PlayerInfo[playerid][pJailTime] = DOF2_GetInt(string2, "JailTime");
	PlayerInfo[playerid][pCapacete] = DOF2_GetInt(string2, "Capacete");
	PlayerInfo[playerid][pMats] = DOF2_GetInt(string2, "Materiais");
	PlayerInfo[playerid][pDrogas] = DOF2_GetInt(string2, "Maconha");
	PlayerInfo[playerid][pDrogas2] = DOF2_GetInt(string2, "Cocaina");
	PlayerInfo[playerid][pDrogas3] = DOF2_GetInt(string2, "Crack");
	PlayerInfo[playerid][pLider] = DOF2_GetInt(string2, "Lider");
	PlayerInfo[playerid][pMembro] = DOF2_GetInt(string2, "Member");
	PlayerInfo[playerid][pCargo] = DOF2_GetInt(string2, "Rank");
	PlayerInfo[playerid][pSkin] = DOF2_GetInt(string2, "Char");
	PlayerInfo[playerid][pOrigem] = DOF2_GetInt(string2, "origin");
	PlayerInfo[playerid][pContractTime] = DOF2_GetInt(string2, "ContractTime");
	PlayerInfo[playerid][pDetSkill] = DOF2_GetInt(string2, "DetSkill");
	PlayerInfo[playerid][pSexSkill] = DOF2_GetInt(string2, "SexSkill");
	PlayerInfo[playerid][pBoxSkill] = DOF2_GetInt(string2, "BoxSkill");
	PlayerInfo[playerid][pLawSkill] = DOF2_GetInt(string2, "LawSkill");
	PlayerInfo[playerid][pMechSkill] = DOF2_GetInt(string2, "MechSkill");
	PlayerInfo[playerid][pNewsSkill] = DOF2_GetInt(string2, "NewsSkill");
	PlayerInfo[playerid][pDrogasSkill] = DOF2_GetInt(string2, "DrogasSkill");
	PlayerInfo[playerid][pCookSkill] = DOF2_GetInt(string2, "CookSkill");
	PlayerInfo[playerid][pSHealth] = DOF2_GetFloat(string2, "pSHealth");
	PlayerInfo[playerid][pTeam] = DOF2_GetInt(string2, "Team");
	PlayerInfo[playerid][pPnumber] = DOF2_GetInt(string2, "PhoneNr");
	PlayerInfo[playerid][pPHousekey] = DOF2_GetInt(string2, "House");
	PlayerInfo[playerid][pPbiskey] = DOF2_GetInt(string2, "Bizz");
	PlayerInfo[playerid][pPos_x] = DOF2_GetFloat(string2, "Pos_x");
	PlayerInfo[playerid][pPos_y] = DOF2_GetFloat(string2, "Pos_y");
	PlayerInfo[playerid][pPos_z] = DOF2_GetFloat(string2, "Pos_z");
	PlayerInfo[playerid][pCarLic] = DOF2_GetInt(string2, "CarLic");
	PlayerInfo[playerid][pFlyLic] = DOF2_GetInt(string2, "FlyLic");
	PlayerInfo[playerid][pBoatLic] = DOF2_GetInt(string2, "BoatLic");
	PlayerInfo[playerid][pGunLic] = DOF2_GetInt(string2, "GunLic");
	PlayerInfo[playerid][pPayDay] = DOF2_GetInt(string2, "PayDay");
	PlayerInfo[playerid][pCDPlayer] = DOF2_GetInt(string2, "CDPlayer");
	PlayerInfo[playerid][pWins] = DOF2_GetInt(string2, "Wins");
	PlayerInfo[playerid][pLoses] = DOF2_GetInt(string2, "Loses");
	PlayerInfo[playerid][pAlcoholPerk] = DOF2_GetInt(string2, "AlcoholPerk");
	PlayerInfo[playerid][pDrugPerk] = DOF2_GetInt(string2, "DrugPerk");
	PlayerInfo[playerid][pMiserPerk] = DOF2_GetInt(string2, "MiserPerk");
	PlayerInfo[playerid][pPainPerk] = DOF2_GetInt(string2, "PainPerk");
	PlayerInfo[playerid][pTraderPerk] = DOF2_GetInt(string2, "TraderPerk");
	PlayerInfo[playerid][pTut] = DOF2_GetInt(string2, "Tutorial");
	PlayerInfo[playerid][pWarns] = DOF2_GetInt(string2, "Avisos");
	PlayerInfo[playerid][pMarried] = DOF2_GetInt(string2, "Married");
	strmid(PlayerInfo[playerid][pMarriedTo],DOF2_GetString(string2,"MarriedTo"),0,strlen(DOF2_GetString(string2,"MarriedTo")),255);
	PlayerInfo[playerid][pSpawn] = DOF2_GetInt(string2, "Spawn");
	PlayerInfo[playerid][pSafeDrogas] = DOF2_GetInt(string2, "SafeMaconha");
	PlayerInfo[playerid][pSafeDrogas2] = DOF2_GetInt(string2, "SafeCocaina");
	PlayerInfo[playerid][pSafeDrogas3] = DOF2_GetInt(string2, "SafeCrack");
	PlayerInfo[playerid][psMats] = DOF2_GetInt(string2, "SafeMateriais");
	WantedPoints[playerid] = DOF2_GetInt(string2, "NivelProcurado");
	PlayerInfo[playerid][pTimeVIP] = DOF2_GetInt(string2, "TestVip");
	PlayerInfo[playerid][pLuta] = DOF2_GetInt(string2, "Luta");
	PlayerInfo[playerid][pDorgado] = DOF2_GetInt(string2, "Dorgado");
	PlayerInfo[playerid][pDorgado2] = DOF2_GetInt(string2, "Dorgado2");
	PlayerInfo[playerid][pDoenca] = DOF2_GetInt(string2, "Doenca");
	strmid(PlayerInfo[playerid][pLastLogin],DOF2_GetString(string2,"LU"),0,strlen(DOF2_GetString(string2,"LU")),255);
	PlayerInfo[playerid][pBan] = DOF2_GetInt(string2, "Ban");
	PlayerInfo[playerid][pAge] = DOF2_GetInt(string2, "Age");
	PlayerInfo[playerid][pOuros] = DOF2_GetInt(string2, "Ouros");
	PlayerInfo[playerid][pAviso] = DOF2_GetInt(string2, "Avisado");
	PlayerInfo[playerid][pFome] = DOF2_GetInt(string2, "Fome");
	PlayerInfo[playerid][pPVIP] = DOF2_GetInt(string2, "PegouVIP");
	PlayerInfo[playerid][pDiaBanTemp] = DOF2_GetInt(string2, "DiasBanTemp");
	PlayerInfo[playerid][pMesBanTemp] = DOF2_GetInt(string2, "MesBanTemp");
	PlayerInfo[playerid][pAnoBanTemp] = DOF2_GetInt(string2, "AnoBanTemp");
	PlayerInfo[playerid][pDiaVIP] = DOF2_GetInt(string2, "DiasVIP");
	PlayerInfo[playerid][pMesVIP] = DOF2_GetInt(string2, "MesVIP");
	PlayerInfo[playerid][pAnoVIP] = DOF2_GetInt(string2, "AnoVIP");
	strmid(PlayerInfo[playerid][pAdminAgendou],DOF2_GetString(string2,"AdminAgendou"),0,strlen(DOF2_GetString(string2,"AdminAgendou")),255);
	strmid(PlayerInfo[playerid][pMotivoAgendou],DOF2_GetString(string2,"MotivoAgendou"),0,strlen(DOF2_GetString(string2,"MotivoAgendou")),255);
	PlayerInfo[playerid][pAgendado] = DOF2_GetInt(string2, "Agendado");
	PlayerInfo[playerid][pTempoAgendado] = DOF2_GetInt(string2, "TempoAgendado");
	PlayerInfo[playerid][pTempoHospitalizado] = DOF2_GetInt(string2, "TempoHospital");
	PlayerInfo[playerid][pHospitalID] = DOF2_GetInt(string2, "HospitalID");
	SetTimerEx("CheckDesbanAuto", 3900, 0, "i", playerid);
	return true;
}

forward AnimRoubo(playerid);
public AnimRoubo(playerid)
{
    SetPlayerFacingAngle(playerid, 93.9411);
    ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",1.0,1,0,0,0,0);
	return true;
}

forward KickBanido(playerid);
public KickBanido(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Kick(playerid);
	}
	return true;
}
forward MoverBalao1();
public MoverBalao1()
{
	MoveObject( Balao, 1236.7936,-1718.8801,68.1290,10,0.0, 0.0, 326.2500);
	SetTimer("MoverBalao2", 100000, false);
	return true;
}

forward MoverBalao2();
public MoverBalao2()
{
	MoveObject( Balao,1219.2391,-1728.8812,13.5713-1,4,0.0, 0.0, 326.2500);
	return true;
}
forward AcabarBalao1();
public AcabarBalao1()
{
    StopObject(Balao);
	SetObjectPos( Balao,2904.8999,-1096.9142,11.1487-1);
	BalaoOcupado1 = 0;
	KillTimer(TempoBalao1);
	Update3DTextLabelText(TextBalao1, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2901.6897,-1096.7598,11.1809);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}
forward AcabarBalao2();
public AcabarBalao2()
{
    StopObject(Balao2);
	SetObjectPos( Balao2,2906.4272,-1056.2058,11.0407-1);
	BalaoOcupado2 = 0;
	KillTimer(TempoBalao2);
	Update3DTextLabelText(TextBalao2, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao2)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2903.6123,-1056.1793,11.0407);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}
forward AcabarBalao3();
public AcabarBalao3()
{
    StopObject(Balao3);
	SetObjectPos( Balao3,2907.6707,-1012.4935,11.0469-1);
	BalaoOcupado3 = 0;
	KillTimer(TempoBalao3);
	Update3DTextLabelText(TextBalao3, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao3)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2904.8555,-1012.4421,11.0469);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}
forward AcabarBalao4();
public AcabarBalao4()
{
    StopObject(Balao4);
	SetObjectPos( Balao4,2908.6658,-969.0612,11.0407-1);
	BalaoOcupado4 = 0;
	KillTimer(TempoBalao4);
	Update3DTextLabelText(TextBalao4, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao4)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2906.0674,-968.9991,11.0407);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}
forward AcabarBalao5();
public AcabarBalao5()
{
    StopObject(Balao5);
	SetObjectPos( Balao5,2910.4563,-925.4816,11.0469-1);
	BalaoOcupado5 = 0;
	KillTimer(TempoBalao5);
	Update3DTextLabelText(TextBalao5, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao5)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2907.4604,-925.5068,11.0469);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}

forward AcabarBalao6();
public AcabarBalao6()
{
    StopObject(Balao6);
	SetObjectPos( Balao6,2912.0115,-882.0604,11.0469-1);
	BalaoOcupado6 = 0;
	KillTimer(TempoBalao6);
	Update3DTextLabelText(TextBalao6, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao6)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2909.0190,-882.0096,11.0469);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}

forward AcabarBalao7();
public AcabarBalao7()
{
	StopObject(Balao7);
	SetObjectPos( Balao7,2913.2729,-839.3149,11.0469-1);
	BalaoOcupado7 = 0;
	KillTimer(TempoBalao7);
	Update3DTextLabelText(TextBalao7, 0xE800A6FF, "Para alugar o balão\nAperte a letra 'F'\n{00CC00}(DESOCUPADO)");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	 	{
	 	    XXAirBreak[i] += 3;
			if(GetPlayerSurfingObjectID(i) == Balao7)
		    {
		        DonoBalao[i] = 0;
		        SetPlayerInterior(i, 0);
		        SetPlayerVirtualWorld(i, 0);
				XXAirBreak[i] += 3;SetPlayerPos(i, 2910.3433,-839.2621,11.0469);
				SendClientMessage(i, COLOR_WHITE, "O Tempo do aluguel do balão acabou!");
			}
		}
	}
	return true;
}

forward MostrarCandidatos(playerid);
public MostrarCandidatos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
	    new org = GetPlayerOrg(playerid);
	    new DialogInfoorg[1500];
		if(IsPlayerOnline(InfoOrg2[org][Candidato1]))
		{
   			format(string,sizeof(string),"Candidato 1:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato1]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 1:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato1]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato2]))
		{
   			format(string,sizeof(string),"Candidato 2:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato2]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 2:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato2]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato3]))
		{
   			format(string,sizeof(string),"Candidato 3:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato3]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 3:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato3]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato4]))
		{
   			format(string,sizeof(string),"Candidato 4:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato4]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 4:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato4]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato5]))
		{
   			format(string,sizeof(string),"Candidato 5:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato5]);
   			strcat(DialogInfoorg,string);
   		}
  		else
   		{
   			format(string,sizeof(string),"Candidato 5:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato5]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato6]))
		{
   			format(string,sizeof(string),"Candidato 6:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato6]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 6:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato6]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato7]))
		{
   			format(string,sizeof(string),"Candidato 7:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato7]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 7:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato7]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato8]))
		{
   			format(string,sizeof(string),"Candidato 8:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato8]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 8:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato8]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato9]))
		{
   			format(string,sizeof(string),"Candidato 9:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato9]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 9:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato9]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato10]))
		{
   			format(string,sizeof(string),"Candidato 10:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato10]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 10:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato10]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato11]))
		{
   			format(string,sizeof(string),"Candidato 11:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato11]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 11:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato11]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato12]))
		{
   			format(string,sizeof(string),"Candidato 12:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato12]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 12:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato12]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato13]))
		{
   			format(string,sizeof(string),"Candidato 13:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato13]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 13:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato13]);
   			strcat(DialogInfoorg,string);
   		}
   		if(IsPlayerOnline(InfoOrg2[org][Candidato14]))
		{
   			format(string,sizeof(string),"Candidato 14:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato14]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 14:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato14]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato15]))
		{
   			format(string,sizeof(string),"Candidato 15:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato15]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 15:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato15]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato16]))
		{
   			format(string,sizeof(string),"Candidato 16:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato16]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 16:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato16]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato17]))
		{
   			format(string,sizeof(string),"Candidato 17:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato17]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 17:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato17]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato18]))
		{
   			format(string,sizeof(string),"Candidato 18:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato18]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 18:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato18]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato19]))
		{
   			format(string,sizeof(string),"Candidato 19:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato19]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 19:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato19]);
   			strcat(DialogInfoorg,string);
   		}
		if(IsPlayerOnline(InfoOrg2[org][Candidato20]))
		{
   			format(string,sizeof(string),"Candidato 20:  %s {33FF00}(online)\n",InfoOrg2[org][Candidato20]);
   			strcat(DialogInfoorg,string);
   		}
   		else
   		{
   			format(string,sizeof(string),"Candidato 20:  %s {FC0015}(offline)\n",InfoOrg2[org][Candidato20]);
   			strcat(DialogInfoorg,string);
   		}
   		ShowPlayerDialog(playerid, 8991, DIALOG_STYLE_LIST, "Clique no Nome para Limpar", DialogInfoorg, "Limpar", "Sair");
		return true;
	}
	return true;
}

forward AnimSS(playerid);
public AnimSS(playerid)
{
    ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
	return true;
}

forward Crescimento(playerid);
public Crescimento(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(!AraraInfo[playerid][Arara])
	    {
			KillTimer(AraraInfo[playerid][Timer]);
	        return 0;
	    }
	    if(!AraraInfo[playerid][Racao] && AraraInfo[playerid][Grande] < 5)
	    {
	         SendClientMessage(playerid, COLOR_LIGHTRED, "Você esqueceu de alimentar a sua Arara e ela morreu!");
	         RemovePlayerAttachedObject(playerid, 4);
	         AraraInfo[playerid][Arara] = false;
	         AraraInfo[playerid][Grande] = 0;
	         KillTimer(AraraInfo[playerid][Timer]);
	         return 1;
	   	}
	   	new str[30];
	   	AraraInfo[playerid][Grande]++;
	   	AraraInfo[playerid][Racao] = false;
	   	format(str, sizeof str, "A sua Arara cresceu! (%d/5)", AraraInfo[playerid][Grande]);
	 	SendClientMessage(playerid, COLOR_DBLUE, str);
	   	if(AraraInfo[playerid][Grande] >= 5)
	   	{
	    	SendClientMessage(playerid, -1, "A Sua Arara está grande e pronta para ser vendida! use: /venderarara!");
	     	KillTimer(AraraInfo[playerid][Timer]);
	   	}
	    if(AraraInfo[playerid][Grande] == 2 && AraraInfo[playerid][Arara] == true)
	    {
	    	RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.2, 1.2, 1.2);
	  		return 1;
	   	}
	    else if(AraraInfo[playerid][Grande] == 3 && AraraInfo[playerid][Arara] == true)
	    {
	    	RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.3, 1.3, 1.3);
	  		return 1;
	   	}
	    else if(AraraInfo[playerid][Grande] == 4 && AraraInfo[playerid][Arara] == true)
	    {
	    	RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.4, 1.4, 1.4);
	  		return 1;
	   	}
	    else if(AraraInfo[playerid][Grande] == 5 && AraraInfo[playerid][Arara] == true)
	    {
	    	RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.5, 1.5, 1.5);
	  		return 1;
	   	}
	    else
	    {
	    	RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid,4, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.0, 1.0, 1.0);
	  		return 1;
	   	}
	}
	return true;
}

forward desbugarse(playerid);
public desbugarse(playerid)
{
	Controle(playerid, 1);
	return 1;
}
forward GivePlayerWeaponBPH(playerid, arma, balas);
public GivePlayerWeaponBPH(playerid, arma, balas)
{
    XiterArma[playerid] = 0;
	GivePlayerWeapon(playerid, arma, balas);
	return 1;
}
forward ResetPlayerWeaponsBPH(playerid);
public ResetPlayerWeaponsBPH(playerid)
{
	ResetPlayerWeapons(playerid);
	XiterArma[playerid] = 1;
	return 1;
}

forward MostrarTextVida(playerid);
public MostrarTextVida(playerid)
{
	new Float:Text_Vida, Float:Text_Colete;
	new string[20], string2[20];
	GetPlayerHealth(playerid, Text_Vida);
	GetPlayerArmour(playerid, Text_Colete);
	format(string, sizeof(string), "%.0f", Text_Vida);
	format(string2, sizeof(string2), "%.0f", Text_Colete);
	if(Text_Colete < 1)
	{
	    format(string2, sizeof(string2), " ", Text_Colete);
	}
	TextDrawSetString(textlife[playerid], string);
	TextDrawSetString(textcolete[playerid], string2);
	return true;
}

forward MostrarTextXiter(playerid);
public MostrarTextXiter(playerid)
{
	KillTimer(TimerX[playerid]);
	TextDrawShowForPlayer(playerid, xiterD);
	TimerX[playerid] = SetTimerEx("TirarXiter", 800, false, "i", playerid);
	return true;
}
forward TirarXiter(playerid);
public TirarXiter(playerid)
{
    KillTimer(TimerX[playerid]);
	TextDrawHideForPlayer(playerid, xiterD);
	return true;
}
forward OnPlayerSave(playerid);
public OnPlayerSave(playerid)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
	{
	    new Float:He_Alth, Float:Ar_Mour;
		GetPlayerArmour(playerid, Ar_Mour);
		GetPlayerHealth(playerid, He_Alth);
		PlayerInfo[playerid][pSArmour] = Ar_Mour;
		PlayerInfo[playerid][pSHealth] = He_Alth;
		new string3[64];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "Contas/%s.ini", playername3);
		PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
		DOF2_SetInt(string3,"Level",PlayerInfo[playerid][pLevel]);
		DOF2_SetString(string3,"Key",PlayerInfo[playerid][pKey]);
		DOF2_SetInt(string3,"AdminLevel",PlayerInfo[playerid][pAdmin]);
		DOF2_SetInt(string3,"HelperLevel",PlayerInfo[playerid][pHelper]);
		DOF2_SetInt(string3,"DonateRank",PlayerInfo[playerid][pVIP]);
		DOF2_SetInt(string3,"UpgradePoints",PlayerInfo[playerid][gPupgrade]);
		DOF2_SetInt(string3,"ConnectedTime",PlayerInfo[playerid][pConnectTime]);
		DOF2_SetInt(string3,"Registered",PlayerInfo[playerid][pReg]);
		DOF2_SetInt(string3,"Sex",PlayerInfo[playerid][pSex]);
		DOF2_SetInt(string3,"Muted",PlayerInfo[playerid][pMuted]);
		DOF2_SetInt(string3,"Respect",PlayerInfo[playerid][pExp]);
		DOF2_SetInt(string3,"Money",PlayerInfo[playerid][pCash]);
		DOF2_SetInt(string3,"Bank",PlayerInfo[playerid][pConta]);
		DOF2_SetInt(string3,"Crimes",PlayerInfo[playerid][pCrimes]);
		DOF2_SetInt(string3,"Kills",PlayerInfo[playerid][pKills]);
		DOF2_SetInt(string3,"Deaths",PlayerInfo[playerid][pDeaths]);
		DOF2_SetInt(string3,"Phonebook",PlayerInfo[playerid][pPhoneBook]);
		DOF2_SetInt(string3,"LottoNr",PlayerInfo[playerid][pLottoNr]);
		DOF2_SetInt(string3,"Emprego",PlayerInfo[playerid][pEmprego]);
		DOF2_SetInt(string3,"Paycheck",PlayerInfo[playerid][pSalario]);
		DOF2_SetInt(string3,"HeadValue",PlayerInfo[playerid][pHeadValue]);
		DOF2_SetInt(string3,"HeadValueT",PlayerInfo[playerid][pHeadValueT]);
		DOF2_SetInt(string3,"Jailed",PlayerInfo[playerid][pJailed]);
		DOF2_SetInt(string3,"JailTime",PlayerInfo[playerid][pJailTime]);
		DOF2_SetInt(string3,"Materiais",PlayerInfo[playerid][pMats]);
		DOF2_SetInt(string3,"Maconha",PlayerInfo[playerid][pDrogas]);
		DOF2_SetInt(string3,"Cocaina",PlayerInfo[playerid][pDrogas2]);
		DOF2_SetInt(string3,"Crack",PlayerInfo[playerid][pDrogas3]);
		DOF2_SetInt(string3,"Lider",PlayerInfo[playerid][pLider]);
		DOF2_SetInt(string3,"Member",PlayerInfo[playerid][pMembro]);
		DOF2_SetInt(string3,"Rank",PlayerInfo[playerid][pCargo]);
		DOF2_SetInt(string3,"Char",PlayerInfo[playerid][pSkin]);
		DOF2_SetInt(string3,"origin",PlayerInfo[playerid][pOrigem]);
		DOF2_SetInt(string3,"ContractTime",PlayerInfo[playerid][pContractTime]);
		DOF2_SetInt(string3,"DetSkill",PlayerInfo[playerid][pDetSkill]);
		DOF2_SetInt(string3,"SexSkill",PlayerInfo[playerid][pSexSkill]);
		DOF2_SetInt(string3,"BoxSkill",PlayerInfo[playerid][pBoxSkill]);
		DOF2_SetInt(string3,"LawSkill",PlayerInfo[playerid][pLawSkill]);
		DOF2_SetInt(string3,"MechSkill",PlayerInfo[playerid][pMechSkill]);
		DOF2_SetInt(string3,"NewsSkill",PlayerInfo[playerid][pNewsSkill]);
		DOF2_SetInt(string3,"DrogasSkill",PlayerInfo[playerid][pDrogasSkill]);
		DOF2_SetInt(string3,"CookSkill",PlayerInfo[playerid][pCookSkill]);
		DOF2_SetFloat(string3,"pSHealth",PlayerInfo[playerid][pSHealth]);
		DOF2_SetFloat(string3,"pSArmour",PlayerInfo[playerid][pSArmour]);
		DOF2_SetInt(string3,"Team",PlayerInfo[playerid][pTeam]);
		DOF2_SetInt(string3,"PhoneNr",PlayerInfo[playerid][pPnumber]);
		DOF2_SetInt(string3,"House",PlayerInfo[playerid][pPHousekey]);
		DOF2_SetInt(string3,"Bizz",PlayerInfo[playerid][pPbiskey]);
		DOF2_SetInt(string3,"Spawn",PlayerInfo[playerid][pSpawn]);
		DOF2_SetInt(string3,"SafeMaconha",PlayerInfo[playerid][pSafeDrogas]);
		DOF2_SetInt(string3,"SafeCocaina",PlayerInfo[playerid][pSafeDrogas2]);
		DOF2_SetInt(string3,"SafeCrack",PlayerInfo[playerid][pSafeDrogas3]);
		DOF2_SetInt(string3,"NivelProcurado",WantedPoints[playerid]);
		DOF2_SetInt(string3,"SafeMateriais",PlayerInfo[playerid][psMats]);
		DOF2_SetInt(string3,"TestVip",PlayerInfo[playerid][pTimeVIP]);
		DOF2_SetInt(string3,"Age",PlayerInfo[playerid][pAge]);
		DOF2_SetInt(string3,"Ouros",PlayerInfo[playerid][pOuros]);
		DOF2_SetInt(string3,"Avisado",PlayerInfo[playerid][pAviso]);
		DOF2_SetInt(string3,"Fome",PlayerInfo[playerid][pFome]);
		DOF2_SetInt(string3,"PegouVIP",PlayerInfo[playerid][pPVIP]);
		DOF2_SetInt(string3,"DiasBanTemp",PlayerInfo[playerid][pDiaBanTemp]);
		DOF2_SetInt(string3,"MesBanTemp",PlayerInfo[playerid][pMesBanTemp]);
		DOF2_SetInt(string3,"AnoBanTemp",PlayerInfo[playerid][pAnoBanTemp]);
		DOF2_SetInt(string3,"DiasVIP",PlayerInfo[playerid][pDiaVIP]);
		DOF2_SetInt(string3,"MesVIP",PlayerInfo[playerid][pMesVIP]);
		DOF2_SetInt(string3,"AnoVIP",PlayerInfo[playerid][pAnoVIP]);
		DOF2_SetInt(string3,"CarLic",PlayerInfo[playerid][pCarLic]);
		DOF2_SetInt(string3,"FlyLic",PlayerInfo[playerid][pFlyLic]);
		DOF2_SetInt(string3,"BoatLic",PlayerInfo[playerid][pBoatLic]);
		DOF2_SetInt(string3,"GunLic",PlayerInfo[playerid][pGunLic]);
		DOF2_SetInt(string3,"PayDay",PlayerInfo[playerid][pPayDay]);
		DOF2_SetInt(string3,"CDPlayer",PlayerInfo[playerid][pCDPlayer]);
		DOF2_SetInt(string3,"Wins",PlayerInfo[playerid][pWins]);
		DOF2_SetInt(string3,"Loses",PlayerInfo[playerid][pLoses]);
		DOF2_SetInt(string3,"AlcoholPerk",PlayerInfo[playerid][pAlcoholPerk]);
		DOF2_SetInt(string3,"DrugPerk",PlayerInfo[playerid][pDrugPerk]);
		DOF2_SetInt(string3,"MiserPerk",PlayerInfo[playerid][pMiserPerk]);
		DOF2_SetInt(string3,"PainPerk",PlayerInfo[playerid][pPainPerk]);
		DOF2_SetInt(string3,"TraderPerk",PlayerInfo[playerid][pTraderPerk]);
		DOF2_SetInt(string3,"Tutorial",PlayerInfo[playerid][pTut]);
		DOF2_SetInt(string3,"Avisos",PlayerInfo[playerid][pWarns]);
		DOF2_SetString(string3,"MarriedTo",PlayerInfo[playerid][pMarriedTo]);
		DOF2_SetInt(string3,"Married",PlayerInfo[playerid][pMarried]);
		DOF2_SetInt(string3,"Luta",PlayerInfo[playerid][pLuta]);
		DOF2_SetInt(string3,"Dorgado",PlayerInfo[playerid][pDorgado]);
		DOF2_SetInt(string3,"Dorgado2",PlayerInfo[playerid][pDorgado]);
		DOF2_SetInt(string3,"Doenca",PlayerInfo[playerid][pDoenca]);
		DOF2_SetString(string3,"LU",PlayerInfo[playerid][pLastLogin]);
		DOF2_SetInt(string3,"Ban",PlayerInfo[playerid][pBan]);
		DOF2_SetInt(string3,"TempoHospital",PlayerInfo[playerid][pTempoHospitalizado]);
		DOF2_SetInt(string3,"HospitalID",PlayerInfo[playerid][pHospitalID]);
		GetPlayerWeaponData(playerid,1,PlayerInfo[playerid][pGun1],PlayerInfo[playerid][pAmmo1]);
		GetPlayerWeaponData(playerid,2,PlayerInfo[playerid][pGun2],PlayerInfo[playerid][pAmmo2]);
		GetPlayerWeaponData(playerid,3,PlayerInfo[playerid][pGun3],PlayerInfo[playerid][pAmmo3]);
		GetPlayerWeaponData(playerid,4,PlayerInfo[playerid][pGun4],PlayerInfo[playerid][pAmmo4]);
		GetPlayerWeaponData(playerid,5,PlayerInfo[playerid][pGun5],PlayerInfo[playerid][pAmmo5]);
		GetPlayerWeaponData(playerid,6,PlayerInfo[playerid][pGun6],PlayerInfo[playerid][pAmmo6]);
		GetPlayerWeaponData(playerid,7,PlayerInfo[playerid][pGun7],PlayerInfo[playerid][pAmmo7]);
		GetPlayerWeaponData(playerid,8,PlayerInfo[playerid][pGun8],PlayerInfo[playerid][pAmmo8]);
		GetPlayerWeaponData(playerid,9,PlayerInfo[playerid][pGun9],PlayerInfo[playerid][pAmmo9]);
		GetPlayerWeaponData(playerid,10,PlayerInfo[playerid][pGun10],PlayerInfo[playerid][pAmmo10]);
		GetPlayerWeaponData(playerid,11,PlayerInfo[playerid][pGun11],PlayerInfo[playerid][pAmmo11]);
		GetPlayerWeaponData(playerid,12,PlayerInfo[playerid][pGun12],PlayerInfo[playerid][pAmmo12]);
		DOF2_SetInt(string3,"Armas1",PlayerInfo[playerid][pGun1]);
		DOF2_SetInt(string3,"Armas2",PlayerInfo[playerid][pGun2]);
		DOF2_SetInt(string3,"Armas3",PlayerInfo[playerid][pGun3]);
		DOF2_SetInt(string3,"Armas4",PlayerInfo[playerid][pGun4]);
		DOF2_SetInt(string3,"Armas5",PlayerInfo[playerid][pGun5]);
		DOF2_SetInt(string3,"Armas6",PlayerInfo[playerid][pGun6]);
		DOF2_SetInt(string3,"Armas7",PlayerInfo[playerid][pGun7]);
		DOF2_SetInt(string3,"Armas8",PlayerInfo[playerid][pGun8]);
		DOF2_SetInt(string3,"Armas9",PlayerInfo[playerid][pGun9]);
		DOF2_SetInt(string3,"Armas10",PlayerInfo[playerid][pGun10]);
		DOF2_SetInt(string3,"Armas11",PlayerInfo[playerid][pGun11]);
		DOF2_SetInt(string3,"Armas12",PlayerInfo[playerid][pGun12]);
		DOF2_SetInt(string3,"Balas1",PlayerInfo[playerid][pAmmo1]);
		DOF2_SetInt(string3,"Balas2",PlayerInfo[playerid][pAmmo2]);
		DOF2_SetInt(string3,"Balas3",PlayerInfo[playerid][pAmmo3]);
		DOF2_SetInt(string3,"Balas4",PlayerInfo[playerid][pAmmo4]);
		DOF2_SetInt(string3,"Balas5",PlayerInfo[playerid][pAmmo5]);
		DOF2_SetInt(string3,"Balas6",PlayerInfo[playerid][pAmmo6]);
		DOF2_SetInt(string3,"Balas7",PlayerInfo[playerid][pAmmo7]);
		DOF2_SetInt(string3,"Balas8",PlayerInfo[playerid][pAmmo8]);
		DOF2_SetInt(string3,"Balas9",PlayerInfo[playerid][pAmmo9]);
		DOF2_SetInt(string3,"Balas10",PlayerInfo[playerid][pAmmo10]);
		DOF2_SetInt(string3,"Balas11",PlayerInfo[playerid][pAmmo11]);
		DOF2_SetInt(string3,"Balas12",PlayerInfo[playerid][pAmmo12]);
		DOF2_SaveFile();
	}
	return true;
}
forward SetTudo(playerid);
public SetTudo(playerid)
{
   	VidaDoCara[playerid] = 2;
	AXITERCOLETE[playerid] = 3;
	XiterArma[playerid] = 0;
	if(PlayerInfo[playerid][pSHealth] > 0)
	{
		SetPlayerHealth(playerid, PlayerInfo[playerid][pSHealth]);
	}
	SetPlayerArmour(playerid, PlayerInfo[playerid][pSArmour]);
	if(PlayerInfo[playerid][pJailed] == 0)
	{
	    XiterArma[playerid] = 0;
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun1],PlayerInfo[playerid][pAmmo1]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun2],PlayerInfo[playerid][pAmmo2]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun3],PlayerInfo[playerid][pAmmo3]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun4],PlayerInfo[playerid][pAmmo4]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun5],PlayerInfo[playerid][pAmmo5]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun6],PlayerInfo[playerid][pAmmo6]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun7],PlayerInfo[playerid][pAmmo7]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun8],PlayerInfo[playerid][pAmmo8]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun9],PlayerInfo[playerid][pAmmo9]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun10],PlayerInfo[playerid][pAmmo10]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun11],PlayerInfo[playerid][pAmmo11]);
		GivePlayerWeaponBPH(playerid, PlayerInfo[playerid][pGun12],PlayerInfo[playerid][pAmmo12]);
	}
	return true;
}



